{"curr_prompt_idx": 9, "max_num_prompts": 10, "programs_valid": ["(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (transform small_square (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform small_square (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform small_circle (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.5 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 5 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 3 1.5) (cos (/ pi 4))) (* (* 3 1.5) (sin (/ pi 4))))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform small_circle (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1.25 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1.25 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 8.25 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(repeat_transform (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))"], "programs_invalid": ["", "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))) (transform_matrix 4 0 0 0))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform_matrix 2 0 0 0))))))))) (transform_matrix 4 0 0 0))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform_matrix 2 0 0 0))))))))) (transform_matrix 2 0 0 0))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform_matrix 2 0 0 0))))))))) (transform_matrix 2 0 0 0))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform (transform (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform small_square (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))))", "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform (transform (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 0.5 0 0", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform_matrix 4 0 0 0) (transform small_square (transform_matrix 2 0 0 0))) (transform small_circle (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2", "(repeat_stroke (stroke_list (stroke_list (transform_stroke (stroke_list (list (list (list (list 2 3) (list 1 1)) (list (list 2 2))) (list (list (list 2 3) (list 1 1)) (list (list 2 2))))) (list 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1)))))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))))", "(connect_strokes (connect_strokes (transform (transform_matrix 4 0 0 0) (transform_matrix 1 0 0 0)) (transform (transform_matrix 4 0 0 0) (transform_matrix 2 0 0 0))) (transform (transform_matrix 4 0 0 0) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 0 (transform_matrix 1 (/ (* 2 pi) 0) 0 0)) (transform (transform (transform (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 0 (transform_matrix 1 (/ (* 2 pi) 0) 0 0)) 0 (transform_matrix 1 (/ (* 2 pi) 0) 0 0)) (transform (transform (transform (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 0 (transform_matrix 1 (/ (* 2 pi) 0", "(connect_strokes (transform short_vertical_line (transform_matrix 1 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix", "(connect_strokes (transform (repeat_transform (transform (transform sqrt_2 (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)) (transform_matrix 3 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform small_circle (transform_matrix 4 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0))))"], "prompt_text": ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 0.5 0 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))\n", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n"], "prompt_example_types": ["programs"], "prompt_programs": [["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))"], ["(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))"], ["(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))"], ["(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))"], ["(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))"], ["(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))"], ["(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))"]], "engine": "davinci-codex", "separator": "\n", "completion": [{"id": "cmpl-51LL5ngY9KTzgETXlxQ9Ruy2XcNwz", "object": "text_completion", "created": 1651002039, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0035346237, -0.057760447, -0.07544669, -8.3996834e-05, -0.00040653892, -6.468596e-05, -0.003626326, -0.099154405, -0.034592047, -0.19026874, -0.30175582, -1.5805701e-05, -0.057086382, -0.0008694252, -4.3347598e-05, -2.0218295e-05, -4.838501e-06, -1.022884e-06, -0.10990218, -0.0068337675, -0.00015481713, -6.754697e-05, -0.00017317903, -0.00033940005, -5.8725527e-05, -0.0007167771, -1.1039229e-05, -8.176345e-06, -2.3907886, -0.099780455, -0.007468367, -0.00207874, -0.0072514853, -0.0019305066, -0.049903676, -0.738115, -0.8509116, -0.16764058, -1.9503042e-05, -0.1513906, -0.0012458692, -7.088388e-05, -6.122609e-05, -2.5941252e-05, -1.8841804e-07, -0.7356341, -0.017661255, -0.00065265695, -0.00020453747, -0.0027432693, -0.0002893765, -6.253833e-05, -0.00020751769, -2.3317722e-05, -1.1430258e-06, -0.68391454, -0.015161335, -0.0041734832, -0.00016793102, -0.018385757, -0.028968114, -0.043965172, -0.05117985, -0.000107247215, -0.00037827427], "top_logprobs": null, "text_offset": [3497, 3497, 3498, 3505, 3506, 3510, 3513, 3515, 3524, 3526, 3535, 3541, 3542, 3548, 3550, 3559, 3560, 3563, 3566, 3568, 3570, 3572, 3574, 3576, 3578, 3587, 3588, 3591, 3594, 3596, 3598, 3600, 3602, 3604, 3606, 3615, 3617, 3626, 3632, 3633, 3639, 3641, 3650, 3651, 3654, 3657, 3659, 3661, 3663, 3665, 3667, 3669, 3678, 3679, 3682, 3685, 3687, 3689, 3691, 3693, 3696, 3696, 3696, 3696, 3696]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0035346237, -0.05885004, -0.07271593, -9.365555e-05, -0.0008115602, -6.468596e-05, -0.0034357512, -2.6976888, -5.1930627e-05, -0.00046599025, -1.7953334e-05, -0.0028620376, -0.06392719, -0.037132554, -1.0901629, -6.289782e-05, -0.000102002974, -0.0019015407, -0.0050621177, -0.15394571, -1.8190814e-05, -0.014926505, -0.00010068981, -3.3093773e-05, -0.000110942696, -0.0001687683, -2.141132e-05, -2.0935424e-05, -6.8669196e-06, 0, -0.00876161, -0.00031119544, -0.004274164, -0.00034703218, -2.4510746e-05, -0.0018689367, -0.0013358716, -0.00024370644, -3.225932e-05, -0.00029545708, -0.0004197157, -0.0024157895, -0.0015851443, -0.00042627778, -0.33738643, -0.0005275911, -4.072407e-05, -0.040052988, -0.000116426294, -3.1065356e-05, -1.2588937e-05, -2.2159093e-06, -5.6340414e-05, -0.0010255584, -0.00076294556, -0.00066339417, -0.00041721328, -0.0002311867, -5.4314798e-05, -0.00078835577, -0.00013502566, -0.00033087333, -7.56541e-05, -0.00090080523, -0.0010023476, -0.0014777496, -0.0031547432, -6.3900848e-06, -3.529076e-06, -0.19522658, -0.086974785, -0.0003376119, -0.00024704146, -0.0011795675, -0.0020099361, -0.021348326, -0.68904346, -1.3422466e-05, -0.28412983, -0.0008929318, -3.5120327e-05, -5.1810483e-05, -2.2159093e-06, -6.6294406e-06, -0.72960806, -0.02047681, -0.0006293371, -0.0001552949, -0.011228989, -0.0044131684, -0.65767705, -0.00014217819, -0.000107247215, -0.0015317134, -0.0061392323, -0.05444628, -0.058737203, -0.13611189, -1.3422466e-05, -0.77858037, -0.00051375636, -2.665838e-05, -1.5448071e-05, -1.1159372e-05, -4.277735e-07, -0.12017653, -0.0038177741, -0.013637096, -0.00037505466, -0.000109035354, -9.508793e-05, -0.00011583212, -0.00032836714, -4.394177e-05, -0.00014945272, -1.1753544e-05, -1.7595703e-05, -0.023722513, -0.0017374487, -0.017770156, -0.048317865, -0.22114237, -0.021184485, -0.0015554735, -0.013685314, -0.00018033247, -0.0009077869, -0.0038108928, -0.001792801, -0.0042290287, -0.09324614, -0.0009363632, -0.00013943638, -0.00022218504, -0.00052890525, -0.00022504793, -5.7652644e-05, -9.818829e-05, -5.896488e-05, -7.8752586e-05, -6.933416e-05, -2.693682e-06, -4.0963423e-05, -0.0004726697, -0.00093970477, -8.5358415e-06, -1.1430417, -0.00062110514, -3.643162e-05, -2.200643e-05, -1.3823812e-06, -7.8540467e-07, -0.0047655595, -0.0005154262, -0.0004018879, -0.0001792624, -0.00017484887, -4.573365e-05, -0.004182281, -0.00013061494, -0.00031346135, -7.8752586e-05, -0.022178123, -0.042252894, -0.11205403, -0.057006743, -3.5001114e-05, -0.00047135746, -0.00023249895], "top_logprobs": null, "text_offset": [3497, 3497, 3498, 3505, 3506, 3510, 3513, 3515, 3522, 3523, 3527, 3530, 3532, 3541, 3543, 3549, 3550, 3559, 3561, 3570, 3576, 3577, 3580, 3587, 3588, 3592, 3594, 3603, 3604, 3607, 3610, 3612, 3614, 3616, 3617, 3618, 3619, 3622, 3624, 3625, 3626, 3628, 3631, 3634, 3637, 3639, 3641, 3644, 3646, 3648, 3657, 3658, 3661, 3664, 3666, 3669, 3672, 3674, 3677, 3678, 3680, 3681, 3683, 3685, 3687, 3689, 3698, 3699, 3702, 3705, 3707, 3709, 3711, 3713, 3715, 3717, 3726, 3732, 3733, 3739, 3741, 3750, 3751, 3754, 3757, 3759, 3761, 3763, 3765, 3768, 3770, 3776, 3777, 3786, 3788, 3797, 3799, 3808, 3814, 3815, 3821, 3823, 3832, 3833, 3836, 3839, 3841, 3842, 3843, 3845, 3847, 3849, 3851, 3853, 3862, 3863, 3866, 3869, 3871, 3873, 3876, 3879, 3881, 3883, 3884, 3885, 3886, 3888, 3891, 3894, 3897, 3899, 3902, 3905, 3908, 3910, 3912, 3913, 3914, 3915, 3917, 3920, 3923, 3926, 3928, 3930, 3933, 3935, 3937, 3946, 3947, 3950, 3953, 3955, 3958, 3961, 3963, 3966, 3967, 3969, 3970, 3972, 3974, 3977, 3977, 3977, 3977, 3977, 3977]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0035346237, -0.058575083, -0.063328125, -8.1136764e-05, -0.0009903572, -8.364295e-05, -0.0035747613, -0.09643623, -0.032978788, -0.1994574, -0.28653413, -1.44972155e-05, -0.058384046, -0.00083500484, -3.3093773e-05, -1.9143545e-05, -5.5556293e-06, -5.460492e-07, -0.11066135, -0.0062443097, -0.00014027084, -8.232979e-05, -0.00015517569, -0.00033051384, -6.015603e-05, -0.00040630237, -2.7967804e-05, -8.296486e-06, -0.6728785, -0.07028472, -0.00047171512, -0.00016161484, -0.0009816437, -0.002123063, -0.08181848, -0.20698439, -0.42183477, -2.1051823e-05, -0.00013788574, -0.0020565812, -0.0022029243, -0.13931455, -1.4854846e-05, -0.010381598, -1.402038e-05, -1.7595703e-05, -2.2484204e-05, -9.878341e-05, -1.7953334e-05, -1.2351458e-05, -6.6294406e-06, 0, -0.0060114996, -0.00015243483, -0.0026826062, -0.00032324117, -2.6060465e-05, -0.0023206742, -0.0011781361, -0.00023810269, -3.3450466e-05, -0.00039234746, -0.000769626, -0.0022322552, -0.001387917, -0.00093684095, -0.24155058, -0.00074868655, -4.1918032e-05, -0.031986378, -4.0246297e-05, -2.0218295e-05, -5.79217e-06, -7.8540467e-07, -4.9187893e-05, -0.0011808807, -0.0009921473, -0.0003250293, -0.00035263688, -0.00018677162, -5.860725e-05, -0.0016541576, -0.00016018527, -0.0002395332, -6.635395e-05, -0.0037526777, -0.00067126757, -4.573365e-05, -4.4419543e-05, -2.5744682e-06, -1.022884e-06, -0.25543264, -0.017228737, -0.005299319, -0.00012763379, -0.0050512147, -0.019728845], "top_logprobs": null, "text_offset": [3497, 3497, 3498, 3505, 3506, 3510, 3513, 3515, 3524, 3526, 3535, 3541, 3542, 3548, 3550, 3559, 3560, 3563, 3566, 3568, 3570, 3572, 3574, 3576, 3578, 3587, 3588, 3591, 3594, 3596, 3598, 3600, 3602, 3604, 3606, 3615, 3617, 3623, 3624, 3633, 3635, 3644, 3650, 3651, 3654, 3661, 3662, 3666, 3668, 3677, 3678, 3681, 3684, 3686, 3688, 3690, 3691, 3692, 3693, 3696, 3698, 3699, 3700, 3702, 3705, 3708, 3711, 3713, 3715, 3718, 3720, 3722, 3731, 3732, 3735, 3738, 3740, 3743, 3746, 3748, 3751, 3752, 3754, 3755, 3757, 3759, 3761, 3763, 3772, 3773, 3776, 3779, 3781, 3783, 3785, 3787, 3790]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0035346237, -0.061088063, -0.06871917, -9.234426e-05, -0.000566058, -8.5549356e-05, -0.0037672764, -0.099409156, -0.040474396, -0.17409454, -0.26260963, -1.8310955e-05, -0.061925147, -0.00080774265, -3.3928238e-05, -1.676031e-05, -7.4639065e-06, -5.460492e-07, -0.09926623, -0.0072469823, -0.00014074863, -7.6252014e-05, -0.00014396913, -0.000249787, -5.490991e-05, -0.00074868655, -2.0696069e-05, -7.3446927e-06, -1.1198221, -0.09833059, -0.0022341672, -0.00023714808, -0.0021992233, -0.0028232432, -0.035868194, -0.7815924, -2.319758e-05, -0.12980883, -0.0010244246, -5.5385808e-05, -3.333313e-05, -1.3542607e-05, -1.4736571e-05, -0.62963444, -0.034281917, -0.0003563333, -0.00012632155, -0.0054577645, -0.020406183], "top_logprobs": null, "text_offset": [3497, 3497, 3498, 3505, 3506, 3510, 3513, 3515, 3524, 3526, 3535, 3541, 3542, 3548, 3550, 3559, 3560, 3563, 3566, 3568, 3570, 3572, 3574, 3576, 3578, 3587, 3588, 3591, 3594, 3596, 3598, 3600, 3602, 3604, 3606, 3615, 3621, 3622, 3628, 3630, 3639, 3640, 3643, 3646, 3648, 3650, 3652, 3654, 3657]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 5 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 5", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0035346237, -0.05949678, -0.06323014, -7.9946556e-05, -0.0003767255, -7.016862e-05, -0.0031464316, -0.08925577, -0.03406932, -0.1893644, -0.26571572, -1.5925843e-05, -0.061185513, -0.00074152835, -4.2631407e-05, -2.5703772e-05, -8.7733215e-06, -5.460492e-07, -0.1099401, -0.008200884, -0.0001195276, -7.839496e-05, -0.00011106284, -0.00028579836, -5.4791635e-05, -0.0009136328, -2.0815281e-05, -6.8669196e-06, -4.7763147, -0.32215005, -0.0010953725, -0.00036646696, -0.0033682887, -0.0015105235, -0.031605158, -0.38379574, -2.1291178e-05, -0.03893554, -0.00052031653, -3.953198e-05, -1.771398e-05, -1.5567284e-05, -4.838501e-06, -0.29971552, -0.012722041, -0.0003509689, -6.6829845e-05, -0.0064856308, -0.014301786], "top_logprobs": null, "text_offset": [3497, 3497, 3498, 3505, 3506, 3510, 3513, 3515, 3524, 3526, 3535, 3541, 3542, 3548, 3550, 3559, 3560, 3563, 3566, 3568, 3570, 3572, 3574, 3576, 3578, 3587, 3588, 3591, 3594, 3596, 3598, 3600, 3602, 3604, 3606, 3615, 3621, 3622, 3628, 3630, 3639, 3640, 3643, 3646, 3648, 3650, 3652, 3654, 3657]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0035346237, -0.056690857, -0.072258376, -9.127325e-05, -0.0007332964, -6.170386e-05, -0.0041810847, -0.09007502, -0.037088633, -0.17691427, -0.3135233, -1.5327929e-05, -0.06515539, -0.0008048789, -3.5240468e-05, -2.1889093e-05, -8.296486e-06, -3.076318e-07, -0.10476266, -0.0068052006, -0.00014110812, -6.13453e-05, -0.00014122359, -0.00024751923, -5.8367896e-05, -0.00047869395, -3.2140102e-05, -9.846204e-06, -0.6563414, -0.06366588, -0.00039222822, -0.00015160035, -0.0009676259, -0.0026095165, -0.08218849, -0.22368689, -0.40982643, -2.6298881e-05, -0.00013156954, -0.0024742861, -0.0025493389, -0.13196155, -1.5214344e-05, -0.010779658, -1.1873685e-05, -2.045765e-05, -2.4032974e-05, -0.00010772499, -1.7953334e-05, -1.8907942e-05, -8.0580685e-06, -6.827632e-08, -0.006517247, -0.00021800993, -0.0026074843, -0.000385668, -2.6893982e-05, -0.002704002, -0.0013820672, -0.0002113333, -2.6893982e-05, -0.00036587374, -0.0006606486, -0.0022113477, -0.0017834256, -0.0005540104, -0.24564835, -0.0006044066, -4.036551e-05, -0.033725135, -5.0260765e-05, -2.319758e-05, -6.031526e-06, -4.277735e-07, -3.3212986e-05, -0.001248854, -0.0012991048, -0.0004523939, -0.00036634682, -0.00018283867, -5.6102934e-05, -0.0020985708, -0.00016662253, -0.00026648093, -6.289782e-05, -0.0020393196, -0.0006101332, -5.7532503e-05, -2.9519388e-05, -3.883893e-06, -6.6619094e-07, -0.26643476, -0.020872094, -0.0063361404, -0.00014289531, -0.005990994, -0.018683342], "top_logprobs": null, "text_offset": [3497, 3497, 3498, 3505, 3506, 3510, 3513, 3515, 3524, 3526, 3535, 3541, 3542, 3548, 3550, 3559, 3560, 3563, 3566, 3568, 3570, 3572, 3574, 3576, 3578, 3587, 3588, 3591, 3594, 3596, 3598, 3600, 3602, 3604, 3606, 3615, 3617, 3623, 3624, 3633, 3635, 3644, 3650, 3651, 3654, 3661, 3662, 3666, 3668, 3677, 3678, 3681, 3684, 3686, 3688, 3690, 3691, 3692, 3693, 3696, 3698, 3699, 3700, 3702, 3705, 3708, 3711, 3713, 3715, 3718, 3720, 3722, 3731, 3732, 3735, 3738, 3740, 3743, 3746, 3748, 3751, 3752, 3754, 3755, 3757, 3759, 3761, 3763, 3772, 3773, 3776, 3779, 3781, 3783, 3785, 3787, 3790]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0035346237, -0.059221264, -0.061475325, -8.03023e-05, -0.00052031653, -7.6605895e-05, -0.0037268922, -0.09717554, -0.03432047, -0.18661104, -0.2773417, -1.7834122e-05, -0.06101089, -0.0009457891, -3.881579e-05, -2.5464416e-05, -1.0444119e-05, -3.076318e-07, -0.11742296, -0.008254911, -0.00013001703, -7.1481794e-05, -0.0001810496, -0.00032431216, -6.0753944e-05, -0.00048668377, -2.8206221e-05, -8.5358415e-06, -1.1868167, -0.08664811, -0.002096302, -0.0001740144, -0.0022856654, -0.002129752, -0.039616093, -0.70339596, -0.7950109, -0.2271973, -2.7967804e-05, -0.18257235, -0.0016883104, -7.4104384e-05, -0.00015577173, -4.0963423e-05, -5.460492e-07, -1.1099495, -0.021549104, -0.12597194, -0.0016223975, -0.00041315737, -0.000109035354, -0.008208756, -0.0005161415, -3.881579e-05, -0.00042019345, -1.8190814e-05, -1.8841804e-07, -0.65215045, -0.0253797, -0.19576101, -0.00037600833, -0.018892212, -0.021176875, -0.048243113, -0.05108299], "top_logprobs": null, "text_offset": [3497, 3497, 3498, 3505, 3506, 3510, 3513, 3515, 3524, 3526, 3535, 3541, 3542, 3548, 3550, 3559, 3560, 3563, 3566, 3568, 3570, 3572, 3574, 3576, 3578, 3587, 3588, 3591, 3594, 3596, 3598, 3600, 3602, 3604, 3606, 3615, 3617, 3626, 3632, 3633, 3639, 3641, 3650, 3651, 3654, 3657, 3659, 3660, 3661, 3663, 3665, 3667, 3669, 3671, 3680, 3681, 3684, 3687, 3689, 3691, 3693, 3695, 3698, 3698, 3698]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0035346237, -0.061957356, -0.06477769, -9.65175e-05, -0.00050290365, -6.647409e-05, -0.0037800206, -0.09034991, -0.041419562, -0.19716784, -0.28804573, -1.6521892e-05, -0.069729134, -0.0007356825, -4.3108244e-05, -2.0098154e-05, -6.031526e-06, -1.022884e-06, -0.11224673, -0.0067468113, -0.0001341912, -6.6593304e-05, -0.00018260024, -0.00032705773, -4.9427246e-05, -0.0011378567, -1.688045e-05, -9.130952e-06, -0.698736, -0.050486986, -0.00045191802, -0.00013848272, -0.0011460906, -0.0028291005, -0.0825374, -0.23531131, -0.42206997, -2.1649737e-05, -0.00011106284, -0.002932039, -0.0037691903, -0.13515227, -1.3422466e-05, -0.011237488, -9.606849e-06, -3.4048382e-05, -3.0473995e-05, -0.00012095904, -1.7119806e-05, -2.319758e-05, -9.966347e-06, 0, -0.0072417585, -0.00021956058, -0.0024135208, -0.00032359784, -2.1649737e-05, -0.002517248, -0.0012310075, -0.00020942597, -3.2140102e-05, -0.00039735518, -0.00056355365, -0.0021732969, -0.0019966175, -0.0008085771, -0.25741655, -0.0005310519, -4.0603925e-05, -0.032884356, -4.5847235e-05, -2.3435998e-05, -5.5556293e-06, -9.055464e-07, -2.1768952e-05, -0.0012823958, -0.0011657234, -0.0007624678, -0.00040439412, -0.00020525271, -5.3837026e-05, -0.0020977345, -0.0001506467, -0.00024608686, -6.289782e-05, -0.0022761633, -0.00071081106, -5.6223078e-05, -3.3093773e-05, -3.7684315e-06, -7.8540467e-07, -0.27956453, -0.017638324, -0.004469028, -0.00012536882, -0.005426421, -0.019228652], "top_logprobs": null, "text_offset": [3497, 3497, 3498, 3505, 3506, 3510, 3513, 3515, 3524, 3526, 3535, 3541, 3542, 3548, 3550, 3559, 3560, 3563, 3566, 3568, 3570, 3572, 3574, 3576, 3578, 3587, 3588, 3591, 3594, 3596, 3598, 3600, 3602, 3604, 3606, 3615, 3617, 3623, 3624, 3633, 3635, 3644, 3650, 3651, 3654, 3661, 3662, 3666, 3668, 3677, 3678, 3681, 3684, 3686, 3688, 3690, 3691, 3692, 3693, 3696, 3698, 3699, 3700, 3702, 3705, 3708, 3711, 3713, 3715, 3718, 3720, 3722, 3731, 3732, 3735, 3738, 3740, 3743, 3746, 3748, 3751, 3752, 3754, 3755, 3757, 3759, 3761, 3763, 3772, 3773, 3776, 3779, 3781, 3783, 3785, 3787, 3790]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0035346237, -0.05834607, -0.074936286, -8.1136764e-05, -0.00094495463, -6.051553e-05, -0.0033919127, -0.09818447, -0.038510196, -0.17054111, -0.25534484, -1.5687427e-05, -0.06046783, -0.0007609162, -4.6206733e-05, -1.8788729e-05, -5.79217e-06, -6.6619094e-07, -0.10595569, -0.0076538823, -0.00012918444, -8.364295e-05, -0.0001395556, -0.00034583826, -4.954739e-05, -0.00048584928, -2.4032974e-05, -6.8669196e-06, -0.67212284, -0.046725396, -0.00045048565, -0.00018045263, -0.0010054517, -0.0027787134, -3.0486095, -0.00037553246, -0.00037612757, -0.0014545902, -0.0050167097, -0.53709555, -2.8921473e-05, -0.039061166, -2.200643e-05, -3.1065356e-05, -0.00022683514, -0.0005775095, -4.46589e-05, -7.720381e-05, -1.3185924e-05, -6.827632e-08, -0.015058163, -0.0004639637, -0.0064353566, -0.0007624678, -4.394177e-05, -0.0049884943, -0.0016889083, -0.0001895134, -3.058758e-05, -0.00039902504, -0.0010481124, -0.0037044566, -0.0025167712, -0.0007899083, -0.25102177, -0.00065230025, -5.24084e-05, -0.4158476, -0.00049658, -6.206056e-05, -2.4152187e-05, -9.130952e-06, -2.9311614e-06, -0.004832879, -0.0019944662, -0.0010140431, -0.00083930104, -0.00032550612, -8.185389e-05, -0.004053483, -0.00030082333, -0.0005507898, -9.2941234e-05, -0.009451586, -0.020139707, -0.04297659, -0.04750095, -3.5120327e-05, -0.0007142718], "top_logprobs": null, "text_offset": [3497, 3497, 3498, 3505, 3506, 3510, 3513, 3515, 3524, 3526, 3535, 3541, 3542, 3548, 3550, 3559, 3560, 3563, 3566, 3568, 3570, 3572, 3574, 3576, 3578, 3587, 3588, 3591, 3594, 3596, 3598, 3600, 3602, 3604, 3606, 3612, 3613, 3622, 3624, 3633, 3639, 3640, 3643, 3650, 3651, 3655, 3657, 3666, 3667, 3670, 3673, 3675, 3677, 3679, 3680, 3681, 3682, 3685, 3687, 3688, 3689, 3691, 3694, 3697, 3700, 3702, 3704, 3707, 3709, 3711, 3720, 3721, 3724, 3727, 3729, 3732, 3735, 3737, 3740, 3741, 3743, 3744, 3746, 3748, 3751, 3751, 3751, 3751, 3751]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform (transform sqrt_2 (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)) (transform_matrix 3 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " sq", "rt", "_", "2", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 3", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "transform", " (", "transform", " small", "_"], "token_logprobs": [-0.0035346237, -0.056531586, -0.07240805, -8.507158e-05, -0.0008301726, -6.89756e-05, -0.00395504, -0.098700576, -0.033917803, -1.9386799, -2.462996e-05, -8.221057e-05, -0.0020966588, -0.009213159, -2.6423504, -0.17517717, -8.071429, -0.69114894, -0.29537532, -2.0211244, -0.7021574, -0.009244682, -0.0046514133, -0.0006604102, -9.055464e-07, -1.0236031, -0.18088593, -0.11979366, -0.024622448, -0.02610498, -0.043763768, -0.011679005, -0.028663836, -0.0016542777, -7.839496e-05, -0.8753056, -0.33082402, -0.45461106, -0.09191435, -0.031394914, -1.2780266, -0.032168128, -0.00015052655, -0.0011854162, -7.541475e-05, -2.4543265e-06, -0.11210897, -0.5131368, -0.14395018, -0.06925747, -0.013150623, -0.0009148268, -0.28711993, -0.001507897, -0.009072946, -0.0028376486, -0.008586708, -0.0042369915, -0.0036929091, -0.032682464, -3.9172486e-05, -6.6619094e-07, -3.3778262, -0.23715715, -0.0063727284, -0.0023887837, -0.0084232, -0.0069527193, -0.10118701, -1.0423166, -5.300351e-05, -1.3843585, -0.0043955706, -3.595572e-05, -0.00053456903, -1.9741461e-05, -1.1753544e-05, -0.92836404, -0.07337848, -0.0037854644, -0.00059319526, -0.03983056, -0.01948255, -0.04240897, -3.3979292, -0.47226065, -0.7033993, -1.711212, -0.00013705408], "top_logprobs": null, "text_offset": [3497, 3497, 3498, 3505, 3506, 3510, 3513, 3515, 3524, 3526, 3532, 3533, 3542, 3544, 3553, 3555, 3564, 3567, 3569, 3570, 3571, 3573, 3582, 3583, 3586, 3589, 3591, 3593, 3595, 3597, 3599, 3601, 3610, 3611, 3614, 3617, 3619, 3621, 3623, 3625, 3627, 3629, 3631, 3640, 3641, 3644, 3647, 3649, 3652, 3655, 3657, 3660, 3661, 3663, 3664, 3666, 3668, 3670, 3672, 3681, 3682, 3685, 3688, 3690, 3692, 3694, 3696, 3698, 3700, 3709, 3715, 3716, 3722, 3724, 3733, 3734, 3737, 3740, 3742, 3744, 3746, 3748, 3751, 3751, 3751, 3751, 3751, 3751, 3751]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LLDwGi2XmTPHRT4U6SiaRF6jbwY", "object": "text_completion", "created": 1651002047, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.0040242784, -0.057925977, -0.040143695, -4.3347598e-05, -0.0006469312, -9.4729374e-05, -0.00786477, -0.68364525, -2.1649737e-05, -0.00019535558, -6.0276172e-05, -0.0047253743, -0.07752899, -0.071382284, -0.6355677, -0.2201436, -5.912312e-06, -0.070863836, -0.0004170931, -5.3955304e-05, -1.5805701e-05, -1.3900239e-05, -4.277735e-07, -0.11156777, -0.005427621, -0.00012751458, -9.806815e-05, -0.00010045139, -0.00051852845, -6.647409e-05, -0.0009885643, -4.7041198e-05, -5.460492e-07, -0.4104179, -0.028973084, -0.00032896505, -0.000101643476, -0.00011273176, -0.00354838, -0.05392609, -0.4358192, -1.5657886, -8.018216e-05, -7.6964454e-05, -0.0019274006, -0.00015422201, -0.1807328, -1.163433e-05, -0.0535989, -3.5001114e-05, -2.1768952e-05, -0.0002035838, -0.0007459447, -4.5374152e-05, -2.9756868e-05, -6.3900848e-06, -2.8138238e-06, -0.017112495, -0.0008171667, -0.015640724, -0.0008066679, -2.987608e-05, -0.004197485, -0.0034622473, -0.00021204854, -3.357061e-05, -0.00029700773, -0.0002965309, -0.003736045, -0.002604019, -0.00151685, -0.39643827, -0.00046694485, -1.6165199e-05, -0.059488177, -5.693833e-05, -2.5941252e-05, -1.1039229e-05, -6.031526e-06, -5.3162735e-06, -0.0031823067, -0.0012128681, -0.00035561805, -0.00044798222, -0.00017007865, -3.3689823e-05, -0.0013364677, -0.00016888563, -0.0006146632, -6.7307614e-05, -0.2319377, -0.0009148268, -5.157113e-05, -0.0014038534, -1.1753544e-05, -1.6207987e-06, -0.3360626, -0.49429038, -0.2123425, -0.0016808463, -0.00024906988, -0.00029939285, -0.0013888724, -0.004167796, -0.5799928, -0.095100515, -0.57355803, -0.089584865, -1.8601542e-06, -0.65955544, -9.317965e-05, -3.6074933e-05, -2.2126573e-05, -4.277735e-07, -4.680184e-05, -1.3613545, -0.007513706, -0.0004393945, -9.0795475e-05, -0.0010274677, -0.0004003382, -7.279122e-05, -0.0025902723, -2.1649737e-05, -6.6619094e-07, -0.5913641, -0.011016232, -0.11337896, -0.002137338, -0.004009794, -0.021475596, -0.050228663, -0.027326835, -2.6893982e-05, -0.0006325567, -0.00012250594, -0.0046453695, -0.5631276], "top_logprobs": null, "text_offset": [4292, 4292, 4293, 4300, 4301, 4305, 4308, 4310, 4317, 4318, 4322, 4325, 4327, 4336, 4338, 4347, 4353, 4354, 4360, 4362, 4371, 4372, 4375, 4378, 4380, 4382, 4384, 4386, 4388, 4390, 4399, 4400, 4403, 4406, 4408, 4410, 4412, 4414, 4416, 4418, 4427, 4429, 4435, 4436, 4445, 4447, 4456, 4462, 4463, 4466, 4473, 4474, 4478, 4480, 4489, 4490, 4493, 4496, 4498, 4500, 4502, 4503, 4504, 4505, 4508, 4510, 4511, 4512, 4514, 4517, 4520, 4523, 4525, 4527, 4530, 4532, 4534, 4543, 4544, 4547, 4550, 4552, 4555, 4558, 4560, 4563, 4564, 4566, 4567, 4569, 4571, 4573, 4575, 4584, 4585, 4588, 4591, 4593, 4594, 4596, 4598, 4600, 4602, 4605, 4607, 4616, 4618, 4627, 4633, 4634, 4640, 4642, 4651, 4652, 4655, 4658, 4660, 4662, 4664, 4666, 4668, 4670, 4679, 4680, 4683, 4686, 4688, 4690, 4692, 4694, 4697, 4697, 4697, 4697, 4697, 4697, 4697, 4697]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.0040242784, -0.05630746, -0.049179513, -5.550595e-05, -0.00049455435, -0.00012560723, -0.0075797085, -0.70669705, -2.0098154e-05, -0.00034798586, -5.037998e-05, -0.0045074685, -0.07749685, -0.055651795, -0.8152014, -9.012677e-06, -4.751897e-05, -0.00084371463, -0.00015970749, -0.049197856, -4.4818075e-06, -0.017745461, -1.0561456e-05, -9.72699e-06, -0.00010998996, -0.00012846824, -1.843017e-05, -1.1278585e-05, -4.721163e-06, -1.8841804e-07, -0.007981022, -0.0005628365, -0.006630761, -0.00033087333, -2.5344274e-05, -0.0016987002, -0.0017054464, -0.0003287257, -2.9996223e-05, -0.00016459411, -0.00010891614, -0.003438145, -0.0014711235, -0.0012581645, -0.41736937, -0.00011988616, -5.5556293e-06, -0.01430602, -5.2288255e-05, -3.142485e-05, -1.0444119e-05, -2.8138238e-06, -1.9741461e-05, -0.0015055082, -0.0005621213, -0.00019440286, -0.00040868655, -0.00022242252, -2.5225998e-05, -0.00081167935, -8.876706e-05, -0.00039330113, -0.00010510146, -3.9292627e-05, -0.00047702223, -3.7386224e-05, -0.0037657213, -9.370307e-06, -2.0966954e-06, -0.0843506, -0.0473982, -0.00017508729, -0.00019905198, -0.0001711534, -0.0038829348, -0.037210193, -0.46792826, -0.41684312, -0.08660261, -2.5744682e-06, -0.17095372, -0.00016650239, -5.1810483e-05, -1.5327929e-05, -5.3162735e-06, -3.076318e-07, -2.1153708, -0.00267932, -0.03541772, -0.000960586, -0.00031584647, -0.00012810968, -0.00054840755, -0.00020322429, -4.3347598e-05, -0.00014659172, -6.3900848e-06, -5.79217e-06, -0.44759375, -0.004521479, -0.15536758, -0.029069971, -0.35416466, -0.007628415, -0.000346913, -0.0013976452, -0.00015338662, -0.00057846407, -0.0014021825, -0.0006698352, -0.0026692192, -0.010639583, -0.00012477185, -0.00019940869, -7.493791e-05, -0.0005393411, -0.00011499579, -9.370307e-06, -0.00011225586, -8.447461e-05, -6.766711e-05, -9.401318e-05, -1.2468796e-05, -5.0140625e-05, -0.00036384718, -0.009865166, -0.283022, -0.35343558, -0.6226677, -0.6620018, -0.20524308, -0.06374923, -2.693682e-06, -0.35386354, -0.00033415205, -5.4432137e-05, -2.880226e-05, -1.9765537e-06, -1.1430258e-06, -0.8119246, -0.009564596, -0.00017198599, -9.675685e-05, -0.00019523638, -0.0004079713, -4.46589e-05, -0.00043975122, -3.170517e-06, -1.8841804e-07, -0.7576287, -0.007413119, -0.040255696, -0.0010954889, -0.40525782, -0.13588266, -0.08108542, -0.029284209, -3.643162e-05, -0.0005630759, -0.0001314494, -0.005463337, -0.41136146], "top_logprobs": null, "text_offset": [4292, 4292, 4293, 4300, 4301, 4305, 4308, 4310, 4317, 4318, 4322, 4325, 4327, 4336, 4338, 4344, 4345, 4354, 4356, 4365, 4371, 4372, 4375, 4382, 4383, 4387, 4389, 4398, 4399, 4402, 4405, 4407, 4409, 4411, 4412, 4413, 4414, 4417, 4419, 4420, 4421, 4423, 4426, 4429, 4432, 4434, 4436, 4439, 4441, 4443, 4452, 4453, 4456, 4459, 4461, 4464, 4467, 4469, 4472, 4473, 4475, 4476, 4478, 4480, 4482, 4484, 4493, 4494, 4497, 4500, 4502, 4504, 4506, 4508, 4510, 4512, 4521, 4523, 4532, 4538, 4539, 4545, 4547, 4556, 4557, 4560, 4563, 4565, 4566, 4567, 4569, 4571, 4573, 4575, 4577, 4586, 4587, 4590, 4593, 4595, 4597, 4600, 4603, 4605, 4607, 4608, 4609, 4610, 4612, 4615, 4618, 4621, 4623, 4626, 4629, 4632, 4634, 4636, 4637, 4638, 4639, 4641, 4644, 4647, 4650, 4652, 4654, 4657, 4659, 4668, 4670, 4679, 4685, 4686, 4692, 4694, 4703, 4704, 4707, 4710, 4712, 4714, 4716, 4718, 4720, 4722, 4731, 4732, 4735, 4738, 4740, 4742, 4744, 4746, 4750, 4750, 4750, 4750, 4750, 4750, 4750, 4750]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0040242784, -0.05525053, -0.04905555, -6.933416e-05, -0.0006146632, -9.675685e-05, -0.007978075, -0.719208, -0.09467314, -0.49106133, -0.5076111, -1.0323977e-05, -0.09212263, -0.0007338925, -7.720381e-05, -3.3450466e-05, -2.6060465e-05, -6.3900848e-06, -0.14998958, -0.006254864, -0.0002773308, -0.00028627427, -6.289782e-05, -0.0006787223, -0.00018522002, -0.0031255034, -4.46589e-05, -7.584048e-06, -1.1204777, -0.020958584, -0.0024005533, -0.0005024268, -0.00072035525, -0.0061365943, -0.19242555, -0.41826463, -0.11966561, -0.084176876, -4.9586424e-06, -0.2159831, -0.00024025032, -4.1320116e-05, -7.937927e-06, -7.3446927e-06, -4.721163e-06, -0.1804005, -0.008517335, -0.00014360964, -0.00013323847, -0.0003509689, -0.00049300276, -6.611553e-05, -0.00087193144, -1.1753544e-05, -7.8540467e-07, -0.35062757, -0.006705648, -0.0068023796, -0.00036873287, -0.005827968, -0.02148613, -0.05188531, -0.05169209, -6.122609e-05, -0.00062110514, -1.37819625e-05], "top_logprobs": null, "text_offset": [4292, 4292, 4293, 4300, 4301, 4305, 4308, 4310, 4319, 4321, 4330, 4336, 4337, 4343, 4345, 4354, 4355, 4358, 4361, 4363, 4365, 4367, 4369, 4371, 4373, 4382, 4383, 4386, 4389, 4391, 4393, 4395, 4397, 4399, 4401, 4410, 4412, 4421, 4427, 4428, 4434, 4436, 4445, 4446, 4449, 4452, 4454, 4456, 4458, 4460, 4462, 4464, 4473, 4474, 4477, 4480, 4482, 4484, 4486, 4488, 4491, 4491, 4491, 4491, 4491, 4491]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0040242784, -0.054862335, -0.047729865, -6.0395385e-05, -0.00054232136, -7.040798e-05, -0.0051146587, -0.71452427, -1.9382902e-05, -0.00031990238, -4.9427246e-05, -0.0040724548, -0.073497914, -0.05681708, -0.8695888, -8.4157e-06, -7.958892e-05, -0.00068039127, -0.00016101786, -0.04732996, -4.4818075e-06, -0.015231595, -7.698572e-06, -1.7595703e-05, -0.00013323847, -0.00014301545, -1.688045e-05, -1.2112103e-05, -4.721163e-06, 0, -0.007905018, -0.00041888215, -0.004597583, -0.00032073495, -2.7251614e-05, -0.0017295077, -0.0010841519, -0.00023440628, -3.5240468e-05, -0.0002471616, -9.532728e-05, -0.003417332, -0.0018460054, -0.0012105402, -0.47657427, -9.663671e-05, -6.8669196e-06, -0.0145407645, -5.9085025e-05, -2.4032974e-05, -1.0561456e-05, -1.7400124e-06, -2.8921473e-05, -0.0021178648, -0.0004933604, -0.00017139182, -0.0004983709, -0.00016924512, -3.357061e-05, -0.0011632163, -0.000102002974, -0.00028233757, -0.000120601406, -3.5357807e-05, -0.00028269706, -2.9041616e-05, -0.003898373, -1.2231317e-05, -2.0966954e-06, -3.0970192, -0.21199857, -0.002405334, -0.001221224, -0.00072435196, -0.0018575311, -0.058741566, -0.39252767, -0.4086042, -0.0743349, -3.529076e-06, -0.13465814, -0.00020012581, -3.941184e-05, -1.7236207e-05, -4.838501e-06, -1.022884e-06, -3.0646536, -0.10025021, -0.0072278925, -0.0018430187, -0.0008345872, -0.00038399815, -5.490991e-05, -0.00016709937, -2.4390605e-05, -4.361666e-06, -1.2295429, -0.033079144, -0.0025750333, -0.0002060853, -0.0034708004, -0.0072965752, -1.0272138, -2.3580823, -4.5494293e-05, -0.29269677, -0.0017184608, -8.352281e-05, -0.0004441657, -2.4390605e-05, -3.051303e-06, -1.6952876, -0.021140104, -0.08332033, -0.002258424, -0.0016107552, -0.00048632707, -0.01787804, -0.023602283, -0.047613025, -0.027214559, -2.4390605e-05], "top_logprobs": null, "text_offset": [4292, 4292, 4293, 4300, 4301, 4305, 4308, 4310, 4317, 4318, 4322, 4325, 4327, 4336, 4338, 4344, 4345, 4354, 4356, 4365, 4371, 4372, 4375, 4382, 4383, 4387, 4389, 4398, 4399, 4402, 4405, 4407, 4409, 4411, 4412, 4413, 4414, 4417, 4419, 4420, 4421, 4423, 4426, 4429, 4432, 4434, 4436, 4439, 4441, 4443, 4452, 4453, 4456, 4459, 4461, 4464, 4467, 4469, 4472, 4473, 4475, 4476, 4478, 4480, 4482, 4484, 4493, 4494, 4497, 4500, 4502, 4504, 4506, 4508, 4510, 4512, 4521, 4523, 4532, 4538, 4539, 4545, 4547, 4556, 4557, 4560, 4563, 4565, 4567, 4569, 4571, 4573, 4575, 4584, 4585, 4588, 4591, 4593, 4595, 4597, 4599, 4602, 4604, 4613, 4619, 4620, 4626, 4628, 4637, 4638, 4641, 4644, 4646, 4647, 4648, 4650, 4652, 4654, 4657, 4657, 4657, 4657]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0040242784, -0.053498477, -0.04737395, -4.1558535e-05, -0.000591287, -0.00012691665, -0.008668473, -0.6774859, -2.3795494e-05, -0.0002854398, -5.3837026e-05, -0.004444362, -0.062610745, -0.055741023, -0.7956483, -9.846204e-06, -4.954739e-05, -0.00081824145, -0.00017770988, -0.040273447, -7.1062755e-06, -0.013187224, -1.2231317e-05, -1.8907942e-05, -0.00013621869, -0.00019535558, -1.6999666e-05, -1.0561456e-05, -5.0778563e-06, 0, -0.0059850565, -0.0003733858, -0.0049931067, -0.0003296803, -2.7967804e-05, -0.0014060009, -0.0010999034, -0.00019428364, -2.3795494e-05, -0.00012548709, -0.00014241754, -0.004363421, -0.0024927494, -0.0013869624, -0.49025798, -0.00014623316, -5.675771e-06, -0.014075622, -6.885639e-05, -2.7371756e-05, -1.306671e-05, -2.9311614e-06, -2.0098154e-05, -0.0017164304, -0.00045322927, -0.00013800588, -0.00043032994, -0.00019511623, -3.023464e-05, -0.00087193144, -0.00011511593, -0.0006636326, -0.000103910315, -3.5001114e-05, -0.00037243115, -2.9636725e-05, -0.004887444, -1.44972155e-05, -6.6619094e-07, -0.087941654, -0.04962145, -0.00019726387, -0.00017425283, -0.0001506467, -0.003510817, -0.0469903, -1.0397243, -4.721163e-06, -1.5035338, -0.00057571946, -3.3450466e-05, -0.000118811404, -6.1516675e-06, -2.4543265e-06, -0.43967494, -0.00854132, -0.0002760195, -0.00023237972, -0.002751935, -0.0038811993, -0.565808, -6.396884e-05, -0.00039711673, -0.0010001989, -0.002216962, -0.024236009, -0.04730646, -0.041796803, -3.2906587e-06, -0.14478488, -5.3242864e-05, -1.5448071e-05, -9.846204e-06, -5.79217e-06, -5.460492e-07, -0.035472628, -0.000102240454, -0.0033301327, -0.00012381817, -7.922942e-05, -6.9453374e-05, -4.4539687e-05, -5.8845668e-05, -2.1171965e-05, -2.9399247e-05, -3.883893e-06, -9.055464e-07, -0.011138937, -0.0005444699, -0.004975674, -0.0036251293, -0.24895878, -0.006019775, -5.264588e-05, -0.00067126757, -8.018216e-05, -0.00011809803, -0.001003899, -0.00013287991, -0.00059283763, -0.004817426, -0.0010540184, -3.678925e-05, -6.611553e-05, -0.00047916983, -8.51908e-05, -9.490449e-06, -3.9292627e-05, -7.434374e-05, -3.3809963e-05, -2.7013197e-05, -1.8601542e-06, -4.859278e-05, -0.00019237537, -1.771398e-05, -3.051303e-06, -0.3083493, -0.00012143587, -1.9382902e-05, -1.306671e-05, -4.721163e-06, -1.8601542e-06, -0.002098094, -0.0002996294, -8.3404535e-05, -0.0001635231, -0.00011940838, -3.0707724e-05, -0.0008886356, -0.00016602462, -0.00022445, -0.00011022838, -0.0025036845, -0.020710032, -0.08250367, -0.059932094, -6.6829845e-05, -0.00032586468, -7.8872734e-05, -0.008448629], "top_logprobs": null, "text_offset": [4292, 4292, 4293, 4300, 4301, 4305, 4308, 4310, 4317, 4318, 4322, 4325, 4327, 4336, 4338, 4344, 4345, 4354, 4356, 4365, 4371, 4372, 4375, 4382, 4383, 4387, 4389, 4398, 4399, 4402, 4405, 4407, 4409, 4411, 4412, 4413, 4414, 4417, 4419, 4420, 4421, 4423, 4426, 4429, 4432, 4434, 4436, 4439, 4441, 4443, 4452, 4453, 4456, 4459, 4461, 4464, 4467, 4469, 4472, 4473, 4475, 4476, 4478, 4480, 4482, 4484, 4493, 4494, 4497, 4500, 4502, 4504, 4506, 4508, 4510, 4512, 4521, 4527, 4528, 4534, 4536, 4545, 4546, 4549, 4552, 4554, 4556, 4558, 4560, 4563, 4565, 4571, 4572, 4581, 4583, 4592, 4594, 4603, 4609, 4610, 4616, 4618, 4627, 4628, 4631, 4634, 4636, 4637, 4638, 4640, 4642, 4644, 4646, 4648, 4657, 4658, 4661, 4664, 4666, 4668, 4671, 4674, 4676, 4678, 4679, 4680, 4681, 4683, 4686, 4689, 4692, 4694, 4697, 4700, 4703, 4705, 4707, 4708, 4709, 4710, 4712, 4715, 4718, 4721, 4723, 4725, 4728, 4730, 4732, 4741, 4742, 4745, 4748, 4750, 4753, 4756, 4758, 4761, 4762, 4764, 4765, 4767, 4769, 4772, 4772, 4772, 4772, 4772, 4772, 4772]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0040242784, -0.058003794, -0.04657077, -5.848711e-05, -0.0006877887, -8.685972e-05, -0.0071082427, -0.6502289, -2.319758e-05, -0.00038185148, -5.4194657e-05, -0.005022998, -0.07356245, -0.058763754, -0.8228914, -9.490449e-06, -5.3955304e-05, -0.0006717416, -0.0002199182, -0.051206768, -4.838501e-06, -0.014881429, -1.2112103e-05, -1.4854846e-05, -0.000107007865, -0.00015160035, -2.045765e-05, -1.3661821e-05, -4.9586424e-06, 0, -0.005991952, -0.00038423753, -0.0049439874, -0.00025920733, -2.2126573e-05, -0.0018344789, -0.0012923004, -0.00030582916, -3.2735214e-05, -0.00019821846, -0.00024013019, -0.0025606325, -0.0019023779, -0.0012270708, -0.51558083, -0.00016232915, -5.912312e-06, -0.015548764, -6.539934e-05, -2.8087945e-05, -7.937927e-06, -2.8138238e-06, -1.42597355e-05, -0.0021009606, -0.00071940065, -0.00015004877, -0.00042508479, -0.00016543045, -2.7490969e-05, -0.0009130377, -9.9142904e-05, -0.0003239564, -9.628002e-05, -3.655083e-05, -0.00031787396, -3.0947078e-05, -0.0040461197, -8.892534e-06, -1.6207987e-06, -0.0918624, -0.05246292, -0.00021431445, -0.00016376152, -0.0001678165, -0.00452064, -0.041256435, -0.46849355, -0.40581694, -0.07704752, -2.693682e-06, -0.11770118, -0.00020107947, -6.21807e-05, -1.6282536e-05, -5.4364154e-06, -5.460492e-07, -0.23176499, -0.006216599, -0.00017866449, -0.00011905076, -0.0006528963, -0.00049729616, -6.408898e-05, -0.000297126, -1.676031e-05, -5.675771e-06, -0.58954793, -0.011692272, -0.009986589, -0.00024775858, -0.0018643374, -0.008657952, -0.4926344, -7.088388e-05, -6.885639e-05, -0.0009360037, -0.0037222852, -0.024408046, -0.057091556, -0.052878667, -5.5556293e-06, -0.19164358, -7.028876e-05, -1.855031e-05, -2.8921473e-05, -7.3446927e-06, -6.8669196e-06, -0.034280248, -0.0002429912, -0.005320294, -0.0002035838, -0.00010534082, -8.054166e-05, -7.922942e-05, -8.483411e-05, -3.2616e-05, -3.2855354e-05, -4.721163e-06, -1.1430258e-06, -0.025004823, -0.0012175248, -0.018283097, -0.005399513, -0.30540702, -0.011075051, -0.00012500932, -0.0012870487, -9.782879e-05, -0.00023941304, -0.0018182984, -8.638288e-05, -0.00050445244, -0.011410743, -0.00060583797, -7.8752586e-05, -6.909574e-05, -0.00065265695, -0.00013550156, -7.4639065e-06, -5.312365e-05, -5.2885232e-05, -6.5041706e-05, -7.529741e-05, -3.051303e-06, -4.501652e-05, -0.00069458643, -3.5001114e-05, -5.5556293e-06, -1.4099759, -0.0006275471, -3.488097e-05, -2.9756868e-05, -9.055464e-07, -9.490449e-06, -0.0023503676, -0.00044619318, -0.00020215422, -0.0005494758, -0.00012822983, -3.4403198e-05, -0.0022354834, -0.00019499795, -0.00026648093, -8.173468e-05, -0.0058766464, -0.029880216, -0.09939059, -0.07013037], "top_logprobs": null, "text_offset": [4292, 4292, 4293, 4300, 4301, 4305, 4308, 4310, 4317, 4318, 4322, 4325, 4327, 4336, 4338, 4344, 4345, 4354, 4356, 4365, 4371, 4372, 4375, 4382, 4383, 4387, 4389, 4398, 4399, 4402, 4405, 4407, 4409, 4411, 4412, 4413, 4414, 4417, 4419, 4420, 4421, 4423, 4426, 4429, 4432, 4434, 4436, 4439, 4441, 4443, 4452, 4453, 4456, 4459, 4461, 4464, 4467, 4469, 4472, 4473, 4475, 4476, 4478, 4480, 4482, 4484, 4493, 4494, 4497, 4500, 4502, 4504, 4506, 4508, 4510, 4512, 4521, 4523, 4532, 4538, 4539, 4545, 4547, 4556, 4557, 4560, 4563, 4565, 4567, 4569, 4571, 4573, 4575, 4584, 4585, 4588, 4591, 4593, 4595, 4597, 4599, 4602, 4604, 4610, 4611, 4620, 4622, 4631, 4633, 4642, 4648, 4649, 4655, 4657, 4666, 4667, 4670, 4673, 4675, 4676, 4677, 4679, 4681, 4683, 4685, 4687, 4696, 4697, 4700, 4703, 4705, 4707, 4710, 4713, 4715, 4717, 4718, 4719, 4720, 4722, 4725, 4728, 4731, 4733, 4736, 4739, 4742, 4744, 4746, 4747, 4748, 4749, 4751, 4754, 4757, 4760, 4762, 4764, 4767, 4769, 4771, 4780, 4781, 4784, 4787, 4789, 4792, 4795, 4797, 4800, 4801, 4803, 4804, 4806, 4808, 4811, 4811, 4811]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform (transform (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0040242784, -0.05525179, -0.053298343, -4.2272848e-05, -0.0005581845, -0.00013013717, -0.007257249, -0.6530528, -1.8073477e-05, -0.00019595257, -5.7652644e-05, -0.004141764, -0.07234308, -0.0671516, -0.81184155, -8.176345e-06, -5.991855e-05, -0.0007261411, -0.00015767907, -0.05070944, -5.5556293e-06, -0.014707092, -1.306671e-05, -1.7119806e-05, -0.000113328744, -0.00013991416, -2.2126573e-05, -1.3185924e-05, -4.838501e-06, 0, -0.0064086025, -0.00036157944, -0.0047157314, -0.00026421316, -2.7371756e-05, -0.0016038291, -0.0012596542, -0.00022218504, -2.5105857e-05, -0.00015457776, -0.000116426294, -0.002631388, -0.0017479578, -0.0012979099, -0.47485048, -0.00014063035, -6.3900848e-06, -0.016105402, -7.255186e-05, -3.142485e-05, -8.7733215e-06, -4.0040345e-06, -1.5567284e-05, -0.0015075376, -0.0006428762, -0.00022433081, -0.000503143, -0.00020656308, -3.142485e-05, -0.0011314711, -9.9022756e-05, -0.0005896153, -0.00010343254, -3.154219e-05, -0.00029569364, -3.4287736e-05, -0.005610182, -1.1873685e-05, -1.8601542e-06, -0.081751145, -0.06624079, -0.00018140629, -0.00015970749, -0.00017568239, -0.00347104, -0.043875735, -1.0460335, -4.6010214e-06, -0.23158711, -0.00050206826, -3.142485e-05, -6.2420055e-05, -5.3162735e-06, -3.643162e-05, -0.50896007, -0.009953355, -0.0003848345, -0.00020656308, -0.000862803, -0.0025421083, -0.49303138, -3.881579e-05, -0.0010186979, -0.0012088703, -0.004562313, -0.023617236, -0.05243987, -3.2507453, -0.24179079, -1.832445, -0.09335417, -0.5686037, -0.06725061, -0.36579758, -0.07273811, -1.4482831, -0.0001086796, -0.8251982, -0.014315994, -0.0036190862, -0.0012165691, -4.144026e-05, -8.296486e-06, -0.22114816, -0.004256567, -0.038850766, -0.0033507058, -0.0048618075, -0.001871564, -0.02994937, -0.0041511604, -0.0037013448, -0.00400405, -0.00015231561, -6.921402e-05, -3.0019913, -0.09710979, -0.053446285, -0.0075872755, -0.03232011, -0.006353056, -0.0135715995, -0.042347845, -0.0031948038, -4.4818075e-06, -0.943727, -0.06446024, -0.9455632, -0.18435833, -0.004724536, -0.008837192, -0.0022206085, -0.028710635, -6.0753944e-05, -6.827632e-08, -1.1843991, -0.042707514, -0.0298263, -0.0074439854, -0.0046217744, -0.007567156, -0.00039687738, -0.013857, -1.2708151e-05, -6.6619094e-07, -1.3371543, -0.013944453, -0.01307719, -0.0031334555, -0.00919824, -0.0031574944, -0.00083303556, -0.017915966, -1.7356348e-05, -9.055464e-07, -0.8819004, -0.013190729, -0.022745766, -0.0035955189, -0.03470238, -0.026590936, -0.004725614, -0.010696272, -1.6282536e-05, -1.3422466e-05, -0.56972146, -0.37226504, -0.4184523, -0.16974169, -0.59061086, -0.08898829, -0.00842254, -0.022738265, -0.00061669253, -0.007477373, -0.018338462, -0.004657943, -0.005269538, -0.036899123, -0.0008157353, -0.0006366736, -0.00065516314, -0.004399402, -0.00052675663, -4.6010214e-06, -0.00019666688, -0.00012477185, -0.00013347782, -0.00043020982, -3.2973632e-05, -7.362661e-05, -0.0006428762, -0.13349599, -0.17298798, -1.1660349, -0.0068312474, -4.7279616e-05, -9.377476e-05, -3.883893e-06, -1.6207987e-06, -0.011198609, -0.0043977248, -0.001028304, -0.0073967893, -0.00046241307, -6.015603e-05, -0.018455029, -0.00017675622, -0.0005191226, -0.00017890292, -0.020198215, -0.025214402, -0.092153996, -0.057091556, -5.956092e-05, -0.0006114436], "top_logprobs": null, "text_offset": [4292, 4292, 4293, 4300, 4301, 4305, 4308, 4310, 4317, 4318, 4322, 4325, 4327, 4336, 4338, 4344, 4345, 4354, 4356, 4365, 4371, 4372, 4375, 4382, 4383, 4387, 4389, 4398, 4399, 4402, 4405, 4407, 4409, 4411, 4412, 4413, 4414, 4417, 4419, 4420, 4421, 4423, 4426, 4429, 4432, 4434, 4436, 4439, 4441, 4443, 4452, 4453, 4456, 4459, 4461, 4464, 4467, 4469, 4472, 4473, 4475, 4476, 4478, 4480, 4482, 4484, 4493, 4494, 4497, 4500, 4502, 4504, 4506, 4508, 4510, 4512, 4521, 4527, 4528, 4534, 4536, 4545, 4546, 4549, 4552, 4554, 4556, 4558, 4560, 4563, 4565, 4571, 4572, 4581, 4583, 4592, 4594, 4603, 4605, 4614, 4616, 4625, 4627, 4636, 4638, 4647, 4653, 4654, 4660, 4662, 4671, 4672, 4675, 4678, 4680, 4681, 4682, 4684, 4686, 4688, 4690, 4692, 4701, 4702, 4705, 4708, 4710, 4712, 4714, 4716, 4718, 4720, 4729, 4730, 4733, 4736, 4738, 4740, 4742, 4744, 4746, 4748, 4757, 4758, 4761, 4764, 4766, 4768, 4770, 4772, 4774, 4776, 4785, 4786, 4789, 4792, 4794, 4796, 4798, 4800, 4802, 4804, 4813, 4814, 4817, 4820, 4822, 4824, 4826, 4828, 4830, 4832, 4841, 4842, 4845, 4848, 4850, 4852, 4855, 4858, 4860, 4862, 4863, 4864, 4865, 4867, 4870, 4873, 4876, 4878, 4881, 4884, 4887, 4889, 4891, 4892, 4893, 4894, 4896, 4899, 4902, 4905, 4907, 4909, 4912, 4914, 4916, 4925, 4926, 4929, 4932, 4934, 4937, 4940, 4942, 4945, 4946, 4948, 4949, 4951, 4953, 4956, 4956, 4956, 4956, 4956]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0040242784, -0.054988462, -0.048111446, -4.46589e-05, -0.0006849259, -0.00010939391, -0.0075792274, -0.7553344, -0.09502933, -0.4717754, -0.50911593, -1.0204763e-05, -0.10207875, -0.00072166836, -7.8634315e-05, -2.8445576e-05, -2.141132e-05, -5.4364154e-06, -0.1376595, -0.0058839647, -0.00031870842, -0.00024990342, -8.388231e-05, -0.0007363996, -0.00029164052, -0.0025535214, -6.337372e-05, -8.296486e-06, -1.1069692, -0.018253049, -0.002459109, -0.00056164444, -0.0006925608, -0.005786001, -2.0477178, -0.00038876932, -0.0005583038, -0.0017543482, -0.011047445, -0.11397297, -0.028969157, -0.09031461, -5.912312e-06, -0.4579131, -0.00012155601, -5.3597672e-05, -1.3661821e-05, -3.883893e-06, -1.3823812e-06, -0.06688595, -0.00030213463, -0.0069779297, -0.0003204956, -0.00012751458, -7.5892516e-05, -8.8051806e-05, -8.650302e-05, -4.5494293e-05, -4.6684505e-05, -1.3306066e-05, -3.6482897e-06, -0.027474469, -0.002108546, -0.016821135, -0.0057867207, -0.253001, -0.017189987, -0.00012024191, -0.0023578946, -0.00012238578, -0.0002824577, -0.0017054464, -0.0011962183, -0.0015586969, -0.020588033, -0.0012743383, -8.042151e-05, -7.529741e-05, -0.0006164532, -0.00018486334, -7.3446927e-06, -4.1080762e-05, -7.6726035e-05, -8.483411e-05, -0.00010665305, -5.79217e-06, -6.0395385e-05, -0.00028078974, -3.0353855e-05, -4.277735e-07, -0.43590444, -0.00010772499, -4.477904e-05, -1.9382902e-05, -5.4364154e-06, -1.0800813e-05, -0.005727312, -0.0019450181, -0.0003733858, -0.0007704604, -0.00026624158, -5.598372e-05, -0.003602279, -0.00022671591, -0.00027387374, -0.00022230239, -0.0066573443, -0.022463368, -0.057343062, -0.07021017, -4.2511267e-05, -0.000752505, -0.00020370207, -0.009456763], "top_logprobs": null, "text_offset": [4292, 4292, 4293, 4300, 4301, 4305, 4308, 4310, 4319, 4321, 4330, 4336, 4337, 4343, 4345, 4354, 4355, 4358, 4361, 4363, 4365, 4367, 4369, 4371, 4373, 4382, 4383, 4386, 4389, 4391, 4393, 4395, 4397, 4399, 4401, 4407, 4408, 4417, 4419, 4428, 4430, 4439, 4445, 4446, 4452, 4454, 4463, 4464, 4467, 4470, 4472, 4473, 4474, 4476, 4478, 4480, 4482, 4484, 4493, 4494, 4497, 4500, 4502, 4504, 4507, 4510, 4512, 4514, 4515, 4516, 4517, 4519, 4522, 4525, 4528, 4530, 4533, 4536, 4539, 4541, 4543, 4544, 4545, 4546, 4548, 4551, 4554, 4557, 4559, 4561, 4564, 4566, 4568, 4577, 4578, 4581, 4584, 4586, 4589, 4592, 4594, 4597, 4598, 4600, 4601, 4603, 4605, 4608, 4608, 4608, 4608, 4608, 4608, 4608]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0040242784, -0.05568431, -0.044289347, -6.838237e-05, -0.00051793334, -8.232979e-05, -0.0067864773, -0.6619366, -2.0575926e-05, -0.00023810269, -4.489638e-05, -0.004172525, -0.06521747, -0.056962956, -0.8214771, -1.3185924e-05, -4.9902206e-05, -0.00065945653, -0.00017413269, -0.056741003, -7.224551e-06, -0.015761778, -1.0084622e-05, -1.2588937e-05, -0.00010605607, -0.0002145538, -1.9621319e-05, -1.1039229e-05, -5.3162735e-06, 0, -0.006688125, -0.000397832, -0.0055155987, -0.0003278922, -2.7728449e-05, -0.0019822232, -0.0020029468, -0.0002286242, -3.201996e-05, -0.0002676721, -0.0001229837, -0.0030373144, -0.0021365026, -0.0022394257, -2.6501017, -0.017567469, -1.7834122e-05, -0.110442266, -0.00039795213, -2.1768952e-05, -1.2112103e-05, -5.3162735e-06, -6.6619094e-07, -0.0029145833, -0.002127361, -0.00041959932, -0.0024533712, -0.000120601406, -6.6829845e-05, -0.0045516565, -0.00016995943, -0.0008029697, -0.00018867897, -4.275062e-05, -0.00067209924, -4.501652e-05, -0.0109553635, -4.1320116e-05, -9.055464e-07, -0.57678944, -0.31213555, -0.0007691482, -0.00029998703, -0.00022230239, -0.0021348882, -0.03930874, -1.2667276, -7.818713e-06, -0.32498464, -0.00060906034, -4.048565e-05, -4.29881e-05, -6.6619094e-07, -6.9453374e-05, -0.50533915, -0.010948676, -0.00035394725, -0.0001589913, -0.0012785153, -0.0025498164, -1.0670512, -1.7693621, -9.174727e-05, -1.3241881, -0.0039047764, -0.0002113333, -0.0010071225, -2.4152187e-05, -4.721163e-06, -1.3886975, -0.026162798, -0.007905197, -0.0010164292, -0.0073591373, -0.019598946, -0.044466056], "top_logprobs": null, "text_offset": [4292, 4292, 4293, 4300, 4301, 4305, 4308, 4310, 4317, 4318, 4322, 4325, 4327, 4336, 4338, 4344, 4345, 4354, 4356, 4365, 4371, 4372, 4375, 4382, 4383, 4387, 4389, 4398, 4399, 4402, 4405, 4407, 4409, 4411, 4412, 4413, 4414, 4417, 4419, 4420, 4421, 4423, 4426, 4429, 4432, 4434, 4436, 4439, 4441, 4443, 4452, 4453, 4456, 4459, 4461, 4464, 4467, 4469, 4472, 4473, 4475, 4476, 4478, 4480, 4482, 4484, 4493, 4494, 4497, 4500, 4502, 4504, 4506, 4508, 4510, 4512, 4521, 4527, 4528, 4534, 4536, 4545, 4546, 4549, 4552, 4554, 4556, 4558, 4560, 4563, 4565, 4574, 4580, 4581, 4587, 4589, 4598, 4599, 4602, 4605, 4607, 4609, 4611, 4613, 4616, 4616]}, "finish_reason": "stop"}, {"text": "(repeat_stroke (stroke_list (stroke_list (transform_stroke (stroke_list (list (list (list (list 2 3) (list 1 1)) (list (list 2 2))) (list (list (list 2 3) (list 1 1)) (list (list 2 2))))) (list 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1)))))", "index": 9, "logprobs": {"tokens": ["\n", "(", "repeat", "_", "stroke", " (", "stroke", "_", "list", " (", "stroke", "_", "list", " (", "transform", "_", "stroke", " (", "stroke", "_", "list", " (", "list", " (", "list", " (", "list", " (", "list", " 2", " 3", ")", " (", "list", " 1", " 1", "))", " (", "list", " (", "list", " 2", " 2", ")))", " (", "list", " (", "list", " (", "list", " 2", " 3", ")", " (", "list", " 1", " 1", "))", " (", "list", " (", "list", " 2", " 2", "))", ")))", " (", "list", " 1", " 0", " 0", " 0", " 0", " 0", " 1", " 0", " 0", " 0", " 0", " 0", " 1", " 0", " 0", " 0", " 0", " 0", " 1", "))", ")))", "\n"], "token_logprobs": [-0.0040242784, -0.058507778, -4.5721827, -0.03338865, -3.6395888, -0.32649592, -3.0832374, -0.5501832, -0.68928117, -0.39405054, -1.8496517, -0.3373824, -0.19071108, -0.27934077, -0.7687782, -1.9155109, -0.41801906, -0.118554965, -1.0332091, -0.13241762, -0.19305044, -0.17835741, -5.9812393, -0.2067935, -1.9438248, -0.95813066, -1.5043203, -1.1221207, -1.1191708, -3.6081142, -3.975378, -0.5316284, -0.30507758, -0.0098388605, -1.6970747, -1.9925767, -0.3107973, -0.27123982, -0.01965882, -0.3411122, -0.013124356, -1.071349, -1.8421036, -2.8968234, -0.050946128, -0.04526382, -0.16325226, -0.01347892, -0.37658128, -0.009304302, -0.9198144, -0.8472563, -0.033059184, -0.0019333131, -0.00024835463, -0.22642851, -0.20557356, -0.14690468, -0.027831402, -0.00023798255, -0.005422286, -0.0010390421, -0.24138324, -0.20643054, -0.621403, -0.27616465, -0.039995976, -2.319013, -2.9646847, -0.44512048, -0.21373332, -0.3144278, -1.4887704, -0.7486478, -2.2927048, -1.0734832, -0.44918928, -0.13504092, -0.14408799, -0.3301283, -0.22587103, -0.46854857, -0.27270177, -0.16020148, -0.17888251, -0.12596369, -0.25148544, -0.92484516, -1.3831481, -0.051049557], "top_logprobs": null, "text_offset": [4292, 4292, 4293, 4299, 4300, 4306, 4308, 4314, 4315, 4319, 4321, 4327, 4328, 4332, 4334, 4343, 4344, 4350, 4352, 4358, 4359, 4363, 4365, 4369, 4371, 4375, 4377, 4381, 4383, 4387, 4389, 4391, 4392, 4394, 4398, 4400, 4402, 4404, 4406, 4410, 4412, 4416, 4418, 4420, 4423, 4425, 4429, 4431, 4435, 4437, 4441, 4443, 4445, 4446, 4448, 4452, 4454, 4456, 4458, 4460, 4464, 4466, 4470, 4472, 4474, 4476, 4479, 4481, 4485, 4487, 4489, 4491, 4493, 4495, 4497, 4499, 4501, 4503, 4505, 4507, 4509, 4511, 4513, 4515, 4517, 4519, 4521, 4523, 4525, 4528]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LLONrsQRveEDZOMLEeJVGK8akPs", "object": "text_completion", "created": 1651002058, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.004864383, -0.07288363, -0.06854681, -4.036551e-05, -0.0006007101, -0.00014802223, -0.0049282326, -0.7052922, -0.053300798, -2.3441448, -0.00043760546, -0.000629813, -0.0044200523, -0.009124553, -0.18121251, -1.676031e-05, -0.057723638, -2.8326363e-05, -9.198663e-05, -0.00025431695, -0.0020971375, -4.46589e-05, -0.00011928824, -2.0575926e-05, -8.4157e-06, -0.021978803, -0.0010689354, -0.017169917, -0.0021398452, -3.762558e-05, -0.0074933483, -0.002108546, -0.0004724313, -2.6893982e-05, -0.00020191487, -0.00019010947, -0.0015363101, -0.0010196515, -0.0008168091, -0.011060886, -0.00024704146, -5.3477528e-05, -0.23375049, -0.00047964763, -2.7728449e-05, -2.462996e-05, -4.361666e-06, -2.2159093e-06, -0.0041208724, -0.0015366677, -0.001188939, -0.00093176845, -0.00013633883, -7.11223e-05, -0.0010059284, -0.00013633883, -0.0007160609, -0.00026266437, -0.007167554, -0.0026720278, -0.00010545909, -0.0061767763, -3.5477948e-05, -1.8841804e-07, -1.5031953, -0.045018006, -0.06701316, -0.003912495, -0.1531975, -0.0041681556, -1.1479751, -0.00019046802, -8.51908e-05, -0.0012369163, -0.0012428861, -0.07662239, -0.046309154, -0.16704242, -9.012677e-06, -0.6621537, -0.0006501517, -6.432833e-05, -8.296486e-06, -2.8206221e-05, -5.460492e-07, -0.03934017, -0.0010648776, -0.0134396525, -0.00027959672, -0.00025145593, -0.00012036205, -5.956092e-05, -0.00011940838, -3.4762696e-05, -5.2525735e-05, -7.698572e-06, -4.361666e-06, -0.017111463, -0.00087944814, -0.01094349, -0.004466093, -0.31738806, -0.013212169, -0.00012655997, -0.0013958551, -8.8410365e-05, -0.00017389427, -0.00037577184, -0.00027697318, -0.00049693946, -0.0034592568, -0.00068516337, -8.912656e-05, -0.00012584659, -0.00041023534, -9.9616926e-05, -8.176345e-06, -4.847264e-05, -7.636654e-05, -6.325358e-05, -5.9085025e-05, -2.5744682e-06, -5.3477528e-05, -9.0198504e-05, -4.0246297e-05, -9.055464e-07, -1.178453, -0.00020119963, -3.058758e-05, -1.0920954e-05, -4.721163e-06, -3.4089344e-06, -0.002579994, -0.00023535996, -0.00033570456, -0.00016507095, -0.000120601406, -4.6206733e-05, -0.0014384736, -0.00021014028, -0.00031203084, -0.00012191365, -0.008328897, -0.020213543], "top_logprobs": null, "text_offset": [3768, 3768, 3769, 3776, 3777, 3781, 3784, 3786, 3795, 3797, 3803, 3804, 3813, 3815, 3824, 3830, 3831, 3834, 3841, 3842, 3846, 3848, 3857, 3858, 3861, 3864, 3866, 3868, 3870, 3871, 3872, 3873, 3876, 3878, 3879, 3880, 3882, 3885, 3888, 3891, 3893, 3895, 3898, 3900, 3902, 3911, 3912, 3915, 3918, 3920, 3923, 3926, 3928, 3931, 3932, 3934, 3935, 3937, 3939, 3941, 3943, 3952, 3953, 3956, 3959, 3961, 3963, 3965, 3967, 3969, 3971, 3977, 3978, 3987, 3989, 3998, 4000, 4009, 4015, 4016, 4022, 4024, 4033, 4034, 4037, 4040, 4042, 4043, 4044, 4046, 4048, 4050, 4052, 4054, 4063, 4064, 4067, 4070, 4072, 4074, 4077, 4080, 4082, 4084, 4085, 4086, 4087, 4089, 4092, 4095, 4098, 4100, 4103, 4106, 4109, 4111, 4113, 4114, 4115, 4116, 4118, 4121, 4124, 4127, 4129, 4131, 4134, 4136, 4138, 4147, 4148, 4151, 4154, 4156, 4159, 4162, 4164, 4167, 4168, 4170, 4171, 4173, 4175, 4178]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.004864383, -0.06785585, -0.073059686, -4.29881e-05, -0.0008441924, -0.00016543045, -0.0055354983, -0.6754764, -1.3900239e-05, -0.00025670204, -2.3556138e-05, -0.003599108, -0.07689225, -0.021686085, -0.14457397, -0.09825825, -7.4639065e-06, -0.023857106, -0.0005125633, -4.0843282e-05, -1.3185924e-05, -5.3837026e-05, 0, -0.05510907, -0.0012703979, -9.162713e-05, -8.948419e-05, -0.0001552949, -0.00054423057, -5.3363005e-05, -0.0007453468, -2.4866502e-05, -2.2159093e-06, -0.1604046, -0.034745082, -8.065993e-05, -6.0038692e-05, -0.00011308939, -0.0015421616, -0.009738162, -0.05570605, -0.20101479, -0.048001602, -5.5556293e-06, -0.040089905, -0.00011988616, -3.2616e-05, -1.5925843e-05, -2.4866502e-05, -5.197998e-06, -0.06182559, -0.0062027457, -0.0002861541, -6.921402e-05, -0.002418658, -0.0002574192, -4.2392992e-05, -0.00029605313, -1.7119806e-05, 0, -2.1035864, -0.21525973, -0.0029062722, -0.00017627938, -0.005443981, -0.0018473186, -1.0516798, -0.062406376, -0.082175545, -0.045287643, -6.5092986e-06, -0.09165753, -0.00026027925, -6.0633804e-05, -2.200643e-05, -4.721163e-06, -7.224551e-06, -1.7943913, -0.021627368, -0.06528758, -0.0012757699, -0.00035692935, -0.000114638155, -0.00043223824, -0.00030857194, -4.036551e-05, -0.0002491891, -2.033751e-05, -7.8540467e-07, -0.29560933, -0.0025795153, -0.3017966, -0.025539095, -0.23883462, -0.025857838, -0.00048429958, -0.002573718, -0.00011618975, -0.0027965244, -0.0007927721, -0.0045364457, -0.0025831, -0.012966016, -0.00047207458, -0.0002229003, -0.00012727616, -0.0012126296, -0.0001884396, -1.2112103e-05, -0.00015672446, -7.517727e-05, -0.000116546435, -8.0899285e-05, -8.4157e-06, -6.325358e-05, -0.00028424585, -0.016524648, -0.14384446, -1.9451363, -0.007359858, -6.7307614e-05, -8.876706e-05, -3.883893e-06, -3.170517e-06, -0.015013869, -0.012233181, -0.001873355, -0.0013623096, -0.00029986876, -3.941184e-05, -0.022636442, -0.00020286761, -0.0005168586, -0.00030702315, -0.077380024, -0.020002754], "top_logprobs": null, "text_offset": [3768, 3768, 3769, 3776, 3777, 3781, 3784, 3786, 3793, 3794, 3798, 3801, 3803, 3812, 3814, 3823, 3829, 3830, 3836, 3838, 3847, 3848, 3851, 3854, 3856, 3858, 3860, 3862, 3864, 3866, 3875, 3876, 3879, 3882, 3884, 3886, 3888, 3890, 3892, 3894, 3903, 3905, 3914, 3920, 3921, 3927, 3929, 3938, 3939, 3942, 3945, 3947, 3949, 3951, 3953, 3955, 3957, 3966, 3967, 3970, 3973, 3975, 3977, 3979, 3981, 3984, 3986, 3995, 3997, 4006, 4012, 4013, 4019, 4021, 4030, 4031, 4034, 4037, 4039, 4040, 4041, 4043, 4045, 4047, 4049, 4051, 4060, 4061, 4064, 4067, 4069, 4071, 4074, 4077, 4079, 4081, 4082, 4083, 4084, 4086, 4089, 4092, 4095, 4097, 4100, 4103, 4106, 4108, 4110, 4111, 4112, 4113, 4115, 4118, 4121, 4124, 4126, 4128, 4131, 4133, 4135, 4144, 4145, 4148, 4151, 4153, 4156, 4159, 4161, 4164, 4165, 4167, 4168, 4170, 4172, 4175]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004864383, -0.06785585, -0.073059745, -4.29881e-05, -0.0008441924, -0.0001118973, -0.006558343, -0.66663754, -0.045052428, -0.16755967, -0.20250258, -1.1039229e-05, -0.074660525, -0.0009950091, -5.24084e-05, -3.7983213e-05, -7.553489e-05, -9.606849e-06, -0.11151239, -0.0037241993, -9.628002e-05, -0.000118931544, -0.00025694142, -0.00080929237, -6.814395e-05, -0.00067591673, -4.966285e-05, -6.746778e-06, -0.66842836, -0.015229477, -0.00086685986, -0.0003133412, -0.0018714438, -0.004658301, -0.18671162, -0.1519485, -0.151277, -0.15783758, -1.5925843e-05, -0.11352979, -0.00093875016, -4.871012e-05, -2.8206221e-05, -2.582111e-05, -1.2622395e-06, -0.23024012, -0.025342716, -0.0006495566, -0.00022361554, -0.00055329327, -0.001789098, -0.000509462, -0.0005052878, -4.4181128e-05, -1.022884e-06, -1.2630539, -0.11467021, -0.30893698, -0.0043398947, -0.003215854, -0.0012510036, -0.007970384, -0.023645371, -0.07003556], "top_logprobs": null, "text_offset": [3768, 3768, 3769, 3776, 3777, 3781, 3784, 3786, 3795, 3797, 3806, 3812, 3813, 3819, 3821, 3830, 3831, 3834, 3837, 3839, 3841, 3843, 3845, 3847, 3849, 3858, 3859, 3862, 3865, 3867, 3869, 3871, 3873, 3875, 3877, 3886, 3888, 3897, 3903, 3904, 3910, 3912, 3921, 3922, 3925, 3928, 3930, 3932, 3934, 3936, 3938, 3940, 3949, 3950, 3953, 3956, 3958, 3959, 3960, 3962, 3964, 3966, 3969, 3969]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004864383, -0.06785585, -0.073059686, -4.29881e-05, -0.00059832406, -0.00014730697, -0.0080472315, -0.70655113, -0.0442063, -0.15874332, -0.21611892, -1.1398727e-05, -0.052506074, -0.0010231105, -4.477904e-05, -3.237946e-05, -4.763911e-05, -9.606849e-06, -0.094018586, -0.003245871, -0.00010820183, -0.00015100244, -0.00021503064, -0.0008979423, -5.1930627e-05, -0.00042961474, -4.430127e-05, -1.0800813e-05, -0.70016444, -0.014903272, -0.0006482434, -0.00031596568, -0.0015708768, -0.0049333232, -0.18310042, -0.14208163, -0.175398, -0.19333504, -1.8190814e-05, -0.12069402, -0.00095080055, -5.598372e-05, -3.690939e-05, -2.0575926e-05, -1.2622395e-06, -0.26711297, -0.02444213, -0.0006880262, -0.00029629155, -0.00052484934, -0.0018525141, -0.00049324025, -0.0014252827, -3.333313e-05, -9.055464e-07, -1.2630961, -0.11846941, -0.29963267, -0.004375275, -0.0028360952, -0.0012591783, -0.007963657, -0.023402074, -0.08047561], "top_logprobs": null, "text_offset": [3768, 3768, 3769, 3776, 3777, 3781, 3784, 3786, 3795, 3797, 3806, 3812, 3813, 3819, 3821, 3830, 3831, 3834, 3837, 3839, 3841, 3843, 3845, 3847, 3849, 3858, 3859, 3862, 3865, 3867, 3869, 3871, 3873, 3875, 3877, 3886, 3888, 3897, 3903, 3904, 3910, 3912, 3921, 3922, 3925, 3928, 3930, 3932, 3934, 3936, 3938, 3940, 3949, 3950, 3953, 3956, 3958, 3959, 3960, 3962, 3964, 3966, 3969, 3969]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004864383, -0.07283151, -0.07212915, -4.501652e-05, -0.00085302035, -0.00013586106, -0.005631878, -0.6680197, -1.1159372e-05, -0.00021717734, -2.2365928e-05, -0.0034078218, -0.08004961, -0.01895417, -0.15468015, -0.11122531, -7.224551e-06, -0.034999058, -0.0002004825, -3.9172486e-05, -1.3185924e-05, -6.396884e-05, -6.827632e-08, -0.058273852, -0.0025941574, -0.00010271822, -8.435633e-05, -0.00016709937, -0.000680869, -6.38515e-05, -0.00078060065, -3.0707724e-05, -2.4543265e-06, -0.16413291, -0.048308045, -8.924483e-05, -5.3477528e-05, -0.00018915485, -0.0027281477, -0.012807347, -0.06662559, -1.8381402, -3.988961e-05, -7.100402e-05, -0.0018981381, -0.00054089085, -0.06830019, -1.42597355e-05, -0.03952996, -4.275062e-05, -5.0976956e-05, -0.00014313185, -0.0009923818, -3.5357807e-05, -2.8326363e-05, -9.251094e-06, -1.8841804e-07, -0.020267736, -0.0009117236, -0.013602776, -0.0012040964, -3.023464e-05, -0.008894503, -0.0020820254, -0.00022880347, -1.8310955e-05, -0.0002286242, -0.00013407106, -0.0010969222, -0.00091649476, -0.00038996234, -0.015390408, -0.00014814144, -2.6538237e-05, -0.106039844, -0.00027888143, -2.3795494e-05, -1.855031e-05, -5.197998e-06, -3.4089344e-06, -0.0038526559, -0.0010944168, -0.00045609125, -0.0004278247, -0.0001849835, -4.9069615e-05, -0.000581326, -0.000114518014, -0.0004851331, -9.866513e-05, -0.050806012, -0.000785613, -5.1810483e-05, -0.0057228156, -3.881579e-05, -1.7400124e-06, -1.8631107, -0.9703725, -0.20537366, -0.0015767856, -0.0006165724, -0.00027792776, -0.0040169177, -0.0024991427, -0.54445374, -0.0178386, -0.099055685, -0.02827037, -2.9311614e-06, -0.03929572, -0.00015589187, -2.0575926e-05, -1.3661821e-05, -1.9765537e-06, -8.4157e-06, -0.29706886, -0.007687337, -0.00011416413, -3.965026e-05, -5.490991e-05, -0.00011583212, -4.5374152e-05, -0.00019368572, -5.675771e-06, -6.6619094e-07, -0.72845036, -0.009426197, -0.005600232, -0.00011714342, -0.0046263873, -0.018946212, -0.059616536, -0.030259015, -2.28437e-05, -0.001253628, -0.00014313185], "top_logprobs": null, "text_offset": [3768, 3768, 3769, 3776, 3777, 3781, 3784, 3786, 3793, 3794, 3798, 3801, 3803, 3812, 3814, 3823, 3829, 3830, 3836, 3838, 3847, 3848, 3851, 3854, 3856, 3858, 3860, 3862, 3864, 3866, 3875, 3876, 3879, 3882, 3884, 3886, 3888, 3890, 3892, 3894, 3903, 3905, 3911, 3912, 3921, 3923, 3932, 3938, 3939, 3942, 3949, 3950, 3954, 3956, 3965, 3966, 3969, 3972, 3974, 3976, 3978, 3979, 3980, 3981, 3984, 3986, 3987, 3988, 3990, 3993, 3996, 3999, 4001, 4003, 4006, 4008, 4010, 4019, 4020, 4023, 4026, 4028, 4031, 4034, 4036, 4039, 4040, 4042, 4043, 4045, 4047, 4049, 4051, 4060, 4061, 4064, 4067, 4069, 4070, 4072, 4074, 4076, 4078, 4081, 4083, 4092, 4094, 4103, 4109, 4110, 4116, 4118, 4127, 4128, 4131, 4134, 4136, 4138, 4140, 4142, 4144, 4146, 4155, 4156, 4159, 4162, 4164, 4166, 4168, 4170, 4173, 4173, 4173, 4173, 4173, 4173]}, "finish_reason": "stop"}, {"text": "", "index": 5, "logprobs": {"tokens": ["\n", "\n", "#", " (", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004864383, -4.057758, -1.7474926, -3.2610838, -0.89762235, -0.0152679635, -0.02678811, -0.00031978224], "top_logprobs": null, "text_offset": [3768, 3768, 3768, 3768, 3768, 3768, 3768, 3768]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004864383, -0.07330728, -0.07451668, -3.3212986e-05, -0.0011768229, -0.00014992956, -0.004670279, -0.68797326, -0.047243778, -0.14937365, -0.190389, -1.1159372e-05, -0.064803064, -0.0009927413, -5.2885232e-05, -3.225932e-05, -4.0963423e-05, -5.197998e-06, -0.09769776, -0.003022248, -9.9735196e-05, -0.0001463533, -0.00023524073, -0.0009135145, -6.0633804e-05, -0.000440229, -3.678925e-05, -9.846204e-06, -1.2113683, -0.07668224, -0.00012238578, -0.000115950395, -0.0017819924, -0.0040114126, -0.17495358, -0.13896374, -0.18544582, -0.15615065, -1.6282536e-05, -0.16596201, -0.0012142995, -7.684431e-05, -4.3227457e-05, -2.9996223e-05, -7.8540467e-07, -0.29065067, -0.03549183, -0.0009310532, -0.0005575876, -0.0010872569, -0.0020262394, -0.00044845813, -0.0014114921, -3.9292627e-05, -1.022884e-06, -1.4975692, -0.1245237, -0.30519202, -0.0025116312, -0.0013250668, -0.00060906034, -0.003659588, -0.017216548, -0.06352608], "top_logprobs": null, "text_offset": [3768, 3768, 3769, 3776, 3777, 3781, 3784, 3786, 3795, 3797, 3806, 3812, 3813, 3819, 3821, 3830, 3831, 3834, 3837, 3839, 3841, 3843, 3845, 3847, 3849, 3858, 3859, 3862, 3865, 3867, 3869, 3871, 3873, 3875, 3877, 3886, 3888, 3897, 3903, 3904, 3910, 3912, 3921, 3922, 3925, 3928, 3930, 3932, 3934, 3936, 3938, 3940, 3949, 3950, 3953, 3956, 3958, 3959, 3960, 3962, 3964, 3966, 3969, 3969]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004864383, -0.07330728, -0.07451668, -3.3212986e-05, -0.0011768229, -0.00014992956, -0.005761002, -0.7100396, -0.047829583, -0.16051489, -0.20350645, -9.251094e-06, -0.04959458, -0.0009805708, -5.0856816e-05, -2.7611111e-05, -6.420819e-05, -6.3900848e-06, -0.09237271, -0.002707229, -8.6025255e-05, -0.00014706762, -0.0002934296, -0.00090623525, -5.9679198e-05, -0.00044583555, -3.8338017e-05, -8.176345e-06, -0.7329577, -0.018048989, -0.0006329744, -0.0002782854, -0.0019902263, -0.00424579, -0.17429085, -0.15851665, -0.16510835, -0.1677341, -1.4616429e-05, -0.1401874, -0.0010255584, -5.467149e-05, -2.8565719e-05, -2.1291178e-05, -1.2622395e-06, -2.4143786, -0.04450544, -0.0892258, -0.004275002, -0.0011034843, -0.0002192039, -0.0010463205, -0.00074796943, -3.8935006e-05, -0.00081394624, -1.7834122e-05, -3.076318e-07, -1.3399373, -0.06423947, -0.0028652053, -0.00026242502, -0.005389443, -0.01876138, -0.064247735], "top_logprobs": null, "text_offset": [3768, 3768, 3769, 3776, 3777, 3781, 3784, 3786, 3795, 3797, 3806, 3812, 3813, 3819, 3821, 3830, 3831, 3834, 3837, 3839, 3841, 3843, 3845, 3847, 3849, 3858, 3859, 3862, 3865, 3867, 3869, 3871, 3873, 3875, 3877, 3886, 3888, 3897, 3903, 3904, 3910, 3912, 3921, 3922, 3925, 3928, 3930, 3931, 3932, 3934, 3936, 3938, 3940, 3942, 3951, 3952, 3955, 3958, 3960, 3962, 3964, 3966, 3969, 3969]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.004864383, -0.07330716, -0.07451668, -3.3212986e-05, -0.0011768229, -0.00018224075, -0.0074589984, -0.713374, -1.2946569e-05, -0.00022051518, -2.7371756e-05, -0.003761472, -0.08785133, -0.017267909, -0.159647, -0.09081668, -6.1516675e-06, -0.029408501, -0.00019940869, -3.5240468e-05, -1.402038e-05, -5.8130416e-05, 0, -0.055378217, -0.0012604914, -9.461016e-05, -8.447461e-05, -0.00018248011, -0.0005729758, -5.9085025e-05, -0.00072447216, -1.163433e-05, -1.9765537e-06, -0.15313184, -0.037401866, -6.611553e-05, -4.370523e-05, -8.161453e-05, -0.0026872677, -0.011011952, -0.070184395, -0.18461244, -0.034489814, -5.197998e-06, -0.0557472, -0.00018390873, -2.3795494e-05, -1.2231317e-05, -2.462996e-05, -3.529076e-06, -0.055715945, -0.005956875, -0.00025002356, -7.648668e-05, -0.0021644565, -0.00032478993, -3.655083e-05, -0.00035108434, -1.3900239e-05, 0, -0.5458742, -0.041158296, -0.0054280995, -0.00011308939, -0.003059196, -0.0016147558, -0.4069736, -8.268835e-05, -0.000107247215, -0.001276486, -0.0014508892, -0.022994515, -0.008277569, -0.04469092, -6.9861335e-06, -0.6341017, -0.000295933, -3.0707724e-05, -2.1291178e-05, -2.3675353e-05, -5.197998e-06, -0.05449361, -0.00074272143, -0.0129702445, -0.0002588497, -0.00017818765, -0.00010581859, -5.7532503e-05, -0.00017055642, -3.988961e-05, -6.9573514e-05, -7.698572e-06, -1.1430258e-06, -0.025104744, -0.0011251464, -0.018377135, -0.008399937, -0.21625476, -0.014557698, -0.0002633787, -0.0020112502, -0.00016662253, -0.00042842168, -0.0017271189, -0.0011351112, -0.0014152542, -0.008596629, -0.0024141169, -7.279122e-05, -8.638288e-05, -0.00046861471, -0.00012560723, -7.3446927e-06, -0.00012977766, -9.127325e-05, -0.00015338662, -4.0843282e-05, -4.0040345e-06, -7.052812e-05, -0.00027518315, -0.00010784233, -5.3162735e-06, -1.4886522, -0.00056677323, -2.4986643e-05, -2.9280032e-05, -3.051303e-06, -1.6207987e-06, -0.0040676054, -0.0012768428, -0.00047762014, -0.00017258391, -0.0001485, -3.5001114e-05, -0.00919824, -0.00016662253, -0.00019511623, -0.00015696288, -0.00960672, -0.024225075, -0.08619555, -0.07385779, -4.8233283e-05, -0.001214061], "top_logprobs": null, "text_offset": [3768, 3768, 3769, 3776, 3777, 3781, 3784, 3786, 3793, 3794, 3798, 3801, 3803, 3812, 3814, 3823, 3829, 3830, 3836, 3838, 3847, 3848, 3851, 3854, 3856, 3858, 3860, 3862, 3864, 3866, 3875, 3876, 3879, 3882, 3884, 3886, 3888, 3890, 3892, 3894, 3903, 3905, 3914, 3920, 3921, 3927, 3929, 3938, 3939, 3942, 3945, 3947, 3949, 3951, 3953, 3955, 3957, 3966, 3967, 3970, 3973, 3975, 3977, 3979, 3981, 3984, 3986, 3992, 3993, 4002, 4004, 4013, 4015, 4024, 4030, 4031, 4037, 4039, 4048, 4049, 4052, 4055, 4057, 4058, 4059, 4061, 4063, 4065, 4067, 4069, 4078, 4079, 4082, 4085, 4087, 4089, 4092, 4095, 4097, 4099, 4100, 4101, 4102, 4104, 4107, 4110, 4113, 4115, 4118, 4121, 4124, 4126, 4128, 4129, 4130, 4131, 4133, 4136, 4139, 4142, 4144, 4146, 4149, 4151, 4153, 4162, 4163, 4166, 4169, 4171, 4174, 4177, 4179, 4182, 4183, 4185, 4186, 4188, 4190, 4193, 4193, 4193, 4193, 4193]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004864383, -0.07214876, -0.0745082, -4.0009756e-05, -0.0010203687, -0.0001485, -0.004274164, -0.6692553, -0.049044345, -0.1583968, -0.20747209, -9.370307e-06, -0.06176478, -0.0010149986, -5.0856816e-05, -2.5703772e-05, -4.3347598e-05, -5.912312e-06, -0.09301448, -0.0027923419, -0.00011511593, -0.00014098798, -0.00027256247, -0.0010985939, -5.944078e-05, -0.0010900006, -4.6445148e-05, -7.818713e-06, -0.6466823, -0.017391628, -0.0007460621, -0.00033498742, -0.001999365, -0.0037900724, -0.17575046, -0.16288567, -0.17323469, -0.17008908, -1.5925843e-05, -0.13484992, -0.00126443, -5.2525735e-05, -2.9996223e-05, -2.1768952e-05, -1.3823812e-06, -0.21457525, -0.03332407, -0.0007480895, -0.0002840093, -0.0006948258, -0.0013952572, -0.00039127364, -0.00077058055, -4.8233283e-05, -1.5006569e-06, -1.2591479, -0.12645788, -0.3218191, -0.004125423, -0.0031271789, -0.0012095865, -0.007635863, -0.025433378, -0.07097524], "top_logprobs": null, "text_offset": [3768, 3768, 3769, 3776, 3777, 3781, 3784, 3786, 3795, 3797, 3806, 3812, 3813, 3819, 3821, 3830, 3831, 3834, 3837, 3839, 3841, 3843, 3845, 3847, 3849, 3858, 3859, 3862, 3865, 3867, 3869, 3871, 3873, 3875, 3877, 3886, 3888, 3897, 3903, 3904, 3910, 3912, 3921, 3922, 3925, 3928, 3930, 3932, 3934, 3936, 3938, 3940, 3949, 3950, 3953, 3956, 3958, 3959, 3960, 3962, 3964, 3966, 3969, 3969]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LLX0I3SUAhfeFtanjb2Y5m9phzj", "object": "text_completion", "created": 1651002067, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.008080281, -0.12314103, -0.066437535, -0.00028854018, -0.0009182857, -6.48061e-05, -0.0026641993, -0.037196398, -2.141132e-05, -0.000104625564, -4.716134e-05, -0.0018595605, -0.077908374, -0.0256754, -0.22503337, -1.1159372e-05, -4.072407e-05, -0.0008916177, -0.0011990821, -0.046276946, -5.79217e-06, -0.004736634, -2.0815281e-05, -1.4854846e-05, -7.541475e-05, -0.00029545708, -1.6402679e-05, -2.2604345e-05, -5.3162735e-06, -6.827632e-08, -0.003902562, -0.0003266982, -0.0027773974, -0.00036086416, -2.0815281e-05, -0.0012570898, -0.0014669428, -0.00024382658, -2.6060465e-05, -6.432833e-05, -0.00019177745, -0.0019014224, -0.0009809266, -0.00039664176, -0.5235196, -0.00016840879, -1.8668587e-05, -0.014433968, -3.583558e-05, -3.237946e-05, -1.163433e-05, -1.7400124e-06, -3.170517e-06, -0.0017798418, -0.00063243933, -9.329886e-05, -0.00042198348, -9.985534e-05, -2.5225998e-05, -0.00092640036, -9.198663e-05, -0.00042615767, -5.657977e-05, -3.881579e-05, -0.00033689477, -3.941184e-05, -0.0035065704, -1.8601542e-06, -3.076318e-07, -0.0721772, -0.01841083, -0.00029164052, -0.00023905636, -0.00029450248, -0.0009883279, -0.018265797, -0.084773965, -0.11612412, -0.060233578, -3.678925e-05, -0.1256547, -0.00018045263, -2.880226e-05, -3.7983213e-05, -2.3360508e-06, -6.827632e-08, -0.07013325, -0.010886728, -0.00033832624, -0.00023798255, -0.00038805406, -0.00044333027, -4.966285e-05, -0.0011478824, -1.4616429e-05, -1.8841804e-07, -0.6923497, -0.08191505, -0.0031802736, -0.00029354883, -0.0015612049, -0.0015351742, -0.018406034, -3.559716e-05, -0.00033027542, -0.00034834348, -0.00022433081, -0.006260802, -0.014232558, -0.015600284, -1.7119806e-05, -0.43419454, -3.6195077e-05, -1.5094201e-05, -6.746778e-06, -6.9861335e-06, -1.022884e-06, -0.022071054, -0.00019309061, -0.0028923447, -0.00013133019, -0.000120481265, -9.4729374e-05, -1.8190814e-05, -0.000110942696, -1.7356348e-05, -8.197403e-05, -3.529076e-06, -1.7400124e-06, -0.018508885, -0.00050206826, -0.0041966485, -0.0024580325, -0.216136, -0.0027510978, -2.9996223e-05, -0.00016721859, -6.122609e-05, -7.040798e-05, -0.0013002977, -0.00029223657, -0.00018081025, -0.0025627848, -0.00041935995, -2.2484204e-05, -4.2870764e-05, -0.00024954765, -6.289782e-05, -8.7733215e-06, -1.44972155e-05, -4.751897e-05, -3.5120327e-05, -2.9159892e-05, -1.6207987e-06, -2.5941252e-05, -0.00025729905, -0.00012191365, -5.0778563e-06, -0.84486884, -0.0001536241, -1.2828294e-05, -2.7611111e-05, -5.460492e-07, -1.8073477e-05, -0.0006695977, -0.0003244323, -6.9573514e-05, -0.00012608219, -8.065993e-05, -2.1051823e-05, -0.0022834549, -9.663671e-05, -0.00015648511, -7.398424e-05, -0.018280063, -0.035404757], "top_logprobs": null, "text_offset": [5047, 5047, 5048, 5055, 5056, 5060, 5063, 5065, 5072, 5073, 5077, 5080, 5082, 5091, 5093, 5099, 5100, 5109, 5111, 5120, 5126, 5127, 5130, 5137, 5138, 5142, 5144, 5153, 5154, 5157, 5160, 5162, 5164, 5166, 5167, 5168, 5169, 5172, 5174, 5175, 5176, 5178, 5181, 5184, 5187, 5189, 5191, 5194, 5196, 5198, 5207, 5208, 5211, 5214, 5216, 5219, 5222, 5224, 5227, 5228, 5230, 5231, 5233, 5235, 5237, 5239, 5248, 5249, 5252, 5255, 5257, 5259, 5261, 5263, 5265, 5267, 5276, 5278, 5287, 5293, 5294, 5300, 5302, 5311, 5312, 5315, 5318, 5320, 5322, 5324, 5326, 5328, 5330, 5339, 5340, 5343, 5346, 5348, 5350, 5352, 5354, 5357, 5359, 5365, 5366, 5375, 5377, 5386, 5388, 5397, 5403, 5404, 5410, 5412, 5421, 5422, 5425, 5428, 5430, 5431, 5432, 5434, 5436, 5438, 5440, 5442, 5451, 5452, 5455, 5458, 5460, 5462, 5465, 5468, 5470, 5472, 5473, 5474, 5475, 5477, 5480, 5483, 5486, 5488, 5491, 5494, 5497, 5499, 5501, 5502, 5503, 5504, 5506, 5509, 5512, 5515, 5517, 5519, 5522, 5524, 5526, 5535, 5536, 5539, 5542, 5544, 5547, 5550, 5552, 5555, 5556, 5558, 5559, 5561, 5563, 5566]}, "finish_reason": "stop"}, {"text": "(repeat_transform (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))", "index": 1, "logprobs": {"tokens": ["\n", "(", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", "\n", "(", "repeat", "_", "transform", " (", "transform"], "token_logprobs": [-0.008080281, -0.12314103, -3.8508346, -0.047732864, -0.10297036, -0.04449298, -0.21665974, -0.30687007, -0.14405762, -0.71549535, -0.00012346054, -0.70172083, -0.0030881949, -0.0001783078, -0.0010851074, -5.467149e-05, -1.8841804e-07, -2.1954775, -0.07851017, -0.03565637, -0.0024730903, -0.0045075887, -0.0072948933, -0.002534938, -0.0028169665, -7.6726035e-05, -1.6402679e-05, -2.0941973, -0.16856237, -0.0065276255, -0.0023273039, -0.0025216101, -2.3652804, -0.033851214, -0.0072669755, -0.0065969233, -7.636654e-05, -5.0778563e-06, -0.047418762, -0.041262273, -0.008713627, -0.02147724, -0.0011293235, -0.00019905198, -0.022982134, -0.00038876932, -0.0019390463, -0.0005734527, -0.011342739, -0.034607165, -0.06083212, -0.9459504, -0.00089448155, -0.0024078437, -0.005461781, -0.06776719], "top_logprobs": null, "text_offset": [5047, 5047, 5048, 5054, 5055, 5064, 5066, 5075, 5077, 5086, 5092, 5093, 5099, 5101, 5110, 5111, 5114, 5117, 5119, 5121, 5123, 5125, 5127, 5129, 5138, 5139, 5142, 5145, 5147, 5149, 5151, 5153, 5155, 5157, 5159, 5168, 5169, 5172, 5175, 5177, 5180, 5183, 5185, 5188, 5189, 5191, 5192, 5194, 5196, 5198, 5198, 5198, 5198, 5198, 5198, 5198]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.008080281, -0.12314109, -0.066437535, -0.00027673383, -0.0007633004, -6.9453374e-05, -0.002602942, -0.05024828, -2.7490969e-05, -0.00011726356, -4.048565e-05, -0.0022851867, -0.06728605, -0.023382, -0.24875574, -9.251094e-06, -3.8457234e-05, -0.00071319804, -0.00031560898, -0.05183879, -6.8669196e-06, -0.006544604, -1.9741461e-05, -1.688045e-05, -8.232979e-05, -0.00022659577, -2.1291178e-05, -3.3689823e-05, -4.4818075e-06, -6.827632e-08, -0.0041569658, -0.00032717505, -0.0020139983, -0.00038924522, -1.9263687e-05, -0.0011067076, -0.0013162341, -0.00029676838, -2.4152187e-05, -6.087316e-05, -0.00037636596, -0.0015043133, -0.00050850736, -0.00044094422, -0.51981485, -0.00020024595, -1.3422466e-05, -0.019119106, -3.4048382e-05, -2.6060465e-05, -9.012677e-06, -2.3360508e-06, -2.9756868e-05, -0.00095975155, -0.00038399815, -9.0080226e-05, -0.00047290904, -9.5562886e-05, -2.4866502e-05, -0.0009911916, -0.00011392572, -0.00044953197, -5.598372e-05, -5.7293146e-05, -0.00032252402, -4.0843282e-05, -0.0034252824, -2.4543265e-06, -4.277735e-07, -0.061861224, -4.431381, -0.3352837, -0.0041123745, -0.001413284, -0.0014450394, -0.002518444, -0.0010095066, -0.02423448, -0.11674784, -1.8056452, -4.6206733e-05, -6.361214e-05, -0.0099268695, -0.0013175473, -0.09225047, -1.9980816e-05, -0.019387254, -3.529076e-06, -6.5092986e-06, -2.9280032e-05, -0.00031215005, -2.272356e-05, -2.7013197e-05, -2.4543265e-06, 0, -0.009613459, -0.0017274765, -0.0053093857, -0.0005431577, -5.1334588e-05, -0.0037036184, -0.0029843457, -0.0003168001, -2.9636725e-05, -0.00034190435, -0.0004627707, -0.0017505842, -0.001203857, -0.00027697318, -0.42327854, -0.001527772, -2.1529595e-05, -0.017214121, -0.0004225786, -3.130471e-05, -2.3078366e-05, -4.9782993e-05, -1.5006569e-06, -0.0045300396, -0.0037173787, -0.0002482345, -0.000346913, -0.00013502566, -5.4552278e-05, -0.0009005687, -7.219704e-05, -0.0014533972, -0.00024429872, -0.0024694453, -0.00036480086, -2.4866502e-05, -0.0025889582, -1.9860674e-05, -1.8841804e-07, -1.4216322, -0.24142149, -0.01546129, -0.001070011, -0.014163216, -0.051806524, -0.19447456, -9.508793e-05, -1.1039229e-05, -0.00066255784, -0.0013753822, -0.013015776, -0.030528016, -0.043239582, -1.3422466e-05, -0.3418994, -0.00011630989, -3.0473995e-05, -4.5967376e-05, -3.883893e-06, -1.022884e-06, -3.24225, -0.19695169, -0.021110943, -0.0004885883, -0.0005611666, -0.00023368915, -5.1930627e-05, -0.001254224, -1.2351458e-05, -6.5092986e-06, -0.30403244, -0.041058555, -0.119291335, -0.040182974, -0.44707856, -0.046255905, -0.0007588887, -0.007457618, -9.9142904e-05, -0.0040752077, -0.0009716236, -0.001546102, -0.0019341494, -0.017518515, -0.0009490115, -0.0003137007, -0.00015207719, -0.0011196563, -0.00035466437, -1.6165199e-05, -4.6445148e-05, -5.2288255e-05, -6.718934e-05, -8.864972e-05, -3.170517e-06, -2.8921473e-05, -0.00034476627, -0.0014486223, -5.912312e-06, -0.8773401, -0.00048012446, -2.7611111e-05, -5.2885232e-05, -1.022884e-06, -3.051303e-06, -0.0038100546, -0.00064943644, -0.00025050133, -0.00029521773, -0.000106295425, -2.6419024e-05, -0.004372461, -0.00010772499, -0.00033963655, -7.541475e-05, -0.014028047, -0.021184485, -0.10336052, -0.039301552, -3.4762696e-05, -0.0007440355], "top_logprobs": null, "text_offset": [5047, 5047, 5048, 5055, 5056, 5060, 5063, 5065, 5072, 5073, 5077, 5080, 5082, 5091, 5093, 5099, 5100, 5109, 5111, 5120, 5126, 5127, 5130, 5137, 5138, 5142, 5144, 5153, 5154, 5157, 5160, 5162, 5164, 5166, 5167, 5168, 5169, 5172, 5174, 5175, 5176, 5178, 5181, 5184, 5187, 5189, 5191, 5194, 5196, 5198, 5207, 5208, 5211, 5214, 5216, 5219, 5222, 5224, 5227, 5228, 5230, 5231, 5233, 5235, 5237, 5239, 5248, 5249, 5252, 5255, 5257, 5258, 5260, 5262, 5264, 5266, 5268, 5270, 5279, 5281, 5287, 5288, 5297, 5299, 5308, 5314, 5315, 5318, 5325, 5326, 5330, 5332, 5341, 5342, 5345, 5348, 5350, 5352, 5354, 5355, 5356, 5357, 5360, 5362, 5363, 5364, 5366, 5369, 5372, 5375, 5377, 5379, 5382, 5384, 5386, 5395, 5396, 5399, 5402, 5404, 5407, 5410, 5412, 5415, 5416, 5418, 5419, 5421, 5423, 5425, 5427, 5436, 5437, 5440, 5443, 5445, 5447, 5449, 5451, 5454, 5456, 5462, 5463, 5472, 5474, 5483, 5485, 5494, 5500, 5501, 5507, 5509, 5518, 5519, 5522, 5525, 5527, 5529, 5531, 5533, 5535, 5537, 5546, 5547, 5550, 5553, 5555, 5557, 5560, 5563, 5565, 5567, 5568, 5569, 5570, 5572, 5575, 5578, 5581, 5583, 5586, 5589, 5592, 5594, 5596, 5597, 5598, 5599, 5601, 5604, 5607, 5610, 5612, 5614, 5617, 5619, 5621, 5630, 5631, 5634, 5637, 5639, 5642, 5645, 5647, 5650, 5651, 5653, 5654, 5656, 5658, 5661, 5661, 5661, 5661, 5661]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))))", "\n"], "token_logprobs": [-0.008080281, -0.12314109, -0.06643778, -0.00042651527, -0.00089484104, -7.768064e-05, -0.0021561533, -0.034117978, -2.4986643e-05, -0.00014563711, -4.656436e-05, -0.002106815, -0.089152426, -0.02572622, -0.2524863, -1.2231317e-05, -3.8935006e-05, -0.0008180031, -9.0675334e-05, -0.04916893, -5.197998e-06, -0.004949077, -1.5214344e-05, -1.3542607e-05, -9.377476e-05, -0.00019463846, -1.6999666e-05, -2.2365928e-05, -5.675771e-06, -6.827632e-08, -0.0045439317, -0.00028877953, -0.002033526, -0.0003354652, -2.7490969e-05, -0.0011701388, -0.0011046783, -0.00030273164, -2.558363e-05, -6.408898e-05, -0.00018712736, -0.0014764353, -0.0008195528, -0.00032586468, -0.5309025, -0.0001678165, -1.4974988e-05, -0.017505353, -3.8217877e-05, -3.1185496e-05, -8.7733215e-06, -1.9765537e-06, -1.0444119e-05, -0.0016489058, -0.0005154262, -0.00014683108, -0.0005154262, -0.00011428335, -2.8206221e-05, -0.0012420497, -9.604066e-05, -0.00038745708, -6.551948e-05, -4.751897e-05, -0.00040880483, -3.4167595e-05, -0.0021761653, -2.2159093e-06, -3.076318e-07, -0.07015703, -0.01669985, -0.00021538827, -0.0002358368, -0.0003201408, -0.001011536, -0.018171469, -0.07780683, -0.12546745, -0.052940752, -4.29881e-05, -0.14121915, -8.900641e-05, -4.2392992e-05, -4.6445148e-05, -3.529076e-06, -6.827632e-08, -0.070250064, -0.01284375, -0.0003245515, -0.00014039098, -0.0005015914, -0.0003767255, -4.6684505e-05, -0.00046038558, -8.296486e-06, -4.9586424e-06, -0.68354964, -0.099705584, -0.0022774795, -0.0003230018, -0.0019211895, -0.0015919495, -0.016309973, -3.2140102e-05, -2.9519388e-05, -0.0002801937, -0.0014646788, -0.0075660753, -0.013287787, -0.016538162, -1.6642034e-05, -0.96116203, -2.272356e-05, -1.1991961e-05, -2.28437e-05, -1.6207987e-06, -6.827632e-08, -0.0062200194, -0.00010998996, -0.0018723995, -0.00017413269, -0.00011571198, -9.341901e-05, -3.0473995e-05, -3.2140102e-05, -1.4616429e-05, -5.24084e-05, -2.2159093e-06, -2.2159093e-06, -0.012308908, -0.00049383816, -0.006151768, -0.0022930733, -0.1874161, -0.0026013278, -2.8921473e-05, -0.00017818765, -5.1334588e-05, -7.8634315e-05, -0.0009373178, -0.0003073789, -0.000246804, -0.00238275, -0.0002516953, -2.7611111e-05, -5.4075444e-05, -8.9960085e-05, -5.7177684e-05, -1.0084622e-05, -1.771398e-05, -3.97704e-05, -3.4762696e-05, -3.9055147e-05, -1.9765537e-06, -3.2140102e-05, -0.00018832133, -0.00014146294, -6.2699432e-06, -1.7507298, -5.657977e-05, -1.4377073e-05, -4.838501e-06, -2.28437e-05, -1.306671e-05, -0.0012852577, -0.0002004825, -6.551948e-05, -9.925743e-05, -7.20769e-05, -3.5477948e-05, -0.0009034315, -6.4446605e-05, -0.00022433081, -8.864972e-05, -4.2739067, -0.27563286], "top_logprobs": null, "text_offset": [5047, 5047, 5048, 5055, 5056, 5060, 5063, 5065, 5072, 5073, 5077, 5080, 5082, 5091, 5093, 5099, 5100, 5109, 5111, 5120, 5126, 5127, 5130, 5137, 5138, 5142, 5144, 5153, 5154, 5157, 5160, 5162, 5164, 5166, 5167, 5168, 5169, 5172, 5174, 5175, 5176, 5178, 5181, 5184, 5187, 5189, 5191, 5194, 5196, 5198, 5207, 5208, 5211, 5214, 5216, 5219, 5222, 5224, 5227, 5228, 5230, 5231, 5233, 5235, 5237, 5239, 5248, 5249, 5252, 5255, 5257, 5259, 5261, 5263, 5265, 5267, 5276, 5278, 5287, 5293, 5294, 5300, 5302, 5311, 5312, 5315, 5318, 5320, 5322, 5324, 5326, 5328, 5330, 5339, 5340, 5343, 5346, 5348, 5350, 5352, 5354, 5357, 5359, 5365, 5366, 5375, 5377, 5386, 5388, 5397, 5403, 5404, 5410, 5412, 5421, 5422, 5425, 5428, 5430, 5431, 5432, 5434, 5436, 5438, 5440, 5442, 5451, 5452, 5455, 5458, 5460, 5462, 5465, 5468, 5470, 5472, 5473, 5474, 5475, 5477, 5480, 5483, 5486, 5488, 5491, 5494, 5497, 5499, 5501, 5502, 5503, 5504, 5506, 5509, 5512, 5515, 5517, 5519, 5522, 5524, 5526, 5535, 5536, 5539, 5542, 5544, 5547, 5550, 5552, 5555, 5556, 5558, 5559, 5561, 5563, 5567]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.008080281, -0.123140626, -0.06643778, -0.00042651527, -0.00089484104, -7.768064e-05, -0.0021561533, -0.034117978, -2.045765e-05, -0.00012453248, -3.988961e-05, -0.002041471, -0.075453624, -0.023855945, -1.4993098, -1.2994007, -0.3828596, -0.81114966, -4.883026e-05, -1.9865328, -0.004810658, -0.0012214576, -0.0014812093, -5.7532503e-05, -3.076318e-07, -2.0047853, -0.089724906, -0.019379294, -0.0022323753, -0.004100823, -0.012002112, -0.034949124, -0.013685314, -0.0006317222, -7.8540467e-07, -1.6537849, -0.12202277, -0.029775392, -0.0030401857, -0.014705943, -0.0043660537, -0.007102482, -0.090542905, -5.20489e-05, -4.721163e-06, -0.61209816, -0.09579633, -0.0021507768, -0.0013472096, -0.0012322024, -0.0024012714, -0.037257954, -0.03055057, -0.065624036, -0.45922014, -0.013650508, -0.05111003, -1.2828294e-05, -0.28398967, -0.00049956393, -4.0126153e-05, -5.8845668e-05, -5.4364154e-06, -8.296486e-06, -0.046058282, -0.005731568, -0.0017924424, -0.00015982577, -0.00012846824, -0.00033892225, -3.166233e-05, -0.00016244836, -4.361666e-06, -6.827632e-08, -0.05929045, -0.008376316, -0.00075155037, -9.985534e-05, -0.00020692257, -0.00034929716, -4.6921985e-05, -0.0003054706, -1.6642034e-05, -1.022884e-06, -1.1279882, -0.053795505, -0.0158669, -0.0010721596, -0.022268135, -0.020887248, -1.0737332, -0.06383309, -0.5766178, -0.15353435, -0.10739564, -0.14927268, -1.42597355e-05, -0.5849932, -0.0006248053, -5.3597672e-05, -5.657977e-05, -4.277735e-07, -5.5556293e-06, -0.10486075, -0.0052452725, -0.002504523, -0.0003266982, -8.626461e-05, -0.00047505385, -4.430127e-05, -0.00028102813, -7.224551e-06, -9.055464e-07, -0.10029568, -0.014333711, -0.0009554553, -7.791906e-05, -0.00015863274, -0.0007081875, -0.00014647158, -0.00086113217, -2.9636725e-05, -1.8601542e-06, -1.0135288, -0.24055357, -0.0046273447, -0.002042786, -0.069225214, -0.02329329, -0.052005418, -0.045233075, -0.000113805574, -0.0009624952, -0.0002057305, -0.0019866417, -0.13884176], "top_logprobs": null, "text_offset": [5047, 5047, 5048, 5055, 5056, 5060, 5063, 5065, 5072, 5073, 5077, 5080, 5082, 5091, 5093, 5102, 5104, 5113, 5119, 5120, 5126, 5128, 5137, 5138, 5141, 5144, 5146, 5148, 5150, 5152, 5154, 5156, 5165, 5166, 5169, 5172, 5174, 5176, 5178, 5180, 5182, 5184, 5193, 5194, 5197, 5200, 5202, 5204, 5206, 5208, 5210, 5212, 5221, 5223, 5232, 5234, 5243, 5249, 5250, 5256, 5258, 5267, 5268, 5271, 5274, 5276, 5278, 5280, 5282, 5284, 5286, 5295, 5296, 5299, 5302, 5304, 5306, 5308, 5310, 5312, 5314, 5323, 5324, 5327, 5330, 5332, 5334, 5336, 5338, 5341, 5343, 5352, 5354, 5363, 5365, 5374, 5380, 5381, 5387, 5389, 5398, 5399, 5402, 5405, 5407, 5409, 5411, 5413, 5415, 5417, 5426, 5427, 5430, 5433, 5435, 5437, 5439, 5441, 5443, 5445, 5454, 5455, 5458, 5461, 5463, 5465, 5467, 5469, 5472, 5472, 5472, 5472, 5472, 5472, 5472, 5472]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))))", "\n"], "token_logprobs": [-0.008080281, -0.13352086, -0.057880376, -0.00024906988, -0.0010250206, -5.5385808e-05, -0.0022897269, -0.033051483, -2.4032974e-05, -9.56821e-05, -4.680184e-05, -0.0018023546, -2.5283377, -0.0074287327, -0.0057476936, -9.9735196e-05, -0.012708157, -0.39643428, -0.09974259, -1.1820798, -0.60609275, -7.8514175e-05, -0.23126611, -0.0029534367, -0.0001889155, -0.0009300986, -4.5847235e-05, -3.076318e-07, -0.26348373, -0.008880912, -0.00046897327, -0.0005201964, -0.0013814702, -0.003161859, -0.019655416, -0.00673157, -5.7413286e-05, -3.170517e-06, -0.44300324, -0.12086223, -0.00056379114, -0.00039950278, -0.0015063436, -0.0036427178, -0.11022083, -0.024069494, -2.9573922, -0.00028198276, -0.00048394102, -0.011301865, -0.012616102, -0.16688824, -3.3809963e-05, -0.035173085, -1.7119806e-05, -3.1781543e-05, -0.00016232915, -0.0015270549, -5.5745302e-05, -0.0001492143, -1.402038e-05, -4.277735e-07, -0.011535791, -0.00047809698, -0.011684492, -0.0010784833, -4.2631407e-05, -0.004140025, -0.0030492127, -0.0005529375, -3.237946e-05, -0.00025312486, -0.0008726466, -0.0031502584, -0.0030910643, -0.0047586737, -0.51227254, -0.0015827563, -1.7356348e-05, -0.06513369, -0.00040952102, -4.9427246e-05, -2.8326363e-05, -6.8669196e-06, -1.0084622e-05, -0.0024491877, -0.0015449071, -0.0011269355, -0.0011595789, -0.00012620141, -4.883026e-05, -0.0009424484, -0.00012179443, -0.00097651675, -0.00014539869, -0.38930103, -0.002445782, -0.0023938017, -0.0014757793, -4.5494293e-05, -1.7400124e-06, -1.3589429, -0.1306834, -0.00017699462, -0.00020107947, -0.054040022, -0.007859902, -0.34564045, -0.043147657, -0.29427168, -0.085428804, -1.0561456e-05, -0.17359887, -0.0004823913, -7.517727e-05, -4.5255874e-05, -5.0778563e-06, -5.460492e-07, -0.13192463, -0.01824449, -0.0004605048, -7.6605895e-05, -0.0002519309, -0.00034607758, -7.481963e-05, -0.0003742193, -1.1873685e-05, -7.1062755e-06, -1.2717365, -0.044043526, -0.0021375765, -0.00018009498, -0.018055907, -0.010611391, -0.43248203, -5.467149e-05, -2.8921473e-05, -0.00067687134, -0.009052979, -0.017966576, -0.06981957, -0.020112218, -6.5092986e-06, -0.975538, -3.7148744e-05, -3.4403198e-05, -3.333313e-05, -1.3661821e-05, -6.827632e-08, -0.014954093, -0.00028973413, -0.0019088275, -0.00013633883, -0.00012655997, -9.091469e-05, -5.0022347e-05, -6.38515e-05, -2.6419024e-05, -4.966285e-05, -4.9586424e-06, -1.7400124e-06, -0.007904897, -0.00041315737, -0.010461463, -0.0064618136, -0.5442616, -0.0063610943, -7.4460135e-05, -0.0001693634, -8.697986e-05, -0.0001831916, -0.001405404, -0.0001635231, -0.0008962724, -0.0044968096, -0.00028281534, -4.7875652e-05, -6.396884e-05, -0.00021657941, -7.839496e-05, -8.0580685e-06, -2.033751e-05, -6.373136e-05, -5.8130416e-05, -3.988961e-05, -1.022884e-06, -2.6298881e-05, -0.00012214643, -7.958892e-05, -5.460492e-07, -0.7055375, -9.806815e-05, -1.8073477e-05, -8.5358415e-06, -1.3542607e-05, -1.1873685e-05, -0.0009506823, -0.00038328386, -0.00018593716, -0.00032073495, -0.00013860193, -4.8949474e-05, -0.0007312708, -0.00010283744, -0.00019428364, -5.7770918e-05, -0.651107, -0.074111626], "top_logprobs": null, "text_offset": [5047, 5047, 5048, 5055, 5056, 5060, 5063, 5065, 5072, 5073, 5077, 5080, 5082, 5089, 5090, 5094, 5097, 5099, 5108, 5110, 5119, 5125, 5126, 5132, 5134, 5143, 5144, 5147, 5150, 5152, 5154, 5156, 5158, 5160, 5162, 5171, 5172, 5175, 5178, 5180, 5182, 5184, 5186, 5188, 5190, 5199, 5201, 5207, 5208, 5217, 5219, 5228, 5234, 5235, 5238, 5245, 5246, 5250, 5252, 5261, 5262, 5265, 5268, 5270, 5272, 5274, 5275, 5276, 5277, 5280, 5282, 5283, 5284, 5286, 5289, 5292, 5295, 5297, 5299, 5302, 5304, 5306, 5315, 5316, 5319, 5322, 5324, 5327, 5330, 5332, 5335, 5336, 5338, 5339, 5341, 5343, 5345, 5347, 5356, 5357, 5360, 5363, 5365, 5367, 5369, 5371, 5374, 5376, 5385, 5387, 5396, 5402, 5403, 5409, 5411, 5420, 5421, 5424, 5427, 5429, 5431, 5433, 5435, 5437, 5439, 5448, 5449, 5452, 5455, 5457, 5459, 5461, 5463, 5466, 5468, 5474, 5475, 5484, 5486, 5495, 5497, 5506, 5512, 5513, 5519, 5521, 5530, 5531, 5534, 5537, 5539, 5540, 5541, 5543, 5545, 5547, 5549, 5551, 5560, 5561, 5564, 5567, 5569, 5571, 5574, 5577, 5579, 5581, 5582, 5583, 5584, 5586, 5589, 5592, 5595, 5597, 5600, 5603, 5606, 5608, 5610, 5611, 5612, 5613, 5615, 5618, 5621, 5624, 5626, 5628, 5631, 5633, 5635, 5644, 5645, 5648, 5651, 5653, 5656, 5659, 5661, 5664, 5665, 5667, 5668, 5670, 5672, 5676]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))) (transform_matrix 4 0 0 0))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform_matrix 2 0 0 0))))))))) (transform_matrix 4 0 0 0))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform_matrix 2 0 0 0))))))))) (transform_matrix 2 0 0 0))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform_matrix 2 0 0 0))))))))) (transform_matrix 2 0 0 0))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))))", "))", ")))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))))", "))", ")))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))))", "))", ")))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform"], "token_logprobs": [-0.008080281, -0.13037305, -0.055930167, -0.00029986876, -0.0007837038, -5.490991e-05, -0.0022721027, -0.02949266, -2.1649737e-05, -8.388231e-05, -4.430127e-05, -0.0019772071, -0.074206054, -0.022811802, -1.5214584, -1.2052526, -0.35596135, -1.0361559, -0.3592231, -0.3404328, -0.23835209, -0.22208269, -0.22789992, -0.18238436, -0.23201919, -0.15311304, -0.2013928, -0.13980412, -0.17802063, -0.1294933, -0.13449278, -0.11684184, -0.12272314, -0.108182855, -2.8950982, -0.003239595, -0.008166449, -0.04007179, -0.03971154, -0.24327528, -8.054166e-05, -0.030547803, -2.4986643e-05, -0.00031990238, -0.00017294059, -0.0028318504, -5.7413286e-05, -0.0009685204, -1.5094201e-05, -6.827632e-08, -0.011579507, -0.0011207291, -0.01023291, -0.0013863653, -8.650302e-05, -0.0047130366, -0.006784617, -0.00053337787, -2.2604345e-05, -0.00053385564, -0.00075727707, -0.0024575547, -0.0049033137, -0.0041915607, -1.17909, -0.016224133, -0.00014802223, -0.1544535, -0.0013611156, -3.4287736e-05, -0.00021729656, -3.2140102e-05, -2.2159093e-06, -0.002699639, -0.0023785674, -0.00075298175, -0.0062085637, -0.00022671591, -7.314978e-05, -0.0009774667, -0.00021228698, -0.001170259, -0.00024406594, -1.869985, -0.09698828, -0.04453548, -0.15583415, -0.0005775095, -4.4818075e-06, -0.51150197, -0.024070654, -0.0012111381, -0.0023003009, -0.9716807, -0.014992877, -0.016534949, -0.9190763, -0.021597523, -1.7065792, -0.09491463, -0.1890764, -0.06743984, -0.08044293, -0.06355269, -0.059541505, -0.08736941, -0.08217541, -0.076642856, -0.08796391, -0.08584321, -0.1035704, -0.11497896, -0.099562354, -0.19042751, -0.16014566, -0.52379006, -0.21554615, -0.4372171, -2.8807836, -0.010324022, -1.42597355e-05, -0.9653176, -0.05759123, -0.010294395, -0.01630961, -0.2779744, -2.0410948, -0.1457456, -0.1524786, -0.017702995, -0.107592754, -0.00018093038, -1.6282536e-05, -2.0929258, -0.2807495, -0.0051551587, -0.0037656012, -0.46532887, -0.015868654, -0.024154793, -0.74265546, -0.027480595, -0.15588897, -0.011627384, -0.056723278, -0.004272849, -0.033788633, -0.007360339, -0.03476341, -0.0043221135, -0.028993208, -0.0028776978, -0.02469338, -0.0027527714, -0.027538065, -0.004172645, -0.038144663, -0.009567782, -0.038810056, -0.025199488, -0.077677146, -0.057804212, -0.4287219, -0.08373768, -0.37264937, -0.0007833443, -1.0800813e-05, -0.6147521, -0.036734816, -0.0047817286, -0.0011457329, -0.0029253438, -0.583222, -0.001878372, -0.004700103, -0.0004878777, -0.007127093, -8.578871e-05, -5.197998e-06, -1.9194541, -0.08706933, -0.0035163194, -0.0009778243, -0.106991045, -0.008515654, -0.0058521307, -0.41463983, -0.009802626, -0.076044366, -0.009462658, -0.019689701, -0.0041130343, -0.013329891, -0.00504079, -0.013295882, -0.0038649233, -0.016200626, -0.002057777, -0.012613385, -0.0020564622, -0.017614663, -0.0017249703, -0.014416794, -0.002235244, -0.025127424, -0.0054195896, -0.0341078, -0.013083652, -0.1711357, -0.05839757, -0.18313256, -5.693833e-05, -4.361666e-06, -0.32153812, -0.0167587, -0.0008391809, -0.0005133987, -0.0014526801, -0.022841198, -8.697986e-05, -0.0025125877, -0.00052747375, -0.010397981, -2.200643e-05, -6.6619094e-07, -0.72920203, -0.042207256, -0.003293772, -0.00062110514, -0.023211969, -0.0042595593, -0.009242337, -0.09960879, -0.009652879, -0.031018145, -0.009265437, -0.008725653, -0.003625608, -0.0070368717, -0.006598963, -0.007832523, -0.0043194797, -0.011001102, -0.0037046957, -0.018634215, -0.0017800812, -0.014259345, -0.0014965517, -0.01445477, -0.0015610857, -0.013920823, -0.0023476782, -0.022305313, -0.0075663156, -0.15436016, -0.027932465], "top_logprobs": null, "text_offset": [5047, 5047, 5048, 5055, 5056, 5060, 5063, 5065, 5072, 5073, 5077, 5080, 5082, 5091, 5093, 5102, 5104, 5113, 5115, 5124, 5126, 5135, 5137, 5146, 5148, 5157, 5159, 5168, 5170, 5179, 5181, 5190, 5192, 5201, 5203, 5209, 5210, 5219, 5221, 5230, 5236, 5237, 5240, 5247, 5248, 5252, 5254, 5263, 5264, 5267, 5270, 5272, 5274, 5276, 5277, 5278, 5279, 5282, 5284, 5285, 5286, 5288, 5291, 5294, 5297, 5299, 5301, 5304, 5306, 5308, 5317, 5318, 5321, 5324, 5326, 5329, 5332, 5334, 5337, 5338, 5340, 5341, 5343, 5345, 5348, 5350, 5359, 5360, 5363, 5366, 5368, 5370, 5372, 5374, 5377, 5379, 5388, 5390, 5399, 5401, 5410, 5412, 5421, 5423, 5432, 5434, 5443, 5445, 5454, 5456, 5465, 5467, 5476, 5478, 5487, 5489, 5498, 5500, 5509, 5510, 5513, 5516, 5518, 5520, 5522, 5524, 5528, 5530, 5533, 5535, 5544, 5545, 5548, 5551, 5553, 5555, 5557, 5559, 5562, 5564, 5573, 5575, 5584, 5586, 5595, 5597, 5606, 5608, 5617, 5619, 5628, 5630, 5639, 5641, 5650, 5652, 5661, 5663, 5672, 5674, 5683, 5685, 5694, 5696, 5705, 5706, 5709, 5712, 5714, 5716, 5718, 5720, 5724, 5726, 5729, 5731, 5740, 5741, 5744, 5747, 5749, 5751, 5753, 5755, 5758, 5760, 5769, 5771, 5780, 5782, 5791, 5793, 5802, 5804, 5813, 5815, 5824, 5826, 5835, 5837, 5846, 5848, 5857, 5859, 5868, 5870, 5879, 5881, 5890, 5892, 5901, 5902, 5905, 5908, 5910, 5912, 5914, 5916, 5920, 5922, 5925, 5927, 5936, 5937, 5940, 5943, 5945, 5947, 5949, 5951, 5954, 5956, 5965, 5967, 5976, 5978, 5987, 5989, 5998, 6000, 6009, 6011, 6020, 6022, 6031, 6033, 6042, 6044, 6053, 6055, 6064, 6066, 6075, 6077, 6086, 6088]}, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.008080281, -0.13037305, -0.061520647, -0.00028579836, -0.00046241307, -6.253833e-05, -0.0026667083, -0.028755598, -2.2126573e-05, -0.00012632155, -4.430127e-05, -0.0018246878, -0.077691704, -0.023276513, -1.5254525, -0.48244488, -6.051553e-05, -0.1153969, -0.0016602494, -7.088388e-05, -0.00012620141, -2.1171965e-05, -1.8841804e-07, -2.630834, -0.072078355, -0.019615112, -0.0023320834, -0.006225717, -0.0017315372, -0.00045859648, -0.006859214, -7.350647e-05, -1.8841804e-07, -1.5105486, -0.099431805, -0.005531362, -0.0006026193, -0.007081773, -0.0025028484, -0.052423224, -0.03683808, -2.514004, -0.0002733969, -0.00011034852, -0.0063742893, -0.007307803, -0.16791882, -2.6893982e-05, -0.018619336, -0.000113328744, -3.8217877e-05, -0.000106773194, -0.00086387777, -5.3363005e-05, -0.0001947586, -8.5358415e-06, -9.055464e-07, -0.020131312, -0.0011900119, -0.008606308, -0.0012101826, -2.1889093e-05, -0.0036354188, -0.0030293649, -0.0003632502, -3.130471e-05, -0.00017997579, -0.0007238752, -0.0015945159, -0.002822406, -0.0020848939, -0.67790633, -0.002805192, -3.7743856e-05, -0.09649242, -0.00021192935, -3.2855354e-05, -4.0843282e-05, -4.0040345e-06, -6.1516675e-06, -0.0035907933, -0.0015296832, -0.00049455435, -0.00062623486, -0.00014718683, -4.6921985e-05, -0.00083989615, -0.000111420464, -0.00088314735, -0.0001878445, -0.05164364, -0.0014837184, -4.8949474e-05, -0.001054376, -4.430127e-05, -5.460492e-07, -0.9115708, -0.024836896, -0.0002064448, -0.00015565252, -0.011813551, -0.015052171, -1.2968408, -0.040305838, -0.5022734, -0.11232875, -1.4854846e-05, -0.25034025, -0.00077069976, -0.00011261161, -5.848711e-05, -6.827632e-08, -5.3162735e-06, -1.4330014, -0.056488197, -0.024799438, -0.0013370637, -0.0006902931, -0.00042246125, -9.794894e-05, -0.00071462855, -1.8907942e-05, -1.1430258e-06, -0.56936485, -0.086109795, -0.010285422, -0.00033629782, -0.014546754, -0.020914149, -0.045936715, -0.032064535, -6.909574e-05, -0.0013413618, -0.00016304628, -0.0016004865, -0.124599986], "top_logprobs": null, "text_offset": [5047, 5047, 5048, 5055, 5056, 5060, 5063, 5065, 5072, 5073, 5077, 5080, 5082, 5091, 5093, 5102, 5108, 5109, 5115, 5117, 5126, 5127, 5130, 5133, 5135, 5137, 5139, 5141, 5143, 5145, 5154, 5155, 5158, 5161, 5163, 5165, 5167, 5169, 5171, 5173, 5182, 5184, 5190, 5191, 5200, 5202, 5211, 5217, 5218, 5221, 5228, 5229, 5233, 5235, 5244, 5245, 5248, 5251, 5253, 5255, 5257, 5258, 5259, 5260, 5263, 5265, 5266, 5267, 5269, 5272, 5275, 5278, 5280, 5282, 5285, 5287, 5289, 5298, 5299, 5302, 5305, 5307, 5310, 5313, 5315, 5318, 5319, 5321, 5322, 5324, 5326, 5328, 5330, 5339, 5340, 5343, 5346, 5348, 5350, 5352, 5354, 5357, 5359, 5368, 5370, 5379, 5385, 5386, 5392, 5394, 5403, 5404, 5407, 5410, 5412, 5414, 5416, 5418, 5420, 5422, 5431, 5432, 5435, 5438, 5440, 5442, 5444, 5446, 5449, 5449, 5449, 5449, 5449, 5449, 5449, 5449]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.008080281, -0.1303731, -0.061520647, -0.0002491891, -0.0009584374, -6.3492e-05, -0.0022334512, -0.052540004, -1.8907942e-05, -0.00016244836, -4.7041198e-05, -0.001962336, -0.07440694, -0.024427714, -0.23243985, -8.4157e-06, -3.4048382e-05, -0.00067293557, -0.00016411634, -0.03501758, -4.838501e-06, -0.004984899, -1.5448071e-05, -1.0681599e-05, -0.000108559456, -0.00019249457, -1.6999666e-05, -2.3317722e-05, -3.7684315e-06, -6.827632e-08, -0.0039923214, -0.0002912829, -0.0024909566, -0.00031811238, -2.8206221e-05, -0.0012712333, -0.00082551886, -0.0002555109, -2.045765e-05, -5.9321566e-05, -0.000162209, -0.0014561428, -0.0006775875, -0.00035025176, -1.1106824, -0.0010136855, -1.855031e-05, -0.02651938, -6.599631e-05, -3.559716e-05, -1.4377073e-05, -1.7400124e-06, -4.2433903e-06, -0.001987001, -0.0004869231, -0.00010820183, -0.00031203084, -8.2807564e-05, -3.3928238e-05, -0.000588304, -5.7891062e-05, -0.00035764647, -6.2420055e-05, -2.4866502e-05, -0.00022325605, -4.430127e-05, -0.002146654, -1.1398727e-05, -4.277735e-07, -0.05261715, -0.013871321, -0.00017854528, -9.401318e-05, -0.00014015351, -0.00037755995, -0.012670247, -0.073099636, -0.10650526, -0.04195666, -2.3078366e-05, -0.14657432, -0.00019833862, -3.762558e-05, -3.9172486e-05, -4.838501e-06, 0, -0.0700775, -0.011649516, -0.00022939671, -0.00010963327, -0.00034536046, -0.00026993704, -3.7148744e-05, -0.00048763838, -8.7733215e-06, -5.197998e-06, -0.88422304, -0.13014048, -0.005199136, -0.00061287504, -0.0023535916, -0.001176226, -0.04507992, -4.2631407e-05, -0.00035287626, -0.00054876425, -0.0029301264, -0.011210725, -0.023037268, -0.027005108, -2.9756868e-05, -0.46721038, -8.185389e-05, -2.558363e-05, -9.130952e-06, -2.3360508e-06, -1.3823812e-06, -0.03863552, -0.00040832703, -0.0054876115, -0.00018641399, -0.00014420661, -0.00010784233, -3.4762696e-05, -0.0001015252, -2.2484204e-05, -7.9112084e-05, -5.912312e-06, -2.0966954e-06, -0.018475672, -0.0012120927, -0.0072248294, -0.0056410506, -0.2775034, -0.005631998, -3.8935006e-05, -0.00027721157, -8.5905114e-05, -0.00013371343, -0.0026542188, -0.00025717984, -0.00040320013, -0.0064187995, -0.00039342127, -3.6670972e-05, -5.3597672e-05, -0.00014992956, -6.337372e-05, -1.0204763e-05, -1.9263687e-05, -5.3242864e-05, -4.680184e-05, -3.5001114e-05, -2.4543265e-06, -2.5225998e-05, -0.00026743364, -0.00010784233, -2.8138238e-06, -0.44949478, -7.100402e-05, -1.6165199e-05, -2.141132e-05, -7.8540467e-07, -4.1232483e-06, -0.0005641506, -0.00016268677, -5.657977e-05, -0.000103910315, -6.539934e-05, -3.0473995e-05, -0.0010952523, -0.000100332174, -0.0001722244, -5.598372e-05, -0.01608814, -0.038615696], "top_logprobs": null, "text_offset": [5047, 5047, 5048, 5055, 5056, 5060, 5063, 5065, 5072, 5073, 5077, 5080, 5082, 5091, 5093, 5099, 5100, 5109, 5111, 5120, 5126, 5127, 5130, 5137, 5138, 5142, 5144, 5153, 5154, 5157, 5160, 5162, 5164, 5166, 5167, 5168, 5169, 5172, 5174, 5175, 5176, 5178, 5181, 5184, 5187, 5189, 5191, 5194, 5196, 5198, 5207, 5208, 5211, 5214, 5216, 5219, 5222, 5224, 5227, 5228, 5230, 5231, 5233, 5235, 5237, 5239, 5248, 5249, 5252, 5255, 5257, 5259, 5261, 5263, 5265, 5267, 5276, 5278, 5287, 5293, 5294, 5300, 5302, 5311, 5312, 5315, 5318, 5320, 5322, 5324, 5326, 5328, 5330, 5339, 5340, 5343, 5346, 5348, 5350, 5352, 5354, 5357, 5359, 5365, 5366, 5375, 5377, 5386, 5388, 5397, 5403, 5404, 5410, 5412, 5421, 5422, 5425, 5428, 5430, 5431, 5432, 5434, 5436, 5438, 5440, 5442, 5451, 5452, 5455, 5458, 5460, 5462, 5465, 5468, 5470, 5472, 5473, 5474, 5475, 5477, 5480, 5483, 5486, 5488, 5491, 5494, 5497, 5499, 5501, 5502, 5503, 5504, 5506, 5509, 5512, 5515, 5517, 5519, 5522, 5524, 5526, 5535, 5536, 5539, 5542, 5544, 5547, 5550, 5552, 5555, 5556, 5558, 5559, 5561, 5563, 5566]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.008080281, -0.13037372, -0.061520647, -0.00026540618, -0.00083989615, -7.338913e-05, -0.0024838452, -0.04047322, -2.7490969e-05, -0.00010844024, -5.061746e-05, -0.0021380552, -0.080689274, -0.024708956, -0.24673305, -8.296486e-06, -3.4762696e-05, -0.0007266188, -0.00014515934, -0.05163134, -5.912312e-06, -0.005139342, -1.9860674e-05, -1.5327929e-05, -0.00011964774, -0.0001991712, -1.6045058e-05, -2.0575926e-05, -4.721163e-06, 0, -0.0044526835, -0.00028031383, -0.0024064085, -0.0003794682, -2.2365928e-05, -0.0010142815, -0.0010004373, -0.00040832703, -2.3317722e-05, -6.647409e-05, -0.00029509945, -0.0012058873, -0.0006135903, -0.0005356419, -0.5182741, -0.00020370207, -1.7356348e-05, -0.027995907, -3.0707724e-05, -2.8565719e-05, -9.490449e-06, -1.3823812e-06, -6.1516675e-06, -0.0014347135, -0.00047833633, -0.000159348, -0.00046801867, -0.0001033124, -2.4866502e-05, -0.00068003364, -9.0437854e-05, -0.0004896621, -6.599631e-05, -4.394177e-05, -0.00030869205, -3.249586e-05, -0.0010864197, -1.8601542e-06, -6.6619094e-07, -0.06777918, -0.013256865, -0.00029569364, -0.00023094735, -0.0003024923, -0.00094626687, -0.019457145, -0.084567934, -0.12791835, -0.061194386, -3.201996e-05, -0.17928426, -0.00015231561, -4.573365e-05, -3.2973632e-05, -3.170517e-06, 0, -0.07040194, -0.015780548, -0.00036205718, -0.00028066957, -0.0005407735, -0.000440229, -4.680184e-05, -0.00055007363, -9.130952e-06, -6.827632e-08, -0.6482669, -0.07953175, -0.0043424093, -0.00031882763, -0.0015616817, -0.0015299215, -0.014551471, -3.1901687e-05, -0.0002743515, -0.00041888215, -0.0014884952, -0.0075379075, -0.01168214, -0.019815786, -2.0696069e-05, -0.48047614, -4.1080762e-05, -2.1171965e-05, -5.79217e-06, -5.79217e-06, -1.3823812e-06, -0.01930631, -0.00016995943, -0.003262916, -0.0001304948, -0.000116426294, -0.0001015252, -1.9621319e-05, -0.00012643983, -1.6521892e-05, -5.4552278e-05, -4.0040345e-06, -1.9765537e-06, -0.017817238, -0.00063905964, -0.0037745165, -0.0019723675, -0.20990877, -0.0033118327, -2.7251614e-05, -0.00018438557, -6.4446605e-05, -7.56541e-05, -0.0005685613, -0.0003323639, -0.0002818626, -0.0022746117, -0.00039270602, -2.2365928e-05, -4.5967376e-05, -0.0001740144, -6.432833e-05, -9.966347e-06, -1.6999666e-05, -4.1558535e-05, -3.3928238e-05, -3.7983213e-05, -1.7400124e-06, -2.6893982e-05, -0.0001226242, -0.0001083201, -5.79217e-06, -0.790649, -0.00017472965, -1.44972155e-05, -2.2604345e-05, -4.277735e-07, -1.3185924e-05, -0.0005897354, -0.00026755192, -8.221057e-05, -8.984087e-05, -0.00012655997, -2.272356e-05, -0.002366439, -9.628002e-05, -0.0001866524, -5.956092e-05, -0.016461931, -0.034224737], "top_logprobs": null, "text_offset": [5047, 5047, 5048, 5055, 5056, 5060, 5063, 5065, 5072, 5073, 5077, 5080, 5082, 5091, 5093, 5099, 5100, 5109, 5111, 5120, 5126, 5127, 5130, 5137, 5138, 5142, 5144, 5153, 5154, 5157, 5160, 5162, 5164, 5166, 5167, 5168, 5169, 5172, 5174, 5175, 5176, 5178, 5181, 5184, 5187, 5189, 5191, 5194, 5196, 5198, 5207, 5208, 5211, 5214, 5216, 5219, 5222, 5224, 5227, 5228, 5230, 5231, 5233, 5235, 5237, 5239, 5248, 5249, 5252, 5255, 5257, 5259, 5261, 5263, 5265, 5267, 5276, 5278, 5287, 5293, 5294, 5300, 5302, 5311, 5312, 5315, 5318, 5320, 5322, 5324, 5326, 5328, 5330, 5339, 5340, 5343, 5346, 5348, 5350, 5352, 5354, 5357, 5359, 5365, 5366, 5375, 5377, 5386, 5388, 5397, 5403, 5404, 5410, 5412, 5421, 5422, 5425, 5428, 5430, 5431, 5432, 5434, 5436, 5438, 5440, 5442, 5451, 5452, 5455, 5458, 5460, 5462, 5465, 5468, 5470, 5472, 5473, 5474, 5475, 5477, 5480, 5483, 5486, 5488, 5491, 5494, 5497, 5499, 5501, 5502, 5503, 5504, 5506, 5509, 5512, 5515, 5517, 5519, 5522, 5524, 5526, 5535, 5536, 5539, 5542, 5544, 5547, 5550, 5552, 5555, 5556, 5558, 5559, 5561, 5563, 5566]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LLhlJjxsj3aIAvAtw665jOtpbh6", "object": "text_completion", "created": 1651002077, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.5 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", ".", "5", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.003335635, -0.059623815, -0.08142746, -5.562516e-05, -0.00062671263, -0.00011249522, -0.005804827, -0.61541325, -2.0815281e-05, -0.00019929133, -5.2885232e-05, -0.0029283315, -0.06545099, -0.020142019, -0.79874927, -1.2112103e-05, -5.5385808e-05, -0.00074713683, -0.00028424585, -0.04734658, -7.937927e-06, -0.013735046, -1.4377073e-05, -2.0696069e-05, -0.00017568239, -0.00021967979, -3.583558e-05, -2.319758e-05, -3.2906587e-06, 0, -0.011421834, -0.0008070274, -0.012311382, -0.0006214646, -2.7967804e-05, -0.0017192371, -0.0009369583, -0.00036515848, -3.201996e-05, -0.0001526695, -0.0004034395, -0.0027151783, -0.0014401444, -0.0015427576, -0.44752195, -0.00019249457, -1.3185924e-05, -0.024484271, -6.158372e-05, -2.9756868e-05, -9.130952e-06, -2.3360508e-06, -9.21049e-05, -0.00482635, -0.0016249054, -0.00019988645, -0.0003239564, -0.0001418215, -3.8577375e-05, -0.00093296246, -0.000107247215, -0.00032920254, -6.9690854e-05, -3.4642555e-05, -0.00045752362, -9.794894e-05, -0.003934033, -6.5092986e-06, -1.1159372e-05, -0.6213711, -0.107587114, -0.0008033263, -0.00030284992, -0.00015004877, -0.0013294241, -0.04081272, -0.09225641, -0.74389684, -0.12376116, -4.0040345e-06, -0.048673753, -0.00013681567, -2.582111e-05, -1.771398e-05, -4.838501e-06, -4.277735e-07, -0.1911384, -0.018852549, -0.00015386345, -0.0001010493, -0.0009022376, -0.00019309061, -3.8103353e-05, -8.948419e-05, -1.8190814e-05, -4.0040345e-06, -0.6904727, -1.8327689, -2.3333604, -0.0024281582, -0.0012913458, -0.0006692382, -0.004464061, -0.007084473, -0.5152873, -0.6442359, -1.8668587e-05, -0.041259047, -0.00073055556, -5.669991e-05, -0.0002085915, -1.1753544e-05, -3.6482897e-06, -0.5235566, -0.0025473074, -0.03754964, -0.0010223971, -0.0002060853, -0.00018700723, -0.0076540024, -0.019840773, -0.052839577], "top_logprobs": null, "text_offset": [4253, 4253, 4254, 4261, 4262, 4266, 4269, 4271, 4278, 4279, 4283, 4286, 4288, 4297, 4299, 4305, 4306, 4315, 4317, 4326, 4332, 4333, 4336, 4343, 4344, 4348, 4350, 4359, 4360, 4363, 4366, 4368, 4370, 4372, 4373, 4374, 4375, 4378, 4380, 4381, 4382, 4384, 4387, 4390, 4393, 4395, 4397, 4400, 4402, 4404, 4413, 4414, 4417, 4420, 4422, 4425, 4428, 4430, 4433, 4434, 4436, 4437, 4439, 4441, 4443, 4445, 4454, 4455, 4458, 4461, 4463, 4465, 4467, 4469, 4471, 4473, 4482, 4484, 4493, 4499, 4500, 4506, 4508, 4517, 4518, 4521, 4524, 4526, 4528, 4530, 4532, 4534, 4536, 4545, 4546, 4549, 4552, 4554, 4555, 4556, 4558, 4560, 4562, 4565, 4567, 4576, 4582, 4583, 4589, 4591, 4600, 4601, 4604, 4607, 4609, 4610, 4611, 4613, 4615, 4617, 4620, 4620]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform short_vertical_line (transform_matrix 1 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " short", "_", "vert", "ical", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.003335635, -0.05740789, -0.091772564, -5.490991e-05, -0.0004386802, -0.00018116974, -0.005195001, -0.8060241, -4.534694, -0.0005062424, -1.418171, -0.0008817149, -0.012065994, -0.029000266, -0.03104391, -0.01513047, -0.012789474, -0.00021383668, -7.8540467e-07, -0.60395485, -0.100529164, -0.36938307, -0.56875336, -0.22840387, -0.019444503, -0.4009021, -1.4364866, -8.566857e-05, -0.51690483, -0.0041251825, -0.0009160169, -0.00039974027, -1.402038e-05, -4.0040345e-06, -1.069036, -0.031994812, -0.004445559, -0.0005558004, -0.021933902, -0.02249098, -0.036343098, -0.04989528], "top_logprobs": null, "text_offset": [4253, 4253, 4254, 4261, 4262, 4266, 4269, 4271, 4280, 4286, 4287, 4291, 4295, 4296, 4300, 4302, 4311, 4312, 4315, 4318, 4320, 4322, 4324, 4326, 4328, 4330, 4339, 4345, 4346, 4352, 4354, 4363, 4364, 4367, 4370, 4372, 4374, 4376, 4378, 4381, 4381, 4381]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform small_circle (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.003335635, -0.0598199, -0.08816922, -4.2392992e-05, -0.0007837038, -0.00012715602, -0.0052314913, -0.5914322, -2.1171965e-05, -0.0002853206, -4.3586017e-05, -0.0035527474, -0.075843595, -4.3623395, -0.00022719182, -0.40127665, -0.02509014, -0.0110993385, -0.003011786, -5.562516e-05, -1.8841804e-07, -1.1534611, -0.016416427, -0.001518104, -0.0015689667, -0.00038244936, -0.022807412, -0.13433236, -0.8464219, -2.2604345e-05, -0.23603942, -0.001456978, -3.965026e-05, -0.00010748563, -7.818713e-06, -9.012677e-06, -1.0252347, -0.01853554, -0.0112131955, -0.00024417858, -0.0032032365, -0.013660538, -0.34748372, -0.00034655444, -7.314978e-05, -0.0035872043, -0.012186903, -0.2721883, -0.015125693, -0.07718098, -6.2699432e-06, -0.20775247, -8.459475e-05, -3.058758e-05, -1.8788729e-05, -1.402038e-05, -1.3823812e-06, -0.06187657, -0.00030237212, -0.0064494554, -0.00014265596, -0.00012203379, -9.687513e-05, -3.8935006e-05, -0.00012560723, -4.7279616e-05, -6.6593304e-05, -7.584048e-06, -6.827632e-08, -0.010412616, -0.0008183607, -0.006859569, -0.0027432693, -0.4923179, -0.019997159, -0.00012930272, -0.002388425, -0.00011762026, -0.00034392995, -0.0011697821, -0.0030188998, -0.0017532724, -0.02751215, -0.00033904242, -9.663671e-05, -0.00010045139, -0.00047797684, -0.00015100244, -1.0444119e-05, -7.636654e-05, -7.768064e-05, -8.578871e-05, -8.185389e-05, -6.5092986e-06, -3.8457234e-05, -0.00040284157, -3.8217877e-05, -4.2433903e-06, -0.24253778, -0.00025038118, -2.5225998e-05, -1.8073477e-05, -3.2906587e-06, -2.5744682e-06, -0.0032819922, -0.0006108457, -0.0001614947, -0.00026278265, -0.00010688772, -3.5120327e-05, -0.0009195979, -0.00015565252, -0.00025038118, -5.503005e-05, -0.010477846, -0.031828105, -0.07433066, -0.093719386, -9.854499e-05, -0.0010395199, -0.00015350676, -0.03507252], "top_logprobs": null, "text_offset": [4253, 4253, 4254, 4261, 4262, 4266, 4269, 4271, 4278, 4279, 4283, 4286, 4288, 4297, 4303, 4304, 4310, 4312, 4321, 4322, 4325, 4328, 4330, 4332, 4334, 4336, 4338, 4340, 4349, 4355, 4356, 4362, 4364, 4373, 4374, 4377, 4380, 4382, 4384, 4386, 4388, 4391, 4393, 4399, 4400, 4409, 4411, 4420, 4422, 4431, 4437, 4438, 4444, 4446, 4455, 4456, 4459, 4462, 4464, 4465, 4466, 4468, 4470, 4472, 4474, 4476, 4485, 4486, 4489, 4492, 4494, 4496, 4499, 4502, 4504, 4506, 4507, 4508, 4509, 4511, 4514, 4517, 4520, 4522, 4525, 4528, 4531, 4533, 4535, 4536, 4537, 4538, 4540, 4543, 4546, 4549, 4551, 4553, 4556, 4558, 4560, 4569, 4570, 4573, 4576, 4578, 4581, 4584, 4586, 4589, 4590, 4592, 4593, 4595, 4597, 4600, 4600, 4600, 4600, 4600, 4600, 4600]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.003335635, -0.0598199, -0.08816922, -4.2392992e-05, -0.0007837038, -0.00019273112, -0.0067292894, -0.81505483, -0.07991667, -0.4602275, -0.56790024, -2.3675353e-05, -0.09864524, -0.001035344, -6.4921565e-05, -4.477904e-05, -1.3306066e-05, -2.0966954e-06, -0.28981176, -0.013044398, -0.00028555995, -0.00018867897, -0.000102479804, -0.0011255041, -0.00024859305, -0.0016355912, -1.855031e-05, -7.4639065e-06, -0.4134918, -0.009646861, -0.00041279974, -7.4104384e-05, -0.00036134195, -0.0090636825, -0.5754824, -1.2860632, -5.157113e-05, -0.09247253, -0.002700236, -0.005536338, -0.00011928824, -5.3837026e-05, -5.1810483e-05, -0.8606317, -0.01411854, -0.019200522, -0.00044941274, -0.029016158, -0.032985136, -0.06375145], "top_logprobs": null, "text_offset": [4253, 4253, 4254, 4261, 4262, 4266, 4269, 4271, 4280, 4282, 4291, 4297, 4298, 4304, 4306, 4315, 4316, 4319, 4322, 4324, 4326, 4328, 4330, 4332, 4334, 4343, 4344, 4347, 4350, 4352, 4354, 4356, 4358, 4360, 4362, 4371, 4377, 4378, 4384, 4386, 4395, 4396, 4399, 4402, 4404, 4406, 4408, 4410, 4413, 4413]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 3 1.5) (cos (/ pi 4))) (* (* 3 1.5) (sin (/ pi 4))))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 3", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 3", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.003335635, -0.059819832, -0.08816922, -4.954739e-05, -0.00073115254, -0.00014063035, -0.0049351207, -0.75412524, -0.06973655, -0.42374045, -0.60374373, -2.2958224e-05, -0.09379487, -0.0011311135, -6.551948e-05, -3.678925e-05, -2.0575926e-05, -3.4089344e-06, -2.8348377, -0.021048972, -0.1098896, -0.0057069296, -0.0007313909, -0.00025336328, -0.00068480574, -0.00087658426, -0.00015827699, -0.0021980274, -1.3900239e-05, -1.2828294e-05, -0.5677327, -0.011544291, -0.19508001, -0.03606338, -3.827621, -0.12731831, -0.016920792, -0.015272203, -0.00050266617, -0.003941395, -0.011916633, -0.00833208, -0.008035877, -0.16834974, -0.004265006, -0.00057965715, -0.0005118471, -0.010481761, -0.00054387294, -3.8103353e-05, -0.00010367096, -0.00012322118, -0.00011475737, -0.00052973966, -0.00010665305, -8.9960085e-05, -0.001425401, -0.0012156146, -2.5703772e-05, -0.33635813, -0.9569638, -0.0002866319, -7.028876e-05, -0.0024689678, -0.011660492, -0.051701944, -0.042040203, -0.08087886, -1.0204763e-05, -0.55407965, -7.314978e-05, -3.583558e-05, -1.5327929e-05, -1.7356348e-05, -7.698572e-06, -0.1299754, -0.00067365076, -0.0256351, -0.00024406594, -0.00010319318, -6.13453e-05, -5.1930627e-05, -0.00011070334, -3.166233e-05, -4.4181128e-05, -6.031526e-06, -4.361666e-06, -0.021664826, -0.0007499988, -0.008591639, -0.0033289366, -0.48905268, -0.013463515, -0.00011273176, -0.00095855753, -8.900641e-05, -0.00049264514, -0.0010053325, -0.0025846555, -0.0005105368, -0.00951501, -0.0002840093, -9.425254e-05, -6.277768e-05, -0.0008484867, -0.00024835463, -2.1889093e-05, -4.406191e-05, -0.00015016893, -0.000113566224, -7.732115e-05, -6.6294406e-06, -8.2927705e-05, -0.0002351206, -3.953198e-05, -3.7684315e-06, -0.5043402, -0.00035299265, -5.1930627e-05, -1.843017e-05, -1.7400124e-06, -2.8138238e-06, -0.0057717925, -0.0010006767, -0.00031119544, -0.0009996048, -0.00010450542, -2.9041616e-05, -0.0010814683, -0.00015708302, -0.00020334445, -6.802381e-05, -0.017460044, -0.026780091, -0.055997107, -0.09039727, -2.6773841e-05, -0.0007691482], "top_logprobs": null, "text_offset": [4253, 4253, 4254, 4261, 4262, 4266, 4269, 4271, 4280, 4282, 4291, 4297, 4298, 4304, 4306, 4315, 4316, 4319, 4322, 4324, 4325, 4326, 4328, 4330, 4332, 4334, 4336, 4345, 4346, 4349, 4352, 4354, 4356, 4359, 4362, 4364, 4366, 4367, 4368, 4369, 4371, 4374, 4377, 4380, 4382, 4385, 4388, 4391, 4393, 4395, 4396, 4397, 4398, 4400, 4403, 4406, 4409, 4411, 4413, 4416, 4418, 4424, 4425, 4434, 4436, 4445, 4447, 4456, 4462, 4463, 4469, 4471, 4480, 4481, 4484, 4487, 4489, 4490, 4491, 4493, 4495, 4497, 4499, 4501, 4510, 4511, 4514, 4517, 4519, 4521, 4524, 4527, 4529, 4531, 4532, 4533, 4534, 4536, 4539, 4542, 4545, 4547, 4550, 4553, 4556, 4558, 4560, 4561, 4562, 4563, 4565, 4568, 4571, 4574, 4576, 4578, 4581, 4583, 4585, 4594, 4595, 4598, 4601, 4603, 4606, 4609, 4611, 4614, 4615, 4617, 4618, 4620, 4622, 4625, 4625, 4625, 4625, 4625]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.003335635, -0.059819706, -0.08816922, -6.194322e-05, -0.00066780584, -0.0001290643, -0.0050546895, -0.84580994, -0.08549905, -0.45387435, -1.1845353, -0.34743765, -0.66088605, -1.9503042e-05, -0.21199806, -0.0019207117, -6.2299914e-05, -0.00013216372, -2.2484204e-05, -5.5556293e-06, -0.47691625, -0.01026332, -0.00032073495, -0.00017651686, -0.0002948601, -0.002052759, -0.003977118, -0.0024567184, -4.9187893e-05, -1.5448071e-05, -1.0227635, -0.12020556, -0.0064793304, -0.00023655016, -0.0012615643, -0.0018058782, -0.0046530915, -0.058655605, -0.00012191365, -1.2622395e-06, -0.93156177, -0.018519327, -0.0039465996, -0.00030416306, -0.0018169844, -0.008542164, -0.10723122, -0.6137666, -1.2112103e-05, -0.047891174, -0.0005524597, -2.9519388e-05, -7.1719274e-05, -1.8601542e-06, -4.4818075e-06, -0.7245788, -0.0062373537, -0.0030285267, -6.3492e-05, -0.010642415, -0.022544017, -0.042785026, -0.04772899, -4.072407e-05, -0.0011867904, -8.268835e-05], "top_logprobs": null, "text_offset": [4253, 4253, 4254, 4261, 4262, 4266, 4269, 4271, 4280, 4282, 4291, 4293, 4302, 4308, 4309, 4315, 4317, 4326, 4327, 4330, 4333, 4335, 4337, 4339, 4341, 4343, 4345, 4354, 4355, 4358, 4361, 4363, 4365, 4367, 4369, 4371, 4373, 4382, 4383, 4386, 4389, 4391, 4393, 4395, 4397, 4399, 4401, 4410, 4416, 4417, 4423, 4425, 4434, 4435, 4438, 4441, 4443, 4445, 4447, 4449, 4452, 4452, 4452, 4452, 4452, 4452]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.003335635, -0.05981958, -0.08816935, -6.194322e-05, -0.00044154216, -0.00010486492, -0.005179183, -0.78737575, -0.08304665, -0.41654077, -0.6278118, -2.3912831e-05, -2.5764792, -0.0026694585, -9.56821e-05, -7.827482e-05, -2.4986643e-05, -5.4364154e-06, -1.5344553, -0.045995746, -0.00073413085, -0.00019821846, -0.0015363101, -0.0014140002, -0.0002419183, -0.0025059534, -2.5344274e-05, -6.746778e-06, -1.6543903, -0.04444587, -0.29167116, -0.015003525, -0.0050463616, -0.01206292, -0.4048818, -0.6681409, -0.18036224, -0.14098105, -1.0084622e-05, -0.5929756, -0.0005849042, -2.7611111e-05, -1.3185924e-05, -1.2708151e-05, -3.883893e-06, -0.7220786, -0.036183763, -0.0006225366, -8.268835e-05, -0.0006518225, -0.00029223657, -5.0500123e-05, -0.000117978816, -1.0084622e-05, -3.076318e-07, -0.5500254, -0.021274226, -0.05941771, -0.0037249771, -0.01610607, -0.02684254, -0.050028183, -0.070793524, -6.337372e-05, -0.0007633004, -0.00020274745], "top_logprobs": null, "text_offset": [4253, 4253, 4254, 4261, 4262, 4266, 4269, 4271, 4280, 4282, 4291, 4297, 4298, 4304, 4306, 4315, 4316, 4319, 4322, 4324, 4326, 4328, 4330, 4332, 4334, 4343, 4344, 4347, 4350, 4352, 4354, 4356, 4358, 4360, 4362, 4371, 4373, 4382, 4388, 4389, 4395, 4397, 4406, 4407, 4410, 4413, 4415, 4417, 4419, 4421, 4423, 4425, 4434, 4435, 4438, 4441, 4443, 4445, 4447, 4449, 4452, 4452, 4452, 4452, 4452, 4452]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", "))))", "\n", "(", "connect", "_"], "token_logprobs": [-0.003335635, -0.058600303, -0.08130865, -5.0140625e-05, -0.00094232924, -0.0001177404, -0.0058583063, -0.8474625, -0.07426595, -0.4598126, -0.5687631, -2.6538237e-05, -0.10447769, -0.0009485337, -7.350647e-05, -3.559716e-05, -2.1649737e-05, -1.7400124e-06, -0.25285265, -0.009414764, -0.00028078974, -9.222505e-05, -0.00011058788, -0.00089961407, -0.00023249895, -0.0013449409, -1.8190814e-05, -1.0204763e-05, -0.41221082, -0.009114509, -0.0009226992, -0.00013347782, -0.00033832624, -0.0059963306, -0.52738, -0.36018518, -0.31548405, -0.22845718, -1.3306066e-05, -0.8551738, -0.001170855, -9.949678e-05, -2.9636725e-05, -2.5941252e-05, -2.8138238e-06, -0.61475843, -0.0024727327, -0.019747147, -0.00044642974, -0.00013943638, -8.173468e-05, -0.00056367373, -0.00073437026, -0.0012633571, -0.0010712041, -1.6282536e-05, -3.076318e-07, -0.24857436, -0.006575502, -0.15252733, -0.020131072, -0.710767, -0.056197267, -0.00048823532, -0.0037784642, -0.00023309403, -0.006325942, -0.0047273496, -0.009402007, -0.0036113104, -0.039318413, -0.00027923906, -0.00036205718, -9.592052e-05, -0.002106815, -0.0003039237, -2.0966954e-06, -0.00019654672, -0.000100094694, -0.0001418215, -0.00012250594, -3.2140102e-05, -5.9085025e-05, -0.0006674501, -0.13345028, -0.5306609, -0.030947754, -0.054366603, -0.06652334, -5.0022347e-05], "top_logprobs": null, "text_offset": [4253, 4253, 4254, 4261, 4262, 4266, 4269, 4271, 4280, 4282, 4291, 4297, 4298, 4304, 4306, 4315, 4316, 4319, 4322, 4324, 4326, 4328, 4330, 4332, 4334, 4343, 4344, 4347, 4350, 4352, 4354, 4356, 4358, 4360, 4362, 4371, 4373, 4382, 4388, 4389, 4395, 4397, 4406, 4407, 4410, 4413, 4415, 4416, 4417, 4419, 4421, 4423, 4425, 4427, 4436, 4437, 4440, 4443, 4445, 4447, 4450, 4453, 4455, 4457, 4458, 4459, 4460, 4462, 4465, 4468, 4471, 4473, 4476, 4479, 4482, 4484, 4486, 4487, 4488, 4489, 4491, 4494, 4497, 4500, 4502, 4504, 4508, 4508, 4508, 4508]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "repeat", "_", "transform", " (", "transform"], "token_logprobs": [-0.003335635, -0.061650664, -0.08359485, -4.9782993e-05, -0.00041256036, -0.0001740144, -0.0045340513, -0.81074166, -0.073846176, -0.4444394, -0.6272043, -2.3795494e-05, -0.11221359, -0.0010485902, -7.052812e-05, -5.0500123e-05, -1.9860674e-05, -1.6207987e-06, -0.2500274, -0.011729661, -0.00025717984, -0.00017496901, -0.000120839824, -0.00079253275, -0.0002775683, -0.0018608755, -2.558363e-05, -1.0800813e-05, -0.41544867, -0.0094276415, -0.00044798222, -0.0001375281, -0.0003214502, -0.0072099403, -1.2190143, -0.00054160797, -0.00077702344, -0.0026482414, -0.008668353, -0.05914234, -0.02061407, -0.07647787, -6.746778e-06, -0.36631912, -9.592052e-05, -4.2511267e-05, -1.5925843e-05, -1.5925843e-05, -7.8540467e-07, -0.11180403, -0.0006350028, -0.0098155625, -0.00018474413, -0.00010259808, -5.562516e-05, -2.9280032e-05, -6.4446605e-05, -3.8103353e-05, -6.38515e-05, -1.1159372e-05, -3.2906587e-06, -0.022185192, -0.0008477705, -0.013003397, -0.003572608, -1.0403723, -0.007034771, -0.000111657944, -0.0008670992, -0.00013776746, -0.0001754468, -0.0010494256, -0.00084645924, -0.002306037, -0.011290413, -0.0003152495, -5.216904e-05, -0.00012214643, -0.00017937786, -6.9810994e-05, -6.6294406e-06, -5.4194657e-05, -4.5494293e-05, -4.811501e-05, -4.7399757e-05, -3.883893e-06, -4.036551e-05, -0.00020942597, -0.00012989782, -1.9765537e-06, -0.94620174, -0.00011320953, -3.3093773e-05, -2.5105857e-05, -2.9311614e-06, -6.6294406e-06, -0.0042781755, -0.00088553247, -0.00026791144, -0.00021503064, -0.00013216372, -3.3809963e-05, -0.0011836262, -0.00024417858, -0.00012167429, -5.2765092e-05, -0.028025698, -0.025225893, -0.05056034, -3.529356, -0.013432342, -0.020279292, -0.01525574, -0.159733], "top_logprobs": null, "text_offset": [4253, 4253, 4254, 4261, 4262, 4266, 4269, 4271, 4280, 4282, 4291, 4297, 4298, 4304, 4306, 4315, 4316, 4319, 4322, 4324, 4326, 4328, 4330, 4332, 4334, 4343, 4344, 4347, 4350, 4352, 4354, 4356, 4358, 4360, 4362, 4368, 4369, 4378, 4380, 4389, 4391, 4400, 4406, 4407, 4413, 4415, 4424, 4425, 4428, 4431, 4433, 4434, 4435, 4437, 4439, 4441, 4443, 4445, 4454, 4455, 4458, 4461, 4463, 4465, 4468, 4471, 4473, 4475, 4476, 4477, 4478, 4480, 4483, 4486, 4489, 4491, 4494, 4497, 4500, 4502, 4504, 4505, 4506, 4507, 4509, 4512, 4515, 4518, 4520, 4522, 4525, 4527, 4529, 4538, 4539, 4542, 4545, 4547, 4550, 4553, 4555, 4558, 4559, 4561, 4562, 4564, 4566, 4569, 4569, 4569, 4569, 4569, 4569, 4569]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix"], "token_logprobs": [-0.003335635, -0.061650664, -0.083595365, -4.9782993e-05, -0.00041256036, -0.0001740144, -0.0045340513, -0.6182521, -1.855031e-05, -0.00018271852, -4.0246297e-05, -0.0025524446, -2.8022983, -9.5562886e-05, -0.000632796, -0.00027029653, -0.0048163477, -0.17162561, -0.039176516, -0.8443589, -6.337372e-05, -6.396884e-05, -0.0026208102, -0.0045711165, -0.097972244, -1.1398727e-05, -0.014410142, -1.2231317e-05, -3.0947078e-05, -0.000102240454, -0.00072960096, -3.655083e-05, -8.137612e-05, -4.2433903e-06, 0, -0.019035935, -0.0008880386, -0.013043674, -0.00091434905, -5.4194657e-05, -0.0032065855, -0.0014510092, -0.0003591943, -2.5344274e-05, -0.00018867897, -0.0006864756, -0.0029560686, -0.0022326147, -0.009598114, -0.49262142, -0.0003024923, -4.6684505e-05, -0.054638896, -0.0002170572, -2.8445576e-05, -2.045765e-05, -8.4157e-06, -8.5358415e-06, -0.0045433315, -0.002873812, -0.0003288449, -0.0010553306, -0.00025956213, -4.7279616e-05, -0.0007329379, -0.00012787033, -0.00075655995, -0.0001736549, -0.00019487782, -0.0015779806, -0.004747654, -0.010243508, -3.8338017e-05, -5.460492e-07, -0.63819414, -0.063202456, -0.0010547355, -0.00033617954, -0.0006674501, -0.0016583382, -0.06511785, -0.07080984, -0.27372494, -1.7400124e-06, -8.423619e-05, -0.00032240388, -2.7013197e-05, -0.0073686256, -2.5744682e-06, -0.0003222875, -1.7400124e-06, -3.170517e-06, -2.5744682e-06, -3.4287736e-05, -7.584048e-06, -1.5094201e-05, -5.0778563e-06, -6.827632e-08, -0.00086399604, -3.3093773e-05, -0.00063005235, -0.00013872207, -3.6074933e-05, -0.00020334445, -0.00021097568, -5.24084e-05, -2.28437e-05, -3.249586e-05, -0.000100094694, -0.00032431216, -0.00013252322, -0.00027923906, -0.083879896, -0.000106533844, -2.3912831e-05, -0.0053567276, -1.3422466e-05, -1.1398727e-05, -1.0800813e-05, -1.5327929e-05, -1.3823812e-06, -0.0007071137, -0.00022951684, -0.0001233404, -5.169127e-05, -7.005035e-05, -5.109523e-05, -0.00044762366, -6.6829845e-05, -0.00025062053, -3.357061e-05, -0.0040220045, -0.0002064448, -3.6670972e-05, -0.00019619097, -9.490449e-06, -3.076318e-07, -0.12677611, -0.0944071, -0.037163302, -0.0006780653, -8.3165185e-05, -0.00026182804, -0.0052504847, -0.008316333, -0.1102185, -0.6411076, -3.3015249, -0.00060106686, -0.0017495104, -0.00043056931, -0.06339582, -0.06979669, -0.124622606, -0.5374641, -2.7490969e-05, -7.124244e-05, -0.0012878841, -0.00024704146, -0.038952585, -4.4818075e-06, -0.006181395, -8.876706e-05, -8.176345e-06, -1.8668587e-05, -0.00014146294, -2.0575926e-05, -1.7475562e-05, -2.8138238e-06, -6.827632e-08, -0.0037635071, -0.00021872611, -0.00168013, -0.00019809927, -2.6180607e-05, -0.0008151402, -0.0011378567, -0.00019487782, -1.5567284e-05, -0.00010188283, -0.00013133019, -0.00069983635, -0.00063112524, -0.00038960468, -0.45416868, -0.00026588395, -3.01145e-05, -0.03883453, -3.869565e-05, -1.9621319e-05, -6.031526e-06, -1.8841804e-07, -3.2906587e-06, -0.0005630759, -0.0003625331, -0.00015410187, -0.00020131696, -8.495144e-05, -4.573365e-05, -0.00041387448, -0.00010534082, -0.00020703992, -5.2525735e-05, -0.00015374424, -0.0002925942, -3.8338017e-05, -8.697986e-05, -4.2433903e-06, -4.277735e-07, -0.15990378, -0.023513738, -9.198663e-05, -4.763911e-05, -0.00043032994, -0.0014211029, -0.013817714, -0.088166095, -0.10962034, -1.5006569e-06, -7.505805e-05, -0.00020203409, -4.179789e-05, -0.0030664313, -1.3823812e-06, -1.1991961e-05, -6.827632e-08, -4.361666e-06, -3.6482897e-06, -2.8087945e-05, -8.7733215e-06, -1.2828294e-05, -1.8841804e-07, -6.827632e-08, -0.0004057045, -3.5357807e-05, -0.000254913, -9.4849514e-05, -1.4616429e-05, -8.149626e-05, -7.982734e-05, -4.29881e-05, -8.176345e-06, -2.9996223e-05, -0.00010665305, -6.289782e-05, -6.146545e-05, -6.4921565e-05, -0.028125376, -0.00013502566, -1.2468796e-05, -0.0011295627, -1.2351458e-05, -8.892534e-06, -9.606849e-06, -3.01145e-05, 0], "top_logprobs": null, "text_offset": [4253, 4253, 4254, 4261, 4262, 4266, 4269, 4271, 4278, 4279, 4283, 4286, 4288, 4295, 4296, 4300, 4303, 4305, 4314, 4316, 4322, 4323, 4332, 4334, 4343, 4349, 4350, 4353, 4360, 4361, 4365, 4367, 4376, 4377, 4380, 4383, 4385, 4387, 4389, 4390, 4391, 4392, 4395, 4397, 4398, 4399, 4401, 4404, 4407, 4410, 4412, 4414, 4417, 4419, 4421, 4430, 4431, 4434, 4437, 4439, 4442, 4445, 4447, 4450, 4451, 4453, 4454, 4456, 4458, 4460, 4462, 4471, 4472, 4475, 4478, 4480, 4482, 4484, 4486, 4488, 4490, 4499, 4501, 4507, 4508, 4517, 4519, 4528, 4534, 4535, 4538, 4545, 4546, 4550, 4552, 4561, 4562, 4565, 4568, 4570, 4572, 4574, 4575, 4576, 4577, 4580, 4582, 4583, 4584, 4586, 4589, 4592, 4595, 4597, 4599, 4602, 4604, 4606, 4615, 4616, 4619, 4622, 4624, 4627, 4630, 4632, 4635, 4636, 4638, 4639, 4641, 4643, 4645, 4647, 4656, 4657, 4660, 4663, 4665, 4666, 4668, 4670, 4672, 4674, 4677, 4679, 4688, 4690, 4697, 4698, 4702, 4705, 4707, 4716, 4718, 4724, 4725, 4734, 4736, 4745, 4751, 4752, 4755, 4762, 4763, 4767, 4769, 4778, 4779, 4782, 4785, 4787, 4789, 4791, 4792, 4793, 4794, 4797, 4799, 4800, 4801, 4803, 4806, 4809, 4812, 4814, 4816, 4819, 4821, 4823, 4832, 4833, 4836, 4839, 4841, 4844, 4847, 4849, 4852, 4853, 4855, 4856, 4858, 4860, 4862, 4864, 4873, 4874, 4877, 4880, 4882, 4884, 4886, 4888, 4890, 4892, 4901, 4903, 4909, 4910, 4919, 4921, 4930, 4936, 4937, 4940, 4947, 4948, 4952, 4954, 4963, 4964, 4967, 4970, 4972, 4974, 4976, 4977, 4978, 4979, 4982, 4984, 4985, 4986, 4988, 4991, 4994, 4997, 4999, 5001, 5004, 5006, 5008, 5017, 5018, 5021]}, "finish_reason": "length"}]}, {"id": "cmpl-51LLsx7XA1xeF2BqYS9mNn1f1ixCG", "object": "text_completion", "created": 1651002088, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0046850103, -0.084057584, -0.061821464, -6.253833e-05, -0.0010471578, -8.3165185e-05, -0.010476519, -0.6032645, -2.8206221e-05, -0.00031608582, -1.3542607e-05, -0.0052702576, -0.10916758, -0.05160403, -0.5885751, -5.4364154e-06, -9.782879e-05, -0.0021155933, -0.000118811404, -0.038819227, -4.6010214e-06, -0.011288425, -1.306671e-05, -8.892534e-06, -4.144026e-05, -0.0002476394, -1.3185924e-05, -9.012677e-06, -8.4157e-06, -1.8841804e-07, -0.011745463, -0.0011064683, -0.008245054, -0.00073413085, -7.052812e-05, -0.0036854302, -0.0005668924, -0.0003311108, -2.5703772e-05, -0.000297126, -0.00019869342, -0.0004231765, -0.0006562379, -0.00035931446, -0.11172686, -0.00017103326, -7.937927e-06, -0.071457244, -3.5240468e-05, -1.3900239e-05, -7.937927e-06, -1.8841804e-07, -4.1232483e-06, -0.00071880553, -8.3404535e-05, -9.854499e-05, -0.00012560723, -0.00012250594, -3.4403198e-05, -0.0012840637, -7.219704e-05, -0.0003575263, -5.3597672e-05, -0.00011237507, -0.00088696484, -0.0007154658, -0.0025581245, -8.0580685e-06, -6.6619094e-07, -0.4703232, -0.10096801, -0.0005173354, -0.00015481713, -0.0001506467, -0.0042056856, -0.041044023, -2.5204036, -1.2231317e-05, -0.11613679, -0.001873355, -4.680184e-05, -6.551948e-05, -1.9028084e-05, -1.6207987e-06, -0.55762076, -0.09742334, -0.00093743607, -0.00024358816, -0.0009759198, -0.0033868288, -0.37547982, -5.657977e-05, -3.8457234e-05, -0.0017511821, -0.0023920098, -0.023958689, -0.06450703, -0.091797724, -4.838501e-06, -0.74236697, -0.00012787033, -2.4986643e-05, -1.2588937e-05, -2.0966954e-06, -1.8841804e-07, -0.11430129, -0.0006888607, -0.0125474725, -0.00019821846, -0.000115950395, -0.0001033124, -5.550595e-05, -0.0001698393, -2.9280032e-05, -3.583558e-05, -6.5092986e-06, -4.361666e-06, -0.016613064, -0.00070914207, -0.007112746, -0.0045053717, -0.30095738, -0.004964891, -0.00013621869, -0.0005891384, -0.00012155601, -0.00017151104, -0.0018799246, -0.0001562495, -0.00082349137, -0.009681226, -0.00029104354, -0.00010748563, -0.00022766957, -0.00022623815, -0.00015517569, -1.0920954e-05, -3.201996e-05, -4.489638e-05, -4.5374152e-05, -4.1918032e-05, -4.277735e-07, -2.9159892e-05, -0.00020322429, -2.272356e-05, -1.3823812e-06, -0.2841148, -0.00012739444, -2.880226e-05, -1.3900239e-05, -4.277735e-07, -7.8540467e-07, -0.0011882219, -0.00012763379, -0.000117858675, -7.20769e-05, -0.00015589187, -4.072407e-05, -0.0017792439, -8.185389e-05, -0.000249787, -0.00010057153, -0.007153807, -0.029541958], "top_logprobs": null, "text_offset": [4123, 4123, 4124, 4131, 4132, 4136, 4139, 4141, 4148, 4149, 4153, 4156, 4158, 4167, 4169, 4175, 4176, 4185, 4187, 4196, 4202, 4203, 4206, 4213, 4214, 4218, 4220, 4229, 4230, 4233, 4236, 4238, 4240, 4242, 4243, 4244, 4245, 4248, 4250, 4251, 4252, 4254, 4257, 4260, 4263, 4265, 4267, 4270, 4272, 4274, 4283, 4284, 4287, 4290, 4292, 4295, 4298, 4300, 4303, 4304, 4306, 4307, 4309, 4311, 4313, 4315, 4324, 4325, 4328, 4331, 4333, 4335, 4337, 4339, 4341, 4343, 4352, 4358, 4359, 4365, 4367, 4376, 4377, 4380, 4383, 4385, 4387, 4389, 4391, 4394, 4396, 4402, 4403, 4412, 4414, 4423, 4425, 4434, 4440, 4441, 4447, 4449, 4458, 4459, 4462, 4465, 4467, 4468, 4469, 4471, 4473, 4475, 4477, 4479, 4488, 4489, 4492, 4495, 4497, 4499, 4502, 4505, 4507, 4509, 4510, 4511, 4512, 4514, 4517, 4520, 4523, 4525, 4528, 4531, 4534, 4536, 4538, 4539, 4540, 4541, 4543, 4546, 4549, 4552, 4554, 4556, 4559, 4561, 4563, 4572, 4573, 4576, 4579, 4581, 4584, 4587, 4589, 4592, 4593, 4595, 4596, 4598, 4600, 4603]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform (transform (transform (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 0.5 0 0", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0"], "token_logprobs": [-0.0046850103, -0.084057584, -0.061821464, -6.253833e-05, -0.0010471578, -8.3165185e-05, -0.010476519, -0.6032662, -2.8206221e-05, -0.00031608582, -1.3542607e-05, -0.0052702576, -0.10601506, -0.043628894, -0.8481763, -1.5211518, -0.33411798, -1.1772028, -0.28749678, -0.42307425, -0.17468189, -0.31711033, -0.14092539, -1.7287236, -0.00028424585, -1.22144, -0.024268556, -0.0056630494, -0.0020160298, -0.00027506487, -6.9861335e-06, -1.4173843, -0.056134284, -0.021450387, -0.017483577, -0.011986124, -0.010984411, -0.0510547, -0.02871401, -0.00357512, -3.988961e-05, -1.2218975, -0.1944624, -0.14089848, -0.09857381, -0.06270917, -0.0030438926, -0.004100464, -0.019242143, -0.00014301545, -1.688045e-05, -0.32538813, -0.029190553, -0.038727835, -0.012519589, -0.0030031158, -0.0010864197, -9.305951e-05, -0.009552921, -3.166233e-05, -2.8138238e-06, -0.11226173, -0.010437007, -0.020939834, -0.003188525, -0.000696139, -0.00088434125, -5.6340414e-05, -0.006607843, -1.6165199e-05, -7.8540467e-07, -0.05756048, -0.009109636, -0.0130776735, -0.0019391666, -0.0006164532, -0.0012052894, -0.00087849353, -0.0154283, -1.4736571e-05, -6.746778e-06, -0.09238154, -0.0075776665, -0.009544977, -0.0013139663, -0.0025226867, -0.0035633342, -0.066707976, -0.45524627, -0.04183291, -0.2412872, -0.004270096, -0.05541961, -0.0017633039, -0.066480406, -0.0044982466, -0.22561024, -0.007943052, -0.1202836, -3.4089344e-06, -0.085974805, -0.0003605084, -2.033751e-05, -1.6999666e-05, -1.0800813e-05, -3.076318e-07, -0.033891413, -0.0020972567, -0.0011476431, -0.00017890292, -0.0001233404, -0.00014814144, -2.4866502e-05, -9.0080226e-05, -9.055464e-07, 0, -0.031482007, -0.002497591, -0.0014420545, -0.00011070334, -9.38949e-05, -0.00015970749, -1.4854846e-05, -0.00018796182, -4.6010214e-06, -3.076318e-07, -0.018568207, -0.0010328386, -0.0004950321, -0.00010820183, -0.000118572985, -0.00022492779, -1.6642034e-05, -0.00016054008, -9.055464e-07, -1.8841804e-07, -0.009847347, -0.00093081384, -0.00027494476, -5.061746e-05, -0.00016280691, -0.000179498, -1.7475562e-05, -0.0004944342, -1.7834122e-05, -5.0778563e-06, -0.009597274, -0.0008702596, -0.0002322596, -6.48061e-05, -0.0003731464, -0.0004391561, -2.5225998e-05, -0.0016841898, -1.1873685e-05, -1.37819625e-05, -0.04832468, -0.011223021, -0.0015738598, -0.00023130498, -0.2273945, -0.006344178, -0.0058839046, -0.5628913, -8.149626e-05, -1.6207987e-06, -3.5719173, -0.021396982, -0.004165043, -0.002507029, -0.46596736, -0.04300036, -0.17556508, -0.2272365, -0.051537007, -0.12833036, -0.009056286, -0.019599797, -0.003024162, -0.022584436, -0.0056637684, -0.10307608, -0.009526924, -0.15080631, -3.7684315e-06, -0.06429369, -0.0002880624, -2.6180607e-05, -2.2365928e-05, -4.361666e-06, -1.8841804e-07, -0.021153316, -0.002262125, -0.0002704148, -0.00011392572, -6.146545e-05, -0.0001539836, -2.0935424e-05, -8.924483e-05, -9.055464e-07, -1.022884e-06, -0.024695395, -0.0020755157, -0.00034083053, -4.5613506e-05, -0.00014814144, -9.115311e-05, -1.8907942e-05, -0.0001668619, -3.4167595e-05, -6.6619094e-07, -0.011555748, -0.00076532975, -0.00015767907, -6.325358e-05, -6.9573514e-05, -9.198663e-05, -2.665838e-05, -0.00031608582, -5.0778563e-06, -2.5744682e-06, -0.010092971, -0.0004321181, -7.469949e-05, -3.953198e-05, -7.815842e-05, -0.00011976601, -4.763911e-05, -0.00079634844, -8.0580685e-06, -3.883893e-06, -0.007146844, -0.00014718683, -6.13453e-05, -4.7875652e-05, -5.8247755e-05, -0.000113805574, -4.0009756e-05, -0.0009289047, -5.3162735e-06, -1.1430258e-06, -0.0077577345, -0.0008738406, -5.693833e-05, -6.4566746e-05, -0.0010255584, -0.0005383865, -0.00032991965, -0.0048942724, -1.0204763e-05, -1.8841804e-07, -3.350628, -0.14775032, -0.14163832, -0.005932711, -0.0010500216], "top_logprobs": null, "text_offset": [4123, 4123, 4124, 4131, 4132, 4136, 4139, 4141, 4148, 4149, 4153, 4156, 4158, 4167, 4169, 4178, 4180, 4189, 4191, 4200, 4202, 4211, 4213, 4222, 4228, 4229, 4235, 4237, 4246, 4247, 4250, 4253, 4255, 4257, 4259, 4261, 4263, 4265, 4274, 4275, 4278, 4281, 4283, 4285, 4287, 4289, 4291, 4293, 4302, 4303, 4306, 4309, 4311, 4313, 4315, 4317, 4319, 4321, 4330, 4331, 4334, 4337, 4339, 4341, 4343, 4345, 4347, 4349, 4358, 4359, 4362, 4365, 4367, 4369, 4371, 4373, 4375, 4377, 4386, 4387, 4390, 4393, 4395, 4397, 4399, 4401, 4403, 4405, 4414, 4416, 4425, 4427, 4436, 4438, 4447, 4449, 4458, 4460, 4469, 4475, 4476, 4482, 4484, 4493, 4494, 4497, 4500, 4502, 4504, 4506, 4508, 4510, 4512, 4521, 4522, 4525, 4528, 4530, 4532, 4534, 4536, 4538, 4540, 4549, 4550, 4553, 4556, 4558, 4560, 4562, 4564, 4566, 4568, 4577, 4578, 4581, 4584, 4586, 4588, 4590, 4592, 4594, 4596, 4605, 4606, 4609, 4612, 4614, 4616, 4618, 4620, 4622, 4624, 4633, 4634, 4637, 4640, 4642, 4644, 4646, 4648, 4650, 4652, 4661, 4662, 4665, 4668, 4670, 4672, 4674, 4676, 4678, 4680, 4689, 4691, 4700, 4702, 4711, 4713, 4722, 4724, 4733, 4735, 4744, 4750, 4751, 4757, 4759, 4768, 4769, 4772, 4775, 4777, 4779, 4781, 4783, 4785, 4787, 4796, 4797, 4800, 4803, 4805, 4807, 4809, 4811, 4813, 4815, 4824, 4825, 4828, 4831, 4833, 4835, 4837, 4839, 4841, 4843, 4852, 4853, 4856, 4859, 4861, 4863, 4865, 4867, 4869, 4871, 4880, 4881, 4884, 4887, 4889, 4891, 4893, 4895, 4897, 4899, 4908, 4909, 4912, 4915, 4917, 4919, 4921, 4923, 4925, 4927, 4936, 4937, 4940, 4943, 4945, 4946, 4947, 4949]}, "finish_reason": "length"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0046850103, -0.084057584, -0.05979288, -5.3242864e-05, -0.001505866, -6.6829845e-05, -0.008510603, -0.79996735, -0.07390907, -0.5731557, -7.302963e-05, -8.7457636e-05, -0.0037037383, -0.0051051923, -0.08893018, -5.0778563e-06, -0.019984389, -1.1039229e-05, -1.7953334e-05, -8.984087e-05, -0.0009917896, -3.1901687e-05, -2.3675353e-05, -2.2958224e-05, -3.076318e-07, -0.018988125, -0.001505986, -0.01815915, -0.0035106966, -0.00012822983, -0.0068089818, -0.0013417213, -0.0007366371, -2.6298881e-05, -0.0005068385, -0.00037994413, -0.0011638142, -0.0015695617, -0.00055090815, -0.20894589, -0.0007835837, -1.3900239e-05, -0.14522402, -9.949678e-05, -3.237946e-05, -7.937927e-06, -1.3823812e-06, -3.225932e-05, -0.0015729043, -0.0003191862, -0.00037123813, -0.00044356775, -0.00024537253, -4.394177e-05, -0.001764617, -8.578871e-05, -0.0007016272, -0.00010140506, -7.088388e-05, -0.0014699287, -0.00014217819, -0.0019168895, -1.7834122e-05, -9.055464e-07, -0.8487719, -0.008515173, -0.001295046, -0.00025038118, -0.00041423022, -0.0074626617, -0.16894446, -0.19740823, -0.28303292, -0.16920413, -1.3900239e-05, -0.6653903, -0.0018388389, -0.00011988616, -1.6521892e-05, -8.653179e-06, -6.827632e-08, -1.4604197, -0.047066085, -0.009561769, -0.0010550931, -0.0052446728, -0.0020694258, -0.00024477651, -0.0029583992, -0.00011273176, -1.843017e-05, -1.104325, -0.10994729, -0.0055736774, -0.00038662262, -0.0061819945, -0.013684953, -0.042981505, -0.047598146, -4.9782993e-05], "top_logprobs": null, "text_offset": [4123, 4123, 4124, 4131, 4132, 4136, 4139, 4141, 4150, 4152, 4158, 4159, 4168, 4170, 4179, 4185, 4186, 4189, 4196, 4197, 4201, 4203, 4212, 4213, 4216, 4219, 4221, 4223, 4225, 4226, 4227, 4228, 4231, 4233, 4234, 4235, 4237, 4240, 4243, 4246, 4248, 4250, 4253, 4255, 4257, 4266, 4267, 4270, 4273, 4275, 4278, 4281, 4283, 4286, 4287, 4289, 4290, 4292, 4294, 4296, 4298, 4307, 4308, 4311, 4314, 4316, 4318, 4320, 4322, 4324, 4326, 4335, 4337, 4346, 4352, 4353, 4359, 4361, 4370, 4371, 4374, 4377, 4379, 4381, 4383, 4385, 4387, 4389, 4398, 4399, 4402, 4405, 4407, 4409, 4411, 4413, 4416, 4416, 4416, 4416]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0046850103, -0.08558703, -0.052244037, -6.539934e-05, -0.00053862494, -7.088388e-05, -0.011012432, -0.8487854, -0.07291138, -1.0527016, -0.67821, -2.7013197e-05, -0.37419248, -0.0026325828, -8.00667e-05, -3.8103353e-05, -3.01145e-05, -3.076318e-07, -0.21221294, -0.034466613, -0.00054387294, -0.0005126834, -0.00012238578, -0.0012665795, -0.00033176786, -0.0018163882, -2.1529595e-05, -3.7684315e-06, -1.165292, -0.024951901, -0.0014815689, -0.00025085802, -0.00044977036, -0.009434682, -0.2683732, -2.6426983, -0.00011487751, -0.73589236, -0.0046217744, -0.00016602462, -0.00043987136, -6.0276172e-05, -1.0084622e-05, -0.7093974, -0.04285029, -0.0038804815, -0.00032491007, -0.006104751, -0.012210734, -0.038185846, -0.056798093, -9.604066e-05], "top_logprobs": null, "text_offset": [4123, 4123, 4124, 4131, 4132, 4136, 4139, 4141, 4150, 4152, 4161, 4167, 4168, 4174, 4176, 4185, 4186, 4189, 4192, 4194, 4196, 4198, 4200, 4202, 4204, 4213, 4214, 4217, 4220, 4222, 4224, 4226, 4228, 4230, 4232, 4241, 4247, 4248, 4254, 4256, 4265, 4266, 4269, 4272, 4274, 4276, 4278, 4280, 4283, 4283, 4283, 4283]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0046850103, -0.08699377, -0.05893501, -5.9085025e-05, -0.0008848181, -6.766711e-05, -0.008061355, -0.6485309, -2.7611111e-05, -0.00023619535, -1.5567284e-05, -0.0063841864, -0.11160616, -0.044858724, -0.7161638, -5.3162735e-06, -8.566857e-05, -0.0019683088, -0.0015844271, -0.059867606, -3.883893e-06, -0.010704528, -8.7733215e-06, -1.1278585e-05, -4.29881e-05, -0.0002925942, -1.6165199e-05, -8.296486e-06, -6.1516675e-06, -4.277735e-07, -0.0102632595, -0.0008710941, -0.010628379, -0.00076855125, -8.7576846e-05, -0.0033318081, -0.0006141873, -0.00036480086, -2.4750101e-05, -0.0004292552, -0.00018450571, -0.0005797763, -0.00059283763, -0.00034226198, -0.14394638, -0.00015493727, -1.0323977e-05, -0.059831355, -3.3212986e-05, -1.7834122e-05, -8.7733215e-06, -3.076318e-07, -1.0561456e-05, -0.00076234766, -0.00015457776, -0.00012512946, -0.00014992956, -0.00011428335, -2.9996223e-05, -0.0025480236, -6.182308e-05, -0.00036181876, -4.763911e-05, -0.0001083201, -0.00083148497, -0.0005394594, -0.004837251, -6.8669196e-06, -7.8540467e-07, -1.1329557, -0.013101344, -0.0006203899, -0.00014706762, -0.0002992727, -0.003714688, -0.054277487, -1.3219197, -1.1159372e-05, -0.07823078, -0.0017517791, -5.944078e-05, -9.604066e-05, -1.9503042e-05, -4.6010214e-06, -1.1421508, -0.041996382, -0.009379688, -0.00060226076, -0.0026606128, -0.0034519008, -1.6564052, -0.16903394, -0.41903973, -0.1370637, -1.163433e-05, -0.39402798, -0.00041035545, -5.9321566e-05, -2.8087945e-05, -6.6294406e-06, -1.2622395e-06, -1.4162852, -0.0057816855, -0.0363745, -0.00072435196, -0.00020966532, -0.00014468438, -5.8010275e-05, -0.00064549973, -8.161453e-05, -0.00027291913, -1.1039229e-05, -1.022884e-06, -0.47523102, -0.010610186, -0.036924478, -0.0010617754, -0.0072447006, -0.014952217, -0.05714381, -0.066232696, -9.2941234e-05, -0.00057536183, -9.103483e-05], "top_logprobs": null, "text_offset": [4123, 4123, 4124, 4131, 4132, 4136, 4139, 4141, 4148, 4149, 4153, 4156, 4158, 4167, 4169, 4175, 4176, 4185, 4187, 4196, 4202, 4203, 4206, 4213, 4214, 4218, 4220, 4229, 4230, 4233, 4236, 4238, 4240, 4242, 4243, 4244, 4245, 4248, 4250, 4251, 4252, 4254, 4257, 4260, 4263, 4265, 4267, 4270, 4272, 4274, 4283, 4284, 4287, 4290, 4292, 4295, 4298, 4300, 4303, 4304, 4306, 4307, 4309, 4311, 4313, 4315, 4324, 4325, 4328, 4331, 4333, 4335, 4337, 4339, 4341, 4343, 4352, 4358, 4359, 4365, 4367, 4376, 4377, 4380, 4383, 4385, 4387, 4389, 4391, 4394, 4396, 4405, 4407, 4416, 4422, 4423, 4429, 4431, 4440, 4441, 4444, 4447, 4449, 4450, 4451, 4453, 4455, 4457, 4459, 4461, 4470, 4471, 4474, 4477, 4479, 4481, 4483, 4485, 4488, 4488, 4488, 4488, 4488, 4488]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0046850103, -0.08699371, -0.058934946, -5.9085025e-05, -0.0008848181, -6.7427754e-05, -0.010856237, -0.64102423, -3.4287736e-05, -0.00026838828, -1.4377073e-05, -0.006401523, -0.11026183, -0.050772466, -0.6732011, -6.031526e-06, -7.636654e-05, -0.0015869362, -0.00016840879, -0.056471545, -3.529076e-06, -0.010205391, -1.3422466e-05, -1.9860674e-05, -3.7266083e-05, -0.00027542253, -1.2828294e-05, -1.1278585e-05, -5.79217e-06, -6.827632e-08, -0.011112417, -0.0008961523, -0.010175102, -0.00067979423, -9.890355e-05, -0.0038006613, -0.0006447854, -0.00052544626, -2.8565719e-05, -0.0003413083, -0.00035132372, -0.00044476078, -0.00070043333, -0.00034249946, -0.121248595, -0.00016507095, -7.818713e-06, -0.06135776, -2.7251614e-05, -1.2231317e-05, -7.1062755e-06, -1.8841804e-07, -5.3162735e-06, -0.0007618708, -0.00010927377, -0.00015469792, -0.00016709937, -9.2821094e-05, -3.5120327e-05, -0.0015305196, -6.265847e-05, -0.00033146844, -4.799487e-05, -0.00010140506, -0.0006805105, -0.00095533516, -0.0025840565, -5.675771e-06, -6.6619094e-07, -1.1421262, -0.015553062, -0.0005571098, -0.00016364138, -0.00020155631, -0.0035145255, -0.045095515, -0.34943712, -0.33999187, -0.09258224, -1.4854846e-05, -0.7628165, -0.00127768, -4.2870764e-05, -1.2588937e-05, -5.675771e-06, -6.827632e-08, -1.8248639, -0.0559828, -0.004402096, -0.00059069006, -0.119437955, -0.0011122569, -0.0002541968, -0.0021767605, -3.0353855e-05, -1.4616429e-05, -0.81129533, -0.07653584, -0.0019348665, -0.0002251634, -0.0025626656, -0.0049305093, -0.29943687, -6.6949986e-05, -4.6206733e-05, -0.0017166688, -0.0018625472, -0.018701015, -0.06549955, -0.06576267, -9.606849e-06, -0.8825122, -0.00035144386, -2.1649737e-05, -2.8326363e-05, -5.4364154e-06, -9.055464e-07, -0.1261424, -0.0017293877, -0.014352093, -0.00028066957, -0.0001698393, -0.0001015252, -5.2765092e-05, -0.00019583241, -3.3809963e-05, -3.8217877e-05, -4.838501e-06, -2.4543265e-06, -0.01865881, -0.0011087942, -0.008081424, -0.005227716, -0.12179734, -0.00859687, -0.00022087281, -0.0012949277, -7.982734e-05, -0.00022695526, -0.0018955099, -0.00013800588, -0.0005732152, -0.0079355985, -0.00014647158, -9.0080226e-05, -0.00022278015, -0.0002000066, -0.00019452299, -1.0920954e-05, -5.503005e-05, -4.763911e-05, -6.2420055e-05, -6.3492e-05, -9.055464e-07, -3.9292627e-05, -0.00033474996, -3.559716e-05, -1.6207987e-06, -0.24744907, -0.00011034852, -3.1065356e-05, -2.9519388e-05, -1.7400124e-06, -4.1232483e-06, -0.00054995355, -8.6025255e-05, -0.00015970749, -0.00013943638, -0.00015517569, -6.277768e-05, -0.0014790627, -0.000111540605, -0.00023357182, -6.89756e-05, -0.0047007017, -0.02958211, -0.117467076, -0.08394543, -0.00014086877, -0.0010239468], "top_logprobs": null, "text_offset": [4123, 4123, 4124, 4131, 4132, 4136, 4139, 4141, 4148, 4149, 4153, 4156, 4158, 4167, 4169, 4175, 4176, 4185, 4187, 4196, 4202, 4203, 4206, 4213, 4214, 4218, 4220, 4229, 4230, 4233, 4236, 4238, 4240, 4242, 4243, 4244, 4245, 4248, 4250, 4251, 4252, 4254, 4257, 4260, 4263, 4265, 4267, 4270, 4272, 4274, 4283, 4284, 4287, 4290, 4292, 4295, 4298, 4300, 4303, 4304, 4306, 4307, 4309, 4311, 4313, 4315, 4324, 4325, 4328, 4331, 4333, 4335, 4337, 4339, 4341, 4343, 4352, 4354, 4363, 4369, 4370, 4376, 4378, 4387, 4388, 4391, 4394, 4396, 4398, 4400, 4402, 4404, 4406, 4415, 4416, 4419, 4422, 4424, 4426, 4428, 4430, 4433, 4435, 4441, 4442, 4451, 4453, 4462, 4464, 4473, 4479, 4480, 4486, 4488, 4497, 4498, 4501, 4504, 4506, 4507, 4508, 4510, 4512, 4514, 4516, 4518, 4527, 4528, 4531, 4534, 4536, 4538, 4541, 4544, 4546, 4548, 4549, 4550, 4551, 4553, 4556, 4559, 4562, 4564, 4567, 4570, 4573, 4575, 4577, 4578, 4579, 4580, 4582, 4585, 4588, 4591, 4593, 4595, 4598, 4600, 4602, 4611, 4612, 4615, 4618, 4620, 4623, 4626, 4628, 4631, 4632, 4634, 4635, 4637, 4639, 4642, 4642, 4642, 4642, 4642]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0046850103, -0.08699371, -0.058934946, -5.9085025e-05, -0.0008848181, -6.7427754e-05, -0.008472731, -0.53262836, -2.1171965e-05, -0.00029414485, -1.44972155e-05, -0.005619652, -0.11902476, -0.055317868, -0.6477677, -5.0778563e-06, -5.467149e-05, -0.0020400377, -0.0016491453, -0.053460807, -3.6482897e-06, -0.009579339, -1.7953334e-05, -8.176345e-06, -4.1558535e-05, -0.0003708805, -1.6642034e-05, -1.0681599e-05, -1.0561456e-05, -3.076318e-07, -0.010531997, -0.0006711474, -0.009636028, -0.0006617234, -6.814395e-05, -0.004116625, -0.0005431577, -0.00043343127, -2.0815281e-05, -0.00037720232, -0.00017902305, -0.00042448685, -0.0007399787, -0.00035132372, -2.5992815, -0.004947821, -1.0800813e-05, -0.20430523, -2.7611111e-05, -1.2112103e-05, -5.197998e-06, -4.277735e-07, -1.2946569e-05, -0.00042615767, -0.00020286761, -0.00026278265, -0.00068385113, -0.0002676721, -7.601266e-05, -0.00094590924, -0.00013526501, -0.00060774625, -7.779892e-05, -2.7967804e-05, -0.0011508646, -0.00052842835, -0.006088738, -1.1159372e-05, -1.8601542e-06, -0.88713956, -0.12947404, -0.000530454, -0.00016721859, -0.00039199076, -0.0017354785, -0.05628829, -0.045964107, -0.87681925, -0.06295512, -4.838501e-06, -0.64268297, -0.0007229206, -3.643162e-05, -8.4157e-06, -3.051303e-06, -3.2906587e-06, -0.9901451, -0.004534529, -0.037341353, -0.0005734527, -0.0003282479, -0.00013216372, -0.00816597, -0.00030189528, -5.896488e-05, -0.00021360109, -4.1232483e-06, -2.693682e-06, -0.64783794, -0.008192953, -0.2240863, -0.0023018552, -0.001949378, -0.007069466, -0.20913829, -5.3716885e-05, -5.300351e-05, -0.0008987768, -0.00017508729, -0.015294597, -0.040370066, -0.04622013, -8.296486e-06, -0.27175075, -0.0001552949, -2.3435998e-05, -9.012677e-06, -1.2622395e-06, -5.460492e-07, -0.25055364, -0.00051769393, -0.019908082, -0.00031847187, -0.00019845407, -0.00010343254, -2.5464416e-05, -8.483411e-05, -4.0009756e-05, -2.8445576e-05, -3.883893e-06, -2.0966954e-06, -0.015422551, -0.00069721276, -0.0057261125, -0.014234917, -0.63528395, -0.009003899, -6.623567e-05, -0.0009509207, -0.00012584659, -0.00014814144, -0.0021098591, -0.0001625685, -0.00063100696, -0.0080296295, -0.0003290824, -5.1810483e-05, -0.00020549206, -0.0019210712, -0.00030070322, -2.1768952e-05, -4.036551e-05, -0.000111657944, -5.6102934e-05, -7.56541e-05, -5.460492e-07, -2.319758e-05, -0.00018164565, -4.7279616e-05, -5.460492e-07, -1.2676003, -0.00044977036, -2.6419024e-05, -2.4510746e-05, -6.827632e-08, -5.675771e-06, -0.0010397584, -0.00028830176, -0.000189275, -0.00019344824, -0.0001476646, -5.312365e-05, -0.0042495616, -0.00013466804, -0.00042842168, -7.839496e-05, -0.005747935, -0.018405305, -0.1213889, -0.08882732], "top_logprobs": null, "text_offset": [4123, 4123, 4124, 4131, 4132, 4136, 4139, 4141, 4148, 4149, 4153, 4156, 4158, 4167, 4169, 4175, 4176, 4185, 4187, 4196, 4202, 4203, 4206, 4213, 4214, 4218, 4220, 4229, 4230, 4233, 4236, 4238, 4240, 4242, 4243, 4244, 4245, 4248, 4250, 4251, 4252, 4254, 4257, 4260, 4263, 4265, 4267, 4270, 4272, 4274, 4283, 4284, 4287, 4290, 4292, 4295, 4298, 4300, 4303, 4304, 4306, 4307, 4309, 4311, 4313, 4315, 4324, 4325, 4328, 4331, 4333, 4335, 4337, 4339, 4341, 4343, 4352, 4354, 4363, 4369, 4370, 4376, 4378, 4387, 4388, 4391, 4394, 4396, 4397, 4398, 4400, 4402, 4404, 4406, 4408, 4417, 4418, 4421, 4424, 4426, 4428, 4430, 4432, 4435, 4437, 4443, 4444, 4453, 4455, 4464, 4466, 4475, 4481, 4482, 4488, 4490, 4499, 4500, 4503, 4506, 4508, 4509, 4510, 4512, 4514, 4516, 4518, 4520, 4529, 4530, 4533, 4536, 4538, 4540, 4543, 4546, 4548, 4550, 4551, 4552, 4553, 4555, 4558, 4561, 4564, 4566, 4569, 4572, 4575, 4577, 4579, 4580, 4581, 4582, 4584, 4587, 4590, 4593, 4595, 4597, 4600, 4602, 4604, 4613, 4614, 4617, 4620, 4622, 4625, 4628, 4630, 4633, 4634, 4636, 4637, 4639, 4641, 4644, 4644, 4644]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform_matrix 4 0 0 0) (transform_matrix 1 0 0 0)) (transform (transform_matrix 4 0 0 0) (transform_matrix 2 0 0 0))) (transform (transform_matrix 4 0 0 0) (transform_matrix 1 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0046850103, -0.087038696, -0.06718584, -8.626461e-05, -0.0009269955, -8.674238e-05, -0.012323271, -0.56060064, -2.7728449e-05, -0.00022588052, -1.3661821e-05, -0.008346385, -0.106379755, -0.045349702, -0.8493151, -3.612107, -0.35791215, -0.00036527863, -1.407192, -0.029166559, -0.008471469, -0.008186763, -0.07788646, -0.017480789, -0.07877293, -0.23701443, -0.00041166772, -3.2906587e-06, -1.9454628, -0.07628203, -0.14498766, -0.06171698, -0.021102542, -0.0075476365, -0.11924138, -0.14466001, -0.10025331, -0.21201198, -0.00010379017, -1.1753544e-05, -0.23465946, -0.01036317, -0.0020389638, -0.0017898141, -0.0007666419, -0.00095473917, -0.0035233197, -0.0035841528, -2.8565719e-05, -4.1558535e-05, -1.2457386, -0.09805804, -0.00510663, -0.0015014486, -0.003698055, -0.010858108, -0.5923553, -0.12502986, -0.107433535, -0.20516793, -7.8634315e-05, -3.883893e-06, -0.31634828, -0.008257256, -0.0026569671, -0.0009697144, -0.00042758632, -0.0013118178, -0.0033575834, -0.0037426858, -0.00017127168, -1.8601542e-06, -0.8362835, -0.102278724, -0.030908225, -0.0046254285, -0.016552947, -0.016942251, -0.049296726, -0.05224824, -0.00015648511, -0.0008461016, -6.325358e-05, -0.012508846], "top_logprobs": null, "text_offset": [4123, 4123, 4124, 4131, 4132, 4136, 4139, 4141, 4148, 4149, 4153, 4156, 4158, 4167, 4169, 4178, 4179, 4182, 4185, 4187, 4189, 4191, 4193, 4194, 4196, 4205, 4206, 4209, 4212, 4214, 4216, 4218, 4220, 4222, 4224, 4233, 4235, 4244, 4245, 4248, 4251, 4253, 4255, 4257, 4259, 4260, 4262, 4271, 4272, 4275, 4278, 4280, 4282, 4284, 4286, 4289, 4291, 4300, 4302, 4311, 4312, 4315, 4318, 4320, 4322, 4324, 4326, 4327, 4329, 4338, 4339, 4342, 4345, 4347, 4349, 4351, 4353, 4356, 4356, 4356, 4356, 4356, 4356, 4356]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0046850103, -0.083991714, -0.06131726, -6.5041706e-05, -0.0006388203, -6.9690854e-05, -0.007914329, -0.5978863, -2.6298881e-05, -0.00020823294, -1.5094201e-05, -0.004615007, -0.11665628, -0.049429234, -0.63779545, -4.0040345e-06, -8.209043e-05, -0.0015144619, -0.0012981491, -0.0614501, -5.0778563e-06, -0.010162698, -1.1398727e-05, -1.3306066e-05, -4.489638e-05, -0.00029700773, -1.4616429e-05, -1.2468796e-05, -6.9861335e-06, -1.8841804e-07, -0.01085455, -0.00078322703, -0.008989405, -0.0007158225, -7.9349564e-05, -0.004357373, -0.00079539383, -0.00042043283, -2.6180607e-05, -0.00033665728, -0.00025252788, -0.0005346873, -0.00052186626, -0.00061060634, -0.14174278, -0.0002801937, -7.3446927e-06, -0.080756724, -4.1200903e-05, -1.7475562e-05, -5.912312e-06, -1.8841804e-07, -6.3900848e-06, -0.00060774625, -0.00011416413, -0.00011118111, -0.00017306075, -0.00012739444, -2.8326363e-05, -0.0016286067, -6.814395e-05, -0.0003655161, -4.6445148e-05, -0.00010593593, -0.0012274274, -0.00054208294, -0.0025599154, -6.3900848e-06, -6.6619094e-07, -0.49341735, -0.09102485, -0.0009383907, -0.00018390873, -0.00025205011, -0.0038906543, -0.047005672, -0.080020815, -0.69052774, -0.06857528, -6.3900848e-06, -0.3895819, -0.0004212682, -3.4287736e-05, -1.688045e-05, -7.4639065e-06, -1.6207987e-06, -0.17656504, -0.039912477, -0.00018855974, -9.186649e-05, -0.0014582332, -0.0002206344, -4.859278e-05, -0.0001390797, -2.9519388e-05, -4.0040345e-06, -1.2028792, -0.062702574, -0.010096043, -0.0005006368, -0.001721148, -0.00624221, -1.1651216, -0.05444345, -0.14515594, -0.07884097, -9.370307e-06, -0.20366442, -0.00043164124, -3.690939e-05, -1.7834122e-05, -1.1514188e-05, -3.051303e-06, -0.42100593, -0.028861912, -0.00025920733, -0.00010092916, -3.7386224e-05, -0.00037123813, -8.8051806e-05, -0.00015016893, -1.4616429e-05, -6.6619094e-07, -0.9978477, -0.067492574, -0.036424384, -0.002236439, -0.008604324, -0.015465649, -0.07027174, -0.064673655, -0.00013240307], "top_logprobs": null, "text_offset": [4123, 4123, 4124, 4131, 4132, 4136, 4139, 4141, 4148, 4149, 4153, 4156, 4158, 4167, 4169, 4175, 4176, 4185, 4187, 4196, 4202, 4203, 4206, 4213, 4214, 4218, 4220, 4229, 4230, 4233, 4236, 4238, 4240, 4242, 4243, 4244, 4245, 4248, 4250, 4251, 4252, 4254, 4257, 4260, 4263, 4265, 4267, 4270, 4272, 4274, 4283, 4284, 4287, 4290, 4292, 4295, 4298, 4300, 4303, 4304, 4306, 4307, 4309, 4311, 4313, 4315, 4324, 4325, 4328, 4331, 4333, 4335, 4337, 4339, 4341, 4343, 4352, 4354, 4363, 4369, 4370, 4376, 4378, 4387, 4388, 4391, 4394, 4396, 4398, 4400, 4402, 4404, 4406, 4415, 4416, 4419, 4422, 4424, 4426, 4428, 4430, 4433, 4435, 4444, 4446, 4455, 4461, 4462, 4468, 4470, 4479, 4480, 4483, 4486, 4488, 4490, 4492, 4494, 4496, 4498, 4507, 4508, 4511, 4514, 4516, 4518, 4520, 4522, 4525, 4525, 4525, 4525]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0046850103, -0.083992034, -0.06131726, -6.5041706e-05, -0.0009946515, -5.1930627e-05, -0.009104224, -0.59502107, -2.5225998e-05, -0.00028055036, -1.5094201e-05, -0.0063246232, -0.104997255, -0.05013127, -0.62677264, -6.1516675e-06, -7.016862e-05, -0.001666039, -0.00084550463, -0.04503067, -3.170517e-06, -0.011550804, -1.0800813e-05, -1.843017e-05, -3.8338017e-05, -0.00028329217, -1.402038e-05, -8.176345e-06, -6.1516675e-06, -6.827632e-08, -0.0110830655, -0.0004854926, -0.0096911555, -0.0006071512, -8.03023e-05, -0.0041302717, -0.0007640175, -0.00036873287, -2.5703772e-05, -0.00032157035, -0.0003287257, -0.0009388675, -0.000787879, -0.00037016338, -0.13543198, -0.00017055642, -9.251094e-06, -0.07212947, -3.4167595e-05, -1.5687427e-05, -6.2699432e-06, -1.8841804e-07, -5.79217e-06, -0.0006654207, -0.00014527855, -0.00010355082, -0.00012465262, -0.00010939391, -3.4403198e-05, -0.0012939731, -7.5774245e-05, -0.000331888, -6.2299914e-05, -0.00011618975, -0.00096356997, -7.183848e-05, -0.0038536133, -6.9861335e-06, -5.460492e-07, -0.4973398, -0.097154446, -0.0008666214, -0.00017651686, -0.00019309061, -0.0024064085, -0.04389922, -0.088322915, -0.7843815, -6.3900848e-06, -0.00010307304, -0.0027246212, -3.655083e-05, -0.018014455, -1.7400124e-06, -0.00561282, -6.6619094e-07, -1.0800813e-05, -6.9861335e-06, -3.881579e-05, -6.8669196e-06, -2.3556138e-05, -4.0040345e-06, -3.076318e-07, -0.0028240792, -0.00012810968, -0.0018437349, -0.00017592176, -6.9573514e-05, -0.0002965309, -0.000356215, -9.317965e-05, -2.045765e-05, -0.000113566224, -8.685972e-05, -0.00017163117, -0.00021145344, -0.00016912498, -0.049200613, -0.00012107918, -9.130952e-06, -0.01943715, -1.4974988e-05, -9.72699e-06, -3.333313e-05, -1.2231317e-05, -2.3360508e-06, -0.0009615406, -0.00010271822, -6.838237e-05, -5.979934e-05, -6.325358e-05, -6.623567e-05, -0.0006790799, -6.2299914e-05, -0.00019929133, -6.516092e-05, -0.0070619625, -0.00060333364, -4.5374152e-05, -0.00023428706, -1.1159372e-05, -1.022884e-06, -0.24328008, -0.08720654, -0.07386216, -0.0017975777, -0.00044488095, -0.00063005235, -0.004329238, -0.0060128206, -0.42692342, -0.11913475, -0.20589565, -0.3256592, -4.608659e-05, -0.73193324, -0.001278276, -5.0976956e-05, -3.97704e-05, -1.0084622e-05, -6.031526e-06, -1.0164304, -0.0068772156, -0.031962257, -0.0006844481, -0.00040558525, -0.00014480359, -0.00014611395, -0.0006123982, -7.4104384e-05, -0.00037231104, -1.1039229e-05, -4.9586424e-06, -0.95228535, -0.027966486, -0.087851256, -0.0019368959, -0.014841383, -0.030494709, -0.1396382, -0.108718686, -0.00014063035], "top_logprobs": null, "text_offset": [4123, 4123, 4124, 4131, 4132, 4136, 4139, 4141, 4148, 4149, 4153, 4156, 4158, 4167, 4169, 4175, 4176, 4185, 4187, 4196, 4202, 4203, 4206, 4213, 4214, 4218, 4220, 4229, 4230, 4233, 4236, 4238, 4240, 4242, 4243, 4244, 4245, 4248, 4250, 4251, 4252, 4254, 4257, 4260, 4263, 4265, 4267, 4270, 4272, 4274, 4283, 4284, 4287, 4290, 4292, 4295, 4298, 4300, 4303, 4304, 4306, 4307, 4309, 4311, 4313, 4315, 4324, 4325, 4328, 4331, 4333, 4335, 4337, 4339, 4341, 4343, 4352, 4354, 4360, 4361, 4370, 4372, 4381, 4387, 4388, 4391, 4398, 4399, 4403, 4405, 4414, 4415, 4418, 4421, 4423, 4425, 4427, 4428, 4429, 4430, 4433, 4435, 4436, 4437, 4439, 4442, 4445, 4448, 4450, 4452, 4455, 4457, 4459, 4468, 4469, 4472, 4475, 4477, 4480, 4483, 4485, 4488, 4489, 4491, 4492, 4494, 4496, 4498, 4500, 4509, 4510, 4513, 4516, 4518, 4519, 4521, 4523, 4525, 4527, 4530, 4532, 4541, 4543, 4552, 4558, 4559, 4565, 4567, 4576, 4577, 4580, 4583, 4585, 4586, 4587, 4589, 4591, 4593, 4595, 4597, 4606, 4607, 4610, 4613, 4615, 4617, 4619, 4621, 4624, 4624, 4624, 4624]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LM5G33aZJMsmgsh0kxDoxnhQ2E5", "object": "text_completion", "created": 1651002101, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0053991536, -0.05154855, -0.039842967, -1.8668587e-05, -0.00028782585, -0.00011487751, -0.0023071116, -0.45730215, -0.041252524, -0.65875274, -7.3446927e-06, -5.8010275e-05, -0.00058168365, -0.0017004904, -0.044494037, -5.197998e-06, -0.0080442885, -0.0001810496, -7.698572e-06, -1.5925843e-05, -0.00017961723, -1.2946569e-05, -9.606849e-06, -3.7684315e-06, -1.8841804e-07, -0.0017158334, -4.6684505e-05, -0.002114878, -0.00021693893, -4.3465872e-05, -0.0010228711, -0.000823849, -0.00012286357, -2.0575926e-05, -7.326899e-05, -0.000102479804, -0.001097399, -0.0011484785, -0.00097305595, -0.54520404, -0.00027864208, -4.6010214e-06, -0.009935177, -2.9996223e-05, -1.37819625e-05, -5.0778563e-06, -1.3823812e-06, -5.79217e-06, -0.00045251404, -0.000120601406, -7.24364e-05, -4.775551e-05, -6.3492e-05, -3.130471e-05, -0.0006682836, -0.00010784233, -0.0003067838, -3.2973632e-05, -0.00018867897, -0.00025777495, -2.4152187e-05, -0.00015589187, -3.4089344e-06, -4.4818075e-06, -0.07021586, -0.00023535996, -7.326899e-05, -6.563869e-05, -0.000967149, -0.0014481444, -0.052186884, -0.37913147, -0.45253575, -0.10268578, -1.2468796e-05, -0.29000166, -0.0005303376, -5.5149267e-05, -2.0218295e-05, -5.2288255e-05, -5.0140625e-05, -1.6197912, -0.03726853, -0.011820489, -0.0002199182, -0.003488386, -0.000414708, -4.716134e-05, -0.0003434522, -3.5477948e-05, -2.693682e-06, -0.83010036, -0.0025249564, -0.00085755315, -9.4967785e-05, -0.0060825013, -0.024757465, -0.05823563], "top_logprobs": null, "text_offset": [4272, 4272, 4273, 4280, 4281, 4285, 4288, 4290, 4299, 4301, 4307, 4308, 4317, 4319, 4328, 4334, 4335, 4338, 4345, 4346, 4350, 4352, 4361, 4362, 4365, 4368, 4370, 4372, 4374, 4375, 4376, 4377, 4380, 4382, 4383, 4384, 4386, 4389, 4392, 4395, 4397, 4399, 4402, 4404, 4406, 4415, 4416, 4419, 4422, 4424, 4427, 4430, 4432, 4435, 4436, 4438, 4439, 4441, 4443, 4445, 4447, 4456, 4457, 4460, 4463, 4465, 4467, 4469, 4471, 4473, 4475, 4484, 4486, 4495, 4501, 4502, 4508, 4510, 4519, 4520, 4523, 4526, 4528, 4530, 4532, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4558, 4560, 4562, 4565, 4565]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0053991536, -0.050393015, -0.042716164, -2.1768952e-05, -0.0002539584, -0.000118811404, -0.0020976155, -0.46960768, -0.045482058, -0.64157826, -7.1062755e-06, -5.562516e-05, -0.0005334971, -0.0012951661, -0.04999021, -5.4364154e-06, -0.010006815, -0.00015875288, -8.176345e-06, -1.6045058e-05, -0.00014241754, -1.306671e-05, -7.698572e-06, -4.0040345e-06, -1.8841804e-07, -0.0027773974, -5.4314798e-05, -0.0019679493, -0.00022337619, -3.5477948e-05, -0.0010568841, -0.0010116551, -0.00010474478, -1.688045e-05, -7.11223e-05, -0.00010021203, -0.0011914434, -0.0014824043, -0.0006735307, -0.551654, -0.0002634979, -4.721163e-06, -0.00965986, -2.4152187e-05, -1.1991961e-05, -4.361666e-06, -1.1430258e-06, -3.529076e-06, -0.00053480745, -9.806815e-05, -7.3745825e-05, -4.6206733e-05, -7.946878e-05, -2.987608e-05, -0.0006281441, -9.258174e-05, -0.00022146793, -3.6311474e-05, -0.00013633883, -0.00016757715, -2.4866502e-05, -9.56821e-05, -4.721163e-06, -1.2588937e-05, -0.06485076, -0.0003146553, -9.305951e-05, -7.493791e-05, -0.00088434125, -0.0016649051, -0.05072669, -1.2759345, -1.2468796e-05, -0.2378801, -0.0007431982, -4.3227457e-05, -3.1901687e-05, -1.6045058e-05, -3.883893e-06, -1.2841008, -0.0023533532, -0.00022158712, -8.864972e-05, -0.0033056713, -0.02279467, -0.049885947, -0.035722155, -2.5105857e-05, -0.0010343883, -0.00020167646], "top_logprobs": null, "text_offset": [4272, 4272, 4273, 4280, 4281, 4285, 4288, 4290, 4299, 4301, 4307, 4308, 4317, 4319, 4328, 4334, 4335, 4338, 4345, 4346, 4350, 4352, 4361, 4362, 4365, 4368, 4370, 4372, 4374, 4375, 4376, 4377, 4380, 4382, 4383, 4384, 4386, 4389, 4392, 4395, 4397, 4399, 4402, 4404, 4406, 4415, 4416, 4419, 4422, 4424, 4427, 4430, 4432, 4435, 4436, 4438, 4439, 4441, 4443, 4445, 4447, 4456, 4457, 4460, 4463, 4465, 4467, 4469, 4471, 4473, 4475, 4484, 4490, 4491, 4497, 4499, 4508, 4509, 4512, 4515, 4517, 4519, 4521, 4523, 4526, 4526, 4526, 4526, 4526, 4526]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0053991536, -0.05055068, -0.04341809, -2.5703772e-05, -0.0002880624, -0.00010534082, -0.0022752087, -0.46688405, -0.036283452, -0.6661517, -8.0580685e-06, -8.483411e-05, -0.0007433184, -0.0019079911, -0.05078902, -6.2699432e-06, -0.009551116, -0.00010927377, -6.6294406e-06, -1.9143545e-05, -0.0001033124, -1.6999666e-05, -7.4639065e-06, -4.721163e-06, 0, -0.002422482, -4.799487e-05, -0.0020660786, -0.0002103787, -5.944078e-05, -0.0010103439, -0.0010673857, -0.00012417485, -1.2946569e-05, -0.00012643983, -9.9022756e-05, -0.00096046674, -0.0011477624, -0.00065074867, -1.0932863, -0.0008072649, -1.7236207e-05, -0.01497303, -4.3227457e-05, -1.7119806e-05, -6.031526e-06, -4.277735e-07, -7.937927e-06, -0.00045859648, -0.00011535529, -8.03023e-05, -0.0001427761, -0.000103910315, -5.7770918e-05, -0.00065039104, -0.00011225586, -0.0003033258, -4.46589e-05, -0.00015004877, -0.00024906988, -3.130471e-05, -0.00015743972, -4.838501e-06, -4.9586424e-06, -0.067079514, -0.00024358816, -5.4314798e-05, -6.253833e-05, -0.0010345085, -0.0009959046, -0.0344267, -1.412637, -8.892534e-06, -0.27011046, -0.0004186447, -5.3955304e-05, -5.5269407e-05, -1.8073477e-05, -1.9765537e-06, -0.43538043, -0.0012985077, -0.0023939216, -8.7696986e-05, -0.004262193, -0.021574197, -0.044564147, -0.032619715, -1.7834122e-05, -0.00036444137, -0.00012417485], "top_logprobs": null, "text_offset": [4272, 4272, 4273, 4280, 4281, 4285, 4288, 4290, 4299, 4301, 4307, 4308, 4317, 4319, 4328, 4334, 4335, 4338, 4345, 4346, 4350, 4352, 4361, 4362, 4365, 4368, 4370, 4372, 4374, 4375, 4376, 4377, 4380, 4382, 4383, 4384, 4386, 4389, 4392, 4395, 4397, 4399, 4402, 4404, 4406, 4415, 4416, 4419, 4422, 4424, 4427, 4430, 4432, 4435, 4436, 4438, 4439, 4441, 4443, 4445, 4447, 4456, 4457, 4460, 4463, 4465, 4467, 4469, 4471, 4473, 4475, 4484, 4490, 4491, 4497, 4499, 4508, 4509, 4512, 4515, 4517, 4519, 4521, 4523, 4526, 4526, 4526, 4526, 4526, 4526]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0053991536, -0.050528675, -0.05034506, -2.2365928e-05, -0.00025801334, -0.0001015252, -0.0021477307, -0.46647725, -0.041980408, -0.702952, -6.8669196e-06, -9.9616926e-05, -0.0006040489, -0.0022509561, -0.04078, -6.8669196e-06, -0.009009734, -0.00016054008, -8.296486e-06, -1.7119806e-05, -0.00013896049, -1.2112103e-05, -8.7733215e-06, -5.0778563e-06, -6.827632e-08, -0.002629595, -4.883026e-05, -0.0023709792, -0.00022051518, -4.3227457e-05, -0.0009787799, -0.0010197707, -0.00011308939, -2.200643e-05, -7.648668e-05, -9.377476e-05, -0.0011154774, -0.001433281, -0.00067675306, -0.5754892, -0.000306306, -4.838501e-06, -0.009037038, -2.3317722e-05, -1.2588937e-05, -5.4364154e-06, -1.2622395e-06, -9.606849e-06, -0.0005843072, -0.00010796247, -9.4729374e-05, -6.015603e-05, -8.507158e-05, -3.357061e-05, -0.0007662843, -0.00010057153, -0.0002494275, -3.965026e-05, -0.00022731101, -0.0003022548, -2.9399247e-05, -0.00011022838, -4.9586424e-06, -4.6010214e-06, -0.061713617, -0.00031203084, -6.4566746e-05, -8.018216e-05, -0.0012261152, -0.0017643785, -0.05878771, -0.40915245, -1.21525, -1.44972155e-05, -0.00025240867, -0.0023020937, -0.0010262746, -0.11943406, -1.1278585e-05, -0.01698584, -9.846204e-06, -8.4157e-06, -2.3795494e-05, -7.56541e-05, -1.2828294e-05, -1.6999666e-05, -2.0966954e-06, -1.5006569e-06, -0.0039280513, -0.0001270368, -0.0018504227, -0.00022313965, -2.7371756e-05, -0.0005940307, -0.0013664895, -8.5905114e-05, -2.141132e-05, -6.170386e-05, -7.958892e-05, -0.00082969584, -0.00047040381, -0.0003214502, -0.38181508, -0.0003762477, -4.361666e-06, -0.005469692, -1.5214344e-05, -1.306671e-05, -1.0681599e-05, -4.144026e-05, -5.4364154e-06, -0.00042198348, -0.00012942286, -7.97072e-05, -3.8217877e-05, -5.7532503e-05, -5.490991e-05, -0.0005105368, -8.3045044e-05, -0.00013824523, -2.141132e-05, -0.00072351756, -0.00038984313, -2.8921473e-05, -0.00017711478, -1.6045058e-05, -2.4543265e-06, -0.9898798, -0.001769036, -0.00012429406, -9.866513e-05, -0.004129792, -0.07638059, -0.06486698, -0.047597706, -3.643162e-05, -0.00082647346, -0.00017783002], "top_logprobs": null, "text_offset": [4272, 4272, 4273, 4280, 4281, 4285, 4288, 4290, 4299, 4301, 4307, 4308, 4317, 4319, 4328, 4334, 4335, 4338, 4345, 4346, 4350, 4352, 4361, 4362, 4365, 4368, 4370, 4372, 4374, 4375, 4376, 4377, 4380, 4382, 4383, 4384, 4386, 4389, 4392, 4395, 4397, 4399, 4402, 4404, 4406, 4415, 4416, 4419, 4422, 4424, 4427, 4430, 4432, 4435, 4436, 4438, 4439, 4441, 4443, 4445, 4447, 4456, 4457, 4460, 4463, 4465, 4467, 4469, 4471, 4473, 4475, 4484, 4486, 4492, 4493, 4502, 4504, 4513, 4519, 4520, 4523, 4530, 4531, 4535, 4537, 4546, 4547, 4550, 4553, 4555, 4557, 4559, 4560, 4561, 4562, 4565, 4567, 4568, 4569, 4571, 4574, 4577, 4580, 4582, 4584, 4587, 4589, 4591, 4600, 4601, 4604, 4607, 4609, 4612, 4615, 4617, 4620, 4621, 4623, 4624, 4626, 4628, 4630, 4632, 4641, 4642, 4645, 4648, 4650, 4652, 4654, 4656, 4659, 4659, 4659, 4659, 4659, 4659]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0053991536, -0.050993294, -0.041604035, -2.033751e-05, -0.00033844542, -0.00010748563, -0.002071336, -0.45519027, -0.044035055, -0.66102755, -7.937927e-06, -0.00010092916, -0.0006219424, -0.0027522927, -0.047837023, -7.1062755e-06, -0.010599464, -0.0001620926, -9.490449e-06, -2.1291178e-05, -0.0001319253, -1.3306066e-05, -1.0204763e-05, -7.4639065e-06, -6.827632e-08, -0.0021439076, -5.896488e-05, -0.0016169044, -0.00021228698, -4.430127e-05, -0.00092663785, -0.0009316502, -0.00013597934, -1.7236207e-05, -7.9112084e-05, -0.00011237507, -0.0011508646, -0.0016053807, -0.000623968, -1.0992913, -0.00067007454, -1.5925843e-05, -0.020770885, -3.6311474e-05, -1.5687427e-05, -4.838501e-06, -3.076318e-07, -6.3900848e-06, -0.00038590643, -0.00013740796, -8.709908e-05, -0.00017043721, -0.00012608219, -5.5745302e-05, -0.0006717416, -0.00011320953, -0.00024787875, -3.869565e-05, -0.00013264055, -0.0004386802, -3.1901687e-05, -0.0001562495, -5.5556293e-06, -3.6482897e-06, -0.065301016, -0.00021896455, -5.8367896e-05, -5.848711e-05, -0.0007570377, -0.0010456071, -0.031021284, -0.30577645, -0.1993986, -0.085885756, -7.224551e-06, -0.13792808, -0.000161138, -3.488097e-05, -7.4639065e-06, -6.0276172e-05, -1.4854846e-05, -0.14483511, -0.0013350362, -7.005035e-05, -6.0395385e-05, -0.00019440286, -3.0947078e-05, -3.0947078e-05, -0.000107007865, -1.0920954e-05, -1.2622395e-06, -0.74335706, -0.0028668798, -0.00095127744, -5.4194657e-05, -0.0028158897, -0.028567908, -0.06506638], "top_logprobs": null, "text_offset": [4272, 4272, 4273, 4280, 4281, 4285, 4288, 4290, 4299, 4301, 4307, 4308, 4317, 4319, 4328, 4334, 4335, 4338, 4345, 4346, 4350, 4352, 4361, 4362, 4365, 4368, 4370, 4372, 4374, 4375, 4376, 4377, 4380, 4382, 4383, 4384, 4386, 4389, 4392, 4395, 4397, 4399, 4402, 4404, 4406, 4415, 4416, 4419, 4422, 4424, 4427, 4430, 4432, 4435, 4436, 4438, 4439, 4441, 4443, 4445, 4447, 4456, 4457, 4460, 4463, 4465, 4467, 4469, 4471, 4473, 4475, 4484, 4486, 4495, 4501, 4502, 4508, 4510, 4519, 4520, 4523, 4526, 4528, 4530, 4532, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4558, 4560, 4562, 4565, 4565]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0053991536, -0.05008013, -0.045507573, -2.3675353e-05, -0.00031608582, -0.000113686365, -0.0021906807, -0.99174565, -9.846204e-06, -0.00021443368, -1.7834122e-05, -0.0017132063, -0.056808, -0.010005854, -0.64206284, -3.170517e-06, -2.7013197e-05, -0.00023023302, -8.0899285e-05, -0.03779573, -7.3446927e-06, -0.008034133, -6.778445e-05, -8.4157e-06, -1.2468796e-05, -7.8514175e-05, -1.1753544e-05, -1.0800813e-05, -6.5092986e-06, -6.827632e-08, -0.0023046036, -4.9427246e-05, -0.0020671543, -0.00019070739, -3.643162e-05, -0.0008453845, -0.0010206071, -0.00010128584, -2.1529595e-05, -6.21807e-05, -0.00011809803, -0.000757874, -0.0012274274, -0.0006234912, -0.6474339, -0.0001831916, -4.9586424e-06, -0.005620972, -2.319758e-05, -1.2112103e-05, -6.2699432e-06, -1.1430258e-06, -9.186649e-05, -0.00051411585, -0.0001101101, -7.815842e-05, -4.5255874e-05, -8.852958e-05, -2.665838e-05, -0.00060035154, -9.806815e-05, -0.00022635736, -3.881579e-05, -8.197403e-05, -0.00010820183, -3.4403198e-05, -0.00014289531, -3.4089344e-06, -1.022884e-06, -0.07988083, -0.0005734527, -7.136165e-05, -5.8367896e-05, -8.960433e-05, -0.00039795213, -0.010609584, -0.1524123, -0.23483811, -0.027315564, -4.2433903e-06, -0.027283099, -6.623567e-05, -1.7356348e-05, -5.79217e-06, -3.4089344e-06, -4.1232483e-06, -0.06730008, -0.00035049114, -8.650302e-05, -5.6460554e-05, -0.0024926302, -2.6538237e-05, -2.8565719e-05, -6.516092e-05, -7.698572e-06, -5.4364154e-06, -0.5333541, -0.0018557385, -0.005722456, -6.6949986e-05, -0.0014677801, -0.002517966, -0.11707513, -6.873624e-05, -2.3795494e-05, -0.00028555995, -0.0014953004, -0.004511538, -0.016607793, -0.058641322, -1.1991961e-05, -0.1642748, -3.023464e-05, -1.5805701e-05, -7.937927e-06, -3.051303e-06, -6.827632e-08, -0.016444603, -9.890355e-05, -0.0012912257, -6.802381e-05, -6.623567e-05, -4.847264e-05, -1.1039229e-05, -2.5105857e-05, -1.44972155e-05, -3.4403198e-05, -2.0966954e-06, -2.8138238e-06, -0.0036039534, -6.122609e-05, -0.0029290495, -0.0021768806, -0.482398, -0.0024971724, -2.8921473e-05, -7.11223e-05, -6.122609e-05, -0.000114518014, -0.0005709483, -1.4616429e-05, -0.00017806844, -0.0035748808, -0.00020930769, -4.6684505e-05, -5.312365e-05, -0.00018641399, -6.838237e-05, -6.5092986e-06, -2.0575926e-05, -3.0947078e-05, -3.5240468e-05, -4.5374152e-05, -4.277735e-07, -2.28437e-05, -0.00019285125, -2.462996e-05, -4.6010214e-06, -1.5470172, -4.5135734e-05, -1.4974988e-05, -2.1768952e-05, -4.277735e-07, -8.7733215e-06, -0.0013260223, -0.00017341838, -7.684431e-05, -8.256821e-05, -0.000118931544, -2.7490969e-05, -0.0012505258, -0.0001296622, -0.00014098798, -4.954739e-05, -0.013647365, -0.036094896, -0.15112814, -0.09366937], "top_logprobs": null, "text_offset": [4272, 4272, 4273, 4280, 4281, 4285, 4288, 4290, 4297, 4298, 4302, 4305, 4307, 4316, 4318, 4324, 4325, 4334, 4336, 4345, 4351, 4352, 4355, 4362, 4363, 4367, 4369, 4378, 4379, 4382, 4385, 4387, 4389, 4391, 4392, 4393, 4394, 4397, 4399, 4400, 4401, 4403, 4406, 4409, 4412, 4414, 4416, 4419, 4421, 4423, 4432, 4433, 4436, 4439, 4441, 4444, 4447, 4449, 4452, 4453, 4455, 4456, 4458, 4460, 4462, 4464, 4473, 4474, 4477, 4480, 4482, 4484, 4486, 4488, 4490, 4492, 4501, 4503, 4512, 4518, 4519, 4525, 4527, 4536, 4537, 4540, 4543, 4545, 4547, 4549, 4551, 4553, 4555, 4564, 4565, 4568, 4571, 4573, 4575, 4577, 4579, 4582, 4584, 4590, 4591, 4600, 4602, 4611, 4613, 4622, 4628, 4629, 4635, 4637, 4646, 4647, 4650, 4653, 4655, 4656, 4657, 4659, 4661, 4663, 4665, 4667, 4676, 4677, 4680, 4683, 4685, 4687, 4690, 4693, 4695, 4697, 4698, 4699, 4700, 4702, 4705, 4708, 4711, 4713, 4716, 4719, 4722, 4724, 4726, 4727, 4728, 4729, 4731, 4734, 4737, 4740, 4742, 4744, 4747, 4749, 4751, 4760, 4761, 4764, 4767, 4769, 4772, 4775, 4777, 4780, 4781, 4783, 4784, 4786, 4788, 4791, 4791, 4791]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "<|endoftext|>", "local", " Self", " =", " require", " \""], "token_logprobs": [-0.0053991536, -0.051908977, -0.044254087, -2.4272329e-05, -0.00048537247, -8.471396e-05, -0.0020532378, -1.0061731, -8.892534e-06, -0.00027482552, -2.3795494e-05, -0.001479899, -2.9243615, -0.000115950395, -0.00025217026, -0.0006676894, -0.0031449962, -0.21410155, -0.048501484, -0.92986625, -0.54252505, -2.7490969e-05, -0.15983538, -0.00062826235, -5.991855e-05, -2.6893982e-05, -1.2828294e-05, 0, -0.12603866, -0.0012661017, -0.00010760485, -9.5442745e-05, -0.0002747054, -0.00041983582, -6.468596e-05, -0.0016028754, -3.4642555e-05, -1.6207987e-06, -0.2853383, -0.00064239843, -0.00014694748, -4.5255874e-05, -0.00019869342, -0.0010477529, -0.05361261, -0.16283445, -0.04493871, -0.023115892, -6.746778e-06, -0.068587855, -3.97704e-05, -1.0323977e-05, -4.721163e-06, -1.3542607e-05, -1.7400124e-06, -0.034877278, -0.00027387374, -6.9453374e-05, -3.678925e-05, -0.00048274704, -0.00011308939, -2.2604345e-05, -4.966285e-05, -1.6282536e-05, -3.7684315e-06, -0.26148605, -0.00048811614, -0.003930563, -5.693833e-05, -0.006383285, -0.0015440708, -0.6244763, -0.11575733, -0.27805856, -0.07152446, -6.2699432e-06, -0.34080365, -8.8290224e-05, -2.6180607e-05, -1.6402679e-05, -6.031526e-06, -5.197998e-06, -0.08273848, -0.00032991965, -0.0001850999, -5.0856816e-05, -9.198663e-05, -0.00013156954, -4.847264e-05, -0.00015493727, -1.3306066e-05, 0, -0.8715833, -0.0030353433, -0.0007310324, -6.277768e-05, -0.027887845, -0.004949318, -0.8346922, -0.09213132, -0.16305058, -0.10259113, -5.0778563e-06, -0.3880604, -0.0001607785, -2.8206221e-05, -1.8668587e-05, -5.0778563e-06, -5.460492e-07, -0.06866184, -0.0006212253, -6.6593304e-05, -4.370523e-05, -0.00012799047, -0.0002038222, -5.669991e-05, -0.00047517402, -3.1781543e-05, -2.2159093e-06, -0.5828948, -0.004211493, -0.015778309, -0.00023738743, -0.009204377, -6.6076856, -5.401871, -3.5329077, -0.0021494036, -1.0323977e-05, -9.370307e-06], "top_logprobs": null, "text_offset": [4272, 4272, 4273, 4280, 4281, 4285, 4288, 4290, 4297, 4298, 4302, 4305, 4307, 4314, 4315, 4319, 4322, 4324, 4333, 4335, 4344, 4350, 4351, 4357, 4359, 4368, 4369, 4372, 4375, 4377, 4379, 4381, 4383, 4385, 4387, 4396, 4397, 4400, 4403, 4405, 4407, 4409, 4411, 4413, 4415, 4424, 4426, 4435, 4441, 4442, 4448, 4450, 4459, 4460, 4463, 4466, 4468, 4470, 4472, 4474, 4476, 4478, 4487, 4488, 4491, 4494, 4496, 4498, 4500, 4502, 4505, 4507, 4516, 4518, 4527, 4533, 4534, 4540, 4542, 4551, 4552, 4555, 4558, 4560, 4562, 4564, 4566, 4568, 4570, 4579, 4580, 4583, 4586, 4588, 4590, 4592, 4594, 4597, 4599, 4608, 4610, 4619, 4625, 4626, 4632, 4634, 4643, 4644, 4647, 4650, 4652, 4654, 4656, 4658, 4660, 4662, 4671, 4672, 4675, 4678, 4680, 4682, 4684, 4686, 4689, 4689, 4689, 4689, 4689, 4689]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0053991536, -0.05212233, -0.049760893, -2.1171965e-05, -0.00023750478, -7.4460135e-05, -0.0022917574, -0.45533857, -0.03633148, -0.6493454, -6.2699432e-06, -6.015603e-05, -0.00066971505, -0.0013500142, -0.050423604, -5.912312e-06, -0.008822584, -0.00016733873, -8.0580685e-06, -1.7595703e-05, -0.00014063035, -1.2231317e-05, -9.606849e-06, -5.675771e-06, -6.827632e-08, -0.0015628758, -5.145473e-05, -0.0018122065, -0.00022349542, -5.3837026e-05, -0.001025259, -0.0013241122, -0.00011714342, -1.5567284e-05, -7.481963e-05, -7.768064e-05, -0.0008022544, -0.0012189561, -0.0006698352, -1.0587325, -0.000775592, -1.2351458e-05, -0.02058274, -3.8577375e-05, -1.855031e-05, -5.197998e-06, -5.460492e-07, -3.6482897e-06, -0.00038781474, -0.00015851353, -9.461016e-05, -0.00018271852, -0.0001097506, -5.312365e-05, -0.0006769914, -0.0001033124, -0.00028722888, -3.762558e-05, -0.0001064137, -0.00044989053, -2.9280032e-05, -0.00020346364, -5.3162735e-06, -1.7400124e-06, -0.06123944, -0.0002581335, -4.5255874e-05, -6.0633804e-05, -0.0005972493, -0.00077451725, -0.032896798, -0.30123076, -0.20791051, -0.091549285, -5.3162735e-06, -0.11229254, -0.00013848272, -3.4762696e-05, -9.251094e-06, -4.477904e-05, -1.9860674e-05, -0.15207694, -0.0010385644, -6.289782e-05, -7.684431e-05, -0.00019297047, -7.720381e-05, -3.1901687e-05, -0.00011058788, -9.490449e-06, -1.9765537e-06, -0.8702441, -0.0044754343, -0.03980581, -0.0002022697, -0.002951644, -0.026651412, -0.06450551], "top_logprobs": null, "text_offset": [4272, 4272, 4273, 4280, 4281, 4285, 4288, 4290, 4299, 4301, 4307, 4308, 4317, 4319, 4328, 4334, 4335, 4338, 4345, 4346, 4350, 4352, 4361, 4362, 4365, 4368, 4370, 4372, 4374, 4375, 4376, 4377, 4380, 4382, 4383, 4384, 4386, 4389, 4392, 4395, 4397, 4399, 4402, 4404, 4406, 4415, 4416, 4419, 4422, 4424, 4427, 4430, 4432, 4435, 4436, 4438, 4439, 4441, 4443, 4445, 4447, 4456, 4457, 4460, 4463, 4465, 4467, 4469, 4471, 4473, 4475, 4484, 4486, 4495, 4501, 4502, 4508, 4510, 4519, 4520, 4523, 4526, 4528, 4530, 4532, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4558, 4560, 4562, 4565, 4565]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0053991536, -0.05071966, -0.037000306, -2.3435998e-05, -0.00034524407, -7.648668e-05, -0.0021200152, -0.9854784, -7.584048e-06, -0.00023273456, -1.2351458e-05, -0.0017605574, -2.8115885, -9.24644e-05, -0.00037386353, -0.00052258343, -0.0035809218, -0.22900869, -0.04639906, -0.5033479, -1.855031e-05, -9.628002e-05, -0.0011505078, -0.00037612757, -0.06189274, -9.130952e-06, -0.009019535, -8.662224e-05, -1.3306066e-05, -3.8457234e-05, -0.00015613029, -2.5464416e-05, -1.7595703e-05, -7.584048e-06, -6.827632e-08, -0.0050373753, -5.1215375e-05, -0.0037787037, -0.0002741131, -1.9143545e-05, -0.0018326908, -0.0018494673, -0.00015958735, -2.1889093e-05, -8.018216e-05, -0.00011297111, -0.0010446515, -0.0017176244, -0.0004645588, -0.7520304, -0.00038733694, -2.582111e-05, -0.011959823, -7.1481794e-05, -2.1529595e-05, -1.2231317e-05, -2.8138238e-06, -1.5006569e-06, -0.00063100696, -0.00044953197, -0.00012119652, -0.00026838828, -0.00011988616, -4.1200903e-05, -0.00076234766, -0.000104625564, -0.00034941637, -5.1334588e-05, -0.0004878777, -0.0010915541, -0.0001097506, -0.0018377632, -3.2973632e-05, -1.3823812e-06, -0.13029094, -0.0020031861, -0.00015040733, -0.00014683108, -0.000509462, -0.0010666704, -0.024262514, -1.9819307, -1.0084622e-05, -0.1200966, -0.0012237272, -4.4539687e-05, -2.665838e-05, -1.0204763e-05, -3.4089344e-06, -0.658846, -0.0006431137, -6.2299914e-05, -8.507158e-05, -0.003062185, -0.0019033336, -0.33504125, -0.59073144, -0.4979025, -0.15512608, -5.912312e-06, -0.11954119, -0.00015004877, -4.0246297e-05, -2.1768952e-05, -4.1232483e-06, -1.6207987e-06, -0.19787945, -0.0007795259, -6.3492e-05, -5.5745302e-05, -0.00020012581, -0.0001536241, -4.1080762e-05, -0.0003975945, -2.9311614e-06, -5.460492e-07, -0.5183703, -0.0018651746, -0.021788115, -0.000113448885, -0.0116377575, -0.017879799, -1.4660174, -0.17331563, -0.36222705, -0.23367247, -6.031526e-06, -0.479068, -0.00026886605, -4.144026e-05, -2.2958224e-05, -4.277735e-07, -4.277735e-07, -0.21279235, -0.00063583726, -0.0001783078, -6.814395e-05, -8.018216e-05, -0.00015923065, -4.0963423e-05, -0.00053290103, -1.8073477e-05, 0, -0.59478575, -0.0023730106, -0.03681823, -0.00030440054, -0.00913893, -0.020757314, -0.06259888, -0.058569267, -2.6060465e-05, -0.0009523522, -0.00023154433], "top_logprobs": null, "text_offset": [4272, 4272, 4273, 4280, 4281, 4285, 4288, 4290, 4297, 4298, 4302, 4305, 4307, 4314, 4315, 4319, 4322, 4324, 4333, 4335, 4341, 4342, 4351, 4353, 4362, 4368, 4369, 4372, 4379, 4380, 4384, 4386, 4395, 4396, 4399, 4402, 4404, 4406, 4408, 4409, 4410, 4411, 4414, 4416, 4417, 4418, 4420, 4423, 4426, 4429, 4431, 4433, 4436, 4438, 4440, 4449, 4450, 4453, 4456, 4458, 4461, 4464, 4466, 4469, 4470, 4472, 4473, 4475, 4477, 4479, 4481, 4490, 4491, 4494, 4497, 4499, 4501, 4503, 4505, 4507, 4509, 4518, 4524, 4525, 4531, 4533, 4542, 4543, 4546, 4549, 4551, 4553, 4555, 4557, 4560, 4562, 4571, 4573, 4582, 4588, 4589, 4595, 4597, 4606, 4607, 4610, 4613, 4615, 4617, 4619, 4621, 4623, 4625, 4634, 4635, 4638, 4641, 4643, 4645, 4647, 4649, 4652, 4654, 4663, 4665, 4674, 4680, 4681, 4687, 4689, 4698, 4699, 4702, 4705, 4707, 4709, 4711, 4713, 4715, 4717, 4726, 4727, 4730, 4733, 4735, 4737, 4739, 4741, 4744, 4744, 4744, 4744, 4744, 4744]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0053991536, -0.050847784, -0.045275982, -2.0575926e-05, -0.0002539584, -8.7576846e-05, -0.0023831094, -0.4743529, -0.04562117, -0.6865466, -7.584048e-06, -6.3134365e-05, -0.0006421591, -0.0022419346, -0.046197355, -6.1516675e-06, -0.009262489, -0.00016507095, -8.0580685e-06, -1.4854846e-05, -0.00013073228, -1.4736571e-05, -1.1514188e-05, -4.6010214e-06, -1.8841804e-07, -0.0022388287, -4.716134e-05, -0.0021259289, -0.00020537194, -4.6684505e-05, -0.0010053325, -0.00096464186, -0.00016137547, -1.9621319e-05, -6.790459e-05, -6.635395e-05, -0.00088720414, -0.0011078396, -0.00072936155, -1.0510745, -0.0008147807, -1.3422466e-05, -0.023218371, -4.859278e-05, -1.9028084e-05, -4.361666e-06, -5.460492e-07, -3.2906587e-06, -0.0004009333, -0.00013586106, -7.6252014e-05, -0.00023285468, -9.985534e-05, -5.991855e-05, -0.0007380695, -8.7932596e-05, -0.00022880347, -3.249586e-05, -0.00015577173, -0.00034548063, -2.9996223e-05, -0.00012310104, -6.2699432e-06, -2.2159093e-06, -0.06823649, -0.00024775858, -5.979934e-05, -5.848711e-05, -0.0007344904, -0.000983076, -0.0349003, -0.3267991, -1.6691878, -1.0444119e-05, -0.00028126748, -0.0013302614, -0.0009369583, -0.12120654, -7.584048e-06, -0.0066512832, -1.1991961e-05, -8.892534e-06, -1.3900239e-05, -3.8577375e-05, -1.0444119e-05, -1.0323977e-05, -3.4089344e-06, -1.6207987e-06, -0.0017654523, -4.382537e-05, -0.0012714727, -0.00014969209, -2.558363e-05, -0.0004182852, -0.0007550112, -0.000110942696, -1.8907942e-05, -6.158372e-05, -9.174727e-05, -0.00039926343, -0.0006202707, -0.00022850404, -0.78786325, -0.00059069006, -1.0920954e-05, -0.0040489333, -2.0218295e-05, -1.0920954e-05, -2.2126573e-05, -5.5556293e-06, -1.2351458e-05, -0.0004287793, -0.00020775704, -0.00014873935, -5.0140625e-05, -5.3716885e-05, -5.7652644e-05, -0.0010310467, -7.791906e-05, -0.00018867897, -2.6060465e-05, -0.0045780023, -0.00058842317, -3.4167595e-05, -0.00031668, -9.490449e-06, -6.827632e-08, -0.83078295, -0.0036904567, -0.004182641, -0.00012381817, -0.0062521053, -0.03130912, -0.056296114, -0.04139931, -2.7371756e-05, -0.00066398835, -0.0002395332], "top_logprobs": null, "text_offset": [4272, 4272, 4273, 4280, 4281, 4285, 4288, 4290, 4299, 4301, 4307, 4308, 4317, 4319, 4328, 4334, 4335, 4338, 4345, 4346, 4350, 4352, 4361, 4362, 4365, 4368, 4370, 4372, 4374, 4375, 4376, 4377, 4380, 4382, 4383, 4384, 4386, 4389, 4392, 4395, 4397, 4399, 4402, 4404, 4406, 4415, 4416, 4419, 4422, 4424, 4427, 4430, 4432, 4435, 4436, 4438, 4439, 4441, 4443, 4445, 4447, 4456, 4457, 4460, 4463, 4465, 4467, 4469, 4471, 4473, 4475, 4484, 4486, 4492, 4493, 4502, 4504, 4513, 4519, 4520, 4523, 4530, 4531, 4535, 4537, 4546, 4547, 4550, 4553, 4555, 4557, 4559, 4560, 4561, 4562, 4565, 4567, 4568, 4569, 4571, 4574, 4577, 4580, 4582, 4584, 4587, 4589, 4591, 4600, 4601, 4604, 4607, 4609, 4612, 4615, 4617, 4620, 4621, 4623, 4624, 4626, 4628, 4630, 4632, 4641, 4642, 4645, 4648, 4650, 4652, 4654, 4656, 4659, 4659, 4659, 4659, 4659, 4659]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LMGuDlP3iEdXLeD6Q0QR948Cr8S", "object": "text_completion", "created": 1651002112, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform small_square (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.007501275, -0.097359546, -0.092058115, -8.197403e-05, -0.00047869395, -8.8051806e-05, -0.021748703, -0.53506285, -2.1500118, -5.8130416e-05, -0.5643198, -0.003964434, -0.00012930272, -0.0021138024, -3.9292627e-05, -6.827632e-08, -0.43105346, -0.012366175, -0.0009904745, -0.00034238215, -0.0048745065, -0.015292962, -0.16221574, -1.1905761, -4.036551e-05, -0.8536454, -0.0037771484, -8.578871e-05, -0.00010748563, -4.2433903e-06, -6.1516675e-06, -0.24964304, -0.028150631, -0.008947545, -0.00092102936, -0.008557012, -0.030623022, -0.05077554, -0.050512813, -0.00013645618, -0.0005467358, -5.109523e-05, -0.025685858, -1.1536385], "top_logprobs": null, "text_offset": [4370, 4370, 4371, 4378, 4379, 4383, 4386, 4388, 4397, 4403, 4404, 4410, 4412, 4421, 4422, 4425, 4428, 4430, 4432, 4434, 4436, 4438, 4440, 4449, 4455, 4456, 4462, 4464, 4473, 4474, 4477, 4480, 4482, 4484, 4486, 4488, 4491, 4491, 4491, 4491, 4491, 4491, 4491, 4491]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.007501275, -0.09106552, -0.096649386, -7.946878e-05, -0.0006937529, -0.00010545909, -0.023878288, -0.5434679, -0.13374604, -0.70491016, -0.2666475, -1.4736571e-05, -0.18767832, -0.0009816437, -5.3363005e-05, -3.142485e-05, -1.5214344e-05, -5.0778563e-06, -0.11495369, -0.005171034, -6.3014224e-05, -0.00012107918, -0.0004167364, -0.00091375294, -4.2033495e-05, -0.0006347644, -1.6402679e-05, -1.771398e-05, -0.30564865, -0.0022281357, -4.5967376e-05, -4.8353428e-05, -0.00084455, -0.016806707, -0.10893732, -0.20288566, -0.12514591, -0.04636447, -6.9861335e-06, -2.0468168, -0.0014194321, -7.5774245e-05, -2.033751e-05, -2.4750101e-05, -6.1516675e-06, -0.6348347, -0.018044865, -0.00039628413, -0.00011618975, -0.0034258813, -0.0016829966, -0.00026624158, -0.0026157903, -3.2973632e-05, -7.8540467e-07, -0.40267372, -0.02591882, -0.0057642995, -0.00041935995, -0.0035946807, -0.014327968, -0.047024228, -0.05795825, -6.0395385e-05, -0.00035931446, -3.5477948e-05, -0.010233151, -0.84348494], "top_logprobs": null, "text_offset": [4370, 4370, 4371, 4378, 4379, 4383, 4386, 4388, 4397, 4399, 4408, 4414, 4415, 4421, 4423, 4432, 4433, 4436, 4439, 4441, 4443, 4445, 4447, 4449, 4451, 4460, 4461, 4464, 4467, 4469, 4471, 4473, 4475, 4477, 4479, 4488, 4490, 4499, 4505, 4506, 4512, 4514, 4523, 4524, 4527, 4530, 4532, 4534, 4536, 4538, 4540, 4542, 4551, 4552, 4555, 4558, 4560, 4562, 4564, 4566, 4569, 4569, 4569, 4569, 4569, 4569, 4569, 4569]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.007501275, -0.10520429, -0.0788965, -5.9679198e-05, -0.00089961407, -9.866513e-05, -0.017707301, -0.5058031, -0.16139267, -0.7384102, -0.25266606, -1.3900239e-05, -0.17665116, -0.0009482962, -5.562516e-05, -3.166233e-05, -1.163433e-05, -3.529076e-06, -0.10277422, -0.004600755, -6.838237e-05, -0.00011034852, -0.0004054651, -0.0008129916, -3.9172486e-05, -0.00064645434, -1.5327929e-05, -2.6419024e-05, -0.30375943, -0.0017587645, -4.5255874e-05, -6.0276172e-05, -0.0010184594, -0.019543327, -0.11383096, -0.21176466, -0.12224947, -0.045934964, -8.176345e-06, -0.15334785, -0.00039735518, -3.1065356e-05, -1.4377073e-05, -1.9860674e-05, -8.5358415e-06, -0.038299423, -0.007851551, -5.7652644e-05, -7.708367e-05, -0.00028150497, -0.0004893054, -4.859278e-05, -9.174727e-05, -1.2946569e-05, -9.055464e-07, -0.11924963, -0.036738217, -0.00012477185, -0.00016995943, -0.0041394285, -0.09469509, -0.060261305, -0.077120915, -0.0001532674, -0.0009914301, -0.00010414779, -0.010780021, -0.69125396], "top_logprobs": null, "text_offset": [4370, 4370, 4371, 4378, 4379, 4383, 4386, 4388, 4397, 4399, 4408, 4414, 4415, 4421, 4423, 4432, 4433, 4436, 4439, 4441, 4443, 4445, 4447, 4449, 4451, 4460, 4461, 4464, 4467, 4469, 4471, 4473, 4475, 4477, 4479, 4488, 4490, 4499, 4505, 4506, 4512, 4514, 4523, 4524, 4527, 4530, 4532, 4534, 4536, 4538, 4540, 4542, 4551, 4552, 4555, 4558, 4560, 4562, 4564, 4566, 4569, 4569, 4569, 4569, 4569, 4569, 4569, 4569]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))))", "\n", "(", "connect", "_", "stro", "kes", " (", "transform"], "token_logprobs": [-0.007501275, -0.10520429, -0.0788965, -5.9679198e-05, -0.0009022376, -0.00014539869, -0.018820113, -0.53894305, -0.16045393, -0.7546521, -0.24148403, -1.0561456e-05, -0.17863671, -0.0008814775, -4.489638e-05, -2.6180607e-05, -1.1991961e-05, -2.693682e-06, -0.1292828, -0.0054353513, -6.9453374e-05, -0.00010283744, -0.0005526991, -0.000883504, -3.7028603e-05, -0.0003639655, -1.2231317e-05, -1.9741461e-05, -0.28720212, -0.0019669929, -3.7148744e-05, -4.1558535e-05, -0.00075560535, -0.0194332, -3.2805421, -0.003453337, -0.023976022, -0.00050111365, -0.083042055, -0.101696886, -0.23944692, -0.17690204, -0.046062026, -6.746778e-06, -0.10920527, -0.00046539606, -4.9069615e-05, -1.3185924e-05, -3.3928238e-05, -1.1430258e-06, -0.074629895, -0.0051691183, -4.072407e-05, -4.7399757e-05, -0.0001507631, -0.0008601776, -6.7427754e-05, -0.0011814777, -1.8073477e-05, -1.2622395e-06, -0.29458162, -0.017631287, -7.744129e-05, -3.953198e-05, -0.0004952696, -0.01797416, -0.073129125, -0.31533322, -0.04839368, -0.015747651, -9.012677e-06, -0.11009386, -0.00031882763, -2.9041616e-05, -2.272356e-05, -7.8540467e-07, -4.1320116e-05, -0.08291927, -0.010693924, -4.0603925e-05, -4.2870764e-05, -0.00045621043, -0.0006991211, -7.016862e-05, -5.7413286e-05, -1.8668587e-05, -4.277735e-07, -0.2546951, -0.046286248, -0.00030070322, -0.000116070536, -0.0067400895, -0.023979869, -0.0590664, -0.08498336, -5.145473e-05, -0.0007136739, -6.48061e-05, -0.008503511, -0.58191633], "top_logprobs": null, "text_offset": [4370, 4370, 4371, 4378, 4379, 4383, 4386, 4388, 4397, 4399, 4408, 4414, 4415, 4421, 4423, 4432, 4433, 4436, 4439, 4441, 4443, 4445, 4447, 4449, 4451, 4460, 4461, 4464, 4467, 4469, 4471, 4473, 4475, 4477, 4479, 4486, 4487, 4491, 4494, 4496, 4505, 4507, 4516, 4522, 4523, 4529, 4531, 4540, 4541, 4544, 4547, 4549, 4551, 4553, 4555, 4557, 4559, 4568, 4569, 4572, 4575, 4577, 4579, 4581, 4583, 4585, 4587, 4596, 4598, 4607, 4613, 4614, 4620, 4622, 4631, 4632, 4635, 4638, 4640, 4642, 4644, 4646, 4648, 4650, 4659, 4660, 4663, 4666, 4668, 4670, 4672, 4674, 4678, 4678, 4678, 4678, 4678, 4678, 4678, 4678]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.007501275, -0.09369038, -0.09193996, -6.4921565e-05, -0.00047028364, -0.00011392572, -0.02247385, -0.53991383, -0.14013185, -0.62580025, -1.3306066e-05, -0.00019428364, -0.0018188945, -0.00011106284, -0.03573389, -2.5744682e-06, -0.006982312, -5.0778563e-06, -8.892534e-06, -1.1514188e-05, -0.000323121, -1.0920954e-05, -7.584048e-06, -5.912312e-06, 0, -0.0016499787, -0.00017961723, -0.0036847119, -0.00018903565, -1.7119806e-05, -0.0008353625, -0.0006285017, -0.0002058497, -1.5214344e-05, -7.9349564e-05, -0.0001351458, -0.0009240134, -0.00058048975, -0.00036813872, -0.07532155, -0.000118572985, -7.224551e-06, -0.015475152, -3.3689823e-05, -1.676031e-05, -7.224551e-06, -9.055464e-07, -2.9311614e-06, -0.00043724783, -0.0001506467, -0.00012465262, -0.00025431695, -0.00012620141, -3.2973632e-05, -0.00072960096, -6.766711e-05, -0.00020727927, -6.0633804e-05, -0.00011821817, -0.0005914072, -2.8921473e-05, -0.00035740712, -2.8138238e-06, -1.5006569e-06, -0.070113175, -0.0029811165, -7.4460135e-05, -0.00012429406, -0.0022401419, -0.019611223, -0.0953985, -0.26868725, -0.2373973, -0.02965167, -8.7733215e-06, -0.19042686, -0.00063041, -5.8247755e-05, -1.1991961e-05, -7.4639065e-06, -3.170517e-06, -0.09507646, -0.006991553, -6.9690854e-05, -0.00010021203, -0.0003455998, -0.0017248502, -6.563869e-05, -0.00021777152, -9.130952e-06, -3.0947078e-05, -0.7228698, -0.04475144, -0.00040439412, -0.0003151312, -0.004415742, -0.07345237, -0.060561426, -0.048509307, -7.1958624e-05], "top_logprobs": null, "text_offset": [4370, 4370, 4371, 4378, 4379, 4383, 4386, 4388, 4397, 4399, 4405, 4406, 4415, 4417, 4426, 4432, 4433, 4436, 4443, 4444, 4448, 4450, 4459, 4460, 4463, 4466, 4468, 4470, 4472, 4473, 4474, 4475, 4478, 4480, 4481, 4482, 4484, 4487, 4490, 4493, 4495, 4497, 4500, 4502, 4504, 4513, 4514, 4517, 4520, 4522, 4525, 4528, 4530, 4533, 4534, 4536, 4537, 4539, 4541, 4543, 4545, 4554, 4555, 4558, 4561, 4563, 4565, 4567, 4569, 4571, 4573, 4582, 4584, 4593, 4599, 4600, 4606, 4608, 4617, 4618, 4621, 4624, 4626, 4628, 4630, 4632, 4634, 4636, 4645, 4646, 4649, 4652, 4654, 4656, 4658, 4660, 4663, 4663, 4663, 4663]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))))", "\n", "(", "connect", "_", "stro", "kes", " (", "transform"], "token_logprobs": [-0.0075011547, -0.09369065, -0.09193951, -6.4921565e-05, -0.00047028364, -0.00011392572, -0.02247385, -0.9690866, -2.3556138e-05, -0.00031882763, -7.362661e-05, -0.011962175, -0.08617171, -0.07608655, -0.76113176, -0.18895882, -8.5358415e-06, -0.11479455, -0.0007274533, -4.2870764e-05, -2.0218295e-05, -1.4377073e-05, -6.827632e-08, -0.09599281, -0.0058385804, -3.7983213e-05, -7.4460135e-05, -0.000113686365, -0.000845744, -3.97704e-05, -0.0009976946, -1.6642034e-05, -1.6207987e-06, -0.25575957, -0.004005728, -5.0140625e-05, -5.0976956e-05, -9.0558e-05, -0.01088016, -0.030449053, -0.30767694, -0.113545604, -0.016888782, -6.2699432e-06, -0.051796608, -0.00013788574, -1.6165199e-05, -7.1062755e-06, -2.4032974e-05, -5.3162735e-06, -0.017338077, -0.0069476184, -3.6670972e-05, -7.708367e-05, -0.0018010413, -0.00019380587, -2.8921473e-05, -6.0633804e-05, -1.163433e-05, -1.5006569e-06, -0.06676252, -0.02886688, -0.000111540605, -7.9112084e-05, -0.00078501605, -0.005884322, -3.6783233, -0.0017967414, -0.00537902, -0.00039902504, -0.09709291, -0.22382174, -0.12518543, -0.25086764, -0.0663753, -9.966347e-06, -0.39741588, -0.0003937789, -4.751897e-05, -1.0204763e-05, -2.2365928e-05, -2.6419024e-05, -0.2853044, -0.011546159, -0.00012274434, -7.219704e-05, -0.00013788574, -0.0010075964, -6.396884e-05, -0.0027031654, -3.142485e-05, -1.3823812e-06, -1.3023795, -0.0058518904, -4.5374152e-05, -3.5120327e-05, -0.0004070167, -0.012377219, -0.044274025, -0.17524813, -0.041493993, -0.01687472, -7.818713e-06, -0.10787607, -0.00023619535, -2.2958224e-05, -1.7475562e-05, -4.0040345e-06, -1.6402679e-05, -0.04469478, -0.011429855, -3.7983213e-05, -5.07376e-05, -0.0003891288, -0.0003677792, -3.9055147e-05, -4.382537e-05, -1.8190814e-05, -1.022884e-06, -0.10939615, -0.030094815, -0.00029903336, -0.0001083201, -0.016969291, -0.037134472, -0.070142835, -0.08611058, -6.611553e-05, -0.0010149986, -0.00023476298, -0.008363276, -0.8516826], "top_logprobs": null, "text_offset": [4370, 4370, 4371, 4378, 4379, 4383, 4386, 4388, 4395, 4396, 4400, 4403, 4405, 4414, 4416, 4425, 4431, 4432, 4438, 4440, 4449, 4450, 4453, 4456, 4458, 4460, 4462, 4464, 4466, 4468, 4477, 4478, 4481, 4484, 4486, 4488, 4490, 4492, 4494, 4496, 4505, 4507, 4516, 4522, 4523, 4529, 4531, 4540, 4541, 4544, 4547, 4549, 4551, 4553, 4555, 4557, 4559, 4568, 4569, 4572, 4575, 4577, 4579, 4581, 4583, 4586, 4588, 4595, 4596, 4600, 4603, 4605, 4614, 4616, 4625, 4631, 4632, 4638, 4640, 4649, 4650, 4653, 4656, 4658, 4660, 4662, 4664, 4666, 4668, 4677, 4678, 4681, 4684, 4686, 4688, 4690, 4692, 4694, 4696, 4705, 4707, 4716, 4722, 4723, 4729, 4731, 4740, 4741, 4744, 4747, 4749, 4751, 4753, 4755, 4757, 4759, 4768, 4769, 4772, 4775, 4777, 4779, 4781, 4783, 4787, 4787, 4787, 4787, 4787, 4787, 4787, 4787]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0075011547, -0.09188743, -0.09484555, -8.531094e-05, -0.0005123239, -0.00012274434, -0.03222568, -0.57143044, -0.15085088, -0.6463908, -1.4736571e-05, -0.00020465575, -0.0017014459, -9.675685e-05, -0.040388066, -3.170517e-06, -0.007505899, -4.1232483e-06, -9.606849e-06, -2.28437e-05, -0.00029235485, -8.5358415e-06, -9.72699e-06, -8.0580685e-06, 0, -0.0012915852, -0.00013526501, -0.0039167986, -0.00016793102, -2.9636725e-05, -0.0009923818, -0.00049324025, -0.00018832133, -1.4377073e-05, -8.447461e-05, -0.00013359329, -0.0010279454, -0.0005640305, -0.0004167364, -0.06799218, -0.000100094694, -6.6294406e-06, -0.017143479, -3.6074933e-05, -1.8310955e-05, -8.4157e-06, -9.055464e-07, -4.9586424e-06, -0.00029378536, -0.0001341912, -6.611553e-05, -0.0002113333, -0.000118572985, -3.5120327e-05, -0.0008138261, -7.398424e-05, -0.00026481107, -5.7652644e-05, -0.00011082348, -0.000699718, -2.6773841e-05, -0.00054494676, -2.3360508e-06, -1.3823812e-06, -0.076017484, -0.00289079, -6.182308e-05, -0.00013597934, -0.0023252727, -0.018214991, -0.10699708, -0.23428835, -0.22889815, -0.032678094, -9.251094e-06, -0.23237365, -0.00064108433, -5.693833e-05, -1.5925843e-05, -9.251094e-06, -6.031526e-06, -0.07244451, -0.010316795, -6.528106e-05, -0.000111657944, -0.00028174432, -0.0011505078, -6.48061e-05, -0.00021860692, -9.72699e-06, -1.1039229e-05, -0.86695695, -0.014748952, -0.011054076, -0.00034631506, -0.006292533, -0.08116933, -0.05952803, -0.045846038, -5.586358e-05], "top_logprobs": null, "text_offset": [4370, 4370, 4371, 4378, 4379, 4383, 4386, 4388, 4397, 4399, 4405, 4406, 4415, 4417, 4426, 4432, 4433, 4436, 4443, 4444, 4448, 4450, 4459, 4460, 4463, 4466, 4468, 4470, 4472, 4473, 4474, 4475, 4478, 4480, 4481, 4482, 4484, 4487, 4490, 4493, 4495, 4497, 4500, 4502, 4504, 4513, 4514, 4517, 4520, 4522, 4525, 4528, 4530, 4533, 4534, 4536, 4537, 4539, 4541, 4543, 4545, 4554, 4555, 4558, 4561, 4563, 4565, 4567, 4569, 4571, 4573, 4582, 4584, 4593, 4599, 4600, 4606, 4608, 4617, 4618, 4621, 4624, 4626, 4628, 4630, 4632, 4634, 4636, 4645, 4646, 4649, 4652, 4654, 4656, 4658, 4660, 4663, 4663, 4663, 4663]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform small_circle (transform_matrix 4 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0))))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", "))))", "\n"], "token_logprobs": [-0.0075011547, -0.08998124, -0.082229964, -6.635395e-05, -0.0005377905, -0.00013633883, -0.025447689, -0.8963021, -3.2855354e-05, -0.00031572633, -6.754697e-05, -0.0091356225, -2.6842456, -0.00016232915, -0.00074343756, -4.1678675e-05, -0.024649085, -0.225222, -0.09023666, -0.6803602, -2.6419024e-05, -6.0753944e-05, -0.002096302, -0.00010343254, -0.035216674, -6.2699432e-06, -0.008980923, -1.2112103e-05, -1.5327929e-05, -8.3165185e-05, -0.00048465535, -2.0935424e-05, -1.5687427e-05, -7.1062755e-06, 0, -0.0047901142, -0.00036837524, -0.0037368822, -0.00028031383, -4.048565e-05, -0.0017191168, -0.0010054517, -0.00038996234, -2.1889093e-05, -0.0001552949, -0.00016757715, -0.0007877598, -0.0018788489, -0.00074343756, -0.09578288, -0.00017425283, -2.2365928e-05, -0.038641963, -0.00015100244, -2.1768952e-05, -1.1873685e-05, -5.197998e-06, -3.529076e-06, -0.00040952102, -0.00049180974, -0.00010772499, -0.00042269874, -0.00013204545, -3.655083e-05, -0.00069876347, -6.826223e-05, -0.00034595837, -0.00017675622, -0.00019583241, -0.0019787587, -0.00015982577, -0.013857602, -1.6165199e-05, -4.277735e-07, -2.7556937, -0.09093764, -0.0054641175, -0.0022072871, -0.002200773, -0.004908526, -0.05317488, -1.7792568, -8.0580685e-06, -1.0927598, -0.0018632645, -5.3242864e-05, -6.6829845e-05, -1.2946569e-05, -3.2906587e-06, -2.4688058, -0.02791892, -0.00052675663, -0.00044941274, -0.006624042, -0.010997366, -0.25564364, -0.42996523, -0.4486029, -0.108567394, -8.296486e-06, -0.41113803, -0.0007176115, -4.9069615e-05, -1.4974988e-05, -6.6294406e-06, -2.3360508e-06, -0.24142028, -0.010305717, -0.00014432582, -0.000107247215, -0.00038686107, -0.00048453893, -4.489638e-05, -0.00012977766, -7.937927e-06, 0, -1.2415744, -0.006861311, -0.0062862355, -0.00016185326, -0.014931888, -0.018126005, -0.5524708, -5.037998e-05, -0.00012799047, -0.0013851724, -0.004510343, -0.02255115, -0.03687247, -0.055615056, -1.1159372e-05, -1.2516127, -0.00041399087, -3.643162e-05, -2.4986643e-05, -5.5556293e-06, -6.827632e-08, -0.15734865, -0.00021932404, -0.008357143, -0.00011511593, -0.00013645618, -0.00013693394, -3.166233e-05, -0.0001792624, -1.7475562e-05, -3.333313e-05, -4.0040345e-06, -2.3360508e-06, -0.007196793, -0.00022802629, -0.0032748755, -0.0036868663, -0.47799516, -0.014802971, -5.503005e-05, -0.00052568375, -0.00013586106, -0.00012119652, -0.0018675635, -9.425254e-05, -0.00040200804, -0.012368529, -0.00050290365, -9.449002e-05, -0.00011428335, -0.0010951331, -0.0004865636, -1.1753544e-05, -7.005035e-05, -0.000110942696, -5.3837026e-05, -4.3465872e-05, -2.8138238e-06, -2.9996223e-05, -0.00033737256, -2.9159892e-05, -1.8601542e-06, -0.80352616, -6.3134365e-05, -1.4854846e-05, -9.846204e-06, -3.076318e-07, -1.306671e-05, -0.0007991522, -0.00027256247, -0.00011559277, -0.00011118111, -0.00013931624, -3.2973632e-05, -0.0013022078, -0.00014098798, -0.00017759066, -0.00011678579, -1.1607285, -0.048736326], "top_logprobs": null, "text_offset": [4370, 4370, 4371, 4378, 4379, 4383, 4386, 4388, 4395, 4396, 4400, 4403, 4405, 4412, 4413, 4417, 4420, 4422, 4431, 4433, 4439, 4440, 4449, 4451, 4460, 4466, 4467, 4470, 4477, 4478, 4482, 4484, 4493, 4494, 4497, 4500, 4502, 4504, 4506, 4507, 4508, 4509, 4512, 4514, 4515, 4516, 4518, 4521, 4524, 4527, 4529, 4531, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4559, 4562, 4564, 4567, 4568, 4570, 4571, 4573, 4575, 4577, 4579, 4588, 4589, 4592, 4595, 4597, 4599, 4601, 4603, 4605, 4607, 4616, 4622, 4623, 4629, 4631, 4640, 4641, 4644, 4647, 4649, 4651, 4653, 4655, 4658, 4660, 4669, 4671, 4680, 4686, 4687, 4693, 4695, 4704, 4705, 4708, 4711, 4713, 4715, 4717, 4719, 4721, 4723, 4732, 4733, 4736, 4739, 4741, 4743, 4745, 4747, 4750, 4752, 4758, 4759, 4768, 4770, 4779, 4781, 4790, 4796, 4797, 4803, 4805, 4814, 4815, 4818, 4821, 4823, 4824, 4825, 4827, 4829, 4831, 4833, 4835, 4844, 4845, 4848, 4851, 4853, 4855, 4858, 4861, 4863, 4865, 4866, 4867, 4868, 4870, 4873, 4876, 4879, 4881, 4884, 4887, 4890, 4892, 4894, 4895, 4896, 4897, 4899, 4902, 4905, 4908, 4910, 4912, 4915, 4917, 4919, 4928, 4929, 4932, 4935, 4937, 4940, 4943, 4945, 4948, 4949, 4951, 4952, 4954, 4956, 4960]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "transform", " (", "transform"], "token_logprobs": [-0.0075011547, -0.08998156, -0.082229964, -5.979934e-05, -0.00058687344, -8.209043e-05, -0.015692128, -0.9665693, -2.582111e-05, -0.00029629155, -6.766711e-05, -0.011027319, -0.07945721, -0.060412932, -0.65643895, -1.1159372e-05, -2.784859e-05, -0.001238589, -5.8130416e-05, -0.03189678, -4.361666e-06, -0.008127694, -1.0920954e-05, -1.1278585e-05, -1.37819625e-05, -0.0004156626, -9.012677e-06, -1.0681599e-05, -4.6010214e-06, -6.827632e-08, -0.0030198572, -0.00017985563, -0.003483183, -0.00016757715, -2.319758e-05, -0.0010841519, -0.0005166192, -0.0002220649, -1.2231317e-05, -9.7114484e-05, -0.00012822983, -0.0009425686, -0.0005953401, -0.00028198276, -0.11009226, -0.00010021203, -8.653179e-06, -0.011122001, -3.023464e-05, -1.1753544e-05, -8.5358415e-06, -9.055464e-07, -6.031526e-06, -0.00041244208, -0.00014778474, -0.00011475737, -0.00019547573, -0.00011869313, -3.166233e-05, -0.000751311, -5.4194657e-05, -0.0003266982, -5.7057543e-05, -0.00010379017, -0.00072315807, -2.8445576e-05, -0.0043961685, -2.0966954e-06, -4.1232483e-06, -0.077157356, -0.0036671855, -6.337372e-05, -8.3996834e-05, -0.00022397317, -0.0062235575, -0.017802617, -0.3521668, -0.11325806, -0.013429745, -4.0040345e-06, -0.09102635, -0.00014229833, -3.1781543e-05, -8.892534e-06, -6.746778e-06, -7.224551e-06, -0.037024923, -0.004604588, -4.716134e-05, -7.56541e-05, -0.0012988653, -0.0003632502, -3.4167595e-05, -7.11223e-05, -7.3446927e-06, -8.5358415e-06, -0.7262915, -0.05641832, -0.00027589937, -6.253833e-05, -0.00095628976, -0.0113554, -0.34285122, -5.4194657e-05, -2.7728449e-05, -0.0011093921, -0.0026903728, -0.02684346, -0.027571457, -0.028126782, -9.966347e-06, -0.30839548, -6.396884e-05, -3.058758e-05, -5.675771e-06, -2.693682e-06, -6.6619094e-07, -0.016155617, -0.00020453747, -0.0032185449, -0.00013800588, -0.00011058788, -0.00010045139, -2.7611111e-05, -0.00016268677, -2.319758e-05, -5.109523e-05, -3.4089344e-06, -3.2906587e-06, -0.00362489, -0.00031775475, -0.012175979, -0.0050099385, -0.37561855, -0.013951164, -0.00011440349, -0.00038698118, -9.937757e-05, -0.00015565252, -0.0010159514, -0.000116070536, -0.00030106178, -0.006992153, -0.00033319838, -7.8038276e-05, -8.7457636e-05, -0.0005541305, -0.00019845407, -9.012677e-06, -4.489638e-05, -4.763911e-05, -5.1810483e-05, -3.4403198e-05, -4.1232483e-06, -2.4032974e-05, -0.00043092694, -5.157113e-05, -6.827632e-08, -0.97531307, -5.109523e-05, -2.1171965e-05, -7.584048e-06, -1.1430258e-06, -2.4543265e-06, -0.0004311635, -0.00011809803, -0.00016400088, -9.866513e-05, -0.00021800993, -3.6311474e-05, -0.0010202485, -0.00010212031, -0.00014826158, -0.00010569845, -0.014388614, -0.030396333, -0.13114922, -3.458719, -0.3421749, -0.80386263], "top_logprobs": null, "text_offset": [4370, 4370, 4371, 4378, 4379, 4383, 4386, 4388, 4395, 4396, 4400, 4403, 4405, 4414, 4416, 4422, 4423, 4432, 4434, 4443, 4449, 4450, 4453, 4460, 4461, 4465, 4467, 4476, 4477, 4480, 4483, 4485, 4487, 4489, 4490, 4491, 4492, 4495, 4497, 4498, 4499, 4501, 4504, 4507, 4510, 4512, 4514, 4517, 4519, 4521, 4530, 4531, 4534, 4537, 4539, 4542, 4545, 4547, 4550, 4551, 4553, 4554, 4556, 4558, 4560, 4562, 4571, 4572, 4575, 4578, 4580, 4582, 4584, 4586, 4588, 4590, 4599, 4601, 4610, 4616, 4617, 4623, 4625, 4634, 4635, 4638, 4641, 4643, 4645, 4647, 4649, 4651, 4653, 4662, 4663, 4666, 4669, 4671, 4673, 4675, 4677, 4680, 4682, 4688, 4689, 4698, 4700, 4709, 4711, 4720, 4726, 4727, 4733, 4735, 4744, 4745, 4748, 4751, 4753, 4754, 4755, 4757, 4759, 4761, 4763, 4765, 4774, 4775, 4778, 4781, 4783, 4785, 4788, 4791, 4793, 4795, 4796, 4797, 4798, 4800, 4803, 4806, 4809, 4811, 4814, 4817, 4820, 4822, 4824, 4825, 4826, 4827, 4829, 4832, 4835, 4838, 4840, 4842, 4845, 4847, 4849, 4858, 4859, 4862, 4865, 4867, 4870, 4873, 4875, 4878, 4879, 4881, 4882, 4884, 4886, 4889, 4889, 4889, 4889, 4889]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform small_square (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0075011547, -0.09621302, -0.09269962, -6.015603e-05, -0.0008075043, -0.0001015252, -0.022267893, -0.55457854, -2.187177, -5.4791635e-05, -0.5777155, -0.0038637263, -0.00011308939, -0.0013651743, -4.036551e-05, -5.460492e-07, -0.43004483, -0.010185456, -0.0008600593, -0.00022790894, -0.0040553384, -0.013827023, -0.16227926, -0.44058502, -0.0918724, -0.102319986, -1.2588937e-05, -0.38273433, -0.0010513348, -8.388231e-05, -3.154219e-05, -6.6619094e-07, -3.076318e-07, -0.1981119, -0.00874249, -9.2821094e-05, -6.48061e-05, -0.00013168594, -0.00047762014, -6.611553e-05, -0.00013740796, -1.402038e-05, -4.277735e-07, -0.23058888, -0.021249326, -0.00036563535, -8.3045044e-05, -0.003073247, -0.017938599, -0.04764284, -0.05074481, -8.8410365e-05], "top_logprobs": null, "text_offset": [4370, 4370, 4371, 4378, 4379, 4383, 4386, 4388, 4397, 4403, 4404, 4410, 4412, 4421, 4422, 4425, 4428, 4430, 4432, 4434, 4436, 4438, 4440, 4449, 4451, 4460, 4466, 4467, 4473, 4475, 4484, 4485, 4488, 4491, 4493, 4495, 4497, 4499, 4501, 4503, 4512, 4513, 4516, 4519, 4521, 4523, 4525, 4527, 4530, 4530, 4530, 4530]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LMR1BikjEhCinOs7ZRjikmps6VP", "object": "text_completion", "created": 1651002123, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", "))))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0088998545, -0.15348293, -0.06821046, -9.9022756e-05, -0.0010834384, -6.051553e-05, -0.009911459, -0.7399558, -0.144784, -0.6513695, -1.6284916, -0.6283221, -1.1660314, -0.42425424, -1.3298924, -0.00023559744, -0.42052698, -0.008878445, -0.004211253, -0.0012960006, -3.2855354e-05, -3.076318e-07, -0.28825548, -0.0034121282, -0.0013049553, -0.0008635183, -0.0035142861, -0.018347023, -0.1079205, -0.03256835, -0.0024131613, -0.0001910622, -0.6488662, -0.029086417, -0.027835937, -0.0059329513, -0.004346896, -0.011991191, -0.05764218, -0.076867275, -0.00076139305, -8.5358415e-06, -0.69697326, -0.03094468, -0.033615652, -0.0041131508, -0.0033214604, -0.003807542, -0.026539396, -0.06964024, -0.00032133286, -5.197998e-06, -0.47098404, -0.010481821, -0.012543368, -0.002120972, -0.0073558353, -0.010236583, -0.2572162, -0.109359056, -0.5143305, -1.0615788, -3.9172486e-05, -0.4627921, -0.0019954217, -7.791906e-05, -0.00022826564, -9.606849e-06, -1.1159372e-05, -0.37381598, -0.0036182501, -0.00906278, -0.00042544052, -0.00044810143, -0.00027637713, -0.00026254423, -0.0004225786, -5.7770918e-05, -0.00030964572, -6.031526e-06, -5.79217e-06, -0.07041805, -0.0018513782, -0.03521359, -0.015659675, -0.18635003, -0.0079723075, -0.00011535529, -0.00062074844, -9.329886e-05, -0.00058251905, -0.00087885105, -0.0024130421, -0.0013937666, -0.018189618, -0.00065039104, -9.151261e-05, -0.00015660525, -0.00017675622, -7.11223e-05, -1.0084622e-05, -1.8310955e-05, -5.6460554e-05, -5.5149267e-05, -6.2420055e-05, -6.3900848e-06, -2.5941252e-05, -0.00017413269, -0.0031867311, -2.254871, -0.2510371, -0.07422679, -0.05278007, -0.00010963327], "top_logprobs": null, "text_offset": [5029, 5029, 5030, 5037, 5038, 5042, 5045, 5047, 5056, 5058, 5067, 5069, 5078, 5080, 5089, 5095, 5096, 5102, 5104, 5113, 5114, 5117, 5120, 5122, 5124, 5126, 5128, 5130, 5132, 5141, 5142, 5145, 5148, 5150, 5152, 5154, 5156, 5158, 5160, 5169, 5170, 5173, 5176, 5178, 5180, 5182, 5184, 5186, 5188, 5197, 5198, 5201, 5204, 5206, 5208, 5210, 5212, 5214, 5216, 5225, 5227, 5236, 5242, 5243, 5249, 5251, 5260, 5261, 5264, 5267, 5269, 5270, 5271, 5273, 5275, 5277, 5279, 5281, 5290, 5291, 5294, 5297, 5299, 5301, 5304, 5307, 5309, 5311, 5312, 5313, 5314, 5316, 5319, 5322, 5325, 5327, 5330, 5333, 5336, 5338, 5340, 5341, 5342, 5343, 5345, 5348, 5351, 5354, 5356, 5358, 5362, 5362, 5362, 5362]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0088998545, -0.15348293, -0.06821046, -9.9022756e-05, -0.0010077166, -9.985534e-05, -0.011118685, -0.7480553, -0.12711468, -0.62011415, -0.32032737, -7.076466e-05, -0.38005394, -0.0019256097, -0.00010092916, -7.231626e-05, -2.141132e-05, -1.8841804e-07, -0.0887104, -0.0013212465, -0.00027649727, -0.0002614704, -8.388231e-05, -0.0013036402, -8.8171946e-05, -0.0010777671, -6.2299914e-05, -1.6521892e-05, -0.31283584, -0.0037403523, -0.0026220062, -0.00033379628, -0.00045060576, -0.0056201317, -1.5092223, -0.0007232782, -0.00027160783, -0.002004977, -0.0030019218, -0.065802395, -0.03674211, -0.071305536, -4.4539687e-05, -0.3286488, -0.000522344, -4.394177e-05, -1.5448071e-05, -3.8217877e-05, -5.197998e-06, -0.020588337, -0.0005640305, -0.0037265324, -0.00011690406, -0.00012536882, -0.00015636964, -7.529741e-05, -0.00033379628, -7.422359e-05, -8.709908e-05, -9.846204e-06, -1.8601542e-06, -0.014928621, -0.0006097756, -0.004735315, -0.005349835, -1.1906761, -0.019473495, -7.255186e-05, -0.0008654275, -9.7234624e-05, -0.00019368572, -0.0020982134, -0.00077272824, -0.00055544183, -0.016985353, -0.0003009416, -8.244993e-05, -9.4849514e-05, -0.0020991687, -0.00010057153, -1.0561456e-05, -5.848711e-05, -8.924483e-05, -5.3837026e-05, -0.00010319318, -2.4543265e-06, -2.4272329e-05, -0.00025371904, -9.461016e-05, -4.277735e-07, -0.4737594, -0.00027291913, -5.0260765e-05, -1.5214344e-05, -3.529076e-06, -1.8907942e-05, -0.0013301412, -0.00034166497, -0.00012286357, -6.89756e-05, -0.00010951312, -3.0353855e-05, -0.0018349566, -0.00012000537, -0.00021836943, -9.580224e-05, -0.011640109, -0.016993355, -0.07213434, -0.06968395, -9.842577e-05, -0.0013370637, -0.00016912498, -0.0060116206], "top_logprobs": null, "text_offset": [5029, 5029, 5030, 5037, 5038, 5042, 5045, 5047, 5056, 5058, 5067, 5073, 5074, 5080, 5082, 5091, 5092, 5095, 5098, 5100, 5102, 5104, 5106, 5108, 5110, 5119, 5120, 5123, 5126, 5128, 5130, 5132, 5134, 5136, 5138, 5144, 5145, 5154, 5156, 5165, 5167, 5176, 5182, 5183, 5189, 5191, 5200, 5201, 5204, 5207, 5209, 5210, 5211, 5213, 5215, 5217, 5219, 5221, 5230, 5231, 5234, 5237, 5239, 5241, 5244, 5247, 5249, 5251, 5252, 5253, 5254, 5256, 5259, 5262, 5265, 5267, 5270, 5273, 5276, 5278, 5280, 5281, 5282, 5283, 5285, 5288, 5291, 5294, 5296, 5298, 5301, 5303, 5305, 5314, 5315, 5318, 5321, 5323, 5326, 5329, 5331, 5334, 5335, 5337, 5338, 5340, 5342, 5345, 5345, 5345, 5345, 5345, 5345, 5345]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0088998545, -0.12969401, -0.08019872, -0.00022635736, -0.0010589125, -5.5149267e-05, -0.011279805, -0.62991047, -4.9902206e-05, -0.0003402345, -5.9085025e-05, -0.004550698, -0.089135416, -0.041836705, -0.3647871, -1.1753544e-05, -2.7611111e-05, -0.00078525353, -0.00012453248, -0.08929305, -1.0681599e-05, -0.017203934, -1.9028084e-05, -2.7013197e-05, -0.00017163117, -0.00023786427, -1.6999666e-05, -2.4750101e-05, -6.746778e-06, -1.022884e-06, -0.004392037, -0.00020167646, -0.0050841025, -0.00029187708, -4.0009756e-05, -0.001219434, -0.0006041681, -0.000509462, -2.3556138e-05, -0.00021252633, -0.00012643983, -0.0005469752, -0.0003929454, -0.00031823252, -0.66880405, -6.289782e-05, -1.5094201e-05, -0.0058723954, -4.9782993e-05, -2.4272329e-05, -8.5358415e-06, -8.0580685e-06, -7.088388e-05, -0.0006188392, -0.00020775704, -5.503005e-05, -0.000106175285, -0.00010581859, -1.9621319e-05, -0.00078525353, -5.693833e-05, -0.0002640958, -0.00011905076, -8.3045044e-05, -0.00052067416, -3.4287736e-05, -0.0029422573, -2.0966954e-06, -9.055464e-07, -0.07642434, -0.0014737489, -0.00012727616, -0.00024144053, -0.00018176393, -0.007839011, -0.03222925, -0.16042538, -0.31316075, -0.080019586, -6.9690854e-05, -1.6235468, -0.0012646694, -7.4460135e-05, -2.8682118e-05, -4.9586424e-06, -3.170517e-06, -0.12711868, -0.000812634, -0.00067293557, -0.00014337122, -0.0021743726, -0.00048596945, -7.469949e-05, -0.00010796247, -8.296486e-06, -3.6482897e-06, -0.36790457, -0.0019728462, -0.0021130862, -0.00012548709, -0.0017436579, -0.0015829948, -0.05819962, -1.8668587e-05, -2.9996223e-05, -0.0009857005, -0.0011961, -0.010047638, -0.043740977, -0.018597597, -1.0920954e-05, -0.21969207, -7.636654e-05, -2.3317722e-05, -1.2231317e-05, -2.8138238e-06, -1.2622395e-06, -0.005565886, -6.7307614e-05, -0.0012478994, -0.00010080995, -6.873624e-05, -0.00014694748, -1.9741461e-05, -0.00011988616, -1.843017e-05, -4.5613506e-05, -6.3900848e-06, -1.1430258e-06, -0.007452393, -9.830563e-05, -0.0023525187, -0.0017127284, -0.23480117, -0.0018015191, -2.3435998e-05, -8.697986e-05, -4.9187893e-05, -0.00014432582, -0.0011663195, -0.00015255497, -0.00028830176, -0.002936279, -0.00077213027, -4.0843282e-05, -4.763911e-05, -0.00012643983, -7.1481794e-05, -7.937927e-06, -1.5094201e-05, -3.4762696e-05, -2.9041616e-05, -1.6402679e-05, -1.7400124e-06, -2.1649737e-05, -0.0002905667, -7.648668e-05, -7.584048e-06, -0.4684308, -0.00012357882, -2.045765e-05, -5.0778563e-06, -4.9902206e-05, -3.1185496e-05, -0.00041178783, -5.7057543e-05, -5.1930627e-05, -4.501652e-05, -7.4460135e-05, -2.4272329e-05, -0.0012737405, -7.720381e-05, -0.00011213572, -7.6726035e-05, -0.014789237, -0.027095867, -0.15227757, -0.10192331], "top_logprobs": null, "text_offset": [5029, 5029, 5030, 5037, 5038, 5042, 5045, 5047, 5054, 5055, 5059, 5062, 5064, 5073, 5075, 5081, 5082, 5091, 5093, 5102, 5108, 5109, 5112, 5119, 5120, 5124, 5126, 5135, 5136, 5139, 5142, 5144, 5146, 5148, 5149, 5150, 5151, 5154, 5156, 5157, 5158, 5160, 5163, 5166, 5169, 5171, 5173, 5176, 5178, 5180, 5189, 5190, 5193, 5196, 5198, 5201, 5204, 5206, 5209, 5210, 5212, 5213, 5215, 5217, 5219, 5221, 5230, 5231, 5234, 5237, 5239, 5241, 5243, 5245, 5247, 5249, 5258, 5260, 5269, 5275, 5276, 5282, 5284, 5293, 5294, 5297, 5300, 5302, 5304, 5306, 5308, 5310, 5312, 5321, 5322, 5325, 5328, 5330, 5332, 5334, 5336, 5339, 5341, 5347, 5348, 5357, 5359, 5368, 5370, 5379, 5385, 5386, 5392, 5394, 5403, 5404, 5407, 5410, 5412, 5413, 5414, 5416, 5418, 5420, 5422, 5424, 5433, 5434, 5437, 5440, 5442, 5444, 5447, 5450, 5452, 5454, 5455, 5456, 5457, 5459, 5462, 5465, 5468, 5470, 5473, 5476, 5479, 5481, 5483, 5484, 5485, 5486, 5488, 5491, 5494, 5497, 5499, 5501, 5504, 5506, 5508, 5517, 5518, 5521, 5524, 5526, 5529, 5532, 5534, 5537, 5538, 5540, 5541, 5543, 5545, 5548, 5548, 5548]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform_matrix 4 0 0 0) (transform small_square (transform_matrix 2 0 0 0))) (transform small_circle (transform_matrix 2 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0088998545, -0.13215868, -0.077927254, -0.00012191365, -0.0012846608, -6.289782e-05, -0.008057208, -0.78003657, -0.14539544, -0.6464486, -3.4958532, -0.59751594, -0.00042413018, -1.8355856, -0.02708625, -0.017288892, -0.017655311, -0.043873742, -0.093564056, -0.18877386, -1.6679261, -6.802381e-05, -0.42962307, -0.004981365, -0.00012465262, -0.00040665813, -4.29881e-05, -7.698572e-06, -0.1087543, -0.0022575266, -0.0018967048, -0.00046110176, -0.010265247, -0.011105246, -0.5110831, -3.0333626, -0.000104625564, -0.5366178, -0.008348487, -0.002317448, -0.0022654713, -4.2631407e-05, -3.0473995e-05, -0.45442635, -0.0064404565, -0.005139702, -0.0009398221, -0.014884335, -0.016378315, -0.053110324], "top_logprobs": null, "text_offset": [5029, 5029, 5030, 5037, 5038, 5042, 5045, 5047, 5056, 5058, 5067, 5068, 5071, 5074, 5076, 5078, 5080, 5082, 5083, 5085, 5094, 5100, 5101, 5107, 5109, 5118, 5119, 5122, 5125, 5127, 5129, 5131, 5133, 5136, 5138, 5147, 5153, 5154, 5160, 5162, 5171, 5172, 5175, 5178, 5180, 5182, 5184, 5186, 5189, 5189]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform small_square (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))))", "\n", "(", "connect", "_", "stro", "kes", " (", "transform"], "token_logprobs": [-0.0088998545, -0.12866172, -0.08483625, -0.00012465262, -0.001111063, -7.6964454e-05, -0.008261283, -0.6766705, -2.7611111e-05, -0.00033689477, -6.599631e-05, -0.0044498113, -0.07858787, -3.5084949, -0.00014098798, -0.3795641, -0.004140385, -0.0066295005, -0.0017188184, -4.275062e-05, -4.277735e-07, -0.4512223, -0.002795689, -0.0020600476, -0.0007779781, -0.00076020096, -0.00519662, -0.052210312, -0.23181947, -0.5767523, -4.0009756e-05, -8.697986e-05, -0.0055221333, -7.434374e-05, -0.063616335, -1.771398e-05, -0.017777435, -1.0204763e-05, -2.558363e-05, -5.7293146e-05, -0.00030451978, -1.843017e-05, -2.0696069e-05, -1.1039229e-05, -3.076318e-07, -0.0030367181, -0.00016852893, -0.004779932, -0.0005018289, -1.9028084e-05, -0.0012903903, -0.0005067193, -0.00028341232, -2.9280032e-05, -9.7114484e-05, -0.00016757715, -0.00053492666, -0.0005704706, -0.0004967001, -0.4168873, -7.601266e-05, -6.408898e-05, -0.008260081, -5.0140625e-05, -1.8073477e-05, -1.4139594e-05, -8.176345e-06, -2.0966954e-06, -0.00065850193, -0.00024465634, -7.8634315e-05, -6.2299914e-05, -0.00012894507, -2.3078366e-05, -0.0007316303, -8.3404535e-05, -0.0003661131, -8.7932596e-05, -2.567451, -0.0048455154, -0.22376516, -0.26439464, -0.21900426, -0.042736318, -1.2708151e-05, -0.09931482, -0.00047219192, -5.586358e-05, -3.2973632e-05, -4.721163e-06, -1.1430258e-06, -0.11141078, -0.00081645243, -0.00014873935, -9.4967785e-05, -0.00035848093, -0.0006053611, -5.490991e-05, -0.00034369153, -1.0323977e-05, -2.4543265e-06, -0.23253867, -0.001205051, -0.0003807795, -0.00014217819, -0.016668396, -0.06226884, -0.11240312, -0.06359137, -0.00023273456, -0.0012039772, -0.00030440054, -0.01084015, -0.72240585], "top_logprobs": null, "text_offset": [5029, 5029, 5030, 5037, 5038, 5042, 5045, 5047, 5054, 5055, 5059, 5062, 5064, 5073, 5079, 5080, 5086, 5088, 5097, 5098, 5101, 5104, 5106, 5108, 5110, 5112, 5114, 5116, 5125, 5127, 5133, 5134, 5143, 5145, 5154, 5160, 5161, 5164, 5171, 5172, 5176, 5178, 5187, 5188, 5191, 5194, 5196, 5198, 5200, 5201, 5202, 5203, 5206, 5208, 5209, 5210, 5212, 5215, 5218, 5221, 5223, 5225, 5228, 5230, 5232, 5241, 5242, 5245, 5248, 5250, 5253, 5256, 5258, 5261, 5262, 5264, 5265, 5267, 5269, 5272, 5274, 5283, 5285, 5294, 5300, 5301, 5307, 5309, 5318, 5319, 5322, 5325, 5327, 5329, 5331, 5333, 5335, 5337, 5346, 5347, 5350, 5353, 5355, 5357, 5359, 5361, 5365, 5365, 5365, 5365, 5365, 5365, 5365, 5365]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0088998545, -0.13443224, -0.08163271, -0.0001635231, -0.0010830789, -8.566857e-05, -0.0102028, -0.6637857, -2.9756868e-05, -0.0005833535, -6.015603e-05, -0.0058837845, -0.08553269, -0.047786817, -0.34967223, -1.1039229e-05, -2.7611111e-05, -0.0008129916, -5.598372e-05, -0.07350811, -9.846204e-06, -0.014208012, -2.3795494e-05, -3.7266083e-05, -0.00015982577, -0.00020477588, -1.6999666e-05, -2.3912831e-05, -5.5556293e-06, -1.2622395e-06, -0.0044118534, -0.00019177745, -0.0046838135, -0.00039306178, -4.0963423e-05, -0.0012174046, -0.0007281695, -0.00029641076, -2.7967804e-05, -9.9022756e-05, -0.00011404399, -0.00064180145, -0.00034488458, -0.00048274704, -0.70474714, -7.434374e-05, -1.0681599e-05, -0.0068692327, -4.6206733e-05, -2.2245786e-05, -1.1278585e-05, -4.1232483e-06, -5.3242864e-05, -0.00050003984, -0.00015160035, -7.422359e-05, -0.00010092916, -9.437268e-05, -1.8190814e-05, -0.00091470755, -5.991855e-05, -0.00025312486, -6.468596e-05, -7.291136e-05, -0.0005898546, -3.8457234e-05, -0.0011741966, -4.1232483e-06, -1.8601542e-06, -0.08200026, -0.0014900459, -0.0002277888, -0.0002107382, -0.00015720223, -0.0071532675, -0.03257919, -0.1434609, -0.273331, -0.062398504, -5.3955304e-05, -0.2781472, -0.0006552833, -5.6340414e-05, -2.9996223e-05, -5.79217e-06, -2.0966954e-06, -0.074342094, -0.0010196515, -0.0001371733, -0.00010760485, -0.00021669957, -0.00048811614, -5.6818186e-05, -0.00029581378, -5.5269407e-05, -1.4974988e-05, -0.64339423, -0.0024915535, -0.0018799246, -0.00037433943, -0.0015947551, -0.0022384692, -1.777245, -0.11266327, -0.56068563, -0.111102, -5.944078e-05, -0.4140245, -0.002635213, -0.000111420464, -0.00015338662, -4.4419543e-05, -1.2946569e-05, -0.12954725, -0.0026227233, -0.0047292663, -0.0005126834, -0.00020918754, -0.00021717734, -8.00667e-05, -0.0006582626, -9.091469e-05, -0.000176637, -3.170517e-06, -6.1516675e-06, -0.12123116, -0.0015400111, -0.019987918, -0.0053255656, -0.2607168, -0.00672839, -5.6460554e-05, -0.00027649727, -5.848711e-05, -0.00045382627, -0.0016086057, -0.00030451978, -0.0013072822, -0.013152497, -0.00010092916, -0.00014885482, -0.00010760485, -0.00015243483, -0.00010140506, -8.892534e-06, -1.855031e-05, -4.3108244e-05, -5.8725527e-05, -3.7863996e-05, -6.1516675e-06, -2.4272329e-05, -0.00042937536, -0.003705533, -0.28737736, -0.61313784, -0.052804258, -0.0015843097, -5.8130416e-05, -1.0561456e-05, -4.9586424e-06, -0.005078654, -0.001729626, -0.00031751726, -0.00027542253, -0.00013729343, -3.166233e-05, -0.005621211, -0.00012560723, -0.0003816121, -0.00013681567, -0.07240581, -0.03081823, -0.1488012, -0.15305565, -0.00018641399, -0.001290868, -0.00014074863, -0.009471204], "top_logprobs": null, "text_offset": [5029, 5029, 5030, 5037, 5038, 5042, 5045, 5047, 5054, 5055, 5059, 5062, 5064, 5073, 5075, 5081, 5082, 5091, 5093, 5102, 5108, 5109, 5112, 5119, 5120, 5124, 5126, 5135, 5136, 5139, 5142, 5144, 5146, 5148, 5149, 5150, 5151, 5154, 5156, 5157, 5158, 5160, 5163, 5166, 5169, 5171, 5173, 5176, 5178, 5180, 5189, 5190, 5193, 5196, 5198, 5201, 5204, 5206, 5209, 5210, 5212, 5213, 5215, 5217, 5219, 5221, 5230, 5231, 5234, 5237, 5239, 5241, 5243, 5245, 5247, 5249, 5258, 5260, 5269, 5275, 5276, 5282, 5284, 5293, 5294, 5297, 5300, 5302, 5304, 5306, 5308, 5310, 5312, 5321, 5322, 5325, 5328, 5330, 5332, 5334, 5336, 5339, 5341, 5350, 5352, 5361, 5367, 5368, 5374, 5376, 5385, 5386, 5389, 5392, 5394, 5395, 5396, 5398, 5400, 5402, 5404, 5406, 5415, 5416, 5419, 5422, 5424, 5426, 5429, 5432, 5434, 5436, 5437, 5438, 5439, 5441, 5444, 5447, 5450, 5452, 5455, 5458, 5461, 5463, 5465, 5466, 5467, 5468, 5470, 5473, 5476, 5479, 5481, 5483, 5486, 5488, 5490, 5499, 5500, 5503, 5506, 5508, 5511, 5514, 5516, 5519, 5520, 5522, 5523, 5525, 5527, 5530, 5530, 5530, 5530, 5530, 5530, 5530]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0088998545, -0.12918377, -0.08459161, -0.00015493727, -0.0010942968, -8.674238e-05, -0.0069883713, -0.5752977, -3.452334e-05, -0.00023285468, -7.505805e-05, -0.0047254944, -0.08727581, -0.048909254, -0.38049325, -9.130952e-06, -4.179789e-05, -0.0010308083, -0.00011559277, -0.079801366, -1.2946569e-05, -0.024078898, -1.8788729e-05, -3.201996e-05, -7.5892516e-05, -0.00025205011, -1.7475562e-05, -1.8907942e-05, -9.130952e-06, -1.3823812e-06, -0.0038758146, -0.00018486334, -0.005204707, -0.00043545783, -4.6206733e-05, -0.0011598184, -0.0011008588, -0.00028210194, -2.2245786e-05, -0.00010355082, -0.00014313185, -0.0008400163, -0.00047135746, -0.00029736536, -0.7618238, -0.0004851331, -1.9621319e-05, -0.018936189, -5.9085025e-05, -2.2484204e-05, -1.9503042e-05, -1.5006569e-06, -7.553489e-05, -0.00085003924, -0.0001635231, -0.00016328375, -9.305951e-05, -0.00013550156, -2.4152187e-05, -0.00044094422, -0.00011714342, -0.00034595837, -5.991855e-05, -3.7743856e-05, -0.0005764348, -5.0500123e-05, -0.005021439, -2.3360508e-06, -1.5094201e-05, -0.06352201, -0.001417522, -0.00010891614, -0.00018855974, -8.471396e-05, -0.008625487, -0.046434462, -0.16235246, -0.34923238, -0.09658544, -5.3363005e-05, -0.31452397, -0.00081466336, -6.396884e-05, -4.3108244e-05, -4.9586424e-06, -6.031526e-06, -0.07758085, -0.0011493139, -0.0001375281, -0.00018903565, -0.00027065416, -0.00048263065, -5.586358e-05, -0.00043736608, -7.052812e-05, -1.6999666e-05, -1.0905982, -0.0034029775, -0.011345272, -0.00041661627, -0.0015084923, -0.0019116942, -0.081128284, -3.678925e-05, -4.9308033e-05, -0.0008951977, -0.0011554011, -0.01427355, -0.06654296, -0.03536851, -1.7834122e-05, -0.82870126, -0.00016519109, -2.28437e-05, -3.1065356e-05, -1.1398727e-05, -5.912312e-06, -0.004904273, -0.00025646458, -0.0015707565, -0.000113328744, -8.697986e-05, -0.000118333635, -4.680184e-05, -0.00019309061, -2.665838e-05, -8.1136764e-05, -4.1232483e-06, -2.4543265e-06, -0.006710508, -0.00026385646, -0.005426541, -0.0019657987, -0.41778994, -0.0032447954, -2.7490969e-05, -0.00020549206, -4.716134e-05, -8.781245e-05, -0.00083065045, -9.830563e-05, -0.00030559077, -0.006447835, -0.0008226559, -4.29881e-05, -5.1810483e-05, -0.00011618975, -7.3745825e-05, -8.5358415e-06, -1.6165199e-05, -4.6325007e-05, -5.5269407e-05, -1.676031e-05, -2.3360508e-06, -2.2604345e-05, -0.00024084355, -4.2272848e-05, -6.3900848e-06, -2.0009937, -0.00011404399, -4.9782993e-05, -4.501652e-05, -2.2159093e-06, -1.8190814e-05, -0.0012377517, -0.00059247814, -0.0001821234, -0.00018593716, -0.00013526501, -2.4152187e-05, -0.001274696, -0.00011416413, -0.00015112259, -9.628002e-05, -0.03692918, -0.024990706, -0.14543729, -0.09128197], "top_logprobs": null, "text_offset": [5029, 5029, 5030, 5037, 5038, 5042, 5045, 5047, 5054, 5055, 5059, 5062, 5064, 5073, 5075, 5081, 5082, 5091, 5093, 5102, 5108, 5109, 5112, 5119, 5120, 5124, 5126, 5135, 5136, 5139, 5142, 5144, 5146, 5148, 5149, 5150, 5151, 5154, 5156, 5157, 5158, 5160, 5163, 5166, 5169, 5171, 5173, 5176, 5178, 5180, 5189, 5190, 5193, 5196, 5198, 5201, 5204, 5206, 5209, 5210, 5212, 5213, 5215, 5217, 5219, 5221, 5230, 5231, 5234, 5237, 5239, 5241, 5243, 5245, 5247, 5249, 5258, 5260, 5269, 5275, 5276, 5282, 5284, 5293, 5294, 5297, 5300, 5302, 5304, 5306, 5308, 5310, 5312, 5321, 5322, 5325, 5328, 5330, 5332, 5334, 5336, 5339, 5341, 5347, 5348, 5357, 5359, 5368, 5370, 5379, 5385, 5386, 5392, 5394, 5403, 5404, 5407, 5410, 5412, 5413, 5414, 5416, 5418, 5420, 5422, 5424, 5433, 5434, 5437, 5440, 5442, 5444, 5447, 5450, 5452, 5454, 5455, 5456, 5457, 5459, 5462, 5465, 5468, 5470, 5473, 5476, 5479, 5481, 5483, 5484, 5485, 5486, 5488, 5491, 5494, 5497, 5499, 5501, 5504, 5506, 5508, 5517, 5518, 5521, 5524, 5526, 5529, 5532, 5534, 5537, 5538, 5540, 5541, 5543, 5545, 5548, 5548, 5548]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0088998545, -0.13580427, -0.08546522, -0.00011630989, -0.0009968583, -7.040798e-05, -0.008437627, -0.61341023, -3.3809963e-05, -0.00053957955, -7.434374e-05, -0.005203149, -0.08556781, -0.054699395, -0.350891, -8.892534e-06, -3.5477948e-05, -0.0008967502, -5.979934e-05, -0.06540868, -1.5327929e-05, -0.021379687, -2.1291178e-05, -2.4272329e-05, -0.00015541504, -0.00023535996, -1.8907942e-05, -2.2484204e-05, -6.6294406e-06, -1.7400124e-06, -0.0042256177, -0.00019857421, -0.0052678003, -0.00037135737, -4.489638e-05, -0.0015634737, -0.0008152585, -0.0003140574, -2.7728449e-05, -9.997455e-05, -0.00012310104, -0.00072924333, -0.0003444068, -0.00046324843, -0.73770595, -7.291136e-05, -1.163433e-05, -0.0044778297, -2.7371756e-05, -2.2484204e-05, -1.402038e-05, -6.746778e-06, -4.966285e-05, -0.0008594623, -0.00020525271, -5.6340414e-05, -9.198663e-05, -0.00011702421, -2.1051823e-05, -0.00081979216, -5.3363005e-05, -0.00029641076, -5.669991e-05, -7.708367e-05, -0.0005457812, -3.6195077e-05, -0.003011188, -2.8138238e-06, -1.1430258e-06, -0.083414204, -0.0015994118, -0.0001390797, -0.0002396524, -0.00019440286, -0.00857156, -0.03624742, -2.092079, -1.6282536e-05, -0.1932792, -0.0011290851, -6.051553e-05, -9.258174e-05, -8.296486e-06, -7.8540467e-07, -0.11820546, -0.00092568324, -0.0012205068, -0.00024001097, -0.0003581233, -0.002447456, -0.13327307, -5.20489e-05, -0.000629813, -0.0022665479, -0.0036924304, -0.028692234, -0.10098753, -0.051577173, -1.3661821e-05, -0.25432876, -0.00012095904, -2.7967804e-05, -2.1768952e-05, -3.4089344e-06, -4.721163e-06, -0.014201302, -0.0001345479, -0.0021206122, -0.00010343254, -7.827482e-05, -0.0001532674, -4.8353428e-05, -0.00020775704, -2.7967804e-05, -6.277768e-05, -2.2159093e-06, -5.460492e-07, -0.020146213, -0.0002528855, -0.005751232, -0.0012037387, -0.30378276, -0.0038625295, -5.598372e-05, -0.00018176393, -8.388231e-05, -0.00014074863, -0.0026337777, -0.00032073495, -0.00039127364, -0.010196238, -0.0007373542, -4.406191e-05, -5.4432137e-05, -0.0001589913, -6.325358e-05, -1.8907942e-05, -2.3435998e-05, -4.0963423e-05, -3.941184e-05, -2.7611111e-05, -1.9765537e-06, -3.130471e-05, -0.0006877887, -0.00014098798, -8.176345e-06, -1.0038637, -0.00015338662, -2.3675353e-05, -2.9996223e-05, -3.690939e-05, -0.00033737256, -0.00197213, -0.000246804, -8.697986e-05, -5.7293146e-05, -0.00010522067, -2.558363e-05, -0.0014875397, -7.040798e-05, -0.0001754468, -9.949678e-05, -0.016115338, -0.027226502, -0.13980386, -0.1162512, -0.00021944042, -0.0014474274, -7.8038276e-05, -0.017618425], "top_logprobs": null, "text_offset": [5029, 5029, 5030, 5037, 5038, 5042, 5045, 5047, 5054, 5055, 5059, 5062, 5064, 5073, 5075, 5081, 5082, 5091, 5093, 5102, 5108, 5109, 5112, 5119, 5120, 5124, 5126, 5135, 5136, 5139, 5142, 5144, 5146, 5148, 5149, 5150, 5151, 5154, 5156, 5157, 5158, 5160, 5163, 5166, 5169, 5171, 5173, 5176, 5178, 5180, 5189, 5190, 5193, 5196, 5198, 5201, 5204, 5206, 5209, 5210, 5212, 5213, 5215, 5217, 5219, 5221, 5230, 5231, 5234, 5237, 5239, 5241, 5243, 5245, 5247, 5249, 5258, 5264, 5265, 5271, 5273, 5282, 5283, 5286, 5289, 5291, 5293, 5295, 5297, 5300, 5302, 5308, 5309, 5318, 5320, 5329, 5331, 5340, 5346, 5347, 5353, 5355, 5364, 5365, 5368, 5371, 5373, 5374, 5375, 5377, 5379, 5381, 5383, 5385, 5394, 5395, 5398, 5401, 5403, 5405, 5408, 5411, 5413, 5415, 5416, 5417, 5418, 5420, 5423, 5426, 5429, 5431, 5434, 5437, 5440, 5442, 5444, 5445, 5446, 5447, 5449, 5452, 5455, 5458, 5460, 5462, 5465, 5467, 5469, 5478, 5479, 5482, 5485, 5487, 5490, 5493, 5495, 5498, 5499, 5501, 5502, 5504, 5506, 5509, 5509, 5509, 5509, 5509, 5509, 5509]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0088998545, -0.13674827, -0.079047315, -0.000120839824, -0.00095712516, -5.3477528e-05, -0.009148493, -0.64530694, -3.2735214e-05, -0.00018093038, -7.648668e-05, -0.0052142944, -0.0869623, -0.050382104, -0.33884254, -1.2588937e-05, -3.333313e-05, -0.0008953178, -0.00012000537, -0.075962044, -1.3185924e-05, -0.02160008, -2.3078366e-05, -1.688045e-05, -0.00012858746, -0.00024203752, -1.7595703e-05, -2.558363e-05, -7.698572e-06, -7.8540467e-07, -0.0036123863, -0.00019499795, -0.0046609375, -0.00025050133, -4.072407e-05, -0.0009235365, -0.0006906526, -0.00028138483, -3.1065356e-05, -0.0001083201, -0.00012274434, -0.0008365564, -0.0005709483, -0.00037100064, -0.681044, -8.5549356e-05, -1.5687427e-05, -0.0050290474, -3.3093773e-05, -1.9860674e-05, -1.1753544e-05, -1.4377073e-05, -5.4194657e-05, -0.00076974515, -0.00019499795, -5.8367896e-05, -0.00012572645, -9.401318e-05, -2.1529595e-05, -0.0006912467, -4.2033495e-05, -0.0003168001, -5.944078e-05, -5.944078e-05, -0.00042067032, -3.762558e-05, -0.002704598, -5.5556293e-06, -6.6619094e-07, -0.0739588, -0.0014387119, -0.00017317903, -0.00021669957, -0.00016137547, -0.006877516, -0.031727094, -0.15475209, -0.27010962, -0.06100329, -7.291136e-05, -0.3170594, -0.0007666419, -7.279122e-05, -3.452334e-05, -4.838501e-06, -1.6207987e-06, -0.07294883, -0.00123077, -0.00014980942, -0.00018939328, -0.0003218097, -0.00050350063, -6.265847e-05, -0.0002633787, -3.583558e-05, -1.2708151e-05, -0.6208423, -0.0030742034, -0.002488807, -0.00039580732, -0.002331844, -0.002940824, -0.20575073, -0.00012989782, -9.091469e-05, -0.0022988685, -0.004543691, -0.041403536, -0.1401734, -0.07768275, -6.9453374e-05, -0.65034896, -0.0010554508, -3.5357807e-05, -4.954739e-05, -2.8138238e-06, -5.675771e-06, -0.012085905, -0.0009355268, -0.0038660006, -0.00014134373, -0.000109035354, -0.00018200328, -0.00010092916, -0.00027387374, -4.6445148e-05, -0.00010283744, -5.5556293e-06, -8.653179e-06, -0.020405577, -0.0006532539, -0.015180519, -0.0043334872, -0.3505768, -0.0075554443, -8.1019425e-05, -0.00042699307, -6.087316e-05, -0.00039437588, -0.0032909026, -0.00032574454, -0.0004393945, -0.015891787, -0.0012308902, -0.00019309061, -5.669991e-05, -0.0003324822, -7.922942e-05, -1.163433e-05, -2.6538237e-05, -5.07376e-05, -8.054166e-05, -4.1200903e-05, -5.912312e-06, -4.0246297e-05, -0.0010267505, -0.00021681878, -9.606849e-06, -1.5414896, -0.00031990238, -3.6195077e-05, -4.1080762e-05, -2.9311614e-06, -1.2708151e-05, -0.001850543, -0.000648005, -0.00018915485, -0.00017890292, -0.00014015351, -2.1291178e-05, -0.00209869, -0.0001086796, -0.0001552949, -5.657977e-05, -0.035752177, -0.030368805, -0.13877343, -0.09097517], "top_logprobs": null, "text_offset": [5029, 5029, 5030, 5037, 5038, 5042, 5045, 5047, 5054, 5055, 5059, 5062, 5064, 5073, 5075, 5081, 5082, 5091, 5093, 5102, 5108, 5109, 5112, 5119, 5120, 5124, 5126, 5135, 5136, 5139, 5142, 5144, 5146, 5148, 5149, 5150, 5151, 5154, 5156, 5157, 5158, 5160, 5163, 5166, 5169, 5171, 5173, 5176, 5178, 5180, 5189, 5190, 5193, 5196, 5198, 5201, 5204, 5206, 5209, 5210, 5212, 5213, 5215, 5217, 5219, 5221, 5230, 5231, 5234, 5237, 5239, 5241, 5243, 5245, 5247, 5249, 5258, 5260, 5269, 5275, 5276, 5282, 5284, 5293, 5294, 5297, 5300, 5302, 5304, 5306, 5308, 5310, 5312, 5321, 5322, 5325, 5328, 5330, 5332, 5334, 5336, 5339, 5341, 5347, 5348, 5357, 5359, 5368, 5370, 5379, 5385, 5386, 5392, 5394, 5403, 5404, 5407, 5410, 5412, 5413, 5414, 5416, 5418, 5420, 5422, 5424, 5433, 5434, 5437, 5440, 5442, 5444, 5447, 5450, 5452, 5454, 5455, 5456, 5457, 5459, 5462, 5465, 5468, 5470, 5473, 5476, 5479, 5481, 5483, 5484, 5485, 5486, 5488, 5491, 5494, 5497, 5499, 5501, 5504, 5506, 5508, 5517, 5518, 5521, 5524, 5526, 5529, 5532, 5534, 5537, 5538, 5540, 5541, 5543, 5545, 5548, 5548, 5548]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0088998545, -0.13814192, -0.092344135, -0.00010808168, -0.0008189577, -6.396884e-05, -0.008762874, -0.72717553, -0.13998999, -0.62854785, -0.29585472, -7.8038276e-05, -0.40558612, -0.0020840557, -0.000118333635, -0.00012167429, -1.7356348e-05, -4.277735e-07, -0.100672185, -0.0014905236, -0.0002463262, -0.00019309061, -0.000113448885, -0.0014028978, -0.00010021203, -0.00078919117, -4.7399757e-05, -1.9860674e-05, -0.2999604, -0.0042412425, -0.0017676029, -0.00028854018, -0.00037660534, -0.0062324945, -1.4797769, -0.00037123813, -0.00021550842, -0.0019742786, -0.0050475616, -0.058143836, -0.03304822, -0.07687577, -3.690939e-05, -0.3888866, -0.00039544783, -4.6206733e-05, -1.676031e-05, -3.583558e-05, -3.4089344e-06, -0.022934623, -0.00063905964, -0.0034578817, -0.00011261161, -0.00011547263, -8.447461e-05, -8.388231e-05, -0.00024751923, -5.216904e-05, -8.268835e-05, -7.937927e-06, -9.055464e-07, -0.0123133715, -0.00060488336, -0.005107828, -0.0032828294, -0.3231617, -0.004758912, -6.7307614e-05, -0.0003825667, -8.042151e-05, -0.0002643333, -0.0010882105, -0.0006579059, -0.0005898546, -0.018087953, -0.00027005718, -5.2885232e-05, -7.493791e-05, -0.00015505555, -5.6340414e-05, -1.37819625e-05, -3.4762696e-05, -5.4194657e-05, -4.0963423e-05, -6.0276172e-05, -4.361666e-06, -2.6419024e-05, -0.00027363625, -5.8247755e-05, -6.2699432e-06, -0.58609617, -0.00024525335, -6.89756e-05, -2.045765e-05, -2.4543265e-06, -7.698572e-06, -0.0013367061, -0.0004621737, -0.00018176393, -0.00010402765, -0.00013872207, -2.9159892e-05, -0.0024367617, -0.00010545909, -0.0002687459, -0.00012357882, -0.008705931, -0.019263532, -0.078597024, -0.06376994, -0.00012822983, -0.0013732346, -0.00015338662, -0.010075513], "top_logprobs": null, "text_offset": [5029, 5029, 5030, 5037, 5038, 5042, 5045, 5047, 5056, 5058, 5067, 5073, 5074, 5080, 5082, 5091, 5092, 5095, 5098, 5100, 5102, 5104, 5106, 5108, 5110, 5119, 5120, 5123, 5126, 5128, 5130, 5132, 5134, 5136, 5138, 5144, 5145, 5154, 5156, 5165, 5167, 5176, 5182, 5183, 5189, 5191, 5200, 5201, 5204, 5207, 5209, 5210, 5211, 5213, 5215, 5217, 5219, 5221, 5230, 5231, 5234, 5237, 5239, 5241, 5244, 5247, 5249, 5251, 5252, 5253, 5254, 5256, 5259, 5262, 5265, 5267, 5270, 5273, 5276, 5278, 5280, 5281, 5282, 5283, 5285, 5288, 5291, 5294, 5296, 5298, 5301, 5303, 5305, 5314, 5315, 5318, 5321, 5323, 5326, 5329, 5331, 5334, 5335, 5337, 5338, 5340, 5342, 5345, 5345, 5345, 5345, 5345, 5345, 5345]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LMauPBYKznHhNfGGE7gowwzLGk5", "object": "text_completion", "created": 1651002132, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004734597, -0.09079025, -0.061796363, -0.0001850999, -0.001212272, -0.00028389008, -0.0048915767, -0.84853023, -0.054676227, -0.30166304, -6.4921565e-05, -6.087316e-05, -0.0017101039, -0.008787948, -0.076146625, -6.5092986e-06, -0.0046094386, -8.8290224e-05, -2.7013197e-05, -4.5967376e-05, -0.00034929716, -2.28437e-05, -1.7119806e-05, -6.8669196e-06, 0, -0.004074731, -8.7457636e-05, -0.0024940653, -0.00036003065, -2.141132e-05, -0.0013946019, -0.0007209531, -0.00021789165, -1.7119806e-05, -7.636654e-05, -0.0002840093, -0.0012335156, -0.0008030889, -0.0011552818, -0.64038587, -0.00085600157, -4.6010214e-06, -0.017688433, -4.144026e-05, -2.1051823e-05, -1.5805701e-05, -2.2159093e-06, -4.036551e-05, -0.0007299585, -0.0002698197, -8.7337496e-05, -0.0003104802, -8.638288e-05, -4.072407e-05, -0.00024084355, -8.685972e-05, -0.00016864816, -6.99302e-05, -5.0856816e-05, -0.00028591757, -4.3347598e-05, -0.00013526501, -2.4543265e-06, -6.6619094e-07, -0.20538075, -0.018102033, -7.1719274e-05, -9.461016e-05, -0.0009042069, -0.0035663256, -0.04768604, -0.12478289, -0.5423414, -0.111450896, -6.6593304e-05, -1.3622154, -0.0011286073, -4.5135734e-05, -2.6773841e-05, -8.4157e-06, -1.8601542e-06, -1.3135434, -0.018202912, -0.039612126, -0.0016620395, -0.0005973695, -0.00013705408, -0.0009521147, -0.00017306075, -6.5041706e-05, -0.00016423648, -2.2484204e-05, -2.4543265e-06, -0.067458324, -0.003522721, -1.7532945, -0.045674764, -0.3064822, -0.07070767, -0.008764076, -0.0048815734, -0.00013860193, -0.005882226, -0.0036269834, -0.00459315, -0.002332443, -0.024440661, -0.00027518315, -0.0008918571, -0.00042580004, -0.0022438467, -0.0002893765, -8.296486e-06, -0.0001427761, -7.458028e-05, -0.00014873935, -0.00010188283, -1.9621319e-05, -6.587617e-05, -0.00061311346, -0.03830134, -0.576522, -0.525606, -0.30627602, -1.4552776, -0.2758085, -0.1046526, -7.458028e-05, -0.54707134, -0.0016615617, -6.551948e-05, -7.9112084e-05, -2.4272329e-05, -5.460492e-07, -0.9300719, -0.0149912415, -0.048244238, -0.0018556202, -0.00062170305, -0.0003774407, -0.0003042804, -0.0008160948, -5.20489e-05, -0.0006334503, -1.9741461e-05, -4.9586424e-06, -0.08339295, -0.0059240763, -0.44965258, -0.028736584, -0.938278, -0.14631797, -0.0026598957, -0.0061205225, -0.00026158962, -0.0076361033, -0.012345415, -0.03130703, -0.009453091, -0.050673388, -0.0019427494, -0.0018479165, -0.0010138038, -0.0063453782, -0.0006040489, -1.8190814e-05, -6.182308e-05, -7.541475e-05, -0.0003777965, -0.00027661366, -0.00012286357, -0.0001270368, -0.0010210839, -0.03167178, -0.023614552, -2.3824673, -0.25890556, -0.0015602494, -0.00021348093, -1.37819625e-05, -2.2159093e-06, -0.019085752, -0.020927114, -0.0010141633, -0.004531955, -0.0005656985, -6.6949986e-05, -0.01667179, -0.0003816121, -0.00063905964, -0.00026505042, -0.072093986, -0.020123104, -0.090933844], "top_logprobs": null, "text_offset": [5044, 5044, 5045, 5052, 5053, 5057, 5060, 5062, 5071, 5073, 5079, 5080, 5089, 5091, 5100, 5106, 5107, 5110, 5117, 5118, 5122, 5124, 5133, 5134, 5137, 5140, 5142, 5144, 5146, 5147, 5148, 5149, 5152, 5154, 5155, 5156, 5158, 5161, 5164, 5167, 5169, 5171, 5174, 5176, 5178, 5187, 5188, 5191, 5194, 5196, 5199, 5202, 5204, 5207, 5208, 5210, 5211, 5213, 5215, 5217, 5219, 5228, 5229, 5232, 5235, 5237, 5239, 5241, 5243, 5245, 5247, 5256, 5258, 5267, 5273, 5274, 5280, 5282, 5291, 5292, 5295, 5298, 5300, 5301, 5302, 5304, 5306, 5308, 5310, 5312, 5321, 5322, 5325, 5328, 5330, 5332, 5335, 5338, 5340, 5342, 5343, 5344, 5345, 5347, 5350, 5353, 5356, 5358, 5361, 5364, 5367, 5369, 5371, 5372, 5373, 5374, 5376, 5379, 5382, 5385, 5387, 5389, 5392, 5394, 5403, 5405, 5414, 5420, 5421, 5427, 5429, 5438, 5439, 5442, 5445, 5447, 5448, 5449, 5451, 5453, 5455, 5457, 5459, 5468, 5469, 5472, 5475, 5477, 5479, 5482, 5485, 5487, 5489, 5490, 5491, 5492, 5494, 5497, 5500, 5503, 5505, 5508, 5511, 5514, 5516, 5518, 5519, 5520, 5521, 5523, 5526, 5529, 5532, 5534, 5536, 5539, 5541, 5543, 5552, 5553, 5556, 5559, 5561, 5564, 5567, 5569, 5572, 5573, 5575, 5576, 5578, 5580, 5583, 5583]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1.25 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1.25 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", ".", "25", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", ".", "25", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004734597, -0.09505358, -0.0697122, -0.00018164565, -0.0014001532, -0.0003595538, -0.0060150367, -0.81652004, -0.056718923, -1.4142057, -1.2019801, -0.35416296, -0.94841415, -5.4791635e-05, -0.33162317, -0.004099266, -9.329886e-05, -0.0010417877, -4.573365e-05, -1.3900239e-05, -0.5384295, -0.041672323, -0.0004337889, -0.00046718423, -0.0006457391, -0.008802499, -0.010749111, -0.0041138707, -6.146545e-05, -8.256821e-05, -1.4822017, -2.488229, -1.367723, -0.010782248, -0.013429201, -0.0014213423, -0.0027509783, -0.006970006, -0.010321977, -0.070774525, -0.00027613778, -9.055464e-07, -1.2790744, -0.16346441, -0.00243007, -0.00034488458, -0.0036892598, -0.003972573, -0.046557344, -0.111753576, -0.09109001, -0.45430335, -0.0062762774, -0.038749333, -4.4818075e-06, -0.026226003, -0.00016006512, -2.033751e-05, -8.5358415e-06, -1.0444119e-05, -3.076318e-07, -0.03083372, -0.0172365, -6.408898e-05, -4.036551e-05, -0.00015243483, -0.0007714141, -2.1649737e-05, -0.000106533844, -1.0444119e-05, -2.2159093e-06, -0.13319959, -0.040367212, -0.18396035, -0.000924371, -0.00012632155, -4.751897e-05, -0.00029438327, -0.0002476394, -3.333313e-05, -0.00037302624, -1.2351458e-05, -7.8540467e-07, -1.3936352, -0.39045742, -0.00015887116, -0.00011988616, -0.009054602, -0.017320124, -0.031439997], "top_logprobs": null, "text_offset": [5044, 5044, 5045, 5052, 5053, 5057, 5060, 5062, 5071, 5073, 5082, 5084, 5093, 5099, 5100, 5106, 5108, 5117, 5118, 5121, 5124, 5126, 5128, 5130, 5132, 5134, 5136, 5145, 5146, 5149, 5152, 5154, 5155, 5157, 5159, 5161, 5163, 5165, 5167, 5176, 5177, 5180, 5183, 5185, 5187, 5189, 5191, 5193, 5195, 5204, 5206, 5215, 5217, 5226, 5232, 5233, 5239, 5241, 5250, 5251, 5254, 5257, 5259, 5261, 5263, 5265, 5267, 5269, 5278, 5279, 5282, 5285, 5287, 5288, 5290, 5292, 5294, 5296, 5298, 5300, 5309, 5310, 5313, 5316, 5318, 5320, 5322, 5324, 5327, 5327]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004734597, -0.0953842, -0.059234418, -0.0001375281, -0.0011839839, -0.0002775683, -0.0056557367, -0.88588274, -0.049042717, -0.28925377, -5.7532503e-05, -4.4181128e-05, -0.001390304, -0.009575907, -0.09360496, -6.6294406e-06, -0.0055569564, -9.4967785e-05, -3.488097e-05, -4.4539687e-05, -0.0003427388, -2.0098154e-05, -1.688045e-05, -9.490449e-06, -6.827632e-08, -0.0046080016, -7.648668e-05, -0.0021270055, -0.00037922888, -1.9263687e-05, -0.0014438464, -0.00063762726, -0.00030857194, -1.6999666e-05, -9.56821e-05, -0.0001345479, -0.0017691563, -0.000604766, -0.0006580251, -0.62881875, -0.0008084589, -4.361666e-06, -0.017361488, -5.24084e-05, -1.9382902e-05, -1.1873685e-05, -4.1232483e-06, -3.8577375e-05, -0.0021348882, -0.00029867573, -6.623567e-05, -0.0003377283, -7.517727e-05, -3.6670972e-05, -0.00024227405, -9.401318e-05, -0.00017186676, -5.0260765e-05, -4.072407e-05, -0.00042472623, -5.3477528e-05, -0.0002977211, -2.3360508e-06, -6.6619094e-07, -2.0311117, -0.07004822, -0.00033176786, -0.00022939671, -0.003204911, -0.0033946638, -0.04223953, -0.79539114, -2.045765e-05, -0.65147656, -0.001029498, -3.5240468e-05, -8.697986e-05, -9.251094e-06, -1.5006569e-06, -0.11836661, -0.0033950233, -0.0023396716, -8.685972e-05, -0.0017936364, -0.013506107, -0.051695354, -0.028463157, -3.7983213e-05, -0.0013830229, -3.2973632e-05], "top_logprobs": null, "text_offset": [5044, 5044, 5045, 5052, 5053, 5057, 5060, 5062, 5071, 5073, 5079, 5080, 5089, 5091, 5100, 5106, 5107, 5110, 5117, 5118, 5122, 5124, 5133, 5134, 5137, 5140, 5142, 5144, 5146, 5147, 5148, 5149, 5152, 5154, 5155, 5156, 5158, 5161, 5164, 5167, 5169, 5171, 5174, 5176, 5178, 5187, 5188, 5191, 5194, 5196, 5199, 5202, 5204, 5207, 5208, 5210, 5211, 5213, 5215, 5217, 5219, 5228, 5229, 5232, 5235, 5237, 5239, 5241, 5243, 5245, 5247, 5256, 5262, 5263, 5269, 5271, 5280, 5281, 5284, 5287, 5289, 5291, 5293, 5295, 5298, 5298, 5298, 5298, 5298, 5298]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 0 (transform_matrix 1 (/ (* 2 pi) 0) 0 0)) (transform (transform (transform (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 0 (transform_matrix 1 (/ (* 2 pi) 0) 0 0)) 0 (transform_matrix 1 (/ (* 2 pi) 0) 0 0)) (transform (transform (transform (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 0 (transform_matrix 1 (/ (* 2 pi) 0", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 0", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 0", ")", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 0", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 0", ")", " 0", " 0", "))", " 0", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 0", ")", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 0", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 0"], "token_logprobs": [-0.004734597, -0.093413986, -0.06494864, -8.495144e-05, -0.0014143569, -0.0002354801, -0.004146072, -0.5041142, -9.490449e-06, -0.00026683856, -6.850158e-05, -0.0024962157, -0.16303642, -0.0135796955, -0.9887983, -1.6640097, -0.5755272, -1.2490191, -0.4514084, -0.48132187, -0.29874402, -1.8619965, -0.0003591943, -0.21637835, -0.014790869, -0.0013461339, -0.0028862462, -5.1810483e-05, -1.5006569e-06, -1.4300679, -0.025976753, -0.13197674, -0.0042717713, -0.0022646359, -0.0015512345, -0.022206217, -0.024672238, -0.014555823, -0.02323283, -0.00080499804, -2.0966954e-06, -0.5924832, -0.042458225, -0.43321648, -0.055119015, -0.85224295, -0.15382703, -0.008073733, -0.024303915, -0.00077236874, -0.0047615482, -0.010512781, -0.03600196, -0.009855838, -0.1663745, -0.0036750215, -0.006569083, -0.0015139843, -0.0123376325, -0.00084276, -4.3465872e-05, -0.00014754539, -8.435633e-05, -0.00019368572, -0.0003204956, -0.0001536241, -9.329886e-05, -0.0013489996, -0.048297286, -4.036551e-05, -3.903535, -0.59461755, -0.047470823, -0.002377014, -0.002653023, -9.341901e-05, -0.22087249, -0.49747777, -0.074390694, -0.040635347, -0.0054726875, -0.0011716923, -1.2093631, -0.007423629, -0.07621095, -0.009701689, -0.051843878, -0.11751245, -0.017443484, -3.3295534, -0.09326629, -0.67645925, -0.024853272, -0.28416365, -0.02036506, -0.8629777, -0.022150576, -2.4450786, -0.055816397, -0.9510352, -1.7953334e-05, -0.08828328, -0.0026073651, -1.4974988e-05, -7.8872734e-05, -2.5744682e-06, -5.460492e-07, -0.050286014, -0.00041769102, -0.008108641, -0.00031835173, -0.0002747054, -0.000111420464, -0.0005207943, -0.0008710941, -2.9280032e-05, -0.00043772557, -2.4543265e-06, 0, -0.015897177, -0.0014240878, -0.0049273926, -0.0005217489, -0.053797513, -0.007839011, -0.000106175285, -0.002377611, -0.0001341912, -0.00074785395, -0.0016812057, -0.0026973665, -0.0010058093, -0.013371571, -0.00037994413, -0.00030499752, -6.754697e-05, -0.00049002067, -0.00022802629, -1.1159372e-05, -7.9112084e-05, -9.0198504e-05, -7.088388e-05, -9.186649e-05, -2.0696069e-05, -7.505805e-05, -0.00028055036, -0.00217043, -8.662224e-05, -0.18558516, -0.0061933873, -3.333313e-05, -0.00023392851, -1.7400124e-06, -7.8540467e-07, -0.00803119, -0.0058089644, -0.00017198599, -0.0010267505, -0.00027697318, -5.7891062e-05, -0.007479475, -0.00043557797, -0.00084371463, -0.00027578016, -0.01820783, -3.359936, -0.07095598, -0.0014566196, -0.03278593, -0.00012930272, -6.827632e-08, -0.14264585, -0.17562284, -0.013071572, -0.027992168, -0.0043451604, -0.0005754811, -0.03656954, -0.012144185, -0.07158561, -0.0043815603, -0.1880021, -0.27098006, -0.0037804393, -0.2610451, -0.0047468147, -0.042623855, -0.00085123134, -0.019980073, -0.0005362389, -0.02680691, -0.0008799249, -0.07138401, -0.001135588, -0.98769563, -8.653179e-06, -4.4230213, -0.0021904411, -3.333313e-05, -6.6593304e-05, -6.2699432e-06, -3.883893e-06, -0.06818698, -0.00055544183, -0.006289354, -0.00033087333, -0.00013443055, -0.000118811404, -0.0006550439, -0.0024548064, -3.965026e-05, -0.00037350404, -8.296486e-06, -2.8138238e-06, -0.015496401, -0.001006287, -0.1008583, -0.0012625199, -0.07675734, -0.011289932, -0.00016829051, -0.00129636, -5.6818186e-05, -0.00061347015, -0.0012127497, -0.0035945012, -0.00038101888, -0.007605592, -0.00032932175, -0.00012465262, -0.00016280691, -0.0004968193, -0.00017127168, -1.2231317e-05, -6.122609e-05, -5.07376e-05, -4.7399757e-05, -7.422359e-05, -4.5494293e-05, -5.7177684e-05, -0.00020155631, -0.00070985645, -4.048565e-05, -0.036067277, -0.0021402037, -5.0500123e-05, -0.00014647158, -4.277735e-07, -6.6619094e-07, -0.003477202, -0.005740021, -9.508793e-05, -0.0013042382, -9.0795475e-05, -2.4152187e-05, -0.0008634009], "top_logprobs": null, "text_offset": [5044, 5044, 5045, 5052, 5053, 5057, 5060, 5062, 5069, 5070, 5074, 5077, 5079, 5088, 5090, 5099, 5101, 5110, 5112, 5121, 5123, 5132, 5138, 5139, 5145, 5147, 5156, 5157, 5160, 5163, 5165, 5166, 5167, 5169, 5171, 5173, 5175, 5177, 5186, 5187, 5190, 5193, 5195, 5197, 5200, 5203, 5205, 5207, 5208, 5209, 5210, 5212, 5215, 5218, 5221, 5223, 5226, 5229, 5232, 5234, 5236, 5237, 5238, 5239, 5241, 5244, 5247, 5250, 5252, 5254, 5257, 5259, 5261, 5270, 5271, 5274, 5277, 5279, 5282, 5285, 5287, 5290, 5291, 5293, 5294, 5296, 5298, 5300, 5302, 5311, 5313, 5322, 5324, 5333, 5335, 5344, 5346, 5355, 5357, 5366, 5372, 5373, 5379, 5381, 5390, 5391, 5394, 5397, 5399, 5400, 5401, 5403, 5405, 5407, 5409, 5411, 5420, 5421, 5424, 5427, 5429, 5431, 5434, 5437, 5439, 5441, 5442, 5443, 5444, 5446, 5449, 5452, 5455, 5457, 5460, 5463, 5466, 5468, 5470, 5471, 5472, 5473, 5475, 5478, 5481, 5484, 5486, 5488, 5491, 5493, 5495, 5504, 5505, 5508, 5511, 5513, 5516, 5519, 5521, 5524, 5525, 5527, 5528, 5530, 5532, 5534, 5536, 5538, 5547, 5548, 5551, 5554, 5556, 5559, 5562, 5564, 5567, 5568, 5570, 5571, 5573, 5575, 5577, 5579, 5588, 5590, 5599, 5601, 5610, 5612, 5621, 5623, 5632, 5634, 5643, 5649, 5650, 5656, 5658, 5667, 5668, 5671, 5674, 5676, 5677, 5678, 5680, 5682, 5684, 5686, 5688, 5697, 5698, 5701, 5704, 5706, 5708, 5711, 5714, 5716, 5718, 5719, 5720, 5721, 5723, 5726, 5729, 5732, 5734, 5737, 5740, 5743, 5745, 5747, 5748, 5749, 5750, 5752, 5755, 5758, 5761, 5763, 5765, 5768, 5770, 5772, 5781, 5782, 5785, 5788, 5790, 5793, 5796, 5798, 5801, 5802]}, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 8.25 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 8", ".", "25", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", ".", "25", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "transform"], "token_logprobs": [-0.004734597, -0.09386177, -0.06767426, -7.684431e-05, -0.00087372045, -0.00027530332, -0.0047697523, -0.56893706, -6.2699432e-06, -0.00033856556, -6.5041706e-05, -0.0025531629, -0.18643981, -0.015801864, -0.9375729, -0.37249434, -3.6311474e-05, -0.13974725, -0.0009579596, -4.8353428e-05, -4.382537e-05, -1.4974988e-05, 0, -0.24151613, -0.028823936, -0.000116426294, -0.00014039098, -0.00013037559, -0.00028210194, -9.663671e-05, -0.0011049176, -5.979934e-05, -6.6619094e-07, -5.384254, -2.452006, -0.8322798, -0.0034530973, -0.00056104746, -0.00044547606, -0.0007585893, -0.0007957505, -0.039200194, -0.020247174, -0.14556406, -0.01781633, -8.5358415e-06, -0.03369641, -0.00013264055, -1.676031e-05, -5.79217e-06, -1.9741461e-05, -4.277735e-07, -0.03551153, -0.019754078, -7.1481794e-05, -5.0022347e-05, -0.00028710873, -6.277768e-05, -4.9427246e-05, -6.420819e-05, -1.1991961e-05, -3.076318e-07, -1.911531, -0.9041006, -0.17330074, -0.00091995555, -6.9573514e-05, -4.7875652e-05, -0.0045184256, -0.0012894366, -0.09854131, -0.05376575, -0.034972828, -0.012872913, -7.818713e-06, -0.04802439, -6.158372e-05, -1.5687427e-05, -1.9741461e-05, -9.055464e-07, -3.655083e-05, -0.025931118, -0.006851172, -4.6445148e-05, -5.669991e-05, -0.00010796247, -5.5149267e-05, -2.9756868e-05, -6.38515e-05, -6.9861335e-06, -1.8841804e-07, -1.7488105, -0.4848252, -0.040984716, -0.00029438327, -5.7413286e-05, -6.48061e-05, -0.0013549093, -0.018732594, -0.036680892, -0.031404078, -4.2153635e-05, -0.0006558784, -0.00016268677, -0.002748829, -1.1222961], "top_logprobs": null, "text_offset": [5044, 5044, 5045, 5052, 5053, 5057, 5060, 5062, 5069, 5070, 5074, 5077, 5079, 5088, 5090, 5099, 5105, 5106, 5112, 5114, 5123, 5124, 5127, 5130, 5132, 5134, 5136, 5138, 5140, 5142, 5151, 5152, 5155, 5158, 5160, 5161, 5163, 5165, 5167, 5169, 5171, 5173, 5182, 5184, 5193, 5199, 5200, 5206, 5208, 5217, 5218, 5221, 5224, 5226, 5228, 5230, 5232, 5234, 5236, 5245, 5246, 5249, 5252, 5254, 5255, 5257, 5259, 5261, 5263, 5266, 5268, 5277, 5279, 5288, 5294, 5295, 5301, 5303, 5312, 5313, 5316, 5319, 5321, 5323, 5325, 5327, 5329, 5331, 5340, 5341, 5344, 5347, 5349, 5350, 5352, 5354, 5356, 5358, 5361, 5361, 5361, 5361, 5361, 5361, 5361, 5361]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.004734597, -0.09912406, -0.067478284, -0.00011905076, -0.0010958484, -0.00021622273, -0.0072712386, -0.5193899, -8.4157e-06, -0.00030773747, -7.24364e-05, -0.0027576739, -0.16928518, -0.01192942, -0.9540708, -0.39031774, -3.5717305e-05, -0.12837069, -0.001038922, -3.965026e-05, -2.7611111e-05, -1.2828294e-05, -6.827632e-08, -0.24847387, -0.030766165, -9.878341e-05, -0.00017449218, -0.00012763379, -0.000368853, -8.185389e-05, -0.001030094, -6.051553e-05, -1.7400124e-06, -0.8464971, -0.12130586, -0.0011400053, -8.3284394e-05, -0.00026791144, -0.00040045741, -0.018931266, -0.011368118, -0.0600833, -0.018344473, -6.5092986e-06, -0.020199979, -6.766711e-05, -1.5214344e-05, -7.224551e-06, -2.9041616e-05, -1.8601542e-06, -0.035796653, -0.043560967, -0.00010212031, -5.157113e-05, -0.00021491051, -8.5905114e-05, -3.869565e-05, -7.076466e-05, -1.688045e-05, -4.277735e-07, -0.20766522, -0.03481741, -0.10262455, -0.00056486396, -8.042151e-05, -9.461016e-05, -0.0029345443, -0.0019320599, -0.13696793, -0.4353632, -0.06875627, -0.03608983, -1.2828294e-05, -0.106773615, -9.759038e-05, -2.1171965e-05, -1.7400124e-06, -4.0040345e-06, -2.4543265e-06, -0.07612599, -0.03423985, -6.885639e-05, -5.7293146e-05, -0.00012369896, -8.2807564e-05, -6.015603e-05, -7.458028e-05, -5.197998e-06, -3.076318e-07, -0.4342065, -0.025742548, -0.004210295, -8.2927705e-05, -0.001833882, -0.02295725, -0.058727536, -0.060551167, -0.00013335768], "top_logprobs": null, "text_offset": [5044, 5044, 5045, 5052, 5053, 5057, 5060, 5062, 5069, 5070, 5074, 5077, 5079, 5088, 5090, 5099, 5105, 5106, 5112, 5114, 5123, 5124, 5127, 5130, 5132, 5134, 5136, 5138, 5140, 5142, 5151, 5152, 5155, 5158, 5160, 5162, 5164, 5166, 5168, 5170, 5179, 5181, 5190, 5196, 5197, 5203, 5205, 5214, 5215, 5218, 5221, 5223, 5225, 5227, 5229, 5231, 5233, 5242, 5243, 5246, 5249, 5251, 5252, 5254, 5256, 5258, 5260, 5263, 5265, 5274, 5276, 5285, 5291, 5292, 5298, 5300, 5309, 5310, 5313, 5316, 5318, 5320, 5322, 5324, 5326, 5328, 5337, 5338, 5341, 5344, 5346, 5348, 5350, 5352, 5355, 5355, 5355, 5355]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.004734597, -0.09680533, -0.06372852, -0.00011583212, -0.0013964521, -0.00030284992, -0.0053298203, -0.5595459, -9.606849e-06, -0.00030284992, -7.791906e-05, -0.0026082012, -0.15834653, -0.014800368, -0.52889323, -8.5358415e-06, -2.200643e-05, -0.0007316303, -0.00495465, -0.06260212, -5.79217e-06, -0.0050838636, -9.130952e-06, -1.2468796e-05, -1.9143545e-05, -0.00018820119, -1.2351458e-05, -2.2126573e-05, -6.9861335e-06, -6.827632e-08, -0.003274756, -5.8725527e-05, -0.0034244452, -0.0003290824, -1.843017e-05, -0.0007110504, -0.00022123232, -0.00014241754, -1.0084622e-05, -5.1810483e-05, -9.699527e-05, -0.0013384961, -0.00024215765, -0.0003599105, -0.45678818, -0.00041578274, -3.4089344e-06, -0.00795182, -3.2973632e-05, -2.0218295e-05, -1.3900239e-05, -4.1232483e-06, -1.1873685e-05, -0.0008456238, -0.00021574495, -7.481963e-05, -0.0003123885, -9.520714e-05, -3.1065356e-05, -0.00031429582, -7.75605e-05, -0.00021121504, -5.157113e-05, -1.676031e-05, -0.00013240307, -9.699527e-05, -0.0003420226, -3.2906587e-06, -7.8540467e-07, -0.06052045, -0.013248288, -4.5255874e-05, -5.991855e-05, -8.6144464e-05, -0.0001526695, -0.018389154, -0.0037376, -0.35730767, -2.0966954e-06, -5.1215375e-05, -0.00027196546, -3.0353855e-05, -0.0043872474, -1.1430258e-06, -4.1232483e-06, -1.7400124e-06, -1.2468796e-05, -2.3360508e-06, -1.5214344e-05, -6.9861335e-06, -4.361666e-06, -1.7400124e-06, -3.076318e-07, -0.00034238215, -3.201996e-05, -0.00017246376, -7.028876e-05, -1.843017e-05, -7.159913e-05, -1.9741461e-05, -2.3317722e-05, -5.912312e-06, -2.5464416e-05, -3.9055147e-05, -7.922942e-05, -2.5105857e-05, -8.221057e-05, -0.043894984, -8.1136764e-05, -5.675771e-06, -0.0010630885, -1.771398e-05, -1.306671e-05, -4.3586017e-05, -4.277735e-07, -1.5006569e-06, -0.00071892375, -6.194322e-05, -6.587617e-05, -2.045765e-05, -3.8103353e-05, -3.7386224e-05, -0.00013609948, -6.850158e-05, -0.00010557923, -2.1529595e-05, -0.0004467892, -6.623567e-05, -0.000102240454, -0.00011070334, -4.838501e-06, -1.0920954e-05, -0.54335576, -0.005218368, -0.0002601591, -8.161453e-05, -0.002184111, -0.0013763368, -0.35793635, -8.7457636e-05, -1.7119806e-05, -0.0011067076, -0.012799497, -0.01954424, -0.029027019, -0.042632684, -4.46589e-05, -0.19515651, -0.00028376994, -3.6195077e-05, -3.237946e-05, -8.176345e-06, -6.6619094e-07, -0.06038311, -0.0006347644, -0.0043555773, -0.0001345479, -0.00014611395, -0.00016864816, -2.3675353e-05, -0.0002116928, -2.141132e-05, -0.00012679932, -1.1430258e-06, -5.675771e-06, -0.017075267, -0.00016519109, -0.021210115, -0.005412577, -0.77362293, -0.023810167, -0.00016531031, -0.0011122569, -0.0001118973, -0.00019559306, -0.0029800397, -0.00024799514, -0.00030153766, -0.0136441635, -0.00018081025, -6.6829845e-05, -7.231626e-05, -0.0008936471, -0.00027792776, -7.818713e-06, -5.3597672e-05, -6.13453e-05, -4.501652e-05, -5.0140625e-05, -1.3823812e-06, -4.7875652e-05, -0.00038065936, -9.854499e-05, -3.7684315e-06, -1.7086747, -0.00015672446, -1.9028084e-05, -2.4272329e-05, -1.2622395e-06, -1.1430258e-06, -0.0016462186, -0.0003624167, -0.00010760485, -7.541475e-05, -6.623567e-05, -4.2870764e-05, -0.0020069494, -9.5562886e-05, -0.00012346054, -7.958892e-05, -0.01165223, -0.029217066, -0.11620011, -0.07279471, -0.00014039098, -0.0011036026, -0.000116070536, -0.0043014605], "top_logprobs": null, "text_offset": [5044, 5044, 5045, 5052, 5053, 5057, 5060, 5062, 5069, 5070, 5074, 5077, 5079, 5088, 5090, 5096, 5097, 5106, 5108, 5117, 5123, 5124, 5127, 5134, 5135, 5139, 5141, 5150, 5151, 5154, 5157, 5159, 5161, 5163, 5164, 5165, 5166, 5169, 5171, 5172, 5173, 5175, 5178, 5181, 5184, 5186, 5188, 5191, 5193, 5195, 5204, 5205, 5208, 5211, 5213, 5216, 5219, 5221, 5224, 5225, 5227, 5228, 5230, 5232, 5234, 5236, 5245, 5246, 5249, 5252, 5254, 5256, 5258, 5260, 5262, 5264, 5273, 5275, 5281, 5282, 5291, 5293, 5302, 5308, 5309, 5312, 5319, 5320, 5324, 5326, 5335, 5336, 5339, 5342, 5344, 5346, 5348, 5349, 5350, 5351, 5354, 5356, 5357, 5358, 5360, 5363, 5366, 5369, 5371, 5373, 5376, 5378, 5380, 5389, 5390, 5393, 5396, 5398, 5401, 5404, 5406, 5409, 5410, 5412, 5413, 5415, 5417, 5419, 5421, 5430, 5431, 5434, 5437, 5439, 5441, 5443, 5445, 5448, 5450, 5456, 5457, 5466, 5468, 5477, 5479, 5488, 5494, 5495, 5501, 5503, 5512, 5513, 5516, 5519, 5521, 5522, 5523, 5525, 5527, 5529, 5531, 5533, 5542, 5543, 5546, 5549, 5551, 5553, 5556, 5559, 5561, 5563, 5564, 5565, 5566, 5568, 5571, 5574, 5577, 5579, 5582, 5585, 5588, 5590, 5592, 5593, 5594, 5595, 5597, 5600, 5603, 5606, 5608, 5610, 5613, 5615, 5617, 5626, 5627, 5630, 5633, 5635, 5638, 5641, 5643, 5646, 5647, 5649, 5650, 5652, 5654, 5657, 5657, 5657, 5657, 5657, 5657, 5657]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.004734597, -0.091369346, -0.072488345, -0.00014933258, -0.0010570033, -0.00022915828, -0.0053573255, -0.54719, -9.130952e-06, -0.0002917607, -5.5385808e-05, -0.0030744427, -0.15926509, -0.013157571, -0.634186, -8.7733215e-06, -2.6893982e-05, -0.0009513975, -0.0039621596, -0.050583787, -4.721163e-06, -0.004638842, -9.606849e-06, -1.4377073e-05, -1.4616429e-05, -9.615988e-05, -1.771398e-05, -2.28437e-05, -4.1232483e-06, -6.827632e-08, -0.004238667, -6.826223e-05, -0.0011662003, -0.00028043022, -1.402038e-05, -0.000789071, -0.00027053498, -8.948419e-05, -1.3661821e-05, -3.8935006e-05, -0.00014253768, -0.0009316502, -0.000107247215, -0.00041399087, -0.46919873, -0.00041118995, -4.361666e-06, -0.005300758, -3.7386224e-05, -2.4866502e-05, -9.966347e-06, -2.3360508e-06, -5.675771e-06, -0.0013686371, -0.0002079936, -8.161453e-05, -0.00031978224, -9.0795475e-05, -2.6419024e-05, -0.000353232, -7.9112084e-05, -0.00021634194, -6.206056e-05, -1.2588937e-05, -0.000116426294, -9.3535404e-05, -0.0006413237, -2.8138238e-06, -6.6619094e-07, -0.0506078, -0.009751225, -4.29881e-05, -7.1719274e-05, -6.373136e-05, -0.00019273112, -0.018236173, -0.003914404, -0.38933474, -1.7400124e-06, -8.3404535e-05, -0.0001507631, -5.3242864e-05, -0.0060043633, -1.1430258e-06, -4.9586424e-06, -2.3360508e-06, -1.0444119e-05, -2.5744682e-06, -2.3078366e-05, -7.1062755e-06, -5.3162735e-06, -1.2622395e-06, -3.076318e-07, -0.000348106, -2.462996e-05, -0.00016650239, -6.9690854e-05, -1.855031e-05, -7.613187e-05, -2.2245786e-05, -2.3795494e-05, -6.6294406e-06, -2.6773841e-05, -4.716134e-05, -7.541475e-05, -6.0395385e-05, -9.9022756e-05, -0.046646453, -7.732115e-05, -4.721163e-06, -0.00068790605, -1.6402679e-05, -1.1514188e-05, -5.6340414e-05, -1.8841804e-07, -6.6619094e-07, -0.00033999607, -5.1334588e-05, -4.489638e-05, -1.4377073e-05, -3.2616e-05, -3.4287736e-05, -0.000159348, -6.0395385e-05, -9.592052e-05, -2.0696069e-05, -0.0004034395, -5.991855e-05, -9.759038e-05, -0.00015410187, -4.1232483e-06, -2.2159093e-06, -1.0141883, -0.0043728193, -4.1918032e-05, -6.516092e-05, -0.0020336455, -0.0020168624, -0.19000901, -4.9069615e-05, -1.306671e-05, -0.00069601886, -0.010134278, -0.008136403, -0.011585778, -0.021622008, -1.3422466e-05, -0.17076606, -0.00019690624, -2.319758e-05, -3.7028603e-05, -5.197998e-06, -5.79217e-06, -0.03376145, -0.00041196714, -0.0031198226, -9.866513e-05, -9.7471166e-05, -0.00012989782, -1.3542607e-05, -0.00010772499, -1.9263687e-05, -0.00013276069, -1.7400124e-06, -5.912312e-06, -0.01361196, -0.0003345106, -0.015505175, -0.0017149972, -0.26651427, -0.005542511, -4.072407e-05, -0.00020906834, -7.5892516e-05, -7.946878e-05, -0.0005734527, -7.839496e-05, -0.00024417858, -0.0035222422, -0.00014146294, -4.2631407e-05, -3.6195077e-05, -0.00027852194, -7.6726035e-05, -6.9861335e-06, -1.7236207e-05, -6.0753944e-05, -2.6060465e-05, -3.2855354e-05, -4.277735e-07, -3.5717305e-05, -0.00022445, -0.000106175285, -2.0966954e-06, -1.3316317, -0.00065552077, -1.9860674e-05, -2.6180607e-05, -1.7400124e-06, -4.4818075e-06, -0.0012720687, -0.00032026, -9.198663e-05, -8.9960085e-05, -0.00012643983, -2.4032974e-05, -0.0019738027, -0.000113328744, -0.00015410187, -6.277768e-05, -0.013730695, -0.026021166, -0.11399375, -0.06508769, -0.00011988616, -0.0010209638, -0.00012381817, -0.0041709696], "top_logprobs": null, "text_offset": [5044, 5044, 5045, 5052, 5053, 5057, 5060, 5062, 5069, 5070, 5074, 5077, 5079, 5088, 5090, 5096, 5097, 5106, 5108, 5117, 5123, 5124, 5127, 5134, 5135, 5139, 5141, 5150, 5151, 5154, 5157, 5159, 5161, 5163, 5164, 5165, 5166, 5169, 5171, 5172, 5173, 5175, 5178, 5181, 5184, 5186, 5188, 5191, 5193, 5195, 5204, 5205, 5208, 5211, 5213, 5216, 5219, 5221, 5224, 5225, 5227, 5228, 5230, 5232, 5234, 5236, 5245, 5246, 5249, 5252, 5254, 5256, 5258, 5260, 5262, 5264, 5273, 5275, 5281, 5282, 5291, 5293, 5302, 5308, 5309, 5312, 5319, 5320, 5324, 5326, 5335, 5336, 5339, 5342, 5344, 5346, 5348, 5349, 5350, 5351, 5354, 5356, 5357, 5358, 5360, 5363, 5366, 5369, 5371, 5373, 5376, 5378, 5380, 5389, 5390, 5393, 5396, 5398, 5401, 5404, 5406, 5409, 5410, 5412, 5413, 5415, 5417, 5419, 5421, 5430, 5431, 5434, 5437, 5439, 5441, 5443, 5445, 5448, 5450, 5456, 5457, 5466, 5468, 5477, 5479, 5488, 5494, 5495, 5501, 5503, 5512, 5513, 5516, 5519, 5521, 5522, 5523, 5525, 5527, 5529, 5531, 5533, 5542, 5543, 5546, 5549, 5551, 5553, 5556, 5559, 5561, 5563, 5564, 5565, 5566, 5568, 5571, 5574, 5577, 5579, 5582, 5585, 5588, 5590, 5592, 5593, 5594, 5595, 5597, 5600, 5603, 5606, 5608, 5610, 5613, 5615, 5617, 5626, 5627, 5630, 5633, 5635, 5638, 5641, 5643, 5646, 5647, 5649, 5650, 5652, 5654, 5657, 5657, 5657, 5657, 5657, 5657, 5657]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2"], "token_logprobs": [-0.004734597, -0.09689706, -0.06979055, -0.00013287991, -0.0014461143, -0.00026123386, -0.0055863853, -0.5337161, -9.490449e-06, -0.00030213463, -6.9690854e-05, -0.002883078, -1.885766, -0.00026051674, -0.0012160913, -7.97072e-05, -0.0073247347, -0.34383538, -0.052755628, -0.54794806, -0.00010367096, -9.270188e-05, -0.0029143437, -0.010044325, -0.10123318, -6.746778e-06, -0.007561811, -8.5358415e-06, -3.7863996e-05, -0.00013776746, -0.0005305741, -4.6445148e-05, -6.599631e-05, -9.012677e-06, 0, -0.008699318, -0.00014384899, -0.002667665, -0.00047147667, -2.1649737e-05, -0.0014867033, -0.0010560477, -0.00027697318, -1.8073477e-05, -0.0001097506, -0.00015255497, -0.00227712, -0.0011565931, -0.00085683604, -0.42831522, -0.0005058838, -1.3185924e-05, -0.02514955, -0.00020620546, -5.5149267e-05, -2.3435998e-05, -2.9311614e-06, -1.1430258e-06, -0.0019404797, -0.00075238576, -0.00014051021, -0.00064454606, -0.00011416413, -4.2511267e-05, -0.00028484376, -8.173468e-05, -0.00040785116, -0.000118572985, -0.00022087281, -0.0012332771, -0.00030189528, -0.0050850613, -5.6460554e-05, -3.076318e-07, -0.14180446, -0.02172537, -0.00015100244, -0.00020084012, -0.0016673541, -0.0011184614, -0.06853896, -0.009229763, -0.21665877, -1.5006569e-06, -4.5494293e-05, -0.00023273456, -4.5847235e-05, -0.0048238356, -1.1430258e-06, -3.1185496e-05, -1.1430258e-06, -1.1398727e-05, -1.5006569e-06, -2.4152187e-05, -1.163433e-05, -9.490449e-06, -4.361666e-06, -1.8841804e-07, -0.0007638983, -3.023464e-05, -0.0003168001, -7.040798e-05, -2.5941252e-05, -0.00012643983, -3.5357807e-05, -3.249586e-05, -1.0561456e-05, -2.272356e-05, -4.680184e-05, -8.650302e-05, -4.3586017e-05, -0.00010796247, -0.11624684, -6.158372e-05, -1.0204763e-05, -0.0022154094, -3.7863996e-05, -1.4616429e-05, -2.1649737e-05, -6.6619094e-07, -5.460492e-07, -0.00055603974, -0.0001010493, -4.144026e-05, -3.2616e-05, -4.5967376e-05, -3.678925e-05, -0.00028639348, -5.7413286e-05, -0.0001086796, -4.501652e-05, -0.012897849, -0.00025658193, -7.255186e-05, -0.00016328375, -4.1232483e-06, -8.4157e-06, -0.4011602, -0.0035922297, -0.00029724615, -8.149626e-05, -0.016761852, -0.0046966276, -1.8086479, -2.28437e-05, -0.00091816555, -3.678925e-05, -0.002648003, -0.14590573, -0.020220295, -0.43733513, -2.0935424e-05, -5.1334588e-05, -0.0009240134, -0.0009402999, -0.030871278, -2.2159093e-06, -0.002753249, -4.1232483e-06, -6.5092986e-06, -1.1991961e-05, -0.00014802223, -1.44972155e-05, -1.5805701e-05, -1.8601542e-06, -5.460492e-07, -0.0012899144, -2.462996e-05, -0.0003813765, -0.00013240307, -1.306671e-05, -0.00025371904, -0.00024465634, -7.5892516e-05, -9.72699e-06, -4.2392992e-05, -6.2299914e-05, -0.0002562252, -0.00012226657, -0.00017139182, -0.88244456, -0.0005935529, -9.490449e-06, -0.0108306315, -8.8290224e-05, -1.3900239e-05, -1.44972155e-05, -1.7400124e-06, -1.022884e-06, -0.002031019, -0.00025777495, -9.997455e-05, -0.0002471616, -6.873624e-05, -2.9159892e-05, -0.00032133286, -5.9201422e-05, -0.00023368915, -4.4539687e-05, -0.00010283744, -0.00020668321, -3.7148744e-05, -0.00047976777, -1.0204763e-05, -7.8540467e-07, -2.5363743, -0.06310075, -0.0002992727, -0.00017258391, -0.0014144769, -0.00088004506, -0.08197866, -0.06693336, -0.16988827, -4.4818075e-06, -9.675685e-05, -0.00016817037, -4.0603925e-05, -0.007909825, -1.3823812e-06, -1.1753544e-05, -3.076318e-07, -9.130952e-06, -1.3823812e-06, -1.8310955e-05, -1.2351458e-05, -2.6298881e-05, -1.8841804e-07, 0, -0.0005979664, -2.4272329e-05, -0.00025574747, -6.6713445e-05, -1.676031e-05, -0.000116070536, -8.653179e-06, -4.3586017e-05, -1.1991961e-05, -1.9143545e-05, -5.07376e-05, -9.305951e-05, -2.5225998e-05, -6.4446605e-05, -0.1150166, -0.00010450542, -7.4639065e-06, -0.0046944143, -2.141132e-05, -1.2946569e-05, -6.8669196e-06, -2.5344274e-05, -6.6619094e-07, -0.00048775758, -5.4075444e-05, -0.00010402765, -2.7133337e-05], "top_logprobs": null, "text_offset": [5044, 5044, 5045, 5052, 5053, 5057, 5060, 5062, 5069, 5070, 5074, 5077, 5079, 5086, 5087, 5091, 5094, 5096, 5105, 5107, 5113, 5114, 5123, 5125, 5134, 5140, 5141, 5144, 5151, 5152, 5156, 5158, 5167, 5168, 5171, 5174, 5176, 5178, 5180, 5181, 5182, 5183, 5186, 5188, 5189, 5190, 5192, 5195, 5198, 5201, 5203, 5205, 5208, 5210, 5212, 5221, 5222, 5225, 5228, 5230, 5233, 5236, 5238, 5241, 5242, 5244, 5245, 5247, 5249, 5251, 5253, 5262, 5263, 5266, 5269, 5271, 5273, 5275, 5277, 5279, 5281, 5290, 5292, 5298, 5299, 5308, 5310, 5319, 5325, 5326, 5329, 5336, 5337, 5341, 5343, 5352, 5353, 5356, 5359, 5361, 5363, 5365, 5366, 5367, 5368, 5371, 5373, 5374, 5375, 5377, 5380, 5383, 5386, 5388, 5390, 5393, 5395, 5397, 5406, 5407, 5410, 5413, 5415, 5418, 5421, 5423, 5426, 5427, 5429, 5430, 5432, 5434, 5436, 5438, 5447, 5448, 5451, 5454, 5456, 5458, 5460, 5462, 5465, 5467, 5474, 5475, 5479, 5482, 5484, 5493, 5495, 5501, 5502, 5511, 5513, 5522, 5528, 5529, 5532, 5539, 5540, 5544, 5546, 5555, 5556, 5559, 5562, 5564, 5566, 5568, 5569, 5570, 5571, 5574, 5576, 5577, 5578, 5580, 5583, 5586, 5589, 5591, 5593, 5596, 5598, 5600, 5609, 5610, 5613, 5616, 5618, 5621, 5624, 5626, 5629, 5630, 5632, 5633, 5635, 5637, 5639, 5641, 5650, 5651, 5654, 5657, 5659, 5661, 5663, 5665, 5667, 5669, 5678, 5680, 5686, 5687, 5696, 5698, 5707, 5713, 5714, 5717, 5724, 5725, 5729, 5731, 5740, 5741, 5744, 5747, 5749, 5751, 5753, 5754, 5755, 5756, 5759, 5761, 5762, 5763, 5765, 5768, 5771, 5774, 5776, 5778, 5781, 5783, 5785, 5794, 5795, 5798, 5801, 5803, 5806, 5809]}, "finish_reason": "length"}, {"text": "(connect_strokes (transform small_circle (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 0.5 0 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.004734597, -0.09030613, -0.07073467, -0.00011237507, -0.0014876588, -0.00027017642, -0.0054677133, -0.9004935, -3.5231783, -0.00051971956, -0.580331, -0.010348655, -0.00027530332, -0.0018525141, -5.7293146e-05, -4.277735e-07, -1.0986085, -0.071891576, -0.0057606413, -0.0010847488, -0.0026651558, -0.027505778, -0.14314339, -0.87779075, -7.8634315e-05, -1.1102041, -0.0035016641, -6.5041706e-05, -0.00017460952, -7.1062755e-06, -3.2855354e-05, -2.0703645, -0.024019673, -0.09579102, -0.002154241, -0.002110458, -0.00013061494, -0.013031172, -0.02823082, -0.061131146, -0.05728285, -0.00014873935], "top_logprobs": null, "text_offset": [5044, 5044, 5045, 5052, 5053, 5057, 5060, 5062, 5071, 5077, 5078, 5084, 5086, 5095, 5096, 5099, 5102, 5104, 5106, 5108, 5110, 5112, 5114, 5123, 5129, 5130, 5136, 5138, 5147, 5148, 5151, 5154, 5156, 5157, 5158, 5160, 5162, 5164, 5167, 5167, 5167, 5167]}, "finish_reason": "stop"}]}]}