{"curr_prompt_idx": 9, "max_num_prompts": 10, "programs_valid": ["(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4.25 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (connect_strokes (transform small_circle (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)))"], "programs_invalid": ["(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0))) (repeat_transform (transform (transform", "(connect_strokes (connect_strokes (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))))", "(connect_strokes (transform (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4)))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4)))))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0))) (transform_matrix 0.5 0 0 0))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6)", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6)", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0))))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(transform (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform_matrix 1 0 0 0)) (transform_matrix 3 0 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4)))", "(connect_strokes (transform (repeat_transform (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) 2 (transform_matrix 1 0 (/ (* pi 2) 10) 0)) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 10 (transform_matrix 1 (/ (* 2 pi) 10) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform_matrix 1 0 (- (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4)))) 0)) (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform_matrix 1 0 0 0) (transform (transform (transform (transform_matrix 1 0 0 0) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))))", "\"\"\"", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (connect_strokes (connect_strokes (transform small_circle (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 1.25 0)) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))"], "prompt_text": ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n"], "prompt_example_types": ["programs"], "prompt_programs": [["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))"], ["(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))"], ["(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))"], ["(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))"]], "engine": "davinci-codex", "separator": "\n", "completion": [{"id": "cmpl-51LyeQWOxyfLsE2fqhy5KsILNH7e8", "object": "text_completion", "created": 1651004492, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.005560912, -0.0788282, -0.044562776, -4.072407e-05, -0.0010648776, -5.9085025e-05, -0.00225902, -0.066076934, -9.72699e-06, -8.232979e-05, -4.8353428e-05, -0.0026392173, -0.04898281, -0.029783376, -0.36716744, -0.13466312, -1.0204763e-05, -2.5808542, -0.0018729974, -5.9679198e-05, -1.7356348e-05, -1.9621319e-05, -6.827632e-08, -0.8529258, -0.010820025, -0.0017719601, -0.0001722244, -0.0045162705, -0.0024441131, -0.0002482345, -0.011301143, -5.550595e-05, -4.277735e-07, -0.66924185, -0.1395848, -0.00054995355, -0.00018545937, -0.0011352313, -0.0017291483, -0.033882104, -0.14584953, -0.48300755, -0.032333158, -4.6010214e-06, -0.7610756, -0.00011392572, -2.5225998e-05, -1.3542607e-05, -5.675771e-06, -1.022884e-06, -0.12794071, -0.0034129655, -0.00010140506, -7.815842e-05, -0.0006973329, -0.00014814144, -4.9427246e-05, -0.00013109177, -1.1398727e-05, -3.076318e-07, -1.4757208, -0.5443945, -0.00020942597, -8.4116975e-05, -0.0020998858, -0.0043363613, -0.44946316, -3.7266083e-05, -6.0276172e-05, -0.00064561894, -0.002350607, -0.03483914, -0.033351984, -0.03934879, -3.4089344e-06, -0.7423605, -4.501652e-05, -1.9860674e-05, -4.721163e-06, -4.9586424e-06, -6.827632e-08, -0.10532059, -0.0004789305, -0.0050882376, -0.00020155631, -0.00010522067, -5.20489e-05, -6.194322e-05, -9.604066e-05, -3.0353855e-05, -5.7532503e-05, -5.912312e-06, -1.8601542e-06, -0.029837169, -0.0011693042, -0.008609977, -0.006331042, -1.2674577, -0.010027708, -3.0707724e-05, -0.00038781474, -0.00010510146, -0.00022623815, -0.0015820393, -9.7114484e-05, -0.00057369197, -0.024589278, -0.0003773206, -5.7770918e-05, -4.954739e-05, -0.002385257, -0.00016852893, -1.5448071e-05, -5.7532503e-05, -9.806815e-05, -7.088388e-05, -0.00012739444, -3.076318e-07, -2.6419024e-05, -0.0002287434, -2.3675353e-05, -1.022884e-06, -1.5622818, -0.00036706397, -1.5567284e-05, -2.1291178e-05, -1.7400124e-06, -9.055464e-07, -0.0014613363, -0.00047219192, -0.00019440286, -0.000111778085, -0.00014360964, -3.166233e-05, -0.0015644291, -0.00019964804, -0.00025085802, -9.139247e-05, -0.014089523, -0.013962888, -0.05482758, -0.03424824, -1.9980816e-05, -0.00081502006, -0.00014730697, -0.0017905312], "top_logprobs": null, "text_offset": [4440, 4440, 4441, 4448, 4449, 4453, 4456, 4458, 4465, 4466, 4470, 4473, 4475, 4484, 4486, 4495, 4501, 4502, 4508, 4510, 4519, 4520, 4523, 4526, 4528, 4530, 4532, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4558, 4560, 4562, 4564, 4566, 4575, 4577, 4586, 4592, 4593, 4599, 4601, 4610, 4611, 4614, 4617, 4619, 4621, 4623, 4625, 4627, 4629, 4638, 4639, 4642, 4645, 4647, 4649, 4651, 4653, 4656, 4658, 4664, 4665, 4674, 4676, 4685, 4687, 4696, 4702, 4703, 4709, 4711, 4720, 4721, 4724, 4727, 4729, 4730, 4731, 4733, 4735, 4737, 4739, 4741, 4750, 4751, 4754, 4757, 4759, 4761, 4764, 4767, 4769, 4771, 4772, 4773, 4774, 4776, 4779, 4782, 4785, 4787, 4790, 4793, 4796, 4798, 4800, 4801, 4802, 4803, 4805, 4808, 4811, 4814, 4816, 4818, 4821, 4823, 4825, 4834, 4835, 4838, 4841, 4843, 4846, 4849, 4851, 4854, 4855, 4857, 4858, 4860, 4862, 4865, 4865, 4865, 4865, 4865, 4865, 4865]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.005560912, -0.0788282, -0.0445629, -4.072407e-05, -0.0010648776, -5.9085025e-05, -0.00225902, -0.066076934, -9.72699e-06, -8.232979e-05, -4.8353428e-05, -0.0026392173, -0.04898281, -0.029783376, -1.2873526, -1.1039229e-05, -5.896488e-05, -0.0014357881, -0.001304716, -0.07166584, -8.296486e-06, -0.00834945, -1.2946569e-05, -8.0580685e-06, -7.064452e-05, -0.0002358368, -2.272356e-05, -1.8907942e-05, -4.9586424e-06, 0, -0.0055958563, -0.0005940307, -0.004083466, -0.000306903, -2.272356e-05, -0.0016487876, -0.0012641916, -0.00018796182, -2.9756868e-05, -7.1958624e-05, -0.00022623815, -0.0017132063, -0.0010036626, -0.00032121275, -0.403236, -0.0003921081, -3.4048382e-05, -0.15785426, -4.5967376e-05, -2.2245786e-05, -8.4157e-06, -2.0966954e-06, -1.843017e-05, -0.0016704582, -0.00043366966, -0.0002038222, -0.00032657993, -0.00013729343, -3.01145e-05, -0.0007157033, -6.122609e-05, -0.0005377905, -7.922942e-05, -0.000197384, -0.00036289258, -0.00010021203, -0.004387607, -1.2112103e-05, -1.9765537e-06, -1.950869, -0.044616815, -0.0016409649, -0.0002992727, -0.0037652426, -0.0020891929, -0.048026327, -0.2997978, -0.24320154, -0.04257179, -2.9311614e-06, -0.28057754, -0.00010808168, -3.8103353e-05, -1.0681599e-05, -5.4364154e-06, -2.2159093e-06, -0.25668162, -0.005519256, -9.7471166e-05, -7.076466e-05, -0.0007072329, -6.051553e-05, -3.3093773e-05, -0.00023202116, -1.7834122e-05, -4.9586424e-06, -1.1086197, -0.4832165, -0.00013407106, -4.1080762e-05, -0.0027330504, -0.0072004544, -0.33346, -1.6642034e-05, -1.6165199e-05, -0.0005591391, -0.00014396913, -0.012635056, -0.02579172, -0.014265568, -2.5744682e-06, -0.43656453, -1.7953334e-05, -1.2588937e-05, -9.012677e-06, -1.8601542e-06, -1.8841804e-07, -0.015067902, -0.00012620141, -0.0023817935, -9.0437854e-05, -7.505805e-05, -4.0963423e-05, -3.3212986e-05, -2.5225998e-05, -1.6999666e-05, -2.7013197e-05, -3.6482897e-06, -4.277735e-07, -0.007430294, -0.00014730697, -0.0035357606, -0.0022838106, -0.08366614, -0.0014596655, -1.306671e-05, -6.814395e-05, -3.8935006e-05, -5.3597672e-05, -0.00027566, -0.00011487751, -0.00014217819, -0.00304754, -0.00045525676, -4.8353428e-05, -6.361214e-05, -8.8290224e-05, -6.396884e-05, -6.5092986e-06, -1.7953334e-05, -5.8725527e-05, -3.6670972e-05, -6.4566746e-05, -2.693682e-06, -2.880226e-05, -0.00015648511, -3.1901687e-05, -2.693682e-06, -1.6755056, -9.461016e-05, -1.7475562e-05, -1.2231317e-05, -7.8540467e-07, -4.277735e-07, -0.00051554636, -0.000116426294, -0.00012369896, -6.09933e-05, -9.949678e-05, -2.6893982e-05, -0.0016946406, -0.00014814144, -0.00023834205, -6.432833e-05, -0.0058096834, -0.022187995, -0.09459033, -0.06569482], "top_logprobs": null, "text_offset": [4440, 4440, 4441, 4448, 4449, 4453, 4456, 4458, 4465, 4466, 4470, 4473, 4475, 4484, 4486, 4492, 4493, 4502, 4504, 4513, 4519, 4520, 4523, 4530, 4531, 4535, 4537, 4546, 4547, 4550, 4553, 4555, 4557, 4559, 4560, 4561, 4562, 4565, 4567, 4568, 4569, 4571, 4574, 4577, 4580, 4582, 4584, 4587, 4589, 4591, 4600, 4601, 4604, 4607, 4609, 4612, 4615, 4617, 4620, 4621, 4623, 4624, 4626, 4628, 4630, 4632, 4641, 4642, 4645, 4648, 4650, 4652, 4654, 4656, 4658, 4660, 4669, 4671, 4680, 4686, 4687, 4693, 4695, 4704, 4705, 4708, 4711, 4713, 4715, 4717, 4719, 4721, 4723, 4732, 4733, 4736, 4739, 4741, 4743, 4745, 4747, 4750, 4752, 4758, 4759, 4768, 4770, 4779, 4781, 4790, 4796, 4797, 4803, 4805, 4814, 4815, 4818, 4821, 4823, 4824, 4825, 4827, 4829, 4831, 4833, 4835, 4844, 4845, 4848, 4851, 4853, 4855, 4858, 4861, 4863, 4865, 4866, 4867, 4868, 4870, 4873, 4876, 4879, 4881, 4884, 4887, 4890, 4892, 4894, 4895, 4896, 4897, 4899, 4902, 4905, 4908, 4910, 4912, 4915, 4917, 4919, 4928, 4929, 4932, 4935, 4937, 4940, 4943, 4945, 4948, 4949, 4951, 4952, 4954, 4956, 4959, 4959, 4959]}, "finish_reason": "stop"}, {"text": "\"\"\"", "index": 2, "logprobs": {"tokens": ["\n", "\"\"\"", "\n", "\n", "#", "com", "pose", "_", "loc", "ations"], "token_logprobs": [-0.005560912, -3.8831925, -0.46736076, -0.3324251, -2.0530674, -8.144291, -2.3740947, -0.8677619, -8.725819, -1.784273], "top_logprobs": null, "text_offset": [4440, 4440, 4443, 4443, 4443, 4443, 4443, 4443, 4443, 4443]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.005560912, -0.084309615, -0.037610848, -3.5240468e-05, -0.00090504135, -3.3212986e-05, -0.0022541801, -0.06619455, -1.0084622e-05, -0.00011750104, -5.9321566e-05, -0.0026166267, -0.0445275, -0.036577147, -0.37515908, -2.37383, -0.5137407, -0.34363422, -1.9503042e-05, -0.19031431, -0.0012810224, -3.4642555e-05, -0.00016125533, -2.0935424e-05, -6.827632e-08, -0.12388853, -0.0028487078, -9.532728e-05, -0.0001539836, -0.00028007446, -0.0022600966, -0.0011485986, -0.0011884613, -4.430127e-05, -1.1430258e-06, -0.3442383, -0.12427274, -4.9308033e-05, -5.0500123e-05, -0.001545385, -0.0027017905, -0.00866138, -0.420772, -0.00034035373, -2.5744682e-06, -1.0977719, -0.075104356, -0.0036752608, -0.0011539687, -0.003559926, -0.0044754343, -0.0722059, -0.21072015, -0.43313515, -0.84036684, -3.7684315e-06, -0.1750069, -0.0001101101, -2.3912831e-05, -2.3360508e-06, -2.8138238e-06, -1.0204763e-05, -0.085866205, -0.002530454, -9.5562886e-05, -4.680184e-05, -0.00051447254, -0.0002824577, -4.489638e-05, -0.00097556214, -3.6670972e-05, -1.8841804e-07, -0.8162515, -1.2290932, -0.00052031653, -7.899194e-05, -0.006239931, -0.007609857, -0.59382063, -0.10888036, -0.32373768, -0.6533143, -4.838501e-06, -0.14259753, -7.076466e-05, -4.7041198e-05, -3.452334e-05, 0, -1.44972155e-05, -0.08113235, -0.0056023896, -7.11223e-05, -5.7293146e-05, -0.0002934296, -0.00022743117, -5.2525735e-05, -0.00021145344, -3.6074933e-05, -8.176345e-06, -0.5793807, -0.028831787, -0.00031441596, -6.9810994e-05, -0.008340854, -0.019739002, -0.06857241], "top_logprobs": null, "text_offset": [4440, 4440, 4441, 4448, 4449, 4453, 4456, 4458, 4465, 4466, 4470, 4473, 4475, 4484, 4486, 4495, 4497, 4506, 4512, 4513, 4519, 4521, 4530, 4531, 4534, 4537, 4539, 4541, 4543, 4545, 4547, 4549, 4558, 4559, 4562, 4565, 4567, 4569, 4571, 4573, 4575, 4577, 4586, 4587, 4590, 4593, 4595, 4597, 4599, 4601, 4603, 4605, 4614, 4616, 4625, 4631, 4632, 4638, 4640, 4649, 4650, 4653, 4656, 4658, 4660, 4662, 4664, 4666, 4668, 4677, 4678, 4681, 4684, 4686, 4688, 4690, 4692, 4695, 4697, 4706, 4708, 4717, 4723, 4724, 4730, 4732, 4741, 4742, 4745, 4748, 4750, 4752, 4754, 4756, 4758, 4760, 4769, 4770, 4773, 4776, 4778, 4780, 4782, 4784, 4787, 4787]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.005560912, -0.08242101, -0.04535207, -3.7028603e-05, -0.00073532487, -3.7148744e-05, -0.001909783, -0.055527348, -9.966347e-06, -0.00010080995, -5.061746e-05, -0.0024240955, -0.046573017, -0.029310353, -0.32572818, -2.4690228, -0.44719225, -0.37202317, -1.2708151e-05, -0.16193931, -0.0011026489, -3.5120327e-05, -0.00010605607, -1.6282536e-05, -6.827632e-08, -0.10892503, -0.0030477792, -0.00011070334, -0.00013884035, -0.00022361554, -0.0015440708, -0.00013681567, -0.0009187635, -3.988961e-05, -1.9765537e-06, -0.3094259, -0.11945575, -5.8010275e-05, -4.8353428e-05, -0.0021888886, -0.0020745604, -0.009336908, -0.47269398, -0.00037362418, -4.361666e-06, -1.0891709, -0.07804137, -0.0032559773, -0.0011752723, -0.0024898828, -0.004199701, -0.064274244, -0.20493913, -0.436017, -0.7614217, -3.883893e-06, -0.15069617, -0.000110942696, -2.7133337e-05, -2.5744682e-06, -1.6207987e-06, -2.9311614e-06, -0.06445655, -0.0025859685, -0.00010486492, -5.0260765e-05, -0.0004136351, -0.00034595837, -5.8247755e-05, -0.001190132, -3.643162e-05, -6.827632e-08, -0.7797081, -0.31401598, -0.038668357, -0.0006959005, -8.197403e-05, -5.991855e-05, -0.001092029, -0.0045053717, -1.1629165, -0.00010343254, -7.56541e-05, -0.00062718947, -0.00014539869, -0.123646565, -0.035044305, -0.096182376, -2.5744682e-06, -0.35268065, -3.0707724e-05, -1.6402679e-05, -2.1291178e-05, -8.176345e-06, -7.8540467e-07, -0.04583069, -9.639735e-05, -0.0035799653, -9.9142904e-05, -7.613187e-05, -4.5494293e-05, -4.656436e-05, -3.2973632e-05, -2.8087945e-05, -5.8247755e-05, -1.2351458e-05, -1.7400124e-06, -0.016337842, -0.00018081025, -0.0034657177, -0.0023621954, -0.11136901, -0.004001837, -2.9041616e-05, -0.00012799047, -8.7457636e-05, -9.4849514e-05, -0.0009713843, -8.936497e-05, -0.00038781474, -0.012361227, -0.00017472965, -5.061746e-05, -5.07376e-05, -0.00011475737, -8.1256905e-05, -9.012677e-06, -2.5105857e-05, -6.647409e-05, -7.231626e-05, -4.3108244e-05, -3.883893e-06, -2.200643e-05, -0.00024668477, -3.154219e-05, -1.7400124e-06, -0.79319954, -8.8290224e-05, -1.306671e-05, -1.42597355e-05, -3.2906587e-06, -1.1430258e-06, -0.0008431185, -0.0002704148, -0.00018093038, -0.00019213694, -0.00010796247, -3.2735214e-05, -0.0025905117, -0.00020847135, -0.00027542253, -7.8752586e-05, -0.03558954, -0.020884572], "top_logprobs": null, "text_offset": [4440, 4440, 4441, 4448, 4449, 4453, 4456, 4458, 4465, 4466, 4470, 4473, 4475, 4484, 4486, 4495, 4497, 4506, 4512, 4513, 4519, 4521, 4530, 4531, 4534, 4537, 4539, 4541, 4543, 4545, 4547, 4549, 4558, 4559, 4562, 4565, 4567, 4569, 4571, 4573, 4575, 4577, 4586, 4587, 4590, 4593, 4595, 4597, 4599, 4601, 4603, 4605, 4614, 4616, 4625, 4631, 4632, 4638, 4640, 4649, 4650, 4653, 4656, 4658, 4660, 4662, 4664, 4666, 4668, 4677, 4678, 4681, 4684, 4686, 4687, 4689, 4691, 4693, 4695, 4698, 4700, 4706, 4707, 4716, 4718, 4727, 4729, 4738, 4744, 4745, 4751, 4753, 4762, 4763, 4766, 4769, 4771, 4772, 4773, 4775, 4777, 4779, 4781, 4783, 4792, 4793, 4796, 4799, 4801, 4803, 4806, 4809, 4811, 4813, 4814, 4815, 4816, 4818, 4821, 4824, 4827, 4829, 4832, 4835, 4838, 4840, 4842, 4843, 4844, 4845, 4847, 4850, 4853, 4856, 4858, 4860, 4863, 4865, 4867, 4876, 4877, 4880, 4883, 4885, 4888, 4891, 4893, 4896, 4897, 4899, 4900, 4902, 4904, 4907]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.005560912, -0.08290198, -0.033046864, -3.357061e-05, -0.00084967975, -3.7863996e-05, -0.0024329377, -0.064482234, -9.846204e-06, -8.507158e-05, -5.2885232e-05, -0.00237773, -0.047823202, -0.028951304, -0.36147848, -0.15900755, -1.1991961e-05, -0.11171565, -0.000118453776, -2.9996223e-05, -1.2231317e-05, -8.5358415e-06, -6.827632e-08, -0.059950132, -0.0034833034, -0.00011416413, -9.937757e-05, -0.0001536241, -0.00033558442, -4.871012e-05, -0.0014118515, -1.2112103e-05, -2.693682e-06, -0.10690534, -0.037917867, -6.0395385e-05, -4.394177e-05, -8.912656e-05, -0.0016717714, -0.03506375, -0.11773532, -0.49911475, -0.047559958, -2.9311614e-06, -0.1010509, -7.5892516e-05, -2.7490969e-05, -9.012677e-06, -1.1753544e-05, -2.0966954e-06, -0.11116102, -0.011275827, -0.00028174432, -0.00011762026, -0.00095259154, -0.00064263685, -6.754697e-05, -0.00051411585, -2.8206221e-05, -9.055464e-07, -0.7910438, -0.11913682, -0.05107402, -0.0011749137, -7.4460135e-05, -8.00667e-05, -0.00070603896, -0.0019405999, -0.76501584, -3.7386224e-05, -6.826223e-05, -0.000301777, -0.0016088443, -0.06411827, -0.050253354, -0.011880445, -3.051303e-06, -1.0101733, -3.058758e-05, -1.7595703e-05, -1.2351458e-05, -2.8138238e-06, -1.3823812e-06, -0.03619835, -9.9022756e-05, -0.0031943251, -0.00011416413, -0.00010772499, -4.382537e-05, -8.173468e-05, -2.5703772e-05, -2.1768952e-05, -4.9187893e-05, -8.892534e-06, -4.277735e-07, -0.009642167, -0.00024751923, -0.0062079625, -0.0034118888, -0.1393608, -0.0024453043, -2.9519388e-05, -0.00013729343, -4.9308033e-05, -8.244993e-05, -0.0008544527, -0.00025324314, -0.000346913, -0.0066215806, -0.0005326626, -4.29881e-05, -4.8949474e-05, -0.00011475737, -6.265847e-05, -7.818713e-06, -2.2604345e-05, -5.7652644e-05, -4.275062e-05, -4.7875652e-05, -2.8138238e-06, -2.5464416e-05, -0.00025586665, -3.8103353e-05, -6.1516675e-06, -1.5135666, -9.2941234e-05, -1.5925843e-05, -1.8190814e-05, -1.6207987e-06, -5.3162735e-06, -0.000812634, -0.00043092694, -0.00032920254, -6.933416e-05, -0.00014289531, -2.8445576e-05, -0.0015828765, -0.0001678165, -0.00015696288, -5.944078e-05, -0.08575216, -0.028356208, -0.11726981, -0.06019711, -3.988961e-05, -0.001321606], "top_logprobs": null, "text_offset": [4440, 4440, 4441, 4448, 4449, 4453, 4456, 4458, 4465, 4466, 4470, 4473, 4475, 4484, 4486, 4495, 4501, 4502, 4508, 4510, 4519, 4520, 4523, 4526, 4528, 4530, 4532, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4558, 4560, 4562, 4564, 4566, 4575, 4577, 4586, 4592, 4593, 4599, 4601, 4610, 4611, 4614, 4617, 4619, 4621, 4623, 4625, 4627, 4629, 4638, 4639, 4642, 4645, 4647, 4648, 4650, 4652, 4654, 4656, 4659, 4661, 4667, 4668, 4677, 4679, 4688, 4690, 4699, 4705, 4706, 4712, 4714, 4723, 4724, 4727, 4730, 4732, 4733, 4734, 4736, 4738, 4740, 4742, 4744, 4753, 4754, 4757, 4760, 4762, 4764, 4767, 4770, 4772, 4774, 4775, 4776, 4777, 4779, 4782, 4785, 4788, 4790, 4793, 4796, 4799, 4801, 4803, 4804, 4805, 4806, 4808, 4811, 4814, 4817, 4819, 4821, 4824, 4826, 4828, 4837, 4838, 4841, 4844, 4846, 4849, 4852, 4854, 4857, 4858, 4860, 4861, 4863, 4865, 4868, 4868, 4868, 4868, 4868]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", ".", "25", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.005560912, -0.08374436, -0.03500962, -3.3928238e-05, -0.0007648529, -2.9636725e-05, -0.0015886051, -0.06120446, -8.0580685e-06, -7.24364e-05, -5.1930627e-05, -0.001908589, -0.054146294, -0.02688742, -0.36831233, -0.15553176, -1.2946569e-05, -0.090056054, -0.00010128584, -3.6311474e-05, -1.4736571e-05, -7.698572e-06, -6.827632e-08, -0.06349496, -0.0035490978, -0.00010569845, -8.8410365e-05, -0.0001821234, -0.0004023657, -5.4194657e-05, -0.001392812, -1.2231317e-05, -4.0040345e-06, -0.08506304, -0.035145365, -6.4921565e-05, -5.8247755e-05, -8.662224e-05, -0.0016669945, -0.03406315, -0.10495939, -0.4872873, -0.045683995, -3.6482897e-06, -0.08651922, -6.862172e-05, -2.4986643e-05, -7.4639065e-06, -1.37819625e-05, -2.9311614e-06, -0.11121764, -0.015386171, -0.00033135017, -9.5442745e-05, -0.0009793768, -0.0005344489, -5.8725527e-05, -0.00016423648, -2.6180607e-05, -1.8841804e-07, -1.2355164, -2.1517007, -0.60584605, -0.0028126617, -0.00013931624, -0.00011630989, -0.0012512419, -0.001588485, -0.6652658, -2.7490969e-05, -3.2735214e-05, -0.0004958666, -0.0001287076, -0.015175011, -0.020882014, -0.006832327, -3.529076e-06, -0.09604779, -2.0098154e-05, -1.0084622e-05, -1.2351458e-05, -2.9311614e-06, -1.022884e-06, -0.013954546, -6.89756e-05, -0.0020808312, -0.0001345479, -5.7057543e-05, -3.166233e-05, -1.8190814e-05, -2.3795494e-05, -2.0815281e-05, -2.9636725e-05, -7.4639065e-06, -7.8540467e-07, -0.008344821, -9.580224e-05, -0.0016977447, -0.0016243077, -0.04227503, -0.0021655303, -1.5214344e-05, -0.000116546435, -6.6949986e-05, -7.291136e-05, -0.0003974753, -6.182308e-05, -0.000319663, -0.0016103968, -0.00038244936, -4.179789e-05, -7.9349564e-05, -6.551948e-05, -8.7576846e-05, -8.176345e-06, -1.1991961e-05, -7.553489e-05, -3.4403198e-05, -4.0126153e-05, -2.3360508e-06, -3.0353855e-05, -0.00016042087, -4.716134e-05, -8.176345e-06, -1.5640086, -6.253833e-05, -2.0935424e-05, -1.5567284e-05, -1.8668587e-05, -5.79217e-06, -0.00070103025, -0.00014897496, -0.00014027084, -5.4194657e-05, -0.0001506467, -3.0826937e-05, -0.00082134467, -0.00010355082, -0.0002429912, -8.7576846e-05, -0.017661741, -0.018626014, -0.09231891, -0.03803036, -3.488097e-05, -0.0009839124], "top_logprobs": null, "text_offset": [4440, 4440, 4441, 4448, 4449, 4453, 4456, 4458, 4465, 4466, 4470, 4473, 4475, 4484, 4486, 4495, 4501, 4502, 4508, 4510, 4519, 4520, 4523, 4526, 4528, 4530, 4532, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4558, 4560, 4562, 4564, 4566, 4575, 4577, 4586, 4592, 4593, 4599, 4601, 4610, 4611, 4614, 4617, 4619, 4621, 4623, 4625, 4627, 4629, 4638, 4639, 4642, 4645, 4647, 4648, 4650, 4652, 4654, 4656, 4659, 4661, 4667, 4668, 4677, 4679, 4688, 4690, 4699, 4705, 4706, 4712, 4714, 4723, 4724, 4727, 4730, 4732, 4733, 4734, 4736, 4738, 4740, 4742, 4744, 4753, 4754, 4757, 4760, 4762, 4764, 4767, 4770, 4772, 4774, 4775, 4776, 4777, 4779, 4782, 4785, 4788, 4790, 4793, 4796, 4799, 4801, 4803, 4804, 4805, 4806, 4808, 4811, 4814, 4817, 4819, 4821, 4824, 4826, 4828, 4837, 4838, 4841, 4844, 4846, 4849, 4852, 4854, 4857, 4858, 4860, 4861, 4863, 4865, 4868, 4868, 4868, 4868, 4868]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.005560912, -0.079521745, -0.039764006, -4.6921985e-05, -0.00093069556, -2.9399247e-05, -0.0019496174, -0.08116048, -8.892534e-06, -0.0001010493, -5.1334588e-05, -0.0019917197, -0.049395666, -0.030246913, -0.37495893, -0.14327063, -1.2112103e-05, -0.10184635, -6.802381e-05, -3.0473995e-05, -1.2828294e-05, -7.937927e-06, -6.827632e-08, -0.06310824, -0.004357135, -0.00012107918, -0.00010057153, -0.00027101085, -0.0004662296, -5.7652644e-05, -0.0017346422, -1.37819625e-05, -4.1232483e-06, -0.09998767, -0.041455783, -6.13453e-05, -4.9308033e-05, -8.173468e-05, -0.0020386053, -0.032842718, -0.11448974, -0.47368369, -0.046790477, -2.693682e-06, -0.099705644, -0.0001086796, -2.2484204e-05, -5.675771e-06, -1.2828294e-05, -2.0966954e-06, -0.10325629, -0.015107235, -0.00027017642, -8.00667e-05, -0.0008257573, -0.0004684955, -5.6102934e-05, -0.00031847187, -2.5105857e-05, -1.8841804e-07, -1.7423412, -0.163545, -0.018082734, -0.0012531503, -0.0040790974, -0.0020932544, -0.30153748, -3.333313e-05, -5.0976956e-05, -0.00029891508, -0.0022805864, -0.023113206, -0.03337528, -0.020129913, -3.883893e-06, -0.54961663, -2.6773841e-05, -1.2351458e-05, -1.5214344e-05, -2.3360508e-06, -3.076318e-07, -0.026035542, -0.00015958735, -0.0032179463, -0.00012143587, -7.159913e-05, -4.1918032e-05, -2.141132e-05, -6.2299914e-05, -2.9519388e-05, -4.489638e-05, -7.698572e-06, -2.0966954e-06, -0.022655768, -0.0005232977, -0.006942396, -0.0038162186, -1.930896, -0.011765005, -3.5120327e-05, -0.00022313965, -0.00014826158, -0.00010414779, -0.0010411908, -4.3227457e-05, -0.0002603966, -0.014534536, -0.00023214132, -4.2631407e-05, -4.716134e-05, -0.0017647361, -0.00011809803, -1.0204763e-05, -4.1558535e-05, -0.00011571198, -6.587617e-05, -6.289782e-05, -3.076318e-07, -2.5703772e-05, -0.00017699462, -1.9621319e-05, -4.0040345e-06, -0.7451012, -4.716134e-05, -1.9980816e-05, -1.4139594e-05, -1.9765537e-06, -3.249586e-05, -0.00043975122, -0.0001711534, -0.000120839824, -6.253833e-05, -0.000109155495, -2.3912831e-05, -0.001702103, -0.00011821817, -0.0002423942, -5.24084e-05, -0.01678749, -0.024937233, -0.08772997, -0.048570685, -5.2765092e-05, -0.0011940707, -9.532728e-05, -0.0017399577], "top_logprobs": null, "text_offset": [4440, 4440, 4441, 4448, 4449, 4453, 4456, 4458, 4465, 4466, 4470, 4473, 4475, 4484, 4486, 4495, 4501, 4502, 4508, 4510, 4519, 4520, 4523, 4526, 4528, 4530, 4532, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4558, 4560, 4562, 4564, 4566, 4575, 4577, 4586, 4592, 4593, 4599, 4601, 4610, 4611, 4614, 4617, 4619, 4621, 4623, 4625, 4627, 4629, 4638, 4639, 4642, 4645, 4647, 4649, 4651, 4653, 4656, 4658, 4664, 4665, 4674, 4676, 4685, 4687, 4696, 4702, 4703, 4709, 4711, 4720, 4721, 4724, 4727, 4729, 4730, 4731, 4733, 4735, 4737, 4739, 4741, 4750, 4751, 4754, 4757, 4759, 4761, 4764, 4767, 4769, 4771, 4772, 4773, 4774, 4776, 4779, 4782, 4785, 4787, 4790, 4793, 4796, 4798, 4800, 4801, 4802, 4803, 4805, 4808, 4811, 4814, 4816, 4818, 4821, 4823, 4825, 4834, 4835, 4838, 4841, 4843, 4846, 4849, 4851, 4854, 4855, 4857, 4858, 4860, 4862, 4865, 4865, 4865, 4865, 4865, 4865, 4865]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.005560912, -0.08269982, -0.031677935, -3.6670972e-05, -0.0007268582, -4.4181128e-05, -0.0023712185, -0.0637207, -8.7733215e-06, -0.00010557923, -4.072407e-05, -0.0023822712, -0.05502675, -0.03273746, -0.32964063, -0.1566763, -1.0084622e-05, -0.091386855, -8.352281e-05, -3.01145e-05, -1.5214344e-05, -6.9861335e-06, -6.827632e-08, -0.06382953, -0.00416235, -0.000116070536, -9.365555e-05, -0.0002124071, -0.0004453587, -6.647409e-05, -0.0011318288, -9.251094e-06, -4.0040345e-06, -0.08222459, -0.044216894, -6.6829845e-05, -4.370523e-05, -7.124244e-05, -0.0019028557, -0.0371693, -0.09859393, -0.45424995, -0.04890275, -3.170517e-06, -0.08889122, -0.00013347782, -2.6538237e-05, -4.1232483e-06, -1.2351458e-05, -5.197998e-06, -0.10413249, -0.015808584, -0.00039568718, -9.413332e-05, -0.0005939105, -0.00070341537, -7.183848e-05, -0.0004639637, -2.6180607e-05, -3.076318e-07, -0.7722256, -0.10113643, -0.05110507, -0.0010327185, -7.040798e-05, -6.265847e-05, -0.0007730849, -0.0021703101, -0.64537215, -4.3227457e-05, -6.325358e-05, -0.00025991976, -0.0024846224, -0.047219913, -0.049334735, -0.008564227, -2.693682e-06, -0.50216347, -2.4390605e-05, -1.163433e-05, -2.1529595e-05, -1.1398727e-05, -4.1232483e-06, -0.06407411, -0.00010080995, -0.0045941086, -0.00010808168, -7.684431e-05, -4.6325007e-05, -2.4032974e-05, -2.272356e-05, -2.3556138e-05, -3.142485e-05, -1.3185924e-05, -1.6207987e-06, -0.015003646, -0.0001371733, -0.0037150444, -0.0062739383, -0.0578488, -0.0020770712, -2.6538237e-05, -9.7234624e-05, -5.896488e-05, -7.028876e-05, -0.00070222147, -8.435633e-05, -0.0003354652, -0.0036494778, -0.0003563333, -4.2631407e-05, -5.0976956e-05, -8.423619e-05, -7.302963e-05, -1.2468796e-05, -3.559716e-05, -8.268835e-05, -4.46589e-05, -4.6206733e-05, -2.693682e-06, -2.1529595e-05, -0.00019762148, -6.277768e-05, -6.5092986e-06, -0.7702747, -6.361214e-05, -1.8788729e-05, -1.0561456e-05, -1.7400124e-06, -5.4364154e-06, -0.00054089085, -0.00014837986, -0.00015124086, -0.00011249522, -0.00014480359, -2.6893982e-05, -0.001471959, -0.0001821234, -0.00024465634, -7.6605895e-05, -0.04956176, -0.028987072, -0.12009755, -0.056060463, -7.4460135e-05, -0.0010892844], "top_logprobs": null, "text_offset": [4440, 4440, 4441, 4448, 4449, 4453, 4456, 4458, 4465, 4466, 4470, 4473, 4475, 4484, 4486, 4495, 4501, 4502, 4508, 4510, 4519, 4520, 4523, 4526, 4528, 4530, 4532, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4558, 4560, 4562, 4564, 4566, 4575, 4577, 4586, 4592, 4593, 4599, 4601, 4610, 4611, 4614, 4617, 4619, 4621, 4623, 4625, 4627, 4629, 4638, 4639, 4642, 4645, 4647, 4648, 4650, 4652, 4654, 4656, 4659, 4661, 4667, 4668, 4677, 4679, 4688, 4690, 4699, 4705, 4706, 4712, 4714, 4723, 4724, 4727, 4730, 4732, 4733, 4734, 4736, 4738, 4740, 4742, 4744, 4753, 4754, 4757, 4760, 4762, 4764, 4767, 4770, 4772, 4774, 4775, 4776, 4777, 4779, 4782, 4785, 4788, 4790, 4793, 4796, 4799, 4801, 4803, 4804, 4805, 4806, 4808, 4811, 4814, 4817, 4819, 4821, 4824, 4826, 4828, 4837, 4838, 4841, 4844, 4846, 4849, 4852, 4854, 4857, 4858, 4860, 4861, 4863, 4865, 4868, 4868, 4868, 4868, 4868]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.005560912, -0.079140976, -0.039460268, -2.9041616e-05, -0.000770222, -3.988961e-05, -0.0021158326, -0.05493286, -9.370307e-06, -7.279122e-05, -5.550595e-05, -0.0023069915, -0.042579442, -0.029755928, -0.3385189, -0.14560556, -1.2588937e-05, -0.093085065, -9.0675334e-05, -3.237946e-05, -1.2828294e-05, -8.653179e-06, -6.827632e-08, -0.055742223, -0.003767636, -0.00010259808, -8.697986e-05, -0.00026182804, -0.00033224377, -5.109523e-05, -0.0012258759, -1.8073477e-05, -3.2906587e-06, -0.08591726, -0.037109792, -4.9187893e-05, -6.623567e-05, -8.650302e-05, -0.0019624555, -0.038193524, -0.123884745, -1.0587722, -1.5567284e-05, -5.3716885e-05, -0.00262117, -0.0029020887, -0.051217865, -5.5556293e-06, -0.0050850613, -7.255186e-05, -1.4616429e-05, -1.1753544e-05, -6.122609e-05, -1.3661821e-05, -1.855031e-05, -2.2159093e-06, -1.8841804e-07, -0.00419617, -0.00023023302, -0.0014692134, -0.00046551248, -3.9172486e-05, -0.001111659, -0.0005385048, -0.00014802223, -3.678925e-05, -5.216904e-05, -9.3535404e-05, -0.0028675972, -0.0003599105, -0.00031596568, -0.16667584, -0.00014384899, -9.370307e-06, -0.22811238, -2.1889093e-05, -1.3422466e-05, -8.0580685e-06, -3.883893e-06, -1.9980816e-05, -0.0016089634, -0.00038185148, -8.8290224e-05, -0.00019452299, -0.00012381817, -2.8445576e-05, -0.00044189885, -7.458028e-05, -0.00043653257, -8.137612e-05, -0.021996412, -0.0009810467, -0.00017961723, -0.0011961, -8.892534e-06, -3.7684315e-06, -0.7957507, -0.063496105, -0.0030400667, -0.000751908, -0.0029308433, -0.001274696, -0.18113494, -4.0843282e-05, -0.0009743682, -0.00070914207, -0.006304709, -0.033710588, -0.048676375, -0.020981101, -9.370307e-06, -0.6192696, -0.0001010493, -1.9741461e-05, -1.3306066e-05, -3.529076e-06, -1.8841804e-07, -0.052681483, -0.00034392995, -0.0044519654, -0.00019905198, -0.00010522067, -0.00010450542, -6.575884e-05, -7.613187e-05, -2.582111e-05, -0.00010188283, -2.5744682e-06, -1.2622395e-06, -0.04037615, -0.0014437264, -0.018096996, -0.0016134427, -0.09053475, -0.003247188, -3.8338017e-05, -0.000107007865, -4.2870764e-05, -0.00015338662, -0.0034666741, -0.00038686107, -0.00035776378, -0.012439501, -0.00043903594, -5.979934e-05, -4.7279616e-05, -0.00015767907, -8.578871e-05, -9.130952e-06, -3.7266083e-05, -7.458028e-05, -0.00012357882, -4.29881e-05, -3.051303e-06, -2.4032974e-05, -0.0005311711, -0.00016376152, -5.197998e-06, -0.7114077, -6.0633804e-05, -1.306671e-05, -1.5094201e-05, -1.1430258e-06, -1.5006569e-06, -0.00070079096, -0.00016280691, -8.8171946e-05, -5.0856816e-05, -0.00010045139, -2.8206221e-05, -0.0031546238, -0.00016340296, -0.0003581233, -8.256821e-05, -0.012433404, -0.031041754, -0.12085631, -0.070730574], "top_logprobs": null, "text_offset": [4440, 4440, 4441, 4448, 4449, 4453, 4456, 4458, 4465, 4466, 4470, 4473, 4475, 4484, 4486, 4495, 4501, 4502, 4508, 4510, 4519, 4520, 4523, 4526, 4528, 4530, 4532, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4558, 4560, 4562, 4564, 4566, 4575, 4577, 4583, 4584, 4593, 4595, 4604, 4610, 4611, 4614, 4621, 4622, 4626, 4628, 4637, 4638, 4641, 4644, 4646, 4648, 4650, 4651, 4652, 4653, 4656, 4658, 4659, 4660, 4662, 4665, 4668, 4671, 4673, 4675, 4678, 4680, 4682, 4691, 4692, 4695, 4698, 4700, 4703, 4706, 4708, 4711, 4712, 4714, 4715, 4717, 4719, 4721, 4723, 4732, 4733, 4736, 4739, 4741, 4743, 4745, 4747, 4750, 4752, 4758, 4759, 4768, 4770, 4779, 4781, 4790, 4796, 4797, 4803, 4805, 4814, 4815, 4818, 4821, 4823, 4824, 4825, 4827, 4829, 4831, 4833, 4835, 4844, 4845, 4848, 4851, 4853, 4855, 4858, 4861, 4863, 4865, 4866, 4867, 4868, 4870, 4873, 4876, 4879, 4881, 4884, 4887, 4890, 4892, 4894, 4895, 4896, 4897, 4899, 4902, 4905, 4908, 4910, 4912, 4915, 4917, 4919, 4928, 4929, 4932, 4935, 4937, 4940, 4943, 4945, 4948, 4949, 4951, 4952, 4954, 4956, 4959, 4959, 4959]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LynvxLF41jHHe486YuNDMVCt7un", "object": "text_completion", "created": 1651004501, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004404606, -0.051461384, -0.10427861, -0.00014337122, -0.0013783661, -0.00030857194, -0.0036269834, -0.4499352, -0.04291356, -0.50251925, -4.3586017e-05, -0.00013252322, -0.0034797138, -0.005883185, -0.099078394, -2.4152187e-05, -0.03583199, -0.00029700773, -2.7967804e-05, -7.291136e-05, -0.00062313356, -3.4287736e-05, -1.9860674e-05, -1.8668587e-05, -1.8841804e-07, -0.007457859, -0.00043832068, -0.008099387, -0.0008536183, -0.00030440054, -0.0037469934, -0.0021436682, -0.0002103787, -3.357061e-05, -0.000301777, -0.00019368572, -0.00097460754, -0.0009473416, -0.0013220839, -1.0111526, -0.0004482216, -2.3078366e-05, -0.03547275, -0.0001526695, -3.01145e-05, -3.0473995e-05, -2.2245786e-05, -2.2159093e-06, -0.0009157814, -0.00044392727, -0.000161138, -0.00012417485, -0.00014563711, -4.751897e-05, -0.0010165493, -8.578871e-05, -0.00032240388, -7.708367e-05, -0.00048846815, -0.00046718423, -8.388231e-05, -0.0012706363, -3.1781543e-05, -4.2433903e-06, -0.06325027, -0.026934935, -0.0015585768, -0.0005057647, -0.0036695162, -0.0055459277, -0.19598518, -0.16486414, -0.3911248, -0.091070876, -7.302963e-05, -0.53500545, -0.0025103171, -0.00013001703, -6.563869e-05, -5.848711e-05, -9.115311e-05, -0.23574664, -0.014020854, -0.006167781, -0.0025571678, -0.0013494163, -0.0011826726, -0.0007989137, -0.0006360766, -8.51908e-05, -3.2906587e-06, -1.8875927, -0.1313372, -0.0036067055, -0.0018909733, -0.019602954, -0.02276546, -0.060586184], "top_logprobs": null, "text_offset": [5008, 5008, 5009, 5016, 5017, 5021, 5024, 5026, 5035, 5037, 5043, 5044, 5053, 5055, 5064, 5070, 5071, 5074, 5081, 5082, 5086, 5088, 5097, 5098, 5101, 5104, 5106, 5108, 5110, 5111, 5112, 5113, 5116, 5118, 5119, 5120, 5122, 5125, 5128, 5131, 5133, 5135, 5138, 5140, 5142, 5151, 5152, 5155, 5158, 5160, 5163, 5166, 5168, 5171, 5172, 5174, 5175, 5177, 5179, 5181, 5183, 5192, 5193, 5196, 5199, 5201, 5203, 5205, 5207, 5209, 5211, 5220, 5222, 5231, 5237, 5238, 5244, 5246, 5255, 5256, 5259, 5262, 5264, 5266, 5268, 5270, 5272, 5274, 5283, 5284, 5287, 5290, 5292, 5294, 5296, 5298, 5301, 5301]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004404606, -0.051461384, -0.10427848, -0.00014337122, -0.0013783661, -0.00030857194, -0.0036269834, -0.44993377, -0.04291356, -0.50251776, -4.3586017e-05, -0.00013252322, -0.0034797138, -0.005883305, -0.099078394, -2.4152187e-05, -0.03583199, -0.00029700773, -2.7967804e-05, -7.291136e-05, -0.00062313356, -3.4287736e-05, -1.9860674e-05, -1.8668587e-05, -1.8841804e-07, -0.007457859, -0.00043832068, -0.008099387, -0.0008536183, -0.00030440054, -0.0037469934, -0.0021436682, -0.0002103787, -3.357061e-05, -0.000301777, -0.00019368572, -0.00097460754, -0.0009473416, -0.0013220839, -1.0111526, -0.0004482216, -2.2958224e-05, -0.03547275, -0.0001526695, -3.01145e-05, -3.0473995e-05, -2.2245786e-05, -2.2159093e-06, -0.0009157814, -0.00044392727, -0.000161138, -0.00012417485, -0.00012143587, -5.0022347e-05, -0.00086841144, -8.161453e-05, -0.00049049745, -9.532728e-05, -0.0005609273, -0.00049169146, -0.0002840093, -0.00096750574, -2.6419024e-05, -5.5556293e-06, -0.059588388, -0.034980047, -0.002735319, -0.00062563975, -0.003234152, -0.005069846, -0.19497156, -0.20860328, -0.37672806, -0.06495144, -4.9308033e-05, -1.0165602, -0.0024611985, -5.7177684e-05, -1.8190814e-05, -1.5448071e-05, -5.197998e-06, -0.9736053, -0.0077842246, -0.0031035603, -0.0016310546, -0.0018503045, -0.00071224343, -0.00010343254, -0.00038948457, -2.582111e-05, -1.163433e-05, -0.23689926, -0.0070869345, -0.0218929, -0.000702105, -0.005994412, -0.01945751, -0.056822762], "top_logprobs": null, "text_offset": [5008, 5008, 5009, 5016, 5017, 5021, 5024, 5026, 5035, 5037, 5043, 5044, 5053, 5055, 5064, 5070, 5071, 5074, 5081, 5082, 5086, 5088, 5097, 5098, 5101, 5104, 5106, 5108, 5110, 5111, 5112, 5113, 5116, 5118, 5119, 5120, 5122, 5125, 5128, 5131, 5133, 5135, 5138, 5140, 5142, 5151, 5152, 5155, 5158, 5160, 5163, 5166, 5168, 5171, 5172, 5174, 5175, 5177, 5179, 5181, 5183, 5192, 5193, 5196, 5199, 5201, 5203, 5205, 5207, 5209, 5211, 5220, 5222, 5231, 5237, 5238, 5244, 5246, 5255, 5256, 5259, 5262, 5264, 5266, 5268, 5270, 5272, 5274, 5283, 5284, 5287, 5290, 5292, 5294, 5296, 5298, 5301, 5301]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.004404606, -0.051289015, -0.086343564, -0.00010784233, -0.0012840637, -0.0002853206, -0.0048161093, -1.0070288, -3.6195077e-05, -0.00037159576, -8.653179e-06, -0.004211253, -0.12567465, -0.03550906, -0.89085466, -2.4750101e-05, -0.00013538517, -0.0026018065, -0.004845396, -0.08705671, -1.8073477e-05, -0.016729368, -0.00010367096, -3.6195077e-05, -5.9679198e-05, -0.0002351206, -2.28437e-05, -1.163433e-05, -2.1649737e-05, -1.8841804e-07, -0.0051215473, -0.00036932988, -0.005651121, -0.00058794545, -8.864972e-05, -0.003062185, -0.002366439, -0.00023464282, -2.4272329e-05, -0.00015541504, -0.00019285125, -0.001184104, -0.0008387032, -0.0007749941, -0.5797968, -0.0004133967, -2.3556138e-05, -0.02268284, -3.941184e-05, -2.6893982e-05, -2.1649737e-05, -3.4089344e-06, -4.4818075e-06, -0.0006689998, -0.00014253768, -0.00019285125, -5.2288255e-05, -0.00015243483, -3.6670972e-05, -0.00046539606, -0.00014885482, -0.0005904526, -0.00010068981, -0.000118572985, -0.00085373747, -0.0001371733, -0.0024082013, -5.1930627e-05, -3.883893e-06, -0.055783376, -0.017377798, -0.0002949793, -0.00026457265, -0.00032085512, -0.0010035424, -0.06268283, -0.052043654, -0.4092905, -0.03267218, -1.676031e-05, -0.04895076, -0.00040260222, -2.7251614e-05, -2.7611111e-05, -5.3242864e-05, -4.775551e-05, -0.055925313, -0.002989786, -0.00012620141, -0.00019058723, -0.00027554267, -0.00026934195, -5.944078e-05, -0.00013538517, -1.1873685e-05, -5.460492e-07, -0.39798546, -0.0051210676, -0.012187023, -0.0004967001, -0.009234515, -0.0067635537, -0.12519874, -0.00013204545, -7.97072e-05, -0.0015500396, -0.0018600383, -0.010058474, -0.045324754, -0.035137773, -3.023464e-05, -0.20448774, -0.0001097506, -3.166233e-05, -2.665838e-05, -2.582111e-05, -7.8540467e-07, -0.011270521, -0.00022695526, -0.003998843, -0.00011821817, -8.7576846e-05, -0.00013884035, -3.0353855e-05, -0.00010760485, -3.678925e-05, -0.00010998996, -4.9586424e-06, -1.3542607e-05, -0.007134058, -0.0005235371, -0.00630603, -0.001613561, -0.07555171, -0.00495441, -4.501652e-05, -0.0002354801, -5.979934e-05, -0.00020990093, -0.0008078619, -8.8051806e-05, -0.0003125086, -0.004605486, -0.0005881838, -0.00014790209, -6.48061e-05, -0.0004649183, -9.437268e-05, -8.5358415e-06, -1.9382902e-05, -4.0843282e-05, -4.656436e-05, -2.5344274e-05, -3.2906587e-06, -2.6419024e-05, -0.000522344, -0.000108559456, -1.8601542e-06, -1.2889405, -0.0001064137, -2.7251614e-05, -1.9741461e-05, -9.012677e-06, -1.3661821e-05, -0.000667926, -0.00033570456, -0.00013097163, -0.00011905076, -0.00011571198, -3.488097e-05, -0.0027395645, -8.7696986e-05, -0.00023857858, -0.00010402765, -0.009180077, -0.025890805, -0.11057606, -0.10262758], "top_logprobs": null, "text_offset": [5008, 5008, 5009, 5016, 5017, 5021, 5024, 5026, 5033, 5034, 5038, 5041, 5043, 5052, 5054, 5060, 5061, 5070, 5072, 5081, 5087, 5088, 5091, 5098, 5099, 5103, 5105, 5114, 5115, 5118, 5121, 5123, 5125, 5127, 5128, 5129, 5130, 5133, 5135, 5136, 5137, 5139, 5142, 5145, 5148, 5150, 5152, 5155, 5157, 5159, 5168, 5169, 5172, 5175, 5177, 5180, 5183, 5185, 5188, 5189, 5191, 5192, 5194, 5196, 5198, 5200, 5209, 5210, 5213, 5216, 5218, 5220, 5222, 5224, 5226, 5228, 5237, 5239, 5248, 5254, 5255, 5261, 5263, 5272, 5273, 5276, 5279, 5281, 5283, 5285, 5287, 5289, 5291, 5300, 5301, 5304, 5307, 5309, 5311, 5313, 5315, 5318, 5320, 5326, 5327, 5336, 5338, 5347, 5349, 5358, 5364, 5365, 5371, 5373, 5382, 5383, 5386, 5389, 5391, 5392, 5393, 5395, 5397, 5399, 5401, 5403, 5412, 5413, 5416, 5419, 5421, 5423, 5426, 5429, 5431, 5433, 5434, 5435, 5436, 5438, 5441, 5444, 5447, 5449, 5452, 5455, 5458, 5460, 5462, 5463, 5464, 5465, 5467, 5470, 5473, 5476, 5478, 5480, 5483, 5485, 5487, 5496, 5497, 5500, 5503, 5505, 5508, 5511, 5513, 5516, 5517, 5519, 5520, 5522, 5524, 5527, 5527, 5527]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6)", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", ")", "\n", "("], "token_logprobs": [-0.004404606, -0.05179874, -0.08561891, -0.000108796, -0.0013558639, -0.0003133412, -0.0049626157, -1.1116062, -3.01145e-05, -0.00041083325, -9.966347e-06, -0.004735196, -0.11873396, -0.03539889, -0.7964381, -2.7013197e-05, -9.615988e-05, -0.0023993594, -0.004587584, -0.09296849, -1.3661821e-05, -0.0151765235, -9.65175e-05, -2.28437e-05, -5.7652644e-05, -0.0004058246, -3.0473995e-05, -1.2946569e-05, -2.1171965e-05, -4.277735e-07, -0.0051435935, -0.0002801937, -0.0065713637, -0.00052640087, -8.459475e-05, -0.0031703499, -0.0012651471, -0.00032598388, -2.3912831e-05, -0.00026779127, -0.0001526695, -0.0010362985, -0.0009373178, -0.00097365293, -0.9689227, -0.00030451978, -2.5703772e-05, -0.023749307, -6.337372e-05, -2.8206221e-05, -1.688045e-05, -3.529076e-06, -1.4854846e-05, -0.00065218104, -0.00025407854, -0.00014170136, -8.3284394e-05, -0.00014134373, -3.5357807e-05, -0.0011554011, -8.352281e-05, -0.00036873287, -6.862172e-05, -0.00015446138, -0.00064812513, -0.00046515674, -0.002730299, -9.425254e-05, -5.197998e-06, -0.0583886, -0.028762529, -0.00048560995, -0.00036181876, -0.00026397567, -0.0018758639, -0.04534415, -0.06420458, -1.0710287, -2.4152187e-05, -5.312365e-05, -0.001310147, -0.00084884523, -0.029956434, -5.4364154e-06, -0.0038588203, -8.296486e-06, -1.1159372e-05, -2.3078366e-05, -4.4181128e-05, -1.9621319e-05, -3.237946e-05, -1.855031e-05, -9.055464e-07, -0.003577033, -0.00017711478, -0.003292338, -0.00031071954, -6.146545e-05, -0.0019979316, -0.001512671, -0.000106773194, -2.0575926e-05, -0.0001375281, -6.122609e-05, -0.00047016633, -0.00047123732, -0.00056629634, -0.6842995, -0.0008962724, -4.7399757e-05, -0.0073409476, -2.8206221e-05, -2.4750101e-05, -1.7356348e-05, -0.00024930926, -1.3422466e-05, -0.0018535887, -0.0002014371, -6.5041706e-05, -4.501652e-05, -7.97072e-05, -5.3716885e-05, -0.00088183413, -7.350647e-05, -0.00028961492, -0.00010307304, -0.008890532, -0.00062671263, -7.8752586e-05, -0.0005443507, -2.200643e-05, -3.7684315e-06, -0.419292, -0.014934855, -0.0061172848, -0.00041196714, -0.0063004517, -0.028011661, -0.9762256, -0.4885897, -0.18017566, -0.07497611, -3.5357807e-05, -0.70554066, -0.0016878325, -9.24644e-05, -4.4539687e-05, -9.846204e-06, -4.2433903e-06, -0.23377429, -0.00050468993, -0.0061024716, -0.00028043022, -0.000106295425, -0.00028770664, -4.3347598e-05, -0.0008039243, -9.115311e-05, -0.00034703218, -5.912312e-06, -8.296486e-06, -0.04845881, -0.0020556257, -0.036062703, -0.0069607627, -0.07530433, -0.010305475, -5.216904e-05, -0.00031787396, -7.899194e-05, -0.00018939328, -0.0011632163, -0.00037851362, -0.00071117055, -0.0055820094, -0.00029605313, -0.00023702794, -8.638288e-05, -0.00064466527, -0.00029283168, -8.4157e-06, -5.157113e-05, -8.51908e-05, -4.6921985e-05, -3.7505437e-05, -6.031526e-06, -1.9028084e-05, -0.0005050494, -0.051252123, -0.20214136, -0.8399812, -1.6393491, -0.037738904, -0.11990635], "top_logprobs": null, "text_offset": [5008, 5008, 5009, 5016, 5017, 5021, 5024, 5026, 5033, 5034, 5038, 5041, 5043, 5052, 5054, 5060, 5061, 5070, 5072, 5081, 5087, 5088, 5091, 5098, 5099, 5103, 5105, 5114, 5115, 5118, 5121, 5123, 5125, 5127, 5128, 5129, 5130, 5133, 5135, 5136, 5137, 5139, 5142, 5145, 5148, 5150, 5152, 5155, 5157, 5159, 5168, 5169, 5172, 5175, 5177, 5180, 5183, 5185, 5188, 5189, 5191, 5192, 5194, 5196, 5198, 5200, 5209, 5210, 5213, 5216, 5218, 5220, 5222, 5224, 5226, 5228, 5237, 5239, 5245, 5246, 5255, 5257, 5266, 5272, 5273, 5276, 5283, 5284, 5288, 5290, 5299, 5300, 5303, 5306, 5308, 5310, 5312, 5313, 5314, 5315, 5318, 5320, 5321, 5322, 5324, 5327, 5330, 5333, 5335, 5337, 5340, 5342, 5344, 5353, 5354, 5357, 5360, 5362, 5365, 5368, 5370, 5373, 5374, 5376, 5377, 5379, 5381, 5383, 5385, 5394, 5395, 5398, 5401, 5403, 5405, 5407, 5409, 5412, 5414, 5423, 5425, 5434, 5440, 5441, 5447, 5449, 5458, 5459, 5462, 5465, 5467, 5468, 5469, 5471, 5473, 5475, 5477, 5479, 5488, 5489, 5492, 5495, 5497, 5499, 5502, 5505, 5507, 5509, 5510, 5511, 5512, 5514, 5517, 5520, 5523, 5525, 5528, 5531, 5534, 5536, 5538, 5539, 5540, 5541, 5543, 5546, 5549, 5552, 5554, 5556, 5559, 5561, 5562, 5562]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.004404606, -0.0525503, -0.09609129, -0.000113805574, -0.0015098073, -0.0003032094, -0.005621931, -0.41212773, -0.038639113, -0.522874, -3.97704e-05, -0.00012775393, -0.0032888094, -0.0070291883, -0.101334356, -1.8907942e-05, -0.026822338, -0.00028174432, -3.5240468e-05, -5.061746e-05, -0.000759007, -3.5477948e-05, -2.987608e-05, -1.7475562e-05, -6.827632e-08, -0.006814803, -0.00040725604, -0.0073397458, -0.00082074676, -0.00024835463, -0.0039362493, -0.0018098177, -0.00030559077, -3.0826937e-05, -0.0003455998, -0.00020811372, -0.0016837119, -0.00082516216, -0.0018719216, -1.0438501, -0.0003625331, -4.036551e-05, -0.057350133, -0.00015290885, -4.3347598e-05, -2.8326363e-05, -1.7356348e-05, -4.0040345e-06, -0.0013611156, -0.00032264323, -0.00015338662, -9.628002e-05, -0.00012095904, -5.4791635e-05, -0.0012462287, -8.852958e-05, -0.00035800316, -9.4849514e-05, -0.00055890164, -0.0006308868, -0.00046575186, -0.0007267381, -2.582111e-05, -4.2433903e-06, -0.057600193, -0.025233472, -0.0018581273, -0.00060846336, -0.0043194797, -0.003370441, -0.19538766, -0.17238401, -0.3955161, -5.523659, -0.0005124441, -0.3465826, -0.00040403462, -0.00018605449, -0.0024165076, -0.0062144394, -0.00019034787, -0.00069864327, -4.477904e-05, -2.8138238e-06, -0.19063038, -0.010233872, -0.15162918, -0.03903185, -0.0009630922, -0.029886113, -0.06929861, -0.005276429, -0.00012322118, -0.0052680406, -0.0027697466, -0.007117128, -0.0036790292, -0.0020089794, -3.0333395, -0.20473824, -9.532728e-05, -0.48006907, -0.0025327855, -8.721922e-05, -4.680184e-05, -1.6207987e-06, -2.693682e-06, -0.016876357, -0.062225133, -0.003205987, -0.004738789, -0.0011953829, -0.000100332174, -0.004688245, -0.0002996294, -0.0023654837, -0.0008743174, -0.006543765, -0.019898655, -0.062554084, -0.10102577, -0.00016590822], "top_logprobs": null, "text_offset": [5008, 5008, 5009, 5016, 5017, 5021, 5024, 5026, 5035, 5037, 5043, 5044, 5053, 5055, 5064, 5070, 5071, 5074, 5081, 5082, 5086, 5088, 5097, 5098, 5101, 5104, 5106, 5108, 5110, 5111, 5112, 5113, 5116, 5118, 5119, 5120, 5122, 5125, 5128, 5131, 5133, 5135, 5138, 5140, 5142, 5151, 5152, 5155, 5158, 5160, 5163, 5166, 5168, 5171, 5172, 5174, 5175, 5177, 5179, 5181, 5183, 5192, 5193, 5196, 5199, 5201, 5203, 5205, 5207, 5209, 5211, 5220, 5222, 5231, 5237, 5238, 5241, 5248, 5249, 5253, 5255, 5264, 5265, 5268, 5271, 5273, 5275, 5277, 5278, 5279, 5280, 5283, 5285, 5286, 5287, 5289, 5292, 5295, 5298, 5300, 5302, 5305, 5307, 5309, 5318, 5319, 5322, 5325, 5327, 5330, 5333, 5335, 5338, 5339, 5341, 5342, 5344, 5346, 5349, 5349, 5349, 5349]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004404606, -0.049802367, -0.086564004, -0.00013729343, -0.0014018249, -0.00030046387, -0.004124943, -0.39793321, -0.05071741, -2.780576, -0.000670909, -0.006918029, -0.00012500932, -0.020435931, -0.3547961, -0.08780375, -0.5948417, -0.23801394, -3.678925e-05, -0.16796443, -0.0017905312, -9.317965e-05, -6.361214e-05, -4.477904e-05, -3.076318e-07, -0.10408578, -0.0028924637, -0.00151685, -0.0003742193, -0.00049634156, -0.0009170917, -0.00013109177, -0.0008302919, -0.00019726387, -1.9143545e-05, -0.15693016, -0.015242368, -0.0004920491, -0.0002801937, -0.0010007968, -0.0027071089, -0.064129904, -0.0486633, -0.11862483, -0.034319792, -1.44972155e-05, -0.03151424, -0.0001707939, -3.201996e-05, -1.5567284e-05, -4.0843282e-05, -1.5094201e-05, -0.03699159, -0.0019360605, -0.00035335214, -0.00011297111, -0.00078036316, -0.00032026, -8.2807564e-05, -0.00014027084, -2.8326363e-05, -4.1232483e-06, -1.6971822, -0.006952479, -0.0069267903, -0.00086698, -0.08005207, -0.004542373, -0.7637872, -0.13964936, -0.23652835, -0.035966992, -1.3542607e-05, -0.09638648, -0.00041840534, -5.1930627e-05, -4.656436e-05, -1.1430258e-06, -1.5006569e-06, -0.27823874, -0.0045705177, -0.0020940315, -0.0003296803, -0.0002977211, -0.00053385564, -0.00011547263, -0.000113805574, -1.9741461e-05, -1.9765537e-06, -0.60231745, -0.0066854847, -0.008534829, -0.0002974855, -0.12600574, -0.010401835, -0.43868706, -0.00014480359, -0.00010545909, -0.0018038469, -0.0021859019, -0.006135095, -0.010152403, -0.016373042, -1.306671e-05, -1.241263, -9.2821094e-05, -3.97704e-05, -1.5925843e-05, -3.2616e-05, -7.1062755e-06, -0.02121109, -0.00029366894, -0.005443621, -0.00012632155, -8.972073e-05, -0.00013896049, -2.8682118e-05, -8.7696986e-05, -6.146545e-05, -8.8290224e-05, -6.3900848e-06, -1.3823812e-06, -0.008000427, -0.00034095068, -0.0043275636, -0.0029011325, -0.08469871, -0.006873736, -4.871012e-05, -0.00051769393, -6.921402e-05, -0.000113686365, -0.00043259587, -0.00022194568, -0.00021431445, -0.0051187323, -0.00054387294, -7.2672e-05, -9.997455e-05, -0.00037565167, -8.7696986e-05, -2.8682118e-05, -3.762558e-05, -5.8725527e-05, -2.5105857e-05, -5.07376e-05, -9.055464e-07, -1.8907942e-05, -0.00034882128, -0.00029378536, -1.3823812e-06, -1.3443025, -0.00019976817, -3.7743856e-05, -2.0935424e-05, -1.9765537e-06, -2.3360508e-06, -0.0009596314, -0.00074987864, -0.00039449416, -0.0001821234, -0.00017651686, -6.3492e-05, -0.0022330936, -0.00029784034, -0.0003377283, -0.00014706762, -0.010362567, -0.024981415, -0.084404625], "top_logprobs": null, "text_offset": [5008, 5008, 5009, 5016, 5017, 5021, 5024, 5026, 5035, 5037, 5044, 5045, 5049, 5052, 5054, 5063, 5065, 5074, 5080, 5081, 5087, 5089, 5098, 5099, 5102, 5105, 5107, 5109, 5111, 5113, 5115, 5117, 5126, 5127, 5130, 5133, 5135, 5137, 5139, 5141, 5143, 5145, 5154, 5156, 5165, 5171, 5172, 5178, 5180, 5189, 5190, 5193, 5196, 5198, 5200, 5202, 5204, 5206, 5208, 5217, 5218, 5221, 5224, 5226, 5228, 5230, 5232, 5235, 5237, 5246, 5248, 5257, 5263, 5264, 5270, 5272, 5281, 5282, 5285, 5288, 5290, 5292, 5294, 5296, 5298, 5300, 5309, 5310, 5313, 5316, 5318, 5320, 5322, 5324, 5327, 5329, 5335, 5336, 5345, 5347, 5356, 5358, 5367, 5373, 5374, 5380, 5382, 5391, 5392, 5395, 5398, 5400, 5401, 5402, 5404, 5406, 5408, 5410, 5412, 5421, 5422, 5425, 5428, 5430, 5432, 5435, 5438, 5440, 5442, 5443, 5444, 5445, 5447, 5450, 5453, 5456, 5458, 5461, 5464, 5467, 5469, 5471, 5472, 5473, 5474, 5476, 5479, 5482, 5485, 5487, 5489, 5492, 5494, 5496, 5505, 5506, 5509, 5512, 5514, 5517, 5520, 5522, 5525, 5526, 5528, 5529, 5531, 5533, 5536, 5536]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004404606, -0.05333267, -0.09256512, -9.38949e-05, -0.001738285, -0.00030297003, -0.005541313, -0.421392, -0.04467733, -0.54382765, -5.7770918e-05, -0.00012119652, -0.0031334555, -0.0053184363, -0.098581836, -2.28437e-05, -0.030800281, -0.00028078974, -3.452334e-05, -5.216904e-05, -0.000737831, -3.154219e-05, -2.5225998e-05, -2.0696069e-05, 0, -0.0071801026, -0.0004914521, -0.007505538, -0.000921388, -0.0004084472, -0.0041955695, -0.0017766177, -0.0002694602, -3.249586e-05, -0.0003191862, -0.00033415205, -0.0010221587, -0.00079348736, -0.0012906296, -1.0457038, -0.000413515, -4.501652e-05, -0.048947632, -0.00012000537, -3.7743856e-05, -2.4510746e-05, -1.8310955e-05, -3.6482897e-06, -0.0009355268, -0.00025646458, -0.00015970749, -0.0001173809, -0.0001177404, -4.5847235e-05, -0.00078000367, -8.209043e-05, -0.00048429958, -8.7337496e-05, -0.00054685504, -0.00054804806, -0.00011487751, -0.00096559647, -2.4152187e-05, -7.937927e-06, -0.059245046, -0.029446501, -0.0018043248, -0.000585442, -0.004222984, -0.0044535226, -0.1698574, -0.18349858, -0.40917963, -0.07564088, -9.675685e-05, -0.53532404, -0.0028779374, -0.00010688772, -6.909574e-05, -9.794894e-05, -0.00010844024, -0.2606987, -0.015039343, -0.005550782, -0.0010341519, -0.0011848203, -0.0013387355, -0.0014443242, -0.0008322001, -5.4791635e-05, -3.529076e-06, -1.4200777, -0.01669573, -0.010335105, -0.001958929, -0.011491291, -0.020571787, -0.06441707], "top_logprobs": null, "text_offset": [5008, 5008, 5009, 5016, 5017, 5021, 5024, 5026, 5035, 5037, 5043, 5044, 5053, 5055, 5064, 5070, 5071, 5074, 5081, 5082, 5086, 5088, 5097, 5098, 5101, 5104, 5106, 5108, 5110, 5111, 5112, 5113, 5116, 5118, 5119, 5120, 5122, 5125, 5128, 5131, 5133, 5135, 5138, 5140, 5142, 5151, 5152, 5155, 5158, 5160, 5163, 5166, 5168, 5171, 5172, 5174, 5175, 5177, 5179, 5181, 5183, 5192, 5193, 5196, 5199, 5201, 5203, 5205, 5207, 5209, 5211, 5220, 5222, 5231, 5237, 5238, 5244, 5246, 5255, 5256, 5259, 5262, 5264, 5266, 5268, 5270, 5272, 5274, 5283, 5284, 5287, 5290, 5292, 5294, 5296, 5298, 5301, 5301]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004404606, -0.05423029, -0.091426104, -0.00014337122, -0.0014337578, -0.00027864208, -0.004600517, -0.4942054, -0.042098705, -0.498606, -5.157113e-05, -0.00017139182, -0.0037538735, -0.006082741, -0.09905213, -2.045765e-05, -0.029362587, -0.00026516683, -3.2140102e-05, -5.6340414e-05, -0.0006165724, -3.7386224e-05, -2.4510746e-05, -1.7119806e-05, -1.8841804e-07, -0.0062231366, -0.0004690925, -0.007824114, -0.00083100714, -0.00020215422, -0.0039626393, -0.0018289868, -0.00031847187, -2.987608e-05, -0.00027196546, -0.00021538827, -0.0009961412, -0.0012970762, -0.0014550679, -0.52289516, -0.0004368883, -2.1291178e-05, -0.03145919, -7.136165e-05, -2.4750101e-05, -1.6282536e-05, -1.3823812e-06, -4.838501e-06, -0.00049216923, -0.0001033124, -0.00026743364, -7.946878e-05, -0.00014265596, -4.489638e-05, -0.00091792626, -0.00018057182, -0.00043891673, -7.8872734e-05, -0.00010557923, -0.00034667455, -5.860725e-05, -0.00034309734, -1.1398727e-05, -4.838501e-06, -0.03565909, -0.017430626, -0.0001620926, -0.00023571757, -0.002385137, -0.000849202, -0.04342861, -0.037410222, -0.15105765, -0.011439742, -1.1753544e-05, -0.045702215, -0.00024501586, -2.0815281e-05, -1.843017e-05, -8.03023e-05, -9.854499e-05, -0.04819845, -0.0019546335, -7.9112084e-05, -0.00010748563, -0.00013264055, -0.00017067656, -5.6102934e-05, -0.00010045139, -9.606849e-06, -3.4089344e-06, -0.11496385, -0.0011906099, -0.009265918, -0.00015887116, -0.0047641834, -0.022851683, -0.07792261], "top_logprobs": null, "text_offset": [5008, 5008, 5009, 5016, 5017, 5021, 5024, 5026, 5035, 5037, 5043, 5044, 5053, 5055, 5064, 5070, 5071, 5074, 5081, 5082, 5086, 5088, 5097, 5098, 5101, 5104, 5106, 5108, 5110, 5111, 5112, 5113, 5116, 5118, 5119, 5120, 5122, 5125, 5128, 5131, 5133, 5135, 5138, 5140, 5142, 5151, 5152, 5155, 5158, 5160, 5163, 5166, 5168, 5171, 5172, 5174, 5175, 5177, 5179, 5181, 5183, 5192, 5193, 5196, 5199, 5201, 5203, 5205, 5207, 5209, 5211, 5220, 5222, 5231, 5237, 5238, 5244, 5246, 5255, 5256, 5259, 5262, 5264, 5266, 5268, 5270, 5272, 5274, 5283, 5284, 5287, 5290, 5292, 5294, 5296, 5298, 5301, 5301]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.004404606, -0.052549362, -0.08723451, -0.00015887116, -0.001342078, -0.00026242502, -0.0061403117, -1.06104, -3.5477948e-05, -0.0002854398, -1.1159372e-05, -0.0040180543, -0.11935978, -0.03242643, -0.81853724, -2.582111e-05, -0.0001283481, -0.002546351, -0.004619499, -0.082858525, -1.688045e-05, -0.016338328, -0.00010235966, -3.333313e-05, -5.169127e-05, -0.0003848345, -2.3556138e-05, -1.6282536e-05, -1.9980816e-05, -3.076318e-07, -0.0063029695, -0.0003464352, -0.005471009, -0.00066840375, -0.00012417485, -0.0029927765, -0.0014426524, -0.0001821234, -2.2484204e-05, -0.00022397317, -0.00015469792, -0.0006973329, -0.00091410964, -0.0011244303, -0.55824, -0.00034679286, -2.28437e-05, -0.027445126, -5.598372e-05, -3.058758e-05, -2.0218295e-05, -4.0040345e-06, -8.892534e-06, -0.00063655345, -0.0001283481, -0.00019976817, -6.3492e-05, -0.00013991416, -4.1200903e-05, -0.0004432111, -0.00014647158, -0.00042472623, -0.00012131666, -0.000111540605, -0.0006102534, -0.00019344824, -0.0032286495, -5.3477528e-05, -4.0040345e-06, -0.050524164, -0.022338897, -0.00036873287, -0.00023059067, -0.0002797159, -0.0012358434, -0.054696873, -0.051606167, -0.3793411, -0.029424706, -1.7236207e-05, -0.054709088, -0.00041995506, -2.7728449e-05, -3.1901687e-05, -0.00010057153, -0.00011213572, -0.055905394, -0.0027696274, -0.00016769636, -0.00011964774, -0.00025956213, -0.00025431695, -6.814395e-05, -9.5442745e-05, -9.490449e-06, -1.5006569e-06, -0.33272624, -0.0050739804, -0.009093336, -0.00043665178, -0.0076169437, -0.01040069, -0.14163838, -0.00014873935, -9.198663e-05, -0.0013826642, -0.0023807187, -0.009447556, -0.056680128, -0.037029378, -3.154219e-05, -1.7803345, -0.0007973622, -2.5703772e-05, -2.8326363e-05, -1.6165199e-05, -6.827632e-08, -0.025004702, -0.00019666688, -0.0071379584, -0.000143252, -8.984087e-05, -0.00010998996, -1.8788729e-05, -0.00014003337, -3.8577375e-05, -6.146545e-05, -4.6010214e-06, -1.0323977e-05, -0.00759166, -0.0003342722, -0.008828471, -0.0022848272, -0.19103102, -0.0034118888, -4.048565e-05, -0.00022373382, -7.338913e-05, -0.000120601406, -0.00082217914, -0.00011106284, -0.00034011435, -0.0050483975, -0.00033737256, -9.413332e-05, -5.1334588e-05, -0.00043271598, -0.00015982577, -9.130952e-06, -1.9382902e-05, -6.4446605e-05, -3.225932e-05, -2.8326363e-05, -3.7684315e-06, -2.8326363e-05, -0.00055460737, -0.00015088324, -1.7400124e-06, -1.2258966, -0.00010665305, -2.319758e-05, -1.6165199e-05, -3.051303e-06, -2.8138238e-06, -0.00088672637, -0.00024871225, -0.00011869313, -6.38515e-05, -0.00014170136, -3.0353855e-05, -0.0024491877, -0.00011118111, -0.00022850404, -8.8290224e-05, -0.011138033, -0.02654619, -0.13412711, -0.0957495], "top_logprobs": null, "text_offset": [5008, 5008, 5009, 5016, 5017, 5021, 5024, 5026, 5033, 5034, 5038, 5041, 5043, 5052, 5054, 5060, 5061, 5070, 5072, 5081, 5087, 5088, 5091, 5098, 5099, 5103, 5105, 5114, 5115, 5118, 5121, 5123, 5125, 5127, 5128, 5129, 5130, 5133, 5135, 5136, 5137, 5139, 5142, 5145, 5148, 5150, 5152, 5155, 5157, 5159, 5168, 5169, 5172, 5175, 5177, 5180, 5183, 5185, 5188, 5189, 5191, 5192, 5194, 5196, 5198, 5200, 5209, 5210, 5213, 5216, 5218, 5220, 5222, 5224, 5226, 5228, 5237, 5239, 5248, 5254, 5255, 5261, 5263, 5272, 5273, 5276, 5279, 5281, 5283, 5285, 5287, 5289, 5291, 5300, 5301, 5304, 5307, 5309, 5311, 5313, 5315, 5318, 5320, 5326, 5327, 5336, 5338, 5347, 5349, 5358, 5364, 5365, 5371, 5373, 5382, 5383, 5386, 5389, 5391, 5392, 5393, 5395, 5397, 5399, 5401, 5403, 5412, 5413, 5416, 5419, 5421, 5423, 5426, 5429, 5431, 5433, 5434, 5435, 5436, 5438, 5441, 5444, 5447, 5449, 5452, 5455, 5458, 5460, 5462, 5463, 5464, 5465, 5467, 5470, 5473, 5476, 5478, 5480, 5483, 5485, 5487, 5496, 5497, 5500, 5503, 5505, 5508, 5511, 5513, 5516, 5517, 5519, 5520, 5522, 5524, 5527, 5527, 5527]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.004404606, -0.050177146, -0.0912968, -0.000120601406, -0.0011854162, -0.00033063398, -0.004105253, -1.0058702, -3.142485e-05, -0.00048000526, -1.0800813e-05, -0.0038815588, -2.3145251, -4.5847235e-05, -0.0005507898, -3.8217877e-05, -0.004958121, -0.11475898, -0.04001099, -0.63336736, -2.987608e-05, -0.00015636964, -0.0013097875, -0.00015541504, -0.046487033, -9.72699e-06, -0.011361065, -7.5774245e-05, -3.201996e-05, -5.2885232e-05, -0.00042424936, -2.1768952e-05, -1.4139594e-05, -1.771398e-05, -1.8841804e-07, -0.004869775, -0.00027315848, -0.0049399743, -0.0007115282, -3.1901687e-05, -0.002391412, -0.0013618319, -0.00014623316, -2.5225998e-05, -0.0001492143, -0.00011475737, -0.00055365276, -0.0010589125, -0.0014869418, -0.4647366, -0.0005615252, -3.762558e-05, -0.019328428, -9.2821094e-05, -2.4272329e-05, -3.9055147e-05, -1.0204763e-05, -1.676031e-05, -0.00063559884, -0.00013705408, -0.00014694748, -0.00011428335, -0.00014718683, -3.6311474e-05, -0.00044070487, -0.00011726356, -0.00041792757, -6.6949986e-05, -0.0001314494, -0.0010522894, -0.001288481, -0.00244883, -7.362661e-05, -6.9861335e-06, -0.053965725, -0.014060025, -0.00028376994, -0.00024453807, -0.00025467362, -0.00078859425, -0.028734248, -0.037258882, -0.53501385, -0.030349698, -1.3542607e-05, -0.035425812, -0.00027876132, -1.7834122e-05, -3.953198e-05, -0.00011320953, -1.9028084e-05, -0.04042226, -0.0019830596, -0.00012918444, -0.000120601406, -0.00039461427, -0.00017186676, -3.678925e-05, -7.493791e-05, -3.023464e-05, -1.8841804e-07, -1.2976044, -0.012254662, -0.0039011259, -0.0003082143, -0.0024796636, -0.0037883369, -0.26529694, -0.35391974, -1.0533379, -3.9172486e-05, -0.00013633883, -0.004014284, -0.001612367, -0.061304715, -1.44972155e-05, -0.011413696, -1.0084622e-05, -1.4736571e-05, -1.0444119e-05, -7.350647e-05, -2.4390605e-05, -1.9621319e-05, -2.9311614e-06, -7.8540467e-07, -0.004779932, -0.0002545563, -0.003492334, -0.0004975345, -4.2511267e-05, -0.0018425409, -0.0015614424, -0.00019952882, -1.688045e-05, -0.00014313185, -7.1481794e-05, -0.00067472464, -0.0006040489, -0.00021085552, -0.91514087, -0.001700968, -2.6298881e-05, -0.005658195, -5.7532503e-05, -1.9143545e-05, -1.9382902e-05, -1.3422466e-05, -3.529076e-06, -0.00080022594, -0.00023023302, -0.00013228387, -5.6102934e-05, -0.0001233404, -4.763911e-05, -0.0005800119, -0.00012775393, -0.00022999368, -5.8845668e-05, -0.0017770954, -0.0005930761, -0.00012918444, -0.0003601489, -2.4510746e-05, -3.076318e-07, -1.1731604, -0.038548853, -0.026931198, -0.0032506553, -0.02093174, -0.088539496, -0.42413616, -0.0001506467, -7.1481794e-05, -0.0014033755, -0.00040355683, -0.0075706993, -0.028320221, -0.027254308, -2.1051823e-05, -0.28125805, -0.00011297111, -2.880226e-05, -3.0473995e-05, -9.490449e-06, -2.2159093e-06, -0.011062934, -0.00019786083, -0.0029155395, -0.0001290643, -0.00010271822, -0.00018653227, -2.2126573e-05, -0.00016602462, -2.7728449e-05, -9.413332e-05, -2.693682e-06, -3.4089344e-06, -0.009135859, -0.0006870716, -0.0058362423, -0.0064500547, -0.108638346, -0.005828508, -3.5357807e-05, -0.00034369153, -5.979934e-05, -0.00017067656, -0.0004170931, -9.2941234e-05, -0.00019213694, -0.004864263, -0.0005841889, -0.00010367096, -0.0001010493, -0.0005685613, -0.0001517177, -8.296486e-06, -0.00011082348, -7.159913e-05, -5.669991e-05, -2.7251614e-05, -1.3823812e-06, -1.688045e-05, -0.0004225786, -0.0001902296, -4.361666e-06, -1.5668441, -0.00042496464, -3.5477948e-05, -5.145473e-05, -1.6207987e-06, -1.7595703e-05, -0.0028368123, -0.000846937, -0.00028555995, -0.00010927377, -0.00011416413, -3.5477948e-05, -0.001346851, -0.00011070334, -0.0002539584, -8.650302e-05, -0.012916927, -0.02700468, -0.12263824, -0.07479669, -5.991855e-05, -0.0017085505, -0.00025360263, -0.006119803], "top_logprobs": null, "text_offset": [5008, 5008, 5009, 5016, 5017, 5021, 5024, 5026, 5033, 5034, 5038, 5041, 5043, 5050, 5051, 5055, 5058, 5060, 5069, 5071, 5077, 5078, 5087, 5089, 5098, 5104, 5105, 5108, 5115, 5116, 5120, 5122, 5131, 5132, 5135, 5138, 5140, 5142, 5144, 5145, 5146, 5147, 5150, 5152, 5153, 5154, 5156, 5159, 5162, 5165, 5167, 5169, 5172, 5174, 5176, 5185, 5186, 5189, 5192, 5194, 5197, 5200, 5202, 5205, 5206, 5208, 5209, 5211, 5213, 5215, 5217, 5226, 5227, 5230, 5233, 5235, 5237, 5239, 5241, 5243, 5245, 5254, 5256, 5265, 5271, 5272, 5278, 5280, 5289, 5290, 5293, 5296, 5298, 5300, 5302, 5304, 5306, 5308, 5317, 5318, 5321, 5324, 5326, 5328, 5330, 5332, 5335, 5337, 5346, 5348, 5354, 5355, 5364, 5366, 5375, 5381, 5382, 5385, 5392, 5393, 5397, 5399, 5408, 5409, 5412, 5415, 5417, 5419, 5421, 5422, 5423, 5424, 5427, 5429, 5430, 5431, 5433, 5436, 5439, 5442, 5444, 5446, 5449, 5451, 5453, 5462, 5463, 5466, 5469, 5471, 5474, 5477, 5479, 5482, 5483, 5485, 5486, 5488, 5490, 5492, 5494, 5503, 5504, 5507, 5510, 5512, 5514, 5516, 5518, 5521, 5523, 5529, 5530, 5539, 5541, 5550, 5552, 5561, 5567, 5568, 5574, 5576, 5585, 5586, 5589, 5592, 5594, 5595, 5596, 5598, 5600, 5602, 5604, 5606, 5615, 5616, 5619, 5622, 5624, 5626, 5629, 5632, 5634, 5636, 5637, 5638, 5639, 5641, 5644, 5647, 5650, 5652, 5655, 5658, 5661, 5663, 5665, 5666, 5667, 5668, 5670, 5673, 5676, 5679, 5681, 5683, 5686, 5688, 5690, 5699, 5700, 5703, 5706, 5708, 5711, 5714, 5716, 5719, 5720, 5722, 5723, 5725, 5727, 5730, 5730, 5730, 5730, 5730, 5730, 5730]}, "finish_reason": "stop"}]}, {"id": "cmpl-51Lyx1mawzD3lgIYlv2ncYitqOY95", "object": "text_completion", "created": 1651004511, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0045313565, -0.07958777, -0.07133446, -0.00013109177, -0.001046082, -0.00013407106, -0.01530083, -0.37027556, -2.0098154e-05, -0.0003162041, -7.088388e-05, -0.016563611, -0.20477036, -0.095906794, -0.5416486, -9.130952e-06, -4.751897e-05, -0.0013345585, -9.7114484e-05, -0.045659978, -6.5092986e-06, -0.007296094, -1.3185924e-05, -1.5805701e-05, -5.24084e-05, -0.00014515934, -1.8788729e-05, -1.9980816e-05, -3.529076e-06, -6.827632e-08, -0.0045609972, -0.00046646709, -0.0041770744, -0.00024287197, -2.272356e-05, -0.0014306537, -0.0011452552, -0.00038268685, -2.272356e-05, -0.00015613029, -0.00020310696, -0.003261002, -0.00086978375, -0.000502546, -0.81552374, -0.0012508834, -1.7119806e-05, -0.021235017, -0.00011726356, -1.2828294e-05, -1.0444119e-05, -9.055464e-07, -5.4364154e-06, -0.000827428, -0.00025825272, -0.0002781662, -0.00037171593, -9.806815e-05, -2.5464416e-05, -0.00048537247, -7.24364e-05, -0.00028007446, -7.648668e-05, -2.0935424e-05, -0.0015115981, -5.264588e-05, -0.004338039, -7.818713e-06, -4.277735e-07, -0.7292057, -0.08539641, -0.00026850656, -0.00023571757, -0.0003123885, -0.010351005, -0.071571335, -0.23105438, -0.93718946, -0.12852325, -4.0963423e-05, -0.28495395, -0.0014858679, -6.9810994e-05, -6.9690854e-05, -1.163433e-05, -5.460492e-07, -2.4147983, -0.007723074, -0.06315624, -0.0009790173, -0.0008217013, -0.00033087333, -0.0017971, -0.00067770766, -3.869565e-05, -0.00018963263, -3.4089344e-06, -6.3900848e-06, -0.42879677, -0.0040914277, -0.25223795, -0.019856704, -0.18511252, -0.014790023, -0.00021813008, -0.0013296634, -0.00014241754, -0.00066339417, -0.0021850655, -0.0015858605, -0.00083363254, -0.00725701, -0.00022903908, -0.00015255497, -7.362661e-05, -0.0004621737, -0.00012381817, -1.42597355e-05, -5.979934e-05, -6.0633804e-05, -5.6818186e-05, -0.00010271822, -1.5805701e-05, -5.848711e-05, -0.00031107623, -0.005792716, -0.058003347, -1.156139, -0.024446711, -0.00012787033, -0.00019750134, -1.3542607e-05, -4.608659e-05, -0.01367202, -0.005225678, -0.0002038222, -0.0004310471, -0.00018820119, -1.9621319e-05, -0.0067333104, -9.258174e-05, -0.00023941304, -0.00026469093, -0.008080943, -0.41735905, -0.044764653], "top_logprobs": null, "text_offset": [5611, 5611, 5612, 5619, 5620, 5624, 5627, 5629, 5636, 5637, 5641, 5644, 5646, 5655, 5657, 5663, 5664, 5673, 5675, 5684, 5690, 5691, 5694, 5701, 5702, 5706, 5708, 5717, 5718, 5721, 5724, 5726, 5728, 5730, 5731, 5732, 5733, 5736, 5738, 5739, 5740, 5742, 5745, 5748, 5751, 5753, 5755, 5758, 5760, 5762, 5771, 5772, 5775, 5778, 5780, 5783, 5786, 5788, 5791, 5792, 5794, 5795, 5797, 5799, 5801, 5803, 5812, 5813, 5816, 5819, 5821, 5823, 5825, 5827, 5829, 5831, 5840, 5842, 5851, 5857, 5858, 5864, 5866, 5875, 5876, 5879, 5882, 5884, 5885, 5886, 5888, 5890, 5892, 5894, 5896, 5905, 5906, 5909, 5912, 5914, 5916, 5919, 5922, 5924, 5926, 5927, 5928, 5929, 5931, 5934, 5937, 5940, 5942, 5945, 5948, 5951, 5953, 5955, 5956, 5957, 5958, 5960, 5963, 5966, 5969, 5971, 5973, 5976, 5978, 5980, 5989, 5990, 5993, 5996, 5998, 6001, 6004, 6006, 6009, 6010, 6012, 6013, 6015, 6017, 6020, 6020]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4)))))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0045313565, -0.07958777, -0.07133434, -0.00013109177, -0.001046082, -0.00013407106, -0.01530083, -1.2450722, -0.12547034, -0.8196045, -0.6907375, -5.7057543e-05, -0.23211068, -0.0030860435, -0.0003803027, -0.00036003065, -4.608659e-05, -6.827632e-08, -0.1776557, -0.010926376, -0.00067066966, -0.0005057647, -0.00017329915, -0.004057014, -0.0072344337, -0.0022066883, -4.7399757e-05, -2.4152187e-05, -0.35466984, -0.029142259, -0.00050373527, -0.00033212456, -0.00034285896, -0.01093614, -0.5856642, -0.15499823, -0.5854621, -0.22935006, -3.333313e-05, -0.9052378, -0.002643519, -0.00020871071, -0.00027530332, -5.5745302e-05, -3.678925e-05, -1.2267221, -0.002625055, -0.024231365, -0.00062730775, -0.000735445, -0.00015911051, -0.0010073618, -0.0010010353, -0.00010080995, -0.00053802703, -1.4974988e-05, -4.6010214e-06, -0.6991255, -0.0073450906, -0.43115318, -0.023091856, -0.19650854, -0.025779305, -0.00029450248, -0.0026731044, -0.00014468438, -0.0031062507, -0.0024557628, -0.011466754, -0.0034443042, -0.03954838, -0.0003450047, -0.00064883946, -0.0001244142, -0.0005829959, -0.00025896798, -7.224551e-06, -0.00012810968, -5.3477528e-05, -0.00010355082, -7.648668e-05, -5.0500123e-05, -7.1481794e-05, -0.0003848345, -0.02590879, -0.6354535, -1.6332848, -0.18778661, -0.09652965, -0.00025276537], "top_logprobs": null, "text_offset": [5611, 5611, 5612, 5619, 5620, 5624, 5627, 5629, 5638, 5640, 5649, 5655, 5656, 5662, 5664, 5673, 5674, 5677, 5680, 5682, 5684, 5686, 5688, 5690, 5692, 5701, 5702, 5705, 5708, 5710, 5712, 5714, 5716, 5718, 5720, 5729, 5731, 5740, 5746, 5747, 5753, 5755, 5764, 5765, 5768, 5771, 5773, 5774, 5775, 5777, 5779, 5781, 5783, 5785, 5794, 5795, 5798, 5801, 5803, 5805, 5808, 5811, 5813, 5815, 5816, 5817, 5818, 5820, 5823, 5826, 5829, 5831, 5834, 5837, 5840, 5842, 5844, 5845, 5846, 5847, 5849, 5852, 5855, 5858, 5860, 5862, 5865, 5865, 5865, 5865]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))"], "token_logprobs": [-0.0045313565, -0.07812296, -0.069054484, -0.00011511593, -0.0010275878, -0.00016137547, -0.01291373, -0.35977793, -2.6180607e-05, -0.00027840555, -4.8353428e-05, -0.012870074, -1.6986778, -3.8103353e-05, -0.00020918754, -4.2433903e-06, -0.0034492086, -1.8999618, -3.2735214e-05, -0.00025515142, -2.1649737e-05, -0.009651256, -1.5082324, -0.00012024191, -0.00033594016, -1.1991961e-05, -0.013927893, -0.511715, -0.08486344, -0.6050449, -9.699527e-05, -7.8752586e-05, -0.0018292262, -0.00015148021, -0.046759497, -1.7119806e-05, -0.009979424, -7.1062755e-06, -4.394177e-05, -0.00015028719, -0.00025670204, -1.6165199e-05, -2.6773841e-05, -3.6482897e-06, 0, -0.003700686, -0.0003891288, -0.004404132, -0.00021204854, -2.200643e-05, -0.00139705, -0.00074105157, -0.00028317483, -2.6773841e-05, -0.00012715602, -0.00014742525, -0.0015761905, -0.0004864472, -0.000608224, -0.6709641, -0.00076103635, -4.5967376e-05, -0.03405643, -0.00022635736, -1.5687427e-05, -2.2245786e-05, -3.051303e-06, -8.176345e-06, -0.0014014654, -0.0011412002, -0.00020417797, -0.0010470377, -0.00015231561, -2.8087945e-05, -0.00033260233, -5.109523e-05, -0.0003345106, -0.0002131233, -0.00019547573, -0.00071439106, -3.8935006e-05, -0.0045032175, -1.0681599e-05, -6.6619094e-07, -0.24465929, -0.039622422, -0.000139794, -0.00021622273, -0.00020739941, -0.0008183607, -0.02870892, -0.03547824, -0.10252224, -2.8138238e-06, -0.00015827699, -0.00043080773, -2.6298881e-05, -0.0028904316, -1.6207987e-06, -0.000117978816, -2.3360508e-06, -5.79217e-06, -4.4818075e-06, -1.8668587e-05, -6.6294406e-06, -1.1514188e-05, -1.1430258e-06, 0, -0.0006718608, -4.1918032e-05, -0.0003754123, -6.0038692e-05, -2.7251614e-05, -0.00019392508, -2.3435998e-05, -4.7875652e-05, -9.72699e-06, -3.3928238e-05, -2.9159892e-05, -0.00010379017, -0.00012739444, -5.9679198e-05, -0.14030246, -4.8353428e-05, -2.9280032e-05, -0.0006103726, -1.163433e-05, -8.4157e-06, -1.2351458e-05, 0, -1.7400124e-06, -0.0011876241, -3.237946e-05, -0.00014802223, -4.5613506e-05, -5.0260765e-05, -1.6282536e-05, -0.00017258391, -8.8051806e-05, -0.00010128584, -5.109523e-05, -0.0009896401, -0.00010092916, -4.0009756e-05, -2.9756868e-05, -2.0966954e-06, -6.827632e-08, -0.19636679, -0.02857165, -0.035727467, -0.0006995979, -5.24084e-05, -0.0002534825, -0.0044408897, -0.002468011, -0.07634283, -0.02363994, -0.1133911, -4.361666e-06, -5.20489e-05, -0.00034464613, -4.46589e-05, -0.0038061065, -2.693682e-06, -0.0008084589, -1.022884e-06, -2.3360508e-06, -7.224551e-06, -4.1200903e-05, -8.0580685e-06, -1.402038e-05, -6.6619094e-07, 0, -0.0003696875, -5.6340414e-05, -0.00036038828, -4.406191e-05, -1.44972155e-05, -0.00021324158, -2.5464416e-05, -5.7413286e-05, -8.892534e-06, -1.9503042e-05, -3.249586e-05, -5.8845668e-05, -0.00013943638, -4.29881e-05, -0.078241356, -6.194322e-05, -9.370307e-06, -0.0007441528, -1.6045058e-05, -1.1991961e-05, -6.9861335e-06, 0, -7.8540467e-07, -0.0005859189, -3.3450466e-05, -0.000118811404, -3.965026e-05, -5.598372e-05, -1.6642034e-05, -0.00016709937, -5.07376e-05, -0.00016554873, -4.680184e-05, -0.0003083335, -6.647409e-05, -4.5255874e-05, -7.601266e-05, -1.5006569e-06, 0, -0.057968047, -0.009569045, -4.573365e-05, -6.408898e-05, -0.007433237, -0.010921799, -0.65506035, -0.07971066, -0.9413876, -0.07910221, -1.2946569e-05, -0.1653157, -0.00054196373, -4.7279616e-05, -4.2272848e-05, -4.2433903e-06, -2.28437e-05, -0.8979519, -0.00037899046, -0.0055414317, -0.0001539836, -0.000114638155, -0.00025038118, -6.432833e-05, -0.00022373382, -4.1320116e-05, -0.0005581845, -1.3823812e-06, 0, -0.15053535, -0.00053957955, -0.017920457, -0.0032588488, -3.395089, -0.040235654, -0.00014551697, -0.0024595878, -0.0001304948, -0.00037064118, -0.0021974314, -0.00030702315, -0.00010080995, -0.0069903517, -0.00029545708], "top_logprobs": null, "text_offset": [5611, 5611, 5612, 5619, 5620, 5624, 5627, 5629, 5636, 5637, 5641, 5644, 5646, 5653, 5654, 5658, 5661, 5663, 5670, 5671, 5675, 5678, 5680, 5687, 5688, 5692, 5695, 5697, 5706, 5708, 5714, 5715, 5724, 5726, 5735, 5741, 5742, 5745, 5752, 5753, 5757, 5759, 5768, 5769, 5772, 5775, 5777, 5779, 5781, 5782, 5783, 5784, 5787, 5789, 5790, 5791, 5793, 5796, 5799, 5802, 5804, 5806, 5809, 5811, 5813, 5822, 5823, 5826, 5829, 5831, 5834, 5837, 5839, 5842, 5843, 5845, 5846, 5848, 5850, 5852, 5854, 5863, 5864, 5867, 5870, 5872, 5874, 5876, 5878, 5880, 5882, 5891, 5893, 5899, 5900, 5909, 5911, 5920, 5926, 5927, 5930, 5937, 5938, 5942, 5944, 5953, 5954, 5957, 5960, 5962, 5964, 5966, 5967, 5968, 5969, 5972, 5974, 5975, 5976, 5978, 5981, 5984, 5987, 5989, 5991, 5994, 5996, 5998, 6007, 6008, 6011, 6014, 6016, 6019, 6022, 6024, 6027, 6028, 6030, 6031, 6033, 6035, 6037, 6039, 6048, 6049, 6052, 6055, 6057, 6058, 6060, 6062, 6064, 6066, 6069, 6071, 6080, 6082, 6088, 6089, 6098, 6100, 6109, 6115, 6116, 6119, 6126, 6127, 6131, 6133, 6142, 6143, 6146, 6149, 6151, 6153, 6155, 6156, 6157, 6158, 6161, 6163, 6164, 6165, 6167, 6170, 6173, 6176, 6178, 6180, 6183, 6185, 6187, 6196, 6197, 6200, 6203, 6205, 6208, 6211, 6213, 6216, 6217, 6219, 6220, 6222, 6224, 6226, 6228, 6237, 6238, 6241, 6244, 6246, 6248, 6250, 6252, 6255, 6257, 6266, 6268, 6277, 6283, 6284, 6290, 6292, 6301, 6302, 6305, 6308, 6310, 6311, 6312, 6314, 6316, 6318, 6320, 6322, 6331, 6332, 6335, 6338, 6340, 6342, 6345, 6348, 6350, 6352, 6353, 6354, 6355, 6357, 6360, 6363, 6366, 6368]}, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform_matrix 1 0 (- (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4)))) 0)) (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform_matrix 1 0 0 0) (transform (transform (transform (transform_matrix 1 0 0 0) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (-", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))))", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")", " (", "transform", " (", "transform", " (", "transform", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix"], "token_logprobs": [-0.0045313565, -0.07015428, -0.06996102, -0.00015636964, -0.0014615756, -0.0001233404, -0.012232637, -0.38001892, -2.4750101e-05, -0.0002824577, -5.037998e-05, -0.009551958, -0.18878645, -0.08387503, -1.0251018, -1.8482987, -0.4837357, -1.2161797, -0.32626793, -0.4110288, -0.19892833, -1.7815746, -0.00042758632, -0.2678746, -0.01717683, -0.006142891, -0.00211918, -6.373136e-05, -1.2622395e-06, -0.32279074, -0.013750093, -0.0031671221, -0.002504761, -0.005992792, -0.01695874, -0.06656144, -3.5633554, -0.2530675, -1.2503564, -0.1465933, -0.3358638, -0.09707051, -1.7509562, -5.3837026e-05, -2.114061, -0.0046506952, -0.000939227, -0.0027752453, -5.4432137e-05, -3.9055147e-05, -0.41890898, -0.004216342, -0.021618903, -0.0017680808, -0.0020973769, -0.00048906606, -0.0031946837, -0.007064844, -0.039907083, -0.21091937, -0.0007605586, -9.251094e-06, -0.3586431, -0.013506832, -0.21099076, -0.022783386, -0.17471427, -0.018754154, -0.001184104, -0.0047504078, -0.00060357206, -0.0036046717, -0.008608652, -0.0153735215, -0.0033826425, -0.07466187, -0.0014634858, -0.0003936597, -0.0007784558, -0.0010558084, -0.00035335214, -4.0963423e-05, -9.925743e-05, -0.00012691665, -0.00012191365, -0.00022278015, -0.00018641399, -9.771052e-05, -0.0009939353, -0.035085298, -5.503005e-05, -0.12648386, -0.097540885, -0.13118157, -0.0064307363, -0.00025205011, -1.2889563, -0.39093184, -3.0272737, -0.46449795, -1.8117366, -0.5981665, -0.19852085, -0.015278437, -0.008333643, -0.0029502085, -0.12480072, -0.14553724, -0.032566633, -0.008720963, -0.053339902, -0.015727367, -0.08716108, -0.055240195, -0.05780775, -0.011896365, -0.0007765466, -0.0019494982, -0.0019669929, -0.010130603, -0.0074686073, -0.0031778247, -0.00042770643, -0.008683506, -0.106462225, -0.59105206, -1.4336293, -0.023745341, -0.044224054, -0.061257374, -0.0021620067, -1.1398727e-05, -1.6454525, -0.15440725, -0.23597474, -0.03157108, -0.5394105, -0.008382448, -0.017391264, -0.34229273, -0.003454055, -1.0084622e-05, -1.8369828, -0.37332955, -0.1457387, -0.032569956, -0.017663134, -0.0097629605, -0.19483279, -0.0067652953, -0.008588572, -0.22631922, -0.0010182201, -2.693682e-06, -0.79373455, -0.048740774, -0.9527528, -0.22202775, -0.12990399, -0.026132267, -0.012021113, -1.7230699, -0.044153165, -0.31241363, -0.007301258, -0.2561155, -0.0056017907, -2.1571832, -0.017048651, -3.762558e-05, -1.0123725, -0.097269736, -0.32132506, -0.029381188, -0.82493913, -0.0656446, -0.060139064, -1.5165832, -0.019473616, -0.46233082, -0.01641867, -0.36416256, -0.02452868, -0.7676422, -0.0019246541, -1.3422466e-05, -0.36510357, -0.01633645, -0.05526275, -0.012333649, -0.08498563, -0.014086561, -0.016767673, -0.5547051, -0.001525985, -3.142485e-05, -1.5864248, -0.056126088, -0.09184993, -0.009319463, -0.017687282, -0.0076488964, -0.016274413, -0.360017, -0.0013322888, -6.1516675e-06, -1.0583724, -0.051859066, -0.5202871, -0.039240673, -0.20956, -0.008636789, -0.005616835, -0.3072004, -0.0017041331, -2.0966954e-06, -1.0884897, -0.035034243, -0.14211468, -0.023431849, -0.09623835, -0.0036844728, -0.0010982363, -0.22439301, -0.00023392851, -1.688045e-05, -1.0643411, -0.01848162, -0.011504557, -0.0029410634, -0.059597243, -0.0035209262, -0.0012843031, -0.14202634, -0.0008569562, -1.6165199e-05, -0.77719045, -0.01171163, -0.104018986, -0.0045378837, -0.14757422, -0.006341719, -0.0017505842, -0.30023092, -0.00043223824, -1.4854846e-05, -1.1472299, -0.01646896, -0.0069958144, -0.0015421616, -0.5422567, -0.03657863, -0.005649322, -0.29656506, -0.00017592176, -5.675771e-06], "top_logprobs": null, "text_offset": [5611, 5611, 5612, 5619, 5620, 5624, 5627, 5629, 5636, 5637, 5641, 5644, 5646, 5655, 5657, 5666, 5668, 5677, 5679, 5688, 5690, 5699, 5705, 5706, 5712, 5714, 5723, 5724, 5727, 5730, 5732, 5734, 5736, 5738, 5740, 5742, 5751, 5753, 5762, 5764, 5773, 5775, 5784, 5790, 5791, 5797, 5799, 5808, 5809, 5812, 5815, 5817, 5818, 5819, 5821, 5823, 5825, 5827, 5829, 5838, 5839, 5842, 5845, 5847, 5849, 5852, 5855, 5857, 5859, 5860, 5861, 5862, 5864, 5867, 5870, 5873, 5875, 5878, 5881, 5884, 5886, 5888, 5889, 5890, 5891, 5893, 5896, 5899, 5902, 5904, 5906, 5909, 5911, 5920, 5921, 5924, 5927, 5929, 5931, 5934, 5937, 5940, 5942, 5944, 5945, 5946, 5947, 5949, 5952, 5955, 5958, 5960, 5963, 5966, 5969, 5971, 5973, 5974, 5975, 5976, 5978, 5981, 5984, 5987, 5989, 5993, 5995, 5997, 5999, 6008, 6009, 6012, 6015, 6017, 6019, 6021, 6023, 6025, 6027, 6036, 6037, 6040, 6043, 6045, 6046, 6047, 6049, 6051, 6053, 6055, 6057, 6066, 6067, 6070, 6073, 6075, 6077, 6079, 6081, 6083, 6085, 6094, 6096, 6105, 6107, 6116, 6118, 6127, 6128, 6131, 6134, 6136, 6138, 6140, 6142, 6143, 6145, 6154, 6156, 6165, 6167, 6176, 6178, 6187, 6188, 6191, 6194, 6196, 6198, 6200, 6202, 6203, 6205, 6214, 6215, 6218, 6221, 6223, 6225, 6227, 6229, 6231, 6233, 6242, 6243, 6246, 6249, 6251, 6253, 6255, 6257, 6259, 6261, 6270, 6271, 6274, 6277, 6279, 6281, 6283, 6285, 6287, 6289, 6298, 6299, 6302, 6305, 6307, 6309, 6311, 6313, 6315, 6317, 6326, 6327, 6330, 6333, 6335, 6337, 6339, 6341, 6343, 6345, 6354, 6355, 6358, 6361, 6363, 6365, 6367, 6369, 6371, 6373, 6382, 6383, 6386]}, "finish_reason": "length"}, {"text": "(connect_strokes (transform (repeat_transform (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) 2 (transform_matrix 1 0 (/ (* pi 2) 10) 0)) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 10 (transform_matrix 1 (/ (* 2 pi) 10) 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " 2", " (", "transform", "_", "mat", "rix", " 1", " 0", " (/", " (*", " pi", " 2", ")", " 10", ")", " 0", "))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 10", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 10", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0045313565, -0.07702692, -0.069381915, -0.00016066022, -0.0010129693, -0.00010176362, -0.012609764, -1.3612145, -0.119525135, -0.85028124, -0.001958929, -0.00054876425, -0.0051521612, -0.013354234, -2.1809452, -0.23440777, -1.7771839, -0.40391347, -1.2111276, -0.00013597934, -0.63659763, -0.009859269, -0.003828664, -0.0042518373, -6.790459e-05, -1.7400124e-06, -0.41391844, -0.012827509, -0.0013200544, -0.0007815553, -0.0010697717, -0.041823216, -0.084240876, -0.025932709, -0.0027392048, -0.0003816121, -0.9628731, -0.07860708, -0.0025803526, -0.00085993914, -0.0039619193, -0.017946307, -0.07899125, -0.42614898, -0.0024229607, -6.5092986e-06, -1.250476, -0.16736129, -0.25444227, -0.096848205, -0.023142304, -0.61125785, -0.08979114, -0.15120704, -0.0020052164, -1.0444119e-05, -0.93952763, -0.25187024, -0.3072774, -0.05872798, -0.034904063, -3.2374182, -0.03284062, -0.0019717705, -0.0023756989, -3.9055147e-05, -2.3360508e-06, -0.09664236, -1.4208119, -3.8031929, -0.23654513, -2.6686366, -0.9874029, -0.019726839, -5.806037, -0.023694625, -0.05991849, -0.25445005, -0.031938132, -0.81056887, -0.0005827584, -0.0001351458, -0.003144877, -0.008642022, -0.051444817, -0.050385613, -1.045191, -1.676031e-05, -0.362333, -0.0005823989, -7.744129e-05, -7.636654e-05, -2.0935424e-05, -1.6642034e-05, -0.060878363, -0.00054459006, -0.0062912125, -0.00034369153, -0.0002601591, -0.00028114737, -0.00010998996, -0.00015028719, -3.7148744e-05, -0.00025932747, -4.838501e-06, -1.1159372e-05, -0.013679331, -0.0019090668, -0.026030893, -0.010637536, -0.0896243, -0.012343184, -0.000159348, -0.0013894703, -0.00019440286, -0.0011490745, -0.0025673832, -0.00482072, -0.020603789, -0.039743043, -0.0014857479, -0.00014683108, -0.00010271822, -0.00020513259, -0.00016924512, -1.9503042e-05, -4.29881e-05, -8.054166e-05, -6.9690854e-05, -6.122609e-05, -3.142485e-05, -5.467149e-05, -0.00039163127, -0.00019511623, -5.197998e-06, -1.4412192, -0.0010535406, -4.3108244e-05, -0.00014945272, -1.4377073e-05, -6.9861335e-06, -0.006608083, -0.3520121, -0.014694755, -0.1319364, -0.0017411498, -0.0010825412, -0.0084215775, -0.00060858356, -0.00154849, -0.0046038697, -0.04490255, -0.024283946, -0.08833732], "top_logprobs": null, "text_offset": [5611, 5611, 5612, 5619, 5620, 5624, 5627, 5629, 5638, 5640, 5646, 5647, 5656, 5658, 5667, 5669, 5678, 5680, 5689, 5695, 5696, 5702, 5704, 5713, 5714, 5717, 5720, 5722, 5724, 5726, 5728, 5730, 5732, 5741, 5742, 5745, 5748, 5750, 5752, 5754, 5756, 5758, 5760, 5769, 5770, 5773, 5776, 5778, 5780, 5782, 5784, 5786, 5788, 5797, 5798, 5801, 5804, 5806, 5808, 5810, 5812, 5814, 5816, 5818, 5827, 5828, 5831, 5834, 5836, 5838, 5841, 5844, 5847, 5849, 5850, 5853, 5854, 5856, 5858, 5860, 5866, 5867, 5876, 5878, 5887, 5889, 5898, 5904, 5905, 5911, 5913, 5922, 5923, 5926, 5929, 5931, 5932, 5933, 5935, 5937, 5939, 5941, 5943, 5952, 5953, 5956, 5959, 5961, 5963, 5966, 5969, 5971, 5973, 5974, 5975, 5976, 5978, 5981, 5984, 5987, 5989, 5992, 5995, 5998, 6000, 6002, 6003, 6004, 6005, 6007, 6010, 6013, 6016, 6018, 6020, 6023, 6026, 6028, 6037, 6038, 6041, 6044, 6046, 6049, 6052, 6054, 6057, 6058, 6061, 6062, 6064, 6066, 6069, 6069]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0))) (repeat_transform (transform (transform", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform"], "token_logprobs": [-0.0045313565, -0.07619417, -0.07909788, -0.00013109177, -0.00096500135, -7.899194e-05, -0.018034363, -0.3962047, -2.319758e-05, -0.00033319838, -5.0260765e-05, -0.01430106, -1.8150213, -3.5357807e-05, -0.00027780765, -3.6482897e-06, -0.0038986122, -1.7795154, -4.3108244e-05, -0.00025407854, -8.296486e-06, -0.009587161, -0.27290535, -0.060989857, -0.53808784, -3.6670972e-05, -5.6460554e-05, -0.001054376, -7.291136e-05, -0.03289347, -7.1062755e-06, -0.0050151516, -5.79217e-06, -2.7251614e-05, -0.00012346054, -0.00027923906, -1.2708151e-05, -1.9263687e-05, -3.4089344e-06, 0, -0.0027773974, -0.00021419431, -0.0036035948, -0.00022659577, -1.9621319e-05, -0.0015435931, -0.00054494676, -0.0002372673, -2.582111e-05, -6.635395e-05, -7.8752586e-05, -0.0011021711, -0.00079121965, -0.00047749997, -0.8227012, -0.0005151868, -7.5892516e-05, -0.04106321, -9.7114484e-05, -1.9028084e-05, -1.1753544e-05, -3.170517e-06, -3.2906587e-06, -0.0008955563, -0.00074749446, -0.00025228853, -0.00035108434, -9.425254e-05, -2.5464416e-05, -0.00028472362, -6.0395385e-05, -0.00026802876, -8.7457636e-05, -2.665838e-05, -0.0010719212, -5.24084e-05, -0.0017409134, -9.966347e-06, -9.055464e-07, -0.22640891, -0.021532537, -0.00015720223, -0.00018224075, -5.562516e-05, -0.0012828698, -0.029869223, -0.12606348, -1.8856719, -0.15148698, -4.966285e-05, -0.37502968, -0.0013612357, -5.991855e-05, -8.852958e-05, -7.224551e-06, -1.8841804e-07, -0.2947738, -0.0072962143, -0.00024406594, -9.461016e-05, -0.029190984, -0.00036515848, -3.333313e-05, -0.000179498, -1.0084622e-05, -1.44972155e-05, -2.5457559, -0.44430837, -0.01852728, -0.0015949935, -0.0140582705, -0.002849545, -0.262118, -0.06449215, -0.36976105, -6.5092986e-06, -3.3928238e-05, -0.0002824577, -4.4181128e-05, -0.008983752, -4.4818075e-06, -0.0028400405, -1.0204763e-05, -6.031526e-06, -6.5092986e-06, -3.154219e-05, -1.0920954e-05, -2.1529595e-05, -3.051303e-06, -1.8841804e-07, -0.0012895558, -4.847264e-05, -0.0010079559, -0.00010188283, -1.9741461e-05, -0.0005985634, -0.00015052655, -8.8051806e-05, -8.5358415e-06, -5.5385808e-05, -3.8577375e-05, -0.0003131028, -0.00014468438, -0.00010748563, -0.48017636, -7.064452e-05, -2.1529595e-05, -0.0040707802, -2.1768952e-05, -9.370307e-06, -2.3556138e-05, -6.827632e-08, -3.076318e-07, -0.0007328186, -0.00011225586, -0.00024429872, -8.149626e-05, -9.878341e-05, -2.5105857e-05, -0.00046706502, -6.122609e-05, -0.00012429406, -5.467149e-05, -0.00014683108, -0.0011891765, -4.7041198e-05, -0.00046658723, -5.0778563e-06, -4.277735e-07, -1.9634144, -0.4384207, -0.00040391632, -9.222505e-05, -0.13118789, -0.0063207243, -1.667201, -0.00012250594, -0.000120481265, -0.0017317765, -0.00104668, -0.0071580713, -0.052894626, -0.028684566, -1.0204763e-05, -0.14164299, -0.00014754539, -1.8907942e-05, -3.8577375e-05, -2.693682e-06, -7.8540467e-07, -0.023491953, -0.00013001703, -0.003965093, -0.00011523515, -0.00013609948, -8.185389e-05, -1.7595703e-05, -4.2153635e-05, -2.272356e-05, -0.00011475737, -1.7400124e-06, -3.076318e-07, -0.007971346, -0.00019046802, -0.0023762968, -0.0019233399, -0.05141256, -0.00618577, -5.145473e-05, -0.00027017642, -0.00011249522, -5.0140625e-05, -0.0003288449, -0.00015589187, -0.00014897496, -0.0036239328, -0.00012274434, -4.0603925e-05, -8.471396e-05, -7.279122e-05, -0.0001296622, -1.2351458e-05, -6.0276172e-05, -6.9810994e-05, -1.843017e-05, -2.2245786e-05, -7.937927e-06, -8.03023e-05, -0.0002781662, -4.8949474e-05, -1.1278585e-05, -1.4781367, -0.00031453517, -1.0800813e-05, -3.7863996e-05, -1.1039229e-05, -1.2708151e-05, -0.001556907, -9.365555e-05, -7.9349564e-05, -0.000113805574, -9.9616926e-05, -2.4032974e-05, -0.0006076289, -6.528106e-05, -0.00013633883, -7.708367e-05, -0.19076532, -0.14255011, -0.34907934, -9.878341e-05, -4.048565e-05, -0.0015703989, -0.0014639635, -0.010862925, -0.015717499], "top_logprobs": null, "text_offset": [5611, 5611, 5612, 5619, 5620, 5624, 5627, 5629, 5636, 5637, 5641, 5644, 5646, 5653, 5654, 5658, 5661, 5663, 5670, 5671, 5675, 5678, 5680, 5689, 5691, 5697, 5698, 5707, 5709, 5718, 5724, 5725, 5728, 5735, 5736, 5740, 5742, 5751, 5752, 5755, 5758, 5760, 5762, 5764, 5765, 5766, 5767, 5770, 5772, 5773, 5774, 5776, 5779, 5782, 5785, 5787, 5789, 5792, 5794, 5796, 5805, 5806, 5809, 5812, 5814, 5817, 5820, 5822, 5825, 5826, 5828, 5829, 5831, 5833, 5835, 5837, 5846, 5847, 5850, 5853, 5855, 5857, 5859, 5861, 5863, 5865, 5874, 5876, 5885, 5891, 5892, 5898, 5900, 5909, 5910, 5913, 5916, 5918, 5920, 5922, 5924, 5926, 5928, 5937, 5938, 5941, 5944, 5946, 5948, 5950, 5952, 5955, 5957, 5966, 5968, 5974, 5975, 5984, 5986, 5995, 6001, 6002, 6005, 6012, 6013, 6017, 6019, 6028, 6029, 6032, 6035, 6037, 6039, 6041, 6042, 6043, 6044, 6047, 6049, 6050, 6051, 6053, 6056, 6059, 6062, 6064, 6066, 6069, 6071, 6073, 6082, 6083, 6086, 6089, 6091, 6094, 6097, 6099, 6102, 6103, 6105, 6106, 6108, 6110, 6112, 6114, 6123, 6124, 6127, 6130, 6132, 6134, 6136, 6138, 6141, 6143, 6149, 6150, 6159, 6161, 6170, 6172, 6181, 6187, 6188, 6194, 6196, 6205, 6206, 6209, 6212, 6214, 6215, 6216, 6218, 6220, 6222, 6224, 6226, 6235, 6236, 6239, 6242, 6244, 6246, 6249, 6252, 6254, 6256, 6257, 6258, 6259, 6261, 6264, 6267, 6270, 6272, 6275, 6278, 6281, 6283, 6285, 6286, 6287, 6288, 6290, 6293, 6296, 6299, 6301, 6303, 6306, 6308, 6310, 6319, 6320, 6323, 6326, 6328, 6331, 6334, 6336, 6339, 6340, 6342, 6343, 6345, 6347, 6350, 6352, 6358, 6359, 6368, 6370, 6379, 6381]}, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0045313565, -0.07903408, -0.07509401, -0.00016769636, -0.0005148311, -0.0001395556, -0.011111271, -1.2818851, -0.12349562, -0.8405367, -0.77291375, -5.6818186e-05, -1.557994, -0.004371144, -0.0004731456, -0.0003176346, -6.182308e-05, -6.827632e-08, -0.5756248, -0.022583522, -0.002255256, -0.0003575263, -0.00021813008, -0.0019780407, -0.0029971374, -0.0020334062, -4.3108244e-05, -1.9621319e-05, -1.1901478, -0.1086931, -0.006810302, -0.0010499014, -0.0014219402, -0.013354717, -0.5112946, -0.121784285, -0.6044809, -0.1645469, -5.24084e-05, -0.6332906, -0.0022284933, -0.000109155495, -0.00013693394, -2.6419024e-05, -5.197998e-06, -0.33262125, -0.017367732, -0.00045907334, -0.00020298682, -0.0004478621, -0.00047410018, -7.291136e-05, -0.00041232194, -1.2351458e-05, -4.1232483e-06, -0.69017076, -0.032223523, -0.00024084355, -0.0001476646, -0.031802576, -0.01631373, -0.04741489, -0.06229954, -0.00013836258, -0.00084681687, -6.802381e-05], "top_logprobs": null, "text_offset": [5611, 5611, 5612, 5619, 5620, 5624, 5627, 5629, 5638, 5640, 5649, 5655, 5656, 5662, 5664, 5673, 5674, 5677, 5680, 5682, 5684, 5686, 5688, 5690, 5692, 5701, 5702, 5705, 5708, 5710, 5712, 5714, 5716, 5718, 5720, 5729, 5731, 5740, 5746, 5747, 5753, 5755, 5764, 5765, 5768, 5771, 5773, 5775, 5777, 5779, 5781, 5783, 5792, 5793, 5796, 5799, 5801, 5803, 5805, 5807, 5810, 5810, 5810, 5810, 5810, 5810]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4.25 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0045313565, -0.07497797, -0.07316292, -0.0001351458, -0.001216449, -0.00012643983, -0.012045723, -0.3435487, -2.28437e-05, -0.00026814893, -4.763911e-05, -0.018094204, -0.22245467, -0.10252304, -0.5766699, -9.846204e-06, -3.953198e-05, -0.0014028978, -0.00014730697, -0.039293986, -5.912312e-06, -0.007998806, -1.2946569e-05, -1.4736571e-05, -3.7983213e-05, -0.00022927843, -1.1159372e-05, -1.688045e-05, -4.2433903e-06, -6.827632e-08, -0.0035222422, -0.0004788141, -0.0040344535, -0.00024406594, -3.154219e-05, -0.0012923004, -0.001214659, -0.00035335214, -3.0826937e-05, -0.0001419407, -0.00011118111, -0.0027401613, -0.00070019584, -0.00035382994, -0.6564541, -0.00051852845, -1.9741461e-05, -0.05898294, -7.744129e-05, -1.9263687e-05, -5.675771e-06, -1.3823812e-06, -4.6010214e-06, -0.0012230111, -0.00021586417, -0.0001678165, -0.00027613778, -8.8051806e-05, -2.0218295e-05, -0.00033856556, -5.145473e-05, -0.00023702794, -7.541475e-05, -2.2604345e-05, -0.00070460845, -5.4075444e-05, -0.0041505606, -1.0920954e-05, 0, -0.3383577, -0.040327806, -0.00020918754, -0.00025920733, -0.00053552364, -0.009662207, -0.059186988, -0.15399097, -0.5489841, -3.678925e-05, -0.000411847, -0.002940585, -0.0009988885, -0.023781532, -7.584048e-06, -0.003683338, -1.843017e-05, -1.3661821e-05, -3.883893e-06, -7.159913e-05, -1.402038e-05, -2.4510746e-05, -7.4639065e-06, -7.8540467e-07, -0.0031436821, -0.00018999024, -0.0011999194, -0.00012560723, -2.9519388e-05, -0.0006248053, -0.00056224136, -0.000110942696, -2.033751e-05, -7.6252014e-05, -6.38515e-05, -0.0005668924, -0.0003777965, -0.00015028719, -1.1735989, -0.0015240738, -1.9860674e-05, -0.022575231, -5.169127e-05, -1.5805701e-05, -3.8103353e-05, -3.7148744e-05, -1.8601542e-06, -0.0017177446, -0.00016817037, -0.00012739444, -0.00017282138, -8.709908e-05, -3.201996e-05, -0.00026182804, -7.541475e-05, -0.00017735413, -6.289782e-05, -0.0038636073, -0.00063291617, -5.8367896e-05, -0.00026325852, -7.1062755e-06, -3.076318e-07, -0.47318846, -0.16090228, -0.13692473, -0.001224205, -7.100402e-05, -0.00039449416, -0.002373966, -0.008844769, -0.46933872, -3.0826937e-05, -1.676031e-05, -0.00070079096, -0.00018975277, -0.020094035, -0.010840029, -0.03954782, -1.2828294e-05, -0.2732093, -0.00019297047, -1.4377073e-05, -2.558363e-05, -2.2159093e-06, -1.8190814e-05, -0.012143219, -9.270188e-05, -0.0052180085, -9.985534e-05, -0.00010939391, -8.3165185e-05, -2.9280032e-05, -3.965026e-05, -1.3542607e-05, -7.255186e-05, -9.055464e-07, -7.224551e-06, -0.0030068834, -0.0001607785, -0.0024693254, -0.0015459819, -0.037677504, -0.00850267, -3.452334e-05, -0.00048227116, -7.958892e-05, -7.779892e-05, -0.00028913716, -0.0005859189, -0.00017711478, -0.0029597152, -0.00016054008, -5.956092e-05, -6.361214e-05, -9.806815e-05, -0.00014456424, -6.746778e-06, -5.061746e-05, -4.811501e-05, -3.2973632e-05, -2.6180607e-05, -9.370307e-06, -5.693833e-05, -0.00026886605, -0.00014122359, -4.0040345e-06, -0.49800718, -7.899194e-05, -1.3900239e-05, -1.1278585e-05, -3.883893e-06, -2.9519388e-05, -0.00032610405, -6.373136e-05, -0.0001033124, -0.00010045139, -0.00010367096, -2.4152187e-05, -0.00043820243, -6.4446605e-05, -8.5429216e-05, -0.00010176362, -0.015573039, -0.019946447, -0.11781564, -0.07231681, -0.00034822334, -0.0007136739], "top_logprobs": null, "text_offset": [5611, 5611, 5612, 5619, 5620, 5624, 5627, 5629, 5636, 5637, 5641, 5644, 5646, 5655, 5657, 5663, 5664, 5673, 5675, 5684, 5690, 5691, 5694, 5701, 5702, 5706, 5708, 5717, 5718, 5721, 5724, 5726, 5728, 5730, 5731, 5732, 5733, 5736, 5738, 5739, 5740, 5742, 5745, 5748, 5751, 5753, 5755, 5758, 5760, 5762, 5771, 5772, 5775, 5778, 5780, 5783, 5786, 5788, 5791, 5792, 5794, 5795, 5797, 5799, 5801, 5803, 5812, 5813, 5816, 5819, 5821, 5823, 5825, 5827, 5829, 5831, 5840, 5842, 5848, 5849, 5858, 5860, 5869, 5875, 5876, 5879, 5886, 5887, 5891, 5893, 5902, 5903, 5906, 5909, 5911, 5913, 5915, 5916, 5917, 5918, 5921, 5923, 5924, 5925, 5927, 5930, 5933, 5936, 5938, 5940, 5943, 5945, 5947, 5956, 5957, 5960, 5963, 5965, 5968, 5971, 5973, 5976, 5977, 5979, 5980, 5982, 5984, 5986, 5988, 5997, 5998, 6001, 6004, 6006, 6007, 6009, 6011, 6013, 6015, 6018, 6020, 6026, 6027, 6036, 6038, 6047, 6049, 6058, 6064, 6065, 6071, 6073, 6082, 6083, 6086, 6089, 6091, 6092, 6093, 6095, 6097, 6099, 6101, 6103, 6112, 6113, 6116, 6119, 6121, 6123, 6126, 6129, 6131, 6133, 6134, 6135, 6136, 6138, 6141, 6144, 6147, 6149, 6152, 6155, 6158, 6160, 6162, 6163, 6164, 6165, 6167, 6170, 6173, 6176, 6178, 6180, 6183, 6185, 6187, 6196, 6197, 6200, 6203, 6205, 6208, 6211, 6213, 6216, 6217, 6219, 6220, 6222, 6224, 6227, 6227, 6227, 6227, 6227]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "transform"], "token_logprobs": [-0.0045313565, -0.07262825, -0.06890849, -0.000111657944, -0.00092150713, -0.0001345479, -0.009181339, -1.3681262, -0.120556034, -0.81279325, -0.0013484035, -0.0005473328, -0.0044012577, -0.014893411, -0.20951495, -1.771398e-05, -0.026264796, -9.490449e-06, -6.158372e-05, -0.000197384, -0.0025707297, -5.0022347e-05, -0.00014873935, -2.5225998e-05, -1.8841804e-07, -0.012727475, -0.0013250668, -0.01797404, -0.0017755429, -8.3404535e-05, -0.0042766193, -0.0030115466, -0.0014011078, -5.4194657e-05, -0.00024608686, -0.0013541922, -3.9047077, -0.065024905, -0.029147351, -1.3612223, -0.06940363, -0.00019309061, -1.1281297, -0.0025575254, -5.896488e-05, -0.000104267005, -1.9765537e-06, -2.5744682e-06, -0.013761877, -0.034182366, -0.0035853486, -0.0150712915, -0.0004009333, -0.0001568446, -0.0015914717, -0.00026683856, -0.013110404, -0.021467194, -0.00035490093, -0.004114109, -0.0044763926, -0.02705465, -4.477904e-05, -5.460492e-07, -0.5548738, -0.041913398, -0.0032526893, -0.0021939648, -0.0017165507, -0.0298306, -0.48594585, -0.19281065, -0.7158398, -0.21849117, -7.899194e-05, -0.42488387, -0.0033483133, -0.0002303513, -0.00020465575, -2.5225998e-05, -9.055464e-07, -0.34584165, -0.014594228, -0.00237773, -0.00045704586, -0.00025694142, -0.0015325489, -8.626461e-05, -0.00055365276, -4.144026e-05, -3.5717305e-05, -1.0384982, -0.013053215, -0.06325217, -0.0018271959, -0.0018552606, -0.00065814523, -0.0050142524, -0.016853986, -0.05157642, -0.058693405, -7.827482e-05, -0.0009743682, -0.00015743972, -0.0043978444, -0.60496825], "top_logprobs": null, "text_offset": [5611, 5611, 5612, 5619, 5620, 5624, 5627, 5629, 5638, 5640, 5646, 5647, 5656, 5658, 5667, 5673, 5674, 5677, 5684, 5685, 5689, 5691, 5700, 5701, 5704, 5707, 5709, 5711, 5713, 5714, 5715, 5716, 5719, 5721, 5722, 5723, 5725, 5728, 5731, 5734, 5736, 5738, 5741, 5743, 5745, 5754, 5755, 5758, 5761, 5763, 5766, 5769, 5771, 5774, 5775, 5777, 5778, 5780, 5782, 5784, 5786, 5795, 5796, 5799, 5802, 5804, 5806, 5808, 5810, 5812, 5814, 5823, 5825, 5834, 5840, 5841, 5847, 5849, 5858, 5859, 5862, 5865, 5867, 5869, 5871, 5873, 5875, 5877, 5886, 5887, 5890, 5893, 5895, 5896, 5897, 5899, 5901, 5903, 5906, 5906, 5906, 5906, 5906, 5906, 5906, 5906]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0045313565, -0.08186343, -0.076454125, -0.000111778085, -0.0010945352, -0.00017437205, -0.012833124, -0.36761087, -2.4390605e-05, -0.00034929716, -5.6818186e-05, -0.0139793875, -0.23645262, -0.089255966, -0.9329238, -0.3054172, -2.3675353e-05, -0.11569684, -0.0014500546, -9.65175e-05, -4.29881e-05, -2.1051823e-05, -1.8841804e-07, -0.102317944, -0.005601311, -0.00022891893, -0.00013931624, -0.00011237507, -0.0025555526, -9.0198504e-05, -0.0011351112, -4.1080762e-05, -2.3360508e-06, -0.13948119, -0.014806115, -0.00014778474, -6.9810994e-05, -0.00026027925, -0.009805878, -0.07695469, -0.12149705, -0.39315873, -1.1278585e-05, -2.8565719e-05, -0.0014944649, -4.763911e-05, -0.024619518, -9.966347e-06, -0.0031872103, -9.925743e-05, -2.2484204e-05, -1.37819625e-05, -8.268835e-05, -8.296486e-06, -1.5925843e-05, -2.2159093e-06, -3.076318e-07, -0.0013289463, -5.848711e-05, -0.002870706, -0.0002410829, -2.2126573e-05, -0.0013769338, -0.0006388203, -0.00017556225, -1.855031e-05, -7.6252014e-05, -0.0001319253, -0.003400705, -0.0010577176, -0.00064681104, -0.35777602, -0.00011487751, -2.7490969e-05, -0.013307299, -5.0976956e-05, -1.5448071e-05, -9.72699e-06, -5.460492e-07, -1.3900239e-05, -0.0008007028, -0.0002389362, -0.00026743364, -0.000363131, -0.00012453248, -2.1529595e-05, -0.00033963655, -7.1481794e-05, -0.00011440349, -5.9321566e-05, -0.00062826235, -0.00048334498, -7.6964454e-05, -0.000113328744, -6.3900848e-06, -3.6482897e-06, -0.2183427, -0.013709664, -0.00016483347, -7.958892e-05, -0.0033077055, -0.0061612427, -0.27252397, -0.00012000537, -0.0009017598, -0.0039115977, -0.004177733, -0.017413765, -0.06310177, -0.05375921, -1.6165199e-05, -0.21967676, -0.0006069118, -2.462996e-05, -1.7119806e-05, -5.197998e-06, -3.170517e-06, -0.021655874, -0.000167457, -0.006551085, -0.000103910315, -0.00013407106, -0.0001033124, -6.015603e-05, -0.00010820183, -2.6298881e-05, -8.376217e-05, -1.9765537e-06, -3.076318e-07, -0.014732256, -0.0016571434, -0.014447815, -0.005288654, -0.17960007, -0.026444038, -0.00010951312, -0.0011769431, -0.00016459411, -0.00015755986, -0.002779071, -0.0015123116, -0.00068468647, -0.021220524, -0.000284366, -4.3347598e-05, -7.517727e-05, -0.00015493727, -0.00018331176, -1.0444119e-05, -5.24084e-05, -5.0022347e-05, -3.357061e-05, -0.0001118973, -2.4390605e-05, -6.170386e-05, -0.00095533516, -8.447461e-05, -1.5567284e-05, -1.109724, -0.0005591391, -3.3450466e-05, -1.8310955e-05, -3.058758e-05, -2.8138238e-06, -0.0057513523, -0.0007294817, -0.00019595257, -0.00039950278, -0.00018653227, -3.3212986e-05, -0.0010635663, -0.00010784233, -0.00023237972, -0.0003726696, -0.060754396, -0.040909644, -0.11382595, -0.1380982], "top_logprobs": null, "text_offset": [5611, 5611, 5612, 5619, 5620, 5624, 5627, 5629, 5636, 5637, 5641, 5644, 5646, 5655, 5657, 5666, 5672, 5673, 5679, 5681, 5690, 5691, 5694, 5697, 5699, 5701, 5703, 5705, 5707, 5709, 5718, 5719, 5722, 5725, 5727, 5729, 5731, 5733, 5735, 5737, 5746, 5748, 5754, 5755, 5764, 5766, 5775, 5781, 5782, 5785, 5792, 5793, 5797, 5799, 5808, 5809, 5812, 5815, 5817, 5819, 5821, 5822, 5823, 5824, 5827, 5829, 5830, 5831, 5833, 5836, 5839, 5842, 5844, 5846, 5849, 5851, 5853, 5862, 5863, 5866, 5869, 5871, 5874, 5877, 5879, 5882, 5883, 5885, 5886, 5888, 5890, 5892, 5894, 5903, 5904, 5907, 5910, 5912, 5914, 5916, 5918, 5921, 5923, 5929, 5930, 5939, 5941, 5950, 5952, 5961, 5967, 5968, 5974, 5976, 5985, 5986, 5989, 5992, 5994, 5995, 5996, 5998, 6000, 6002, 6004, 6006, 6015, 6016, 6019, 6022, 6024, 6026, 6029, 6032, 6034, 6036, 6037, 6038, 6039, 6041, 6044, 6047, 6050, 6052, 6055, 6058, 6061, 6063, 6065, 6066, 6067, 6068, 6070, 6073, 6076, 6079, 6081, 6083, 6086, 6088, 6090, 6099, 6100, 6103, 6106, 6108, 6111, 6114, 6116, 6119, 6120, 6122, 6123, 6125, 6127, 6130, 6130, 6130]}, "finish_reason": "stop"}]}, {"id": "cmpl-51Lz8tr37I3YDB3TiUxOzf3bfAyg1", "object": "text_completion", "created": 1651004522, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0060765636, -0.1087329, -0.09007587, -0.00020155631, -0.00056379114, -7.8634315e-05, -0.0031183874, -0.18737103, -7.744129e-05, -0.00014909416, -0.00010176362, -0.0022336906, -0.18587655, -0.0146200545, -0.13790223, -1.7595703e-05, -1.0561456e-05, -0.0006213445, -4.6684505e-05, -0.020869048, -9.012677e-06, -0.0038714458, -6.5092986e-06, -1.0920954e-05, -6.766711e-05, -0.00015457776, -1.0561456e-05, -3.2855354e-05, -1.022884e-06, 0, -0.0021417572, -0.0002338093, -0.0024084407, -0.00022325605, -1.688045e-05, -0.0021311843, -0.0010433393, -0.00062623486, -2.9399247e-05, -0.0002545563, -0.00028376994, -0.0023190016, -0.00050027913, -0.0009688799, -0.37420765, -0.0008429984, -1.9382902e-05, -0.034828212, -3.595572e-05, -2.3795494e-05, -1.5687427e-05, -2.8138238e-06, -3.076318e-07, -0.0005230593, -8.5429216e-05, -0.00013538517, -0.00017627938, -8.5549356e-05, -2.1649737e-05, -0.00031477172, -6.0753944e-05, -0.0002640958, -6.3134365e-05, -4.048565e-05, -0.00017007865, -3.023464e-05, -0.002606767, -1.8601542e-06, -2.3360508e-06, -0.034978997, -0.009083651, -4.6325007e-05, -0.00015553238, -0.00047016633, -0.0006482434, -0.013198158, -0.016598763, -0.07431544, -0.014974059, -2.1529595e-05, -0.115484945, -0.00026910257, -2.8921473e-05, -3.5717305e-05, -9.055464e-07, -4.277735e-07, -0.036485832, -0.003979033, -7.75605e-05, -0.00014468438, -6.408898e-05, -0.000116070536, -2.9041616e-05, -8.3996834e-05, -2.8138238e-06, -8.176345e-06, -0.5507214, -0.011877849, -0.00011213572, -7.768064e-05, -0.0016017996, -0.0008960331, -0.017923247, -3.6074933e-05, -2.7490969e-05, -0.00033868288, -0.00010319318, -0.0018291071, -0.0060201357, -0.0061822343, -2.0696069e-05, -0.50807756, -3.988961e-05, -1.0444119e-05, -3.9055147e-05, -1.7400124e-06, -3.076318e-07, -0.006475073, -0.0002058497, -0.00095378456, -0.00017556225, -0.00013776746, -0.00013097163, -2.8326363e-05, -2.0575926e-05, -4.2870764e-05, -6.0395385e-05, -1.1430258e-06, -6.827632e-08, -0.0017374487, -0.00010235966, -0.002248924, -0.00067305384, -0.0624131, -0.0059643104, -2.1529595e-05, -0.0002303513, -7.779892e-05, -9.413332e-05, -0.0010901208, -0.0002633787, -0.00027673383, -0.0035987485, -0.00027291913, -2.4032974e-05, -7.2672e-05, -0.00020167646, -0.00020250905, -4.361666e-06, -5.145473e-05, -4.3586017e-05, -2.6419024e-05, -4.2511267e-05, -4.4818075e-06, -4.2631407e-05, -0.0005485249, -7.553489e-05, -2.2159093e-06, -0.1788942, -5.8845668e-05, -1.7834122e-05, -1.0323977e-05, -0.00022123232, -3.4403198e-05, -0.00038340397, -6.4921565e-05, -0.00013335768, -9.771052e-05, -8.88872e-05, -1.9143545e-05, -0.000363131, -6.754697e-05, -0.000108796, -0.00012310104, -0.013863585, -0.03315006, -0.21378684, -0.10586709], "top_logprobs": null, "text_offset": [6021, 6021, 6022, 6029, 6030, 6034, 6037, 6039, 6046, 6047, 6051, 6054, 6056, 6065, 6067, 6073, 6074, 6083, 6085, 6094, 6100, 6101, 6104, 6111, 6112, 6116, 6118, 6127, 6128, 6131, 6134, 6136, 6138, 6140, 6141, 6142, 6143, 6146, 6148, 6149, 6150, 6152, 6155, 6158, 6161, 6163, 6165, 6168, 6170, 6172, 6181, 6182, 6185, 6188, 6190, 6193, 6196, 6198, 6201, 6202, 6204, 6205, 6207, 6209, 6211, 6213, 6222, 6223, 6226, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6250, 6252, 6261, 6267, 6268, 6274, 6276, 6285, 6286, 6289, 6292, 6294, 6296, 6298, 6300, 6302, 6304, 6313, 6314, 6317, 6320, 6322, 6324, 6326, 6328, 6331, 6333, 6339, 6340, 6349, 6351, 6360, 6362, 6371, 6377, 6378, 6384, 6386, 6395, 6396, 6399, 6402, 6404, 6405, 6406, 6408, 6410, 6412, 6414, 6416, 6425, 6426, 6429, 6432, 6434, 6436, 6439, 6442, 6444, 6446, 6447, 6448, 6449, 6451, 6454, 6457, 6460, 6462, 6465, 6468, 6471, 6473, 6475, 6476, 6477, 6478, 6480, 6483, 6486, 6489, 6491, 6493, 6496, 6498, 6500, 6509, 6510, 6513, 6516, 6518, 6521, 6524, 6526, 6529, 6530, 6532, 6533, 6535, 6537, 6540, 6540, 6540]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0060765636, -0.1087329, -0.09007574, -0.00020155631, -0.00056379114, -7.8634315e-05, -0.0031183874, -0.18737161, -7.744129e-05, -0.00014909416, -0.00010176362, -0.0022336906, -0.18587719, -0.0146200545, -0.13790223, -1.7595703e-05, -1.0561456e-05, -0.0006213445, -4.6684505e-05, -0.020869048, -9.012677e-06, -0.0038715652, -6.5092986e-06, -1.0920954e-05, -6.766711e-05, -0.00015457776, -1.0561456e-05, -3.2855354e-05, -1.022884e-06, 0, -0.0021417572, -0.0002338093, -0.0024084407, -0.00022325605, -1.688045e-05, -0.0021311843, -0.0010433393, -0.00062623486, -2.9399247e-05, -0.0002545563, -0.00028376994, -0.0023190016, -0.00050027913, -0.0009688799, -0.37420765, -0.0008429984, -1.9382902e-05, -0.034828212, -3.595572e-05, -2.3795494e-05, -1.5687427e-05, -2.8138238e-06, -2.0966954e-06, -0.0005615252, -0.0001097506, -0.00012369896, -0.0002060853, -0.00011928824, -2.2126573e-05, -0.0003176346, -6.48061e-05, -0.00023690966, -6.182308e-05, -4.46589e-05, -0.0001668619, -3.3450466e-05, -0.0014511275, -1.1430258e-06, -4.277735e-07, -0.045046505, -0.008553226, -5.157113e-05, -0.00010080995, -0.0007552496, -0.0008051182, -0.012571255, -0.017161245, -0.07113202, -0.0142294755, -3.3809963e-05, -0.071036026, -0.0003168001, -2.3317722e-05, -3.357061e-05, -9.055464e-07, -3.076318e-07, -0.04162721, -0.0034685298, -8.7932596e-05, -0.00010379017, -9.377476e-05, -6.6949986e-05, -3.3928238e-05, -0.00013347782, -4.3586017e-05, -4.6010214e-06, -0.585241, -0.012632339, -0.00016006512, -0.00011702421, -0.0014582332, -0.00079903204, -0.012963662, -3.7028603e-05, -9.251094e-06, -0.00047290904, -8.7932596e-05, -0.0016296823, -0.0046741115, -0.0040825675, -2.3556138e-05, -1.0066398, -7.3865966e-05, -1.7475562e-05, -1.3306066e-05, -3.170517e-06, -1.7400124e-06, -0.010442308, -0.00013335768, -0.00228925, -0.00021204854, -0.00013443055, -0.000118931544, -2.28437e-05, -2.3317722e-05, -2.319758e-05, -5.7293146e-05, -1.6207987e-06, -8.685972e-05, -0.0018446904, -7.9349564e-05, -0.0025066705, -0.00072494993, -0.03704107, -0.003051964, -1.7475562e-05, -0.0002484729, -7.8872734e-05, -4.144026e-05, -0.003364461, -0.00025407854, -0.00073950086, -0.0044469964, -0.0002917607, -2.6060465e-05, -0.00012727616, -0.00022731101, -6.9573514e-05, -8.176345e-06, -3.9172486e-05, -4.275062e-05, -2.582111e-05, -3.237946e-05, -9.606849e-06, -7.088388e-05, -0.00031429582, -5.8725527e-05, -4.1232483e-06, -0.20562226, -7.136165e-05, -1.9143545e-05, -1.6999666e-05, -1.9263687e-05, -1.9860674e-05, -0.00022492779, -4.430127e-05, -0.00014826158, -5.5269407e-05, -7.350647e-05, -2.2484204e-05, -0.00039270602, -5.6460554e-05, -0.00010045139, -0.00013228387, -0.021736335, -0.03213464, -0.20842302, -0.10299792], "top_logprobs": null, "text_offset": [6021, 6021, 6022, 6029, 6030, 6034, 6037, 6039, 6046, 6047, 6051, 6054, 6056, 6065, 6067, 6073, 6074, 6083, 6085, 6094, 6100, 6101, 6104, 6111, 6112, 6116, 6118, 6127, 6128, 6131, 6134, 6136, 6138, 6140, 6141, 6142, 6143, 6146, 6148, 6149, 6150, 6152, 6155, 6158, 6161, 6163, 6165, 6168, 6170, 6172, 6181, 6182, 6185, 6188, 6190, 6193, 6196, 6198, 6201, 6202, 6204, 6205, 6207, 6209, 6211, 6213, 6222, 6223, 6226, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6250, 6252, 6261, 6267, 6268, 6274, 6276, 6285, 6286, 6289, 6292, 6294, 6296, 6298, 6300, 6302, 6304, 6313, 6314, 6317, 6320, 6322, 6324, 6326, 6328, 6331, 6333, 6339, 6340, 6349, 6351, 6360, 6362, 6371, 6377, 6378, 6384, 6386, 6395, 6396, 6399, 6402, 6404, 6405, 6406, 6408, 6410, 6412, 6414, 6416, 6425, 6426, 6429, 6432, 6434, 6436, 6439, 6442, 6444, 6446, 6447, 6448, 6449, 6451, 6454, 6457, 6460, 6462, 6465, 6468, 6471, 6473, 6475, 6476, 6477, 6478, 6480, 6483, 6486, 6489, 6491, 6493, 6496, 6498, 6500, 6509, 6510, 6513, 6516, 6518, 6521, 6524, 6526, 6529, 6530, 6532, 6533, 6535, 6537, 6540, 6540, 6540]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0060765636, -0.10774987, -0.08786949, -0.0002057305, -0.00073019793, -0.00010080995, -0.0029469815, -0.13307866, -5.6460554e-05, -0.00029319117, -0.00012739444, -0.0026739398, -0.18962759, -0.016257996, -0.1895672, -1.2351458e-05, -9.130952e-06, -0.00061502174, -4.4181128e-05, -0.026372742, -1.42597355e-05, -0.004998437, -5.5556293e-06, -1.5687427e-05, -9.0795475e-05, -0.00017723397, -1.1873685e-05, -2.6893982e-05, -9.055464e-07, 0, -0.0019213097, -0.00019094298, -0.0038877223, -0.0002192039, -1.9860674e-05, -0.0011406023, -0.00073592184, -0.00066840375, -3.988961e-05, -0.00025574747, -0.00043426573, -0.003187689, -0.00057309505, -0.00088314735, -1.4048262, -0.004087417, -2.1889093e-05, -0.07167006, -5.586358e-05, -3.452334e-05, -3.058758e-05, -6.827632e-08, -5.0778563e-06, -0.0024640672, -0.00042281795, -0.00022480857, -0.0005262817, -0.00010271822, -2.4032974e-05, -0.00086829124, -6.325358e-05, -0.00037123813, -0.00013943638, -0.00022003835, -0.00062074844, -3.583558e-05, -0.010144031, -2.4543265e-06, -5.460492e-07, -0.083406754, -0.011050398, -0.00016030073, -0.00025861035, -0.0010346277, -0.0034188866, -0.048394185, -0.04036026, -0.29118615, -0.045295816, -3.9292627e-05, -0.18397988, -0.0005856814, -2.558363e-05, -4.406191e-05, -1.7400124e-06, -1.8841804e-07, -0.06617965, -0.0058410987, -0.0002917607, -0.0002463262, -0.00033498742, -0.00037100064, -6.528106e-05, -0.00023845845, -2.8138238e-06, -4.361666e-06, -0.74775434, -0.06669593, -0.0034754674, -0.00044213727, -0.0069116666, -0.006355455, -0.14317426, -0.00022891893, -0.00035370977, -0.00076234766, -0.0038284247, -0.008563625, -0.03569652, -0.036765113, -4.5613506e-05, -0.5118854, -0.00070437, -2.045765e-05, -1.9741461e-05, -3.883893e-06, -1.6207987e-06, -0.035778373, -0.0004434504, -0.0066644237, -0.0002376249, -0.00014051021, -0.00012346054, -4.9427246e-05, -4.4419543e-05, -3.3809963e-05, -0.00014122359, -3.529076e-06, -6.0753944e-05, -0.0067831776, -0.0003655161, -0.005520334, -0.0023150581, -2.6117098, -0.0233856, -0.00010355082, -0.0010322416, -0.00015410187, -0.00015148021, -0.0019512892, -0.00019010947, -0.0010181, -0.016728763, -0.00014992956, -5.956092e-05, -0.00014492373, -0.0011438247, -0.00022313965, -7.3446927e-06, -6.0276172e-05, -4.751897e-05, -3.5120327e-05, -4.8353428e-05, -1.1991961e-05, -7.314978e-05, -0.00075477175, -0.000102479804, -5.4364154e-06, -0.28018734, -7.458028e-05, -2.2245786e-05, -2.0815281e-05, -7.4639065e-06, -3.5240468e-05, -0.0010245438, -0.00013681567, -0.0001463533, -0.00015589187, -7.016862e-05, -2.4272329e-05, -0.0007495219, -6.0633804e-05, -0.00026182804, -0.00013073228, -0.020265728, -0.039479177, -0.15188572, -0.098088935], "top_logprobs": null, "text_offset": [6021, 6021, 6022, 6029, 6030, 6034, 6037, 6039, 6046, 6047, 6051, 6054, 6056, 6065, 6067, 6073, 6074, 6083, 6085, 6094, 6100, 6101, 6104, 6111, 6112, 6116, 6118, 6127, 6128, 6131, 6134, 6136, 6138, 6140, 6141, 6142, 6143, 6146, 6148, 6149, 6150, 6152, 6155, 6158, 6161, 6163, 6165, 6168, 6170, 6172, 6181, 6182, 6185, 6188, 6190, 6193, 6196, 6198, 6201, 6202, 6204, 6205, 6207, 6209, 6211, 6213, 6222, 6223, 6226, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6250, 6252, 6261, 6267, 6268, 6274, 6276, 6285, 6286, 6289, 6292, 6294, 6296, 6298, 6300, 6302, 6304, 6313, 6314, 6317, 6320, 6322, 6324, 6326, 6328, 6331, 6333, 6339, 6340, 6349, 6351, 6360, 6362, 6371, 6377, 6378, 6384, 6386, 6395, 6396, 6399, 6402, 6404, 6405, 6406, 6408, 6410, 6412, 6414, 6416, 6425, 6426, 6429, 6432, 6434, 6436, 6439, 6442, 6444, 6446, 6447, 6448, 6449, 6451, 6454, 6457, 6460, 6462, 6465, 6468, 6471, 6473, 6475, 6476, 6477, 6478, 6480, 6483, 6486, 6489, 6491, 6493, 6496, 6498, 6500, 6509, 6510, 6513, 6516, 6518, 6521, 6524, 6526, 6529, 6530, 6532, 6533, 6535, 6537, 6540, 6540, 6540]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0060765636, -0.112550594, -0.078595154, -0.000118572985, -0.0009438799, -7.005035e-05, -0.0033242127, -0.19493116, -6.814395e-05, -0.00016042087, -0.0001614947, -0.0023270645, -0.1602811, -0.02126418, -0.19175369, -1.6521892e-05, -8.4157e-06, -0.0005522222, -4.2392992e-05, -0.027718702, -8.5358415e-06, -0.0029831508, -3.883893e-06, -9.012677e-06, -0.00011428335, -0.00026361804, -1.4377073e-05, -3.869565e-05, -9.055464e-07, 0, -0.0026471047, -0.0003151312, -0.0032566956, -0.0002000066, -2.0696069e-05, -0.001448383, -0.0010325994, -0.00061693095, -3.8935006e-05, -0.00031441596, -0.0004324776, -0.004366952, -0.0004009333, -0.0010944168, -0.37655962, -0.0009222224, -2.3078366e-05, -0.037863262, -3.2140102e-05, -2.319758e-05, -2.28437e-05, -6.6294406e-06, -3.529076e-06, -0.0004934796, -0.00011082348, -0.00011487751, -0.00018915485, -8.042151e-05, -2.462996e-05, -0.0003777965, -6.9573514e-05, -0.0002360752, -4.656436e-05, -3.8103353e-05, -0.00016483347, -3.5120327e-05, -0.00072542584, -1.1430258e-06, -5.460492e-07, -0.031181885, -0.007468006, -5.2525735e-05, -8.51908e-05, -0.00053069333, -0.00056927843, -0.011390125, -0.018702291, -0.07377873, -0.014330689, -2.3556138e-05, -0.08764141, -0.00023440628, -3.130471e-05, -3.5240468e-05, -1.2622395e-06, -3.076318e-07, -0.0562741, -0.0035571738, -0.0001015252, -0.00011070334, -0.0001191709, -0.000104387145, -3.3809963e-05, -9.532728e-05, -5.169127e-05, -8.0580685e-06, -1.010646, -0.07068189, -0.041826632, -0.0005417281, -0.004789455, -0.0014134023, -0.0739092, -0.00011726356, -1.8907942e-05, -0.0006318414, -0.0002058497, -0.0075549637, -0.028874058, -0.018037155, -5.0022347e-05, -1.1769406, -0.00010271822, -1.402038e-05, -2.8087945e-05, -3.7684315e-06, -1.1430258e-06, -0.013300354, -0.00034369153, -0.0025910493, -0.00018366938, -0.00017973736, -0.00013276069, -7.231626e-05, -6.194322e-05, -3.4762696e-05, -7.481963e-05, -2.693682e-06, -0.000118811404, -0.0050933296, -0.00043796306, -0.004729506, -0.0010036626, -0.17743573, -0.006907165, -5.6818186e-05, -0.0007630648, -7.9946556e-05, -0.00020298682, -0.0020816657, -0.00033987593, -0.0004795284, -0.007353974, -0.0002948601, -4.883026e-05, -9.628002e-05, -0.0005383865, -0.0003022548, -8.176345e-06, -6.0633804e-05, -4.859278e-05, -3.2616e-05, -4.1558535e-05, -3.3093773e-05, -8.5429216e-05, -0.00067591673, -0.000106533844, -1.1278585e-05, -1.2483295, -0.001006287, -2.2126573e-05, -2.1649737e-05, -5.550595e-05, -9.490449e-06, -0.003396219, -0.00075775385, -0.00014718683, -0.00022123232, -8.6144464e-05, -2.8206221e-05, -0.0010501399, -7.231626e-05, -0.00048406117, -0.0002704148, -0.04138968, -0.04271859, -0.18139309, -0.113499396], "top_logprobs": null, "text_offset": [6021, 6021, 6022, 6029, 6030, 6034, 6037, 6039, 6046, 6047, 6051, 6054, 6056, 6065, 6067, 6073, 6074, 6083, 6085, 6094, 6100, 6101, 6104, 6111, 6112, 6116, 6118, 6127, 6128, 6131, 6134, 6136, 6138, 6140, 6141, 6142, 6143, 6146, 6148, 6149, 6150, 6152, 6155, 6158, 6161, 6163, 6165, 6168, 6170, 6172, 6181, 6182, 6185, 6188, 6190, 6193, 6196, 6198, 6201, 6202, 6204, 6205, 6207, 6209, 6211, 6213, 6222, 6223, 6226, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6250, 6252, 6261, 6267, 6268, 6274, 6276, 6285, 6286, 6289, 6292, 6294, 6296, 6298, 6300, 6302, 6304, 6313, 6314, 6317, 6320, 6322, 6324, 6326, 6328, 6331, 6333, 6339, 6340, 6349, 6351, 6360, 6362, 6371, 6377, 6378, 6384, 6386, 6395, 6396, 6399, 6402, 6404, 6405, 6406, 6408, 6410, 6412, 6414, 6416, 6425, 6426, 6429, 6432, 6434, 6436, 6439, 6442, 6444, 6446, 6447, 6448, 6449, 6451, 6454, 6457, 6460, 6462, 6465, 6468, 6471, 6473, 6475, 6476, 6477, 6478, 6480, 6483, 6486, 6489, 6491, 6493, 6496, 6498, 6500, 6509, 6510, 6513, 6516, 6518, 6521, 6524, 6526, 6529, 6530, 6532, 6533, 6535, 6537, 6540, 6540, 6540]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0060765636, -0.11335586, -0.082331896, -0.00011964774, -0.0011351112, -8.566857e-05, -0.0030508873, -0.14061224, -5.7413286e-05, -0.00032407563, -0.00015827699, -0.0022881734, -0.19109273, -0.017845698, -0.15706587, -1.6165199e-05, -1.1159372e-05, -0.0007715342, -4.7875652e-05, -0.027386008, -1.1278585e-05, -0.0030071225, -4.838501e-06, -1.42597355e-05, -6.766711e-05, -0.00016137547, -1.4854846e-05, -3.583558e-05, -1.6207987e-06, 0, -0.0025207754, -0.0002494275, -0.0034398176, -0.00025574747, -3.2140102e-05, -0.0015192989, -0.0008160948, -0.00030642524, -2.7611111e-05, -0.00020763783, -0.00044154216, -0.0036354188, -0.0005036208, -0.001024066, -0.37164444, -0.0011763452, -1.7236207e-05, -0.031089775, -3.142485e-05, -2.3435998e-05, -2.5941252e-05, -2.3360508e-06, -1.7400124e-06, -0.00040534776, -8.972073e-05, -0.00010808168, -0.00019643032, -9.234426e-05, -2.4390605e-05, -0.0002850831, -6.563869e-05, -0.00024894974, -5.2885232e-05, -3.9172486e-05, -0.00017747053, -3.357061e-05, -0.003477799, -1.3823812e-06, -2.693682e-06, -0.037813682, -0.0076106978, -5.5385808e-05, -9.401318e-05, -0.00050302286, -0.00064371066, -0.010850574, -0.019689579, -0.067971446, -0.011688774, -2.5225998e-05, -0.106492, -0.0002519309, -2.200643e-05, -3.201996e-05, -9.055464e-07, -1.8841804e-07, -3.027183, -0.04886463, -0.0076885386, -0.00073496724, -0.0008648324, -0.00027136848, -4.275062e-05, -0.0006108457, -4.721163e-06, -6.6294406e-06, -0.73343545, -0.019621862, -0.0022270598, -0.00013395278, -0.0037231224, -0.002302333, -0.021249142, -6.766711e-05, -8.209043e-05, -0.00046646709, -9.222505e-05, -0.002707826, -0.009326017, -0.013263208, -2.319758e-05, -0.34595641, -7.481963e-05, -1.4854846e-05, -1.8668587e-05, -2.2159093e-06, -1.3823812e-06, -0.0109419245, -0.00067031296, -0.0027556408, -0.00015148021, -0.00016364138, -0.00018402888, -3.0353855e-05, -2.2365928e-05, -3.249586e-05, -8.626461e-05, -1.9765537e-06, -1.8841804e-07, -0.0030518447, -0.00014742525, -0.0019439443, -0.0012694424, -0.09617949, -0.006867372, -2.7967804e-05, -0.00033582002, -7.362661e-05, -9.794894e-05, -0.0010000797, -0.00022409332, -0.00023214132, -0.007100201, -0.00014086877, -3.7266083e-05, -0.00014289531, -0.000456569, -0.0003813765, -5.3162735e-06, -5.848711e-05, -4.394177e-05, -3.5477948e-05, -3.2735214e-05, -5.5556293e-06, -5.7891062e-05, -0.00049228565, -5.3716885e-05, -1.9765537e-06, -2.8888829, -0.001144064, -1.855031e-05, -3.595572e-05, -1.0920954e-05, -2.6060465e-05, -0.00051554636, -0.00017973736, -0.00012095904, -0.00014611395, -8.0899285e-05, -2.0815281e-05, -0.0022774795, -6.516092e-05, -0.00023106657, -7.744129e-05, -0.031024726, -0.025158962, -0.16412646, -0.075238064], "top_logprobs": null, "text_offset": [6021, 6021, 6022, 6029, 6030, 6034, 6037, 6039, 6046, 6047, 6051, 6054, 6056, 6065, 6067, 6073, 6074, 6083, 6085, 6094, 6100, 6101, 6104, 6111, 6112, 6116, 6118, 6127, 6128, 6131, 6134, 6136, 6138, 6140, 6141, 6142, 6143, 6146, 6148, 6149, 6150, 6152, 6155, 6158, 6161, 6163, 6165, 6168, 6170, 6172, 6181, 6182, 6185, 6188, 6190, 6193, 6196, 6198, 6201, 6202, 6204, 6205, 6207, 6209, 6211, 6213, 6222, 6223, 6226, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6250, 6252, 6261, 6267, 6268, 6274, 6276, 6285, 6286, 6289, 6292, 6294, 6296, 6298, 6300, 6302, 6304, 6313, 6314, 6317, 6320, 6322, 6324, 6326, 6328, 6331, 6333, 6339, 6340, 6349, 6351, 6360, 6362, 6371, 6377, 6378, 6384, 6386, 6395, 6396, 6399, 6402, 6404, 6405, 6406, 6408, 6410, 6412, 6414, 6416, 6425, 6426, 6429, 6432, 6434, 6436, 6439, 6442, 6444, 6446, 6447, 6448, 6449, 6451, 6454, 6457, 6460, 6462, 6465, 6468, 6471, 6473, 6475, 6476, 6477, 6478, 6480, 6483, 6486, 6489, 6491, 6493, 6496, 6498, 6500, 6509, 6510, 6513, 6516, 6518, 6521, 6524, 6526, 6529, 6530, 6532, 6533, 6535, 6537, 6540, 6540, 6540]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "\n", "#"], "token_logprobs": [-0.0060765636, -0.11714649, -0.07320646, -0.000111657944, -0.00076461444, -7.422359e-05, -0.0027709424, -0.16071719, -5.20489e-05, -0.00033284168, -0.00017508729, -0.002919663, -0.18340956, -0.01399432, -0.20331953, -1.6642034e-05, -8.7733215e-06, -0.0008108449, -4.048565e-05, -0.029147228, -8.4157e-06, -0.0038759336, -4.361666e-06, -1.4974988e-05, -8.638288e-05, -0.00021526907, -1.1039229e-05, -3.0826937e-05, -1.1430258e-06, 0, -0.0025846555, -0.0002590881, -0.0037040971, -0.0002303513, -2.0815281e-05, -0.0016547556, -0.0008994939, -0.0008663821, -3.3809963e-05, -0.00035967113, -0.00072983844, -0.0027563577, -0.00061060634, -0.0014087466, -0.33855644, -0.0007075915, -2.3435998e-05, -0.042216334, -3.488097e-05, -2.200643e-05, -2.141132e-05, -3.051303e-06, -1.7400124e-06, -0.00062563975, -0.00011571198, -9.830563e-05, -0.00019153998, -9.628002e-05, -2.045765e-05, -0.00041912153, -6.087316e-05, -0.0002600399, -6.420819e-05, -4.3347598e-05, -0.00017687635, -3.058758e-05, -0.00063762726, -1.022884e-06, -6.6619094e-07, -0.037243046, -0.008662942, -5.0260765e-05, -0.00013776746, -0.00058192114, -0.00080046343, -0.009073488, -0.018070776, -0.07994663, -0.013971954, -2.880226e-05, -0.10555041, -0.00014170136, -2.1051823e-05, -2.4390605e-05, -1.2622395e-06, -1.2622395e-06, -0.05954701, -0.0040240386, -0.00010927377, -0.00011869313, -0.00010176362, -9.771052e-05, -3.142485e-05, -0.00012238578, -2.4543265e-06, -4.277735e-07, -0.9751047, -0.047564078, -0.060658827, -0.00073556235, -0.0038736, -0.0017693947, -0.087470435, -6.6593304e-05, -2.7371756e-05, -0.0006766329, -0.00017067656, -0.0046517737, -0.035212353, -0.016639668, -3.1781543e-05, -0.9895898, -0.00018820119, -1.3306066e-05, -2.6419024e-05, -3.883893e-06, -1.3823812e-06, -0.014875807, -0.00041059483, -0.0032593266, -0.00021800993, -0.00018093038, -0.00019070739, -5.3837026e-05, -4.0963423e-05, -3.357061e-05, -8.5429216e-05, -3.6482897e-06, -6.623567e-05, -0.004868576, -0.00034309734, -0.0042894874, -0.00065611774, -0.12679513, -0.007466146, -4.775551e-05, -0.00055329327, -0.00010545909, -0.00025097816, -0.0015646686, -0.0007423638, -0.00054745295, -0.008448508, -0.00015374424, -5.145473e-05, -0.0001427761, -0.00035526042, -0.00029140117, -9.130952e-06, -4.9902206e-05, -4.036551e-05, -4.0246297e-05, -3.559716e-05, -1.771398e-05, -7.469949e-05, -0.00059164374, -7.8872734e-05, -1.0800813e-05, -1.227046, -0.0010623733, -2.1649737e-05, -4.716134e-05, -1.9263687e-05, -4.8233283e-05, -0.0010577176, -0.00085027673, -0.00016411634, -0.0002206344, -0.00012119652, -2.3556138e-05, -0.0027995142, -6.2299914e-05, -0.00027649727, -8.3996834e-05, -0.044843446, -0.029134404, -3.42281, -1.377993], "top_logprobs": null, "text_offset": [6021, 6021, 6022, 6029, 6030, 6034, 6037, 6039, 6046, 6047, 6051, 6054, 6056, 6065, 6067, 6073, 6074, 6083, 6085, 6094, 6100, 6101, 6104, 6111, 6112, 6116, 6118, 6127, 6128, 6131, 6134, 6136, 6138, 6140, 6141, 6142, 6143, 6146, 6148, 6149, 6150, 6152, 6155, 6158, 6161, 6163, 6165, 6168, 6170, 6172, 6181, 6182, 6185, 6188, 6190, 6193, 6196, 6198, 6201, 6202, 6204, 6205, 6207, 6209, 6211, 6213, 6222, 6223, 6226, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6250, 6252, 6261, 6267, 6268, 6274, 6276, 6285, 6286, 6289, 6292, 6294, 6296, 6298, 6300, 6302, 6304, 6313, 6314, 6317, 6320, 6322, 6324, 6326, 6328, 6331, 6333, 6339, 6340, 6349, 6351, 6360, 6362, 6371, 6377, 6378, 6384, 6386, 6395, 6396, 6399, 6402, 6404, 6405, 6406, 6408, 6410, 6412, 6414, 6416, 6425, 6426, 6429, 6432, 6434, 6436, 6439, 6442, 6444, 6446, 6447, 6448, 6449, 6451, 6454, 6457, 6460, 6462, 6465, 6468, 6471, 6473, 6475, 6476, 6477, 6478, 6480, 6483, 6486, 6489, 6491, 6493, 6496, 6498, 6500, 6509, 6510, 6513, 6516, 6518, 6521, 6524, 6526, 6529, 6530, 6532, 6533, 6535, 6537, 6540, 6540, 6540]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0060765636, -0.09861163, -0.07660167, -0.00015672446, -0.0009221041, -6.850158e-05, -0.0040267333, -0.15001597, -4.966285e-05, -0.00025157514, -0.00013764732, -0.0026543378, -1.9357103, -2.7133337e-05, -0.00044702762, -4.9586424e-06, -0.0014588282, -0.22919925, -0.0063931253, -0.06981324, -4.838501e-06, -7.1062755e-06, -0.0003974753, -4.382537e-05, -0.01809475, -1.2351458e-05, -0.0029533175, -6.746778e-06, -7.937927e-06, -4.048565e-05, -0.00013490739, -8.4157e-06, -2.033751e-05, -9.055464e-07, 0, -0.0033242127, -0.00017866449, -0.002973884, -0.00019261472, -1.8310955e-05, -0.0009729368, -0.0006957804, -0.0003762477, -4.4181128e-05, -0.00013884035, -0.00035788392, -0.0015843097, -0.00028925636, -0.000599397, -0.3563295, -0.0014758995, -4.6445148e-05, -0.029195402, -3.3689823e-05, -1.6282536e-05, -2.3317722e-05, -7.584048e-06, -9.055464e-07, -0.00054268085, -6.015603e-05, -0.000118811404, -0.00014384899, -8.662224e-05, -2.8445576e-05, -0.00032753454, -3.988961e-05, -0.000271728, -5.5269407e-05, -1.4974988e-05, -0.00013562171, -4.2511267e-05, -0.001601322, -1.6207987e-06, -6.6619094e-07, -0.02498667, -0.005162707, -3.6670972e-05, -6.921402e-05, -3.8217877e-05, -0.000161138, -0.013522115, -0.010550128, -0.56736255, -0.010005371, -1.3542607e-05, -0.023283038, -0.00010414779, -2.033751e-05, -2.6298881e-05, -1.3823812e-06, -1.8841804e-07, -0.032333158, -0.0024349699, -7.100402e-05, -8.018216e-05, -0.0008695453, -3.6074933e-05, -2.2604345e-05, -8.531094e-05, -1.2622395e-06, -3.076318e-07, -0.8181778, -0.017430142, -0.00025240867, -5.8725527e-05, -0.0034423904, -0.0010503792, -0.26487443, -0.09610789, -0.45486495, -0.08265438, -1.855031e-05, -0.30531934, -0.0010287808, -7.279122e-05, -0.00018414622, -6.8669196e-06, -4.573365e-05, -1.067078, -0.029339757, -0.0019569003, -0.00022903908, -0.001136186, -0.0001970245, -9.174727e-05, -0.0006016647, -1.3542607e-05, -1.6207987e-06, -0.5933122, -0.015020585, -0.015903717, -0.00048465535, -0.020076156, -0.0073524117, -0.06957078, -4.036551e-05, -1.3185924e-05, -0.0005133987, -0.00010784233, -0.0051930845, -0.010128135, -0.015649686, -2.1291178e-05, -0.43793666, -3.5357807e-05, -2.1051823e-05, -3.249586e-05, -2.5744682e-06, -1.8841804e-07, -0.010237367, -0.00015434122, -0.001101455, -0.00013276069, -0.000106773194, -0.00022015757, -1.1398727e-05, -1.44972155e-05, -3.225932e-05, -0.0001177404, -1.2622395e-06, -0.00025861035, -0.0023320834, -7.088388e-05, -0.0029499694, -0.0013510891, -0.102561876, -0.007815943, -3.1065356e-05, -0.00028412943, -6.9573514e-05, -7.005035e-05, -0.0010944168, -0.00015493727, -0.00024525335, -0.0051506045, -0.00017437205, -7.6252014e-05, -0.0001010493, -0.00048179337, -0.00022611799, -9.606849e-06, -3.4642555e-05, -6.122609e-05, -3.3809963e-05, -2.200643e-05, -4.9586424e-06, -6.814395e-05, -0.0009472215, -0.00010736549, -5.79217e-06, -0.23744468, -6.6829845e-05, -1.3422466e-05, -3.8577375e-05, -6.8669196e-06, -0.00013287991, -0.00033415205, -6.2299914e-05, -0.00016829051, -0.0001244142, -0.00010605607, -2.9280032e-05, -0.00047219192, -6.158372e-05, -0.00021085552, -9.258174e-05, -0.045553483, -0.01829797, -0.15458108, -0.07824974], "top_logprobs": null, "text_offset": [6021, 6021, 6022, 6029, 6030, 6034, 6037, 6039, 6046, 6047, 6051, 6054, 6056, 6063, 6064, 6068, 6071, 6073, 6082, 6084, 6090, 6091, 6100, 6102, 6111, 6117, 6118, 6121, 6128, 6129, 6133, 6135, 6144, 6145, 6148, 6151, 6153, 6155, 6157, 6158, 6159, 6160, 6163, 6165, 6166, 6167, 6169, 6172, 6175, 6178, 6180, 6182, 6185, 6187, 6189, 6198, 6199, 6202, 6205, 6207, 6210, 6213, 6215, 6218, 6219, 6221, 6222, 6224, 6226, 6228, 6230, 6239, 6240, 6243, 6246, 6248, 6250, 6252, 6254, 6256, 6258, 6267, 6269, 6278, 6284, 6285, 6291, 6293, 6302, 6303, 6306, 6309, 6311, 6313, 6315, 6317, 6319, 6321, 6330, 6331, 6334, 6337, 6339, 6341, 6343, 6345, 6348, 6350, 6359, 6361, 6370, 6376, 6377, 6383, 6385, 6394, 6395, 6398, 6401, 6403, 6405, 6407, 6409, 6411, 6413, 6422, 6423, 6426, 6429, 6431, 6433, 6435, 6437, 6440, 6442, 6448, 6449, 6458, 6460, 6469, 6471, 6480, 6486, 6487, 6493, 6495, 6504, 6505, 6508, 6511, 6513, 6514, 6515, 6517, 6519, 6521, 6523, 6525, 6534, 6535, 6538, 6541, 6543, 6545, 6548, 6551, 6553, 6555, 6556, 6557, 6558, 6560, 6563, 6566, 6569, 6571, 6574, 6577, 6580, 6582, 6584, 6585, 6586, 6587, 6589, 6592, 6595, 6598, 6600, 6602, 6605, 6607, 6609, 6618, 6619, 6622, 6625, 6627, 6630, 6633, 6635, 6638, 6639, 6641, 6642, 6644, 6646, 6649, 6649, 6649]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0060765636, -0.10607365, -0.06301847, -0.00011905076, -0.00094543246, -6.0395385e-05, -0.0029585194, -0.14317144, -4.608659e-05, -0.0002360752, -0.00014909416, -0.002062075, -0.21571046, -0.017249472, -0.12735148, -1.5327929e-05, -9.251094e-06, -0.0012257557, -4.29881e-05, -0.022395033, -1.2946569e-05, -0.0034630846, -4.9586424e-06, -1.0561456e-05, -7.684431e-05, -0.00019225522, -1.3306066e-05, -3.2616e-05, -1.1430258e-06, 0, -0.0025496972, -0.00021288394, -0.0035395883, -0.00020346364, -1.9621319e-05, -0.0014907621, -0.0010078357, -0.0004950321, -3.0473995e-05, -0.00027136848, -0.0002996294, -0.0033726534, -0.0006008294, -0.001066431, -0.3686511, -0.0011061106, -2.2365928e-05, -0.027454194, -3.225932e-05, -2.28437e-05, -1.4139594e-05, -2.0966954e-06, -1.1430258e-06, -0.0004368883, -7.434374e-05, -0.00016578808, -0.00017425283, -9.7351025e-05, -2.1171965e-05, -0.00033975672, -7.613187e-05, -0.00021085552, -6.265847e-05, -3.595572e-05, -0.00024597047, -3.8217877e-05, -0.0032810948, -1.5006569e-06, -1.1430258e-06, -0.031036163, -0.008843626, -4.680184e-05, -0.00010998996, -0.00072256295, -0.00069745025, -0.008473212, -0.02048825, -0.0677101, -0.015117099, -3.0473995e-05, -0.138006, -0.0003230018, -2.1291178e-05, -2.4032974e-05, -1.2622395e-06, -3.076318e-07, -0.041124884, -0.003650076, -0.00010212031, -0.00013097163, -9.341901e-05, -9.7234624e-05, -3.3809963e-05, -0.00010927377, -5.3477528e-05, -9.966347e-06, -1.0491444, -0.053143702, -0.050308015, -0.00084717636, -0.0038949628, -0.0018344789, -0.095461845, -0.00017139182, -1.9028084e-05, -0.0005194802, -9.413332e-05, -0.0057741306, -0.02123672, -0.015944779, -5.5385808e-05, -0.46490473, -0.00049789407, -2.7251614e-05, -1.9382902e-05, -5.3162735e-06, -1.8601542e-06, -0.02303489, -0.00025014277, -0.0045551886, -0.00019964804, -0.00012858746, -0.00012679932, -5.8130416e-05, -4.501652e-05, -2.0098154e-05, -8.5549356e-05, -2.3360508e-06, -6.13453e-05, -0.0040506106, -0.00029521773, -0.0046906993, -0.001255418, -0.12075112, -0.005035218, -3.8577375e-05, -0.00049264514, -0.00010569845, -0.000110467736, -0.0022583038, -0.00022891893, -0.00061156094, -0.010942166, -0.0002433488, -2.7490969e-05, -0.00014575632, -0.00033003604, -0.00010140506, -1.1873685e-05, -5.3955304e-05, -5.9679198e-05, -3.595572e-05, -2.8921473e-05, -1.3542607e-05, -9.103483e-05, -0.0005300982, -7.791906e-05, -2.5744682e-06, -0.258887, -0.00010963327, -1.9860674e-05, -2.1291178e-05, -2.9159892e-05, -3.5240468e-05, -0.00048107814, -8.1256905e-05, -0.00014778474, -9.9616926e-05, -0.000102002974, -2.4986643e-05, -0.0005319464, -5.5745302e-05, -0.00017329915, -0.00011750104, -0.029969515, -0.029678315, -0.1925939, -0.12337127], "top_logprobs": null, "text_offset": [6021, 6021, 6022, 6029, 6030, 6034, 6037, 6039, 6046, 6047, 6051, 6054, 6056, 6065, 6067, 6073, 6074, 6083, 6085, 6094, 6100, 6101, 6104, 6111, 6112, 6116, 6118, 6127, 6128, 6131, 6134, 6136, 6138, 6140, 6141, 6142, 6143, 6146, 6148, 6149, 6150, 6152, 6155, 6158, 6161, 6163, 6165, 6168, 6170, 6172, 6181, 6182, 6185, 6188, 6190, 6193, 6196, 6198, 6201, 6202, 6204, 6205, 6207, 6209, 6211, 6213, 6222, 6223, 6226, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6250, 6252, 6261, 6267, 6268, 6274, 6276, 6285, 6286, 6289, 6292, 6294, 6296, 6298, 6300, 6302, 6304, 6313, 6314, 6317, 6320, 6322, 6324, 6326, 6328, 6331, 6333, 6339, 6340, 6349, 6351, 6360, 6362, 6371, 6377, 6378, 6384, 6386, 6395, 6396, 6399, 6402, 6404, 6405, 6406, 6408, 6410, 6412, 6414, 6416, 6425, 6426, 6429, 6432, 6434, 6436, 6439, 6442, 6444, 6446, 6447, 6448, 6449, 6451, 6454, 6457, 6460, 6462, 6465, 6468, 6471, 6473, 6475, 6476, 6477, 6478, 6480, 6483, 6486, 6489, 6491, 6493, 6496, 6498, 6500, 6509, 6510, 6513, 6516, 6518, 6521, 6524, 6526, 6529, 6530, 6532, 6533, 6535, 6537, 6540, 6540, 6540]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0))))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))))", "\n", "("], "token_logprobs": [-0.0060765636, -0.11438033, -0.09053364, -0.00013073228, -0.0008257573, -5.6223078e-05, -0.0038518207, -0.14307, -5.3477528e-05, -0.00031942554, -0.000143252, -0.0023234207, -1.7487743, -1.8788729e-05, -0.00036563535, -1.1873685e-05, -0.0015419222, -0.2120959, -0.0070779314, -0.08110061, -4.721163e-06, -7.4639065e-06, -0.00039139285, -3.5120327e-05, -0.018692452, -9.846204e-06, -0.0031356087, -1.3900239e-05, -1.0800813e-05, -4.573365e-05, -9.461016e-05, -1.1991961e-05, -2.3317722e-05, -6.6619094e-07, -6.827632e-08, -0.002533622, -0.00023571757, -0.002214695, -0.00017186676, -1.4854846e-05, -0.0007983168, -0.0006795559, -0.00030022638, -2.6419024e-05, -0.00015469792, -0.00033462982, -0.001468258, -0.00022015757, -0.0012326802, -0.3620284, -0.0011603505, -4.799487e-05, -0.021694733, -3.333313e-05, -1.9028084e-05, -1.7475562e-05, -9.490449e-06, -1.5006569e-06, -0.00054709346, -7.601266e-05, -0.00012250594, -0.0001736549, -8.042151e-05, -2.5344274e-05, -0.00026802876, -4.9427246e-05, -0.00027518315, -7.779892e-05, -1.3422466e-05, -0.0001599459, -4.0009756e-05, -0.0023486346, -1.9765537e-06, -6.6619094e-07, -0.023170058, -0.0049473415, -3.7148744e-05, -8.852958e-05, -5.07376e-05, -0.000113448885, -0.01175837, -0.011950171, -0.7304153, -0.015076495, -1.2708151e-05, -0.026044352, -0.00014575632, -2.1889093e-05, -2.4510746e-05, -1.022884e-06, -6.827632e-08, -0.034453657, -0.0023458863, -8.5549356e-05, -9.091469e-05, -0.001448979, -3.5357807e-05, -2.462996e-05, -9.866513e-05, -1.022884e-06, -6.827632e-08, -0.79648334, -0.022272158, -0.00022826564, -5.3363005e-05, -0.004455858, -0.0009051615, -1.880777, -3.7983213e-05, -1.1159372e-05, -0.00074164855, -9.890355e-05, -0.006719989, -0.018988004, -0.015246967, -2.8206221e-05, -0.6772937, -6.38515e-05, -1.9263687e-05, -3.0473995e-05, -3.170517e-06, -1.6207987e-06, -0.048864067, -0.0001831916, -0.0026056916, -0.00015755986, -0.000111540605, -0.00015589187, -2.0815281e-05, -2.1051823e-05, -2.7371756e-05, -0.00016614476, -1.3823812e-06, -6.9453374e-05, -0.0031504976, -0.00013919984, -0.0030788083, -0.00066971505, -0.06693056, -0.004038639, -1.9741461e-05, -0.00022182555, -9.0795475e-05, -6.838237e-05, -0.0008570753, -0.00027649727, -0.0002419183, -0.0111679295, -0.00011440349, -4.489638e-05, -0.00015923065, -0.00069721276, -9.830563e-05, -8.176345e-06, -1.9741461e-05, -4.1918032e-05, -3.023464e-05, -2.9280032e-05, -7.698572e-06, -7.028876e-05, -0.0003076173, -0.0001319253, -2.5744682e-06, -0.47149098, -0.00013240307, -1.9980816e-05, -4.5494293e-05, -1.1039229e-05, -1.4377073e-05, -0.00037839438, -4.3108244e-05, -0.00017532664, -9.305951e-05, -7.541475e-05, -2.5464416e-05, -0.00075596484, -5.20489e-05, -0.00016805116, -0.00010784233, -0.026802622, -0.039237015, -0.48976848, -0.0002372673, -3.9292627e-05, -0.00077236874, -7.6964454e-05, -0.009785833, -0.008238324, -0.042467117, -3.3928238e-05, -0.4279056, -4.9902206e-05, -1.7236207e-05, -3.4167595e-05, -2.3360508e-06, -5.460492e-07, -0.023209529, -0.0013170695, -0.005172473, -0.00020155631, -0.00019583241, -0.00024751923, -2.1529595e-05, -6.0753944e-05, -2.784859e-05, -0.00023977255, -1.3823812e-06, -2.2484204e-05, -0.0054200096, -0.00024513318, -0.00339275, -0.0016743987, -0.18048182, -0.010638378, -3.4642555e-05, -0.00042341586, -7.219704e-05, -0.00019869342, -0.0014187149, -0.0008176436, -0.00026755192, -0.012037339, -0.00020561034, -9.461016e-05, -0.0001459938, -0.0012992248, -0.00017389427, -1.44972155e-05, -0.00011428335, -5.669991e-05, -2.3078366e-05, -3.595572e-05, -8.176345e-06, -7.982734e-05, -0.00039616402, -0.00018533925, -6.9861335e-06, -0.2577452, -5.24084e-05, -2.462996e-05, -1.771398e-05, -9.520714e-05, -0.00015863274, -0.0005779873, -0.0001097506, -0.00013991416, -0.0001351458, -7.326899e-05, -3.2616e-05, -0.00067377003, -0.000111657944, -0.00017317903, -9.5442745e-05, -1.2137457, -0.12394311, -0.33195835], "top_logprobs": null, "text_offset": [6021, 6021, 6022, 6029, 6030, 6034, 6037, 6039, 6046, 6047, 6051, 6054, 6056, 6063, 6064, 6068, 6071, 6073, 6082, 6084, 6090, 6091, 6100, 6102, 6111, 6117, 6118, 6121, 6128, 6129, 6133, 6135, 6144, 6145, 6148, 6151, 6153, 6155, 6157, 6158, 6159, 6160, 6163, 6165, 6166, 6167, 6169, 6172, 6175, 6178, 6180, 6182, 6185, 6187, 6189, 6198, 6199, 6202, 6205, 6207, 6210, 6213, 6215, 6218, 6219, 6221, 6222, 6224, 6226, 6228, 6230, 6239, 6240, 6243, 6246, 6248, 6250, 6252, 6254, 6256, 6258, 6267, 6269, 6278, 6284, 6285, 6291, 6293, 6302, 6303, 6306, 6309, 6311, 6313, 6315, 6317, 6319, 6321, 6330, 6331, 6334, 6337, 6339, 6341, 6343, 6345, 6348, 6350, 6356, 6357, 6366, 6368, 6377, 6379, 6388, 6394, 6395, 6401, 6403, 6412, 6413, 6416, 6419, 6421, 6422, 6423, 6425, 6427, 6429, 6431, 6433, 6442, 6443, 6446, 6449, 6451, 6453, 6456, 6459, 6461, 6463, 6464, 6465, 6466, 6468, 6471, 6474, 6477, 6479, 6482, 6485, 6488, 6490, 6492, 6493, 6494, 6495, 6497, 6500, 6503, 6506, 6508, 6510, 6513, 6515, 6517, 6526, 6527, 6530, 6533, 6535, 6538, 6541, 6543, 6546, 6547, 6549, 6550, 6552, 6554, 6557, 6559, 6565, 6566, 6575, 6577, 6586, 6588, 6597, 6603, 6604, 6610, 6612, 6621, 6622, 6625, 6628, 6630, 6631, 6632, 6634, 6636, 6638, 6640, 6642, 6651, 6652, 6655, 6658, 6660, 6662, 6665, 6668, 6670, 6672, 6673, 6674, 6675, 6677, 6680, 6683, 6686, 6688, 6691, 6694, 6697, 6699, 6701, 6702, 6703, 6704, 6706, 6709, 6712, 6715, 6717, 6719, 6722, 6724, 6726, 6735, 6736, 6739, 6742, 6744, 6747, 6750, 6752, 6755, 6756, 6758, 6759, 6761, 6763, 6767, 6767]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0060765636, -0.10793051, -0.0715075, -0.0001758016, -0.0010433393, -8.6144464e-05, -0.0026148339, -0.19980724, -7.088388e-05, -0.00032765282, -0.00014563711, -0.0027771583, -0.19245213, -0.018853577, -0.15178095, -1.2708151e-05, -1.1514188e-05, -0.00090044853, -4.7279616e-05, -0.0241747, -1.0561456e-05, -0.0030575215, -4.838501e-06, -1.6165199e-05, -6.921402e-05, -0.0002064448, -1.2351458e-05, -3.3689823e-05, -1.1430258e-06, 0, -0.002646748, -0.00028031383, -0.0039944737, -0.00022099297, -2.462996e-05, -0.003356627, -0.0007205946, -0.0003109561, -4.370523e-05, -0.00016328375, -0.00038006424, -0.0018227766, -0.00047123732, -0.0020531185, -0.39455688, -0.0008262341, -2.5941252e-05, -0.041451372, -3.9172486e-05, -2.3317722e-05, -2.0575926e-05, -2.8138238e-06, -2.3360508e-06, -0.00051351794, -8.721922e-05, -0.00014527855, -0.00018712736, -8.960433e-05, -1.9621319e-05, -0.0002712502, -5.693833e-05, -0.00023667031, -4.7279616e-05, -3.5240468e-05, -0.00022421066, -3.237946e-05, -0.0018067136, -1.022884e-06, -9.055464e-07, -0.035848547, -0.009682189, -5.1215375e-05, -0.00013860193, -0.00084884523, -0.00064096885, -0.013284527, -0.01872992, -0.067123875, -0.014685862, -2.8921473e-05, -0.119019054, -0.00023690966, -2.1051823e-05, -2.4750101e-05, -1.022884e-06, -1.8841804e-07, -0.04847433, -0.003416494, -8.8290224e-05, -0.0001290643, -0.00012250594, -6.6949986e-05, -3.1065356e-05, -8.6144464e-05, -6.337372e-05, -1.6521892e-05, -0.6528404, -0.014632757, -0.00013228387, -7.20769e-05, -0.0015021657, -0.0009082647, -0.019744836, -5.0140625e-05, -7.937927e-06, -0.00035597567, -0.000109035354, -0.0019846142, -0.008898531, -0.006367153, -2.0218295e-05, -0.80066156, -9.818829e-05, -2.0696069e-05, -2.033751e-05, -3.4089344e-06, -3.051303e-06, -0.012908717, -0.0001304948, -0.0024056924, -0.00019249457, -0.00013538517, -0.00016292612, -2.3675353e-05, -1.9860674e-05, -2.0696069e-05, -7.708367e-05, -1.5006569e-06, -0.00011666565, -0.002684399, -0.00013621869, -0.0025548365, -0.0011654849, -0.04288967, -0.0036935073, -1.9621319e-05, -0.00029521773, -6.826223e-05, -5.216904e-05, -0.001662398, -0.00023881793, -0.0004964617, -0.009091952, -0.0002917607, -3.142485e-05, -0.000104387145, -0.00043164124, -8.650302e-05, -8.0580685e-06, -2.8087945e-05, -4.430127e-05, -2.9756868e-05, -2.8206221e-05, -9.966347e-06, -6.4566746e-05, -0.00063112524, -6.838237e-05, -1.6207987e-06, -0.22281083, -7.922942e-05, -2.0935424e-05, -2.0218295e-05, -2.665838e-05, -3.9172486e-05, -0.0002735161, -6.551948e-05, -0.00014039098, -6.6593304e-05, -7.720381e-05, -2.3435998e-05, -0.00040880483, -5.550595e-05, -0.00015040733, -0.00013550156, -0.018482286, -0.029949185, -0.20903514, -0.111813836], "top_logprobs": null, "text_offset": [6021, 6021, 6022, 6029, 6030, 6034, 6037, 6039, 6046, 6047, 6051, 6054, 6056, 6065, 6067, 6073, 6074, 6083, 6085, 6094, 6100, 6101, 6104, 6111, 6112, 6116, 6118, 6127, 6128, 6131, 6134, 6136, 6138, 6140, 6141, 6142, 6143, 6146, 6148, 6149, 6150, 6152, 6155, 6158, 6161, 6163, 6165, 6168, 6170, 6172, 6181, 6182, 6185, 6188, 6190, 6193, 6196, 6198, 6201, 6202, 6204, 6205, 6207, 6209, 6211, 6213, 6222, 6223, 6226, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6250, 6252, 6261, 6267, 6268, 6274, 6276, 6285, 6286, 6289, 6292, 6294, 6296, 6298, 6300, 6302, 6304, 6313, 6314, 6317, 6320, 6322, 6324, 6326, 6328, 6331, 6333, 6339, 6340, 6349, 6351, 6360, 6362, 6371, 6377, 6378, 6384, 6386, 6395, 6396, 6399, 6402, 6404, 6405, 6406, 6408, 6410, 6412, 6414, 6416, 6425, 6426, 6429, 6432, 6434, 6436, 6439, 6442, 6444, 6446, 6447, 6448, 6449, 6451, 6454, 6457, 6460, 6462, 6465, 6468, 6471, 6473, 6475, 6476, 6477, 6478, 6480, 6483, 6486, 6489, 6491, 6493, 6496, 6498, 6500, 6509, 6510, 6513, 6516, 6518, 6521, 6524, 6526, 6529, 6530, 6532, 6533, 6535, 6537, 6540, 6540, 6540]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LzIQfaBz4Non48d0Hv1EfOCydkA", "object": "text_completion", "created": 1651004532, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0068541123, -0.09164296, -0.07836976, -8.7576846e-05, -0.0004164971, -5.944078e-05, -0.0052307714, -0.14578347, -1.7356348e-05, -0.00021562482, -0.00014003337, -0.0071868263, -0.23751672, -0.033232376, -1.4657093, -0.3126803, -2.3317722e-05, -0.14829099, -0.00086495065, -5.7532503e-05, -3.154219e-05, -1.7119806e-05, -6.827632e-08, -0.24830776, -0.019069046, -8.531094e-05, -7.899194e-05, -0.00014873935, -0.00043557797, -7.4460135e-05, -0.00087968557, -4.6206733e-05, -1.6207987e-06, -0.8072345, -0.19197235, -0.0032274537, -0.00016483347, -0.0011172693, -0.0046927365, -0.06574179, -0.2926587, -0.35656822, -0.05566975, -1.4616429e-05, -2.1528127, -0.0016361881, -3.690939e-05, -7.899194e-05, -1.1039229e-05, -5.912312e-06, -0.32169122, -0.0016225176, -0.012762974, -0.00040677824, -0.00018474413, -8.674238e-05, -0.0009774667, -0.00022707166, -2.7728449e-05, -0.00013240307, -8.7733215e-06, -4.277735e-07, -0.10938845, -0.010323781, -0.046684176, -0.00862795, -0.30016372, -0.010960907, -0.00012465262, -0.00060488336, -0.0001459938, -0.00050898513, -0.0008817149, -0.0019803122, -0.0017273573, -0.007965642, -9.782879e-05, -0.00018426635, -6.921402e-05, -0.00041256036, -0.00016388074, -8.296486e-06, -3.6670972e-05, -4.3465872e-05, -5.8725527e-05, -6.850158e-05, -3.166233e-05, -7.946878e-05, -0.00010736549, -0.0036554008, -0.014747256, -1.182284, -0.0100077195, -8.388231e-05, -0.00016042087, -7.698572e-06, -4.4818075e-06, -0.0103652775, -0.009581806, -0.0007366371, -0.0016255016, -0.00026254423, -3.4762696e-05, -0.007131957, -0.00012584659, -0.00025717984, -0.00029509945, -0.0027354392, -0.052865345, -0.061389577, -0.061331395], "top_logprobs": null, "text_offset": [5702, 5702, 5703, 5710, 5711, 5715, 5718, 5720, 5727, 5728, 5732, 5735, 5737, 5746, 5748, 5757, 5763, 5764, 5770, 5772, 5781, 5782, 5785, 5788, 5790, 5792, 5794, 5796, 5798, 5800, 5809, 5810, 5813, 5816, 5818, 5820, 5822, 5824, 5826, 5828, 5837, 5839, 5848, 5854, 5855, 5861, 5863, 5872, 5873, 5876, 5879, 5881, 5882, 5883, 5885, 5887, 5889, 5891, 5893, 5902, 5903, 5906, 5909, 5911, 5913, 5916, 5919, 5921, 5923, 5924, 5925, 5926, 5928, 5931, 5934, 5937, 5939, 5942, 5945, 5948, 5950, 5952, 5953, 5954, 5955, 5957, 5960, 5963, 5966, 5968, 5970, 5973, 5975, 5977, 5986, 5987, 5990, 5993, 5995, 5998, 6001, 6003, 6006, 6007, 6009, 6010, 6012, 6014, 6017, 6017, 6017]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.0068541123, -0.09164296, -0.07836976, -8.7576846e-05, -0.0006194353, -2.5703772e-05, -0.0058506913, -0.13966548, -1.8907942e-05, -0.00027113006, -0.0001191709, -0.007363402, -0.2494986, -0.038917877, -0.2639285, -6.5092986e-06, -2.9636725e-05, -0.0009186434, -9.115311e-05, -0.037710927, -6.1516675e-06, -0.0023210337, -1.5567284e-05, -1.0084622e-05, -4.656436e-05, -0.00020310696, -1.1278585e-05, -2.784859e-05, -1.6207987e-06, 0, -0.0013458955, -4.9902206e-05, -0.0012979099, -0.00013085242, -1.0800813e-05, -0.00026278265, -5.0260765e-05, -4.656436e-05, -7.224551e-06, -2.1051823e-05, -3.5240468e-05, -0.00011261161, -5.503005e-05, -6.325358e-05, -0.0010808703, -7.314978e-05, -1.6282536e-05, -0.007697788, -4.3108244e-05, -1.37819625e-05, -8.892534e-06, -6.827632e-08, -1.9765537e-06, -0.0006141873, -5.3716885e-05, -5.860725e-05, -7.1719274e-05, -6.265847e-05, -1.3542607e-05, -6.754697e-05, -4.751897e-05, -0.00019869342, -2.9159892e-05, -0.0001195276, -0.00036754078, -4.5135734e-05, -0.0003739799, -1.8601542e-06, -6.3900848e-06, -0.049699627, -0.01637571, -6.21807e-05, -6.718934e-05, -0.00019559306, -0.0034331195, -0.044260375, -0.17088866, -0.31938738, -0.046944387, -1.8907942e-05, -0.11204916, -0.00013669553, -4.144026e-05, -5.956092e-05, -3.2906587e-06, -6.8669196e-06, -0.24393538, -0.040713754, -9.937757e-05, -7.1719274e-05, -0.0010871368, -0.0004529918, -3.5717305e-05, -0.00018796182, -1.022884e-06, -2.693682e-06, -0.6754253, -0.11196316, -0.03391953, -0.0046514133, -0.001235605, -0.0034117696, -0.25249034, -6.873624e-05, -3.2973632e-05, -0.0019112163, -0.0038760537, -0.012673085, -0.028695915, -0.031406846, -2.8921473e-05, -0.8643726, -0.0007253057, -2.0935424e-05, -4.1558535e-05, -5.4364154e-06, -7.8540467e-07, -0.13554466, -0.00040618223, -0.006245031, -0.00026421316, -8.423619e-05, -8.197403e-05, -3.678925e-05, -9.2941234e-05, -2.0815281e-05, -0.00015469792, -4.2433903e-06, -5.7057543e-05, -0.034406893, -0.0037773876, -0.010547659, -0.004275842, -0.5902751, -0.006806281, -2.5464416e-05, -0.0002555109, -0.00010402765, -8.578871e-05, -0.00071534567, -0.00016101786, -0.00014778474, -0.0021254502, -0.00013919984, -4.6206733e-05, -4.775551e-05, -0.00031489186, -0.00022623815, -8.296486e-06, -3.3093773e-05, -7.517727e-05, -2.1529595e-05, -4.2033495e-05, -4.0040345e-06, -5.4552278e-05, -8.674238e-05, -8.209043e-05, -1.9765537e-06, -0.6084322, -0.0031821872, -2.9159892e-05, -8.3165185e-05, -1.4139594e-05, -9.9735196e-05, -0.004810778, -0.0003828061, -8.3284394e-05, -0.00023798255, -0.0001086796, -2.033751e-05, -0.00086053705, -0.00020703992, -0.00012954207, -0.000100332174, -0.015618325, -0.03295988, -0.15707704, -0.11508629, -0.00031453517, -0.00084371463, -8.3404535e-05, -0.004797482, -0.10881224], "top_logprobs": null, "text_offset": [5702, 5702, 5703, 5710, 5711, 5715, 5718, 5720, 5727, 5728, 5732, 5735, 5737, 5746, 5748, 5754, 5755, 5764, 5766, 5775, 5781, 5782, 5785, 5792, 5793, 5797, 5799, 5808, 5809, 5812, 5815, 5817, 5819, 5821, 5822, 5823, 5824, 5827, 5829, 5830, 5831, 5833, 5836, 5839, 5842, 5844, 5846, 5849, 5851, 5853, 5862, 5863, 5866, 5869, 5871, 5874, 5877, 5879, 5882, 5883, 5885, 5886, 5888, 5890, 5892, 5894, 5903, 5904, 5907, 5910, 5912, 5914, 5916, 5918, 5920, 5922, 5931, 5933, 5942, 5948, 5949, 5955, 5957, 5966, 5967, 5970, 5973, 5975, 5977, 5979, 5981, 5983, 5985, 5994, 5995, 5998, 6001, 6003, 6005, 6007, 6009, 6012, 6014, 6020, 6021, 6030, 6032, 6041, 6043, 6052, 6058, 6059, 6065, 6067, 6076, 6077, 6080, 6083, 6085, 6086, 6087, 6089, 6091, 6093, 6095, 6097, 6106, 6107, 6110, 6113, 6115, 6117, 6120, 6123, 6125, 6127, 6128, 6129, 6130, 6132, 6135, 6138, 6141, 6143, 6146, 6149, 6152, 6154, 6156, 6157, 6158, 6159, 6161, 6164, 6167, 6170, 6172, 6174, 6177, 6179, 6181, 6190, 6191, 6194, 6197, 6199, 6202, 6205, 6207, 6210, 6211, 6213, 6214, 6216, 6218, 6221, 6221, 6221, 6221, 6221, 6221, 6221, 6221]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", ".", "25", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0068541123, -0.091642305, -0.07836976, -8.7576846e-05, -0.0006194353, -2.5703772e-05, -0.0058506913, -0.13966492, -1.9503042e-05, -0.00023333247, -0.00013240307, -0.0062650614, -0.25426313, -0.03427291, -1.5906707, -0.36163673, -2.0696069e-05, -0.15697166, -0.0007603211, -5.264588e-05, -4.5967376e-05, -1.9860674e-05, -6.827632e-08, -0.27155107, -0.023629198, -6.7427754e-05, -8.018216e-05, -0.00015386345, -0.0005666531, -0.000102240454, -0.00139705, -2.6060465e-05, -2.9311614e-06, -0.790466, -1.8530993, -0.32964733, -0.002218337, -0.0003272952, -0.0001345479, -0.002776322, -0.006586003, -0.07192194, -0.45712796, -0.9100298, -2.3795494e-05, -6.09933e-05, -0.0036068258, -0.0012383496, -0.081778176, -1.1991961e-05, -0.009014783, -0.00010534082, -1.6999666e-05, -0.00014039098, -0.00021276381, -1.5448071e-05, -3.058758e-05, -1.5006569e-06, 0, -0.0032087981, -0.00021431445, -0.0011627384, -0.00019940869, -1.0084622e-05, -0.0009262802, -0.0003125086, -9.639735e-05, -1.1039229e-05, -4.2870764e-05, -5.264588e-05, -0.0002519309, -0.00014456424, -9.56821e-05, -0.0010577176, -5.3955304e-05, -1.1873685e-05, -0.031368285, -0.00011750104, -1.771398e-05, -2.0815281e-05, -1.8601542e-06, -8.7337496e-05, -0.00092102936, -0.00037612757, -0.00012691665, -0.00013133019, -7.326899e-05, -1.771398e-05, -0.00022278015, -7.3745825e-05, -0.0002561051, -3.3450466e-05, -0.04805316, -0.0005222258, -4.501652e-05, -0.00010319318, -6.1516675e-06, -7.8540467e-07, -2.1529586, -0.16286546, -0.02028197, -0.0021667264, -0.0048308424, -0.008179791, -0.5763196, -9.0318645e-05, -1.771398e-05, -0.001507777, -0.0011373808, -0.01172496, -0.014028954, -0.027741987, -1.402038e-05, -0.8216555, -0.00030237212, -2.1291178e-05, -2.6180607e-05, -8.296486e-06, -5.5556293e-06, -0.11518105, -0.0006375071, -0.010528563, -0.00010760485, -0.00010486492, -5.991855e-05, -2.5105857e-05, -7.8634315e-05, -1.8788729e-05, -5.7293146e-05, -3.2906587e-06, -9.012677e-06, -0.015845101, -0.0011397669, -0.0048040096, -0.0019211895, -0.4840761, -0.015671967, -3.941184e-05, -0.000682063, -0.000120601406, -0.000110942696, -0.0008632808, -7.4104384e-05, -0.00017759066, -0.0017666473, -0.00022123232, -7.302963e-05, -4.4419543e-05, -0.00071713567, -0.00041792757, -7.4639065e-06, -3.953198e-05, -9.0437854e-05, -4.3108244e-05, -3.8457234e-05, -1.6207987e-06, -5.3716885e-05, -8.364295e-05, -4.954739e-05, -1.3823812e-06, -0.56951475, -0.0014653959, -2.3912831e-05, -3.965026e-05, -1.1398727e-05, -4.954739e-05, -0.00249771, -0.00032085512, -0.00011308939, -0.00011928824, -7.97072e-05, -2.2484204e-05, -0.0006815852, -0.00012655997, -0.00015195705, -0.00012107918, -0.012341554, -0.022297513, -0.10162483, -0.09622936, -6.6593304e-05, -0.0011831505, -0.00018343095], "top_logprobs": null, "text_offset": [5702, 5702, 5703, 5710, 5711, 5715, 5718, 5720, 5727, 5728, 5732, 5735, 5737, 5746, 5748, 5757, 5763, 5764, 5770, 5772, 5781, 5782, 5785, 5788, 5790, 5792, 5794, 5796, 5798, 5800, 5809, 5810, 5813, 5816, 5818, 5819, 5821, 5823, 5825, 5827, 5829, 5831, 5840, 5842, 5848, 5849, 5858, 5860, 5869, 5875, 5876, 5879, 5886, 5887, 5891, 5893, 5902, 5903, 5906, 5909, 5911, 5913, 5915, 5916, 5917, 5918, 5921, 5923, 5924, 5925, 5927, 5930, 5933, 5936, 5938, 5940, 5943, 5945, 5947, 5956, 5957, 5960, 5963, 5965, 5968, 5971, 5973, 5976, 5977, 5979, 5980, 5982, 5984, 5986, 5988, 5997, 5998, 6001, 6004, 6006, 6008, 6010, 6012, 6015, 6017, 6023, 6024, 6033, 6035, 6044, 6046, 6055, 6061, 6062, 6068, 6070, 6079, 6080, 6083, 6086, 6088, 6089, 6090, 6092, 6094, 6096, 6098, 6100, 6109, 6110, 6113, 6116, 6118, 6120, 6123, 6126, 6128, 6130, 6131, 6132, 6133, 6135, 6138, 6141, 6144, 6146, 6149, 6152, 6155, 6157, 6159, 6160, 6161, 6162, 6164, 6167, 6170, 6173, 6175, 6177, 6180, 6182, 6184, 6193, 6194, 6197, 6200, 6202, 6205, 6208, 6210, 6213, 6214, 6216, 6217, 6219, 6221, 6224, 6224, 6224, 6224, 6224, 6224]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0068541123, -0.09164218, -0.078369886, -8.7576846e-05, -0.0006194353, -2.5703772e-05, -0.0058506913, -0.13966492, -2.4510746e-05, -0.00031668, -0.00015052655, -0.0068251253, -0.27592066, -0.038764764, -0.2710586, -4.721163e-06, -3.2855354e-05, -0.0010007968, -7.922942e-05, -0.033810645, -5.912312e-06, -0.002066915, -1.1991961e-05, -6.8669196e-06, -3.5717305e-05, -0.00019678609, -1.3661821e-05, -3.4403198e-05, -2.4543265e-06, 0, -0.00087312347, -3.7505437e-05, -0.0012378718, -0.00017091405, -1.0204763e-05, -0.00028484376, -5.6340414e-05, -4.573365e-05, -8.176345e-06, -2.0696069e-05, -3.643162e-05, -0.00010319318, -3.1065356e-05, -5.3837026e-05, -0.001095609, -8.936497e-05, -1.0323977e-05, -0.00633836, -5.2288255e-05, -1.5567284e-05, -8.5358415e-06, -1.8841804e-07, -3.170517e-06, -0.00090957596, -9.258174e-05, -5.6340414e-05, -4.072407e-05, -4.859278e-05, -1.5805701e-05, -8.51908e-05, -5.8130416e-05, -0.00019380587, -2.2958224e-05, -5.979934e-05, -0.00016042087, -5.8367896e-05, -0.0001821234, -1.8601542e-06, -4.4818075e-06, -0.04817218, -0.01913618, -3.4167595e-05, -7.11223e-05, -0.00015636964, -0.005406645, -0.043724287, -0.2102888, -0.3366128, -0.05222325, -2.558363e-05, -0.12540089, -0.00015052655, -4.275062e-05, -3.4403198e-05, -3.2906587e-06, -4.2511267e-05, -0.21876988, -0.04464498, -8.781245e-05, -7.314978e-05, -0.0015954712, -0.00041721328, -4.1558535e-05, -0.00018164565, -1.6207987e-06, -3.170517e-06, -0.6834278, -0.14491566, -0.033305768, -0.004498606, -0.0013187422, -0.004080654, -1.7749051, -0.14048526, -1.0609981, -0.28145185, -2.665838e-05, -0.9220137, -0.0012919428, -7.100402e-05, -0.00012167429, -6.8669196e-06, -4.277735e-07, -0.219925, -0.0018040854, -0.012612539, -0.00046539606, -0.00019643032, -0.000108559456, -0.00011070334, -0.00033856556, -3.5717305e-05, -0.00042889945, -6.746778e-06, -0.00010414779, -0.05822104, -0.006543165, -0.028582074, -0.0051264013, -0.24738479, -0.008091695, -7.24364e-05, -0.0010191738, -7.4104384e-05, -0.00024013019, -0.0007767841, -0.00038829155, -0.00032598388, -0.002591408, -7.231626e-05, -0.0001314494, -8.471396e-05, -0.00044511934, -0.00024001097, -8.892534e-06, -3.3809963e-05, -6.802381e-05, -4.3108244e-05, -3.4762696e-05, -6.1516675e-06, -4.799487e-05, -9.162713e-05, -0.0011941908, -0.05313767, -0.9487027, -0.011013759, -3.7505437e-05, -9.5562886e-05, -3.2906587e-06, -8.176345e-06, -0.006591463, -0.0018269576, -8.483411e-05, -0.0003812573, -0.0002192039, -3.166233e-05, -0.0043450403, -7.302963e-05, -0.00021228698, -0.00013633883, -0.044630457, -0.020001236, -0.12134677, -0.06749442, -0.00015290885], "top_logprobs": null, "text_offset": [5702, 5702, 5703, 5710, 5711, 5715, 5718, 5720, 5727, 5728, 5732, 5735, 5737, 5746, 5748, 5754, 5755, 5764, 5766, 5775, 5781, 5782, 5785, 5792, 5793, 5797, 5799, 5808, 5809, 5812, 5815, 5817, 5819, 5821, 5822, 5823, 5824, 5827, 5829, 5830, 5831, 5833, 5836, 5839, 5842, 5844, 5846, 5849, 5851, 5853, 5862, 5863, 5866, 5869, 5871, 5874, 5877, 5879, 5882, 5883, 5885, 5886, 5888, 5890, 5892, 5894, 5903, 5904, 5907, 5910, 5912, 5914, 5916, 5918, 5920, 5922, 5931, 5933, 5942, 5948, 5949, 5955, 5957, 5966, 5967, 5970, 5973, 5975, 5977, 5979, 5981, 5983, 5985, 5994, 5995, 5998, 6001, 6003, 6005, 6007, 6009, 6012, 6014, 6023, 6025, 6034, 6040, 6041, 6047, 6049, 6058, 6059, 6062, 6065, 6067, 6068, 6069, 6071, 6073, 6075, 6077, 6079, 6088, 6089, 6092, 6095, 6097, 6099, 6102, 6105, 6107, 6109, 6110, 6111, 6112, 6114, 6117, 6120, 6123, 6125, 6128, 6131, 6134, 6136, 6138, 6139, 6140, 6141, 6143, 6146, 6149, 6152, 6154, 6156, 6159, 6161, 6163, 6172, 6173, 6176, 6179, 6181, 6184, 6187, 6189, 6192, 6193, 6195, 6196, 6198, 6200, 6203, 6203, 6203, 6203]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (connect_strokes (transform small_circle (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "connect", "_", "stro", "kes", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))))", "\n"], "token_logprobs": [-0.0068541123, -0.0828797, -0.08752202, -8.054166e-05, -0.0007674783, -5.2765092e-05, -0.0056911646, -0.16042034, -2.2126573e-05, -0.0002429912, -0.00012453248, -0.0074546156, -0.23650768, -0.04399812, -0.2793451, -5.197998e-06, -3.2616e-05, -0.0011169098, -0.00010414779, -0.034071416, -6.1516675e-06, -0.002308068, -1.6521892e-05, -7.818713e-06, -5.503005e-05, -0.00020549206, -1.2468796e-05, -2.200643e-05, -3.170517e-06, 0, -0.00085158896, -4.2153635e-05, -0.00087885105, -0.00014206085, -9.130952e-06, -0.00020453747, -1.7834122e-05, -3.7983213e-05, -6.9861335e-06, -2.4750101e-05, -3.5120327e-05, -0.0001296622, -5.0260765e-05, -7.6605895e-05, -0.0011507472, -7.744129e-05, -9.966347e-06, -0.0061433692, -5.0976956e-05, -1.4974988e-05, -1.1398727e-05, -1.8841804e-07, -2.3360508e-06, -0.00071117055, -6.265847e-05, -6.194322e-05, -4.6684505e-05, -5.467149e-05, -1.6999666e-05, -6.575884e-05, -6.3134365e-05, -0.0002035838, -2.8445576e-05, -9.127325e-05, -0.00026910257, -4.7041198e-05, -0.00042723241, -2.3360508e-06, -3.7684315e-06, -0.050158594, -0.019793898, -4.4419543e-05, -5.503005e-05, -0.00024835463, -0.006295352, -0.045470145, -0.19274026, -1.264561, -1.676031e-05, -0.00031179338, -0.0028665215, -0.00015493727, -0.020062594, -1.0204763e-05, -0.00086912856, -8.653179e-06, -8.892534e-06, -3.0707724e-05, -8.221057e-05, -1.402038e-05, -2.9159892e-05, -1.1430258e-06, -7.8540467e-07, -0.000807982, -5.586358e-05, -0.0003960448, -8.185389e-05, -1.5805701e-05, -0.00013276069, -1.9741461e-05, -1.9263687e-05, -6.8669196e-06, -1.3542607e-05, -1.855031e-05, -1.8190814e-05, -1.3185924e-05, -3.357061e-05, -0.00051411585, -6.563869e-05, -6.9861335e-06, -0.0038518207, -2.5941252e-05, -1.6282536e-05, -3.6195077e-05, -4.277735e-07, -1.8841804e-07, -0.0005802513, -1.4974988e-05, -4.716134e-05, -3.0947078e-05, -3.5717305e-05, -1.5448071e-05, -4.6206733e-05, -8.8290224e-05, -6.885639e-05, -1.2708151e-05, -0.0007473762, -0.00023929571, -7.100402e-05, -0.00015255497, -3.883893e-06, -9.055464e-07, -0.15376976, -0.017661862, -0.04317927, -0.0017318965, -0.000102002974, -0.00013562171, -0.0033096795, -0.007935181, -2.9302568, -0.00092878635, -0.005970126, -0.00018629384, -0.102988996, -0.29750913, -1.671271, -0.00021479129, -1.361693, -0.015759658, -0.003431623, -0.00357177, -6.432833e-05, -4.4818075e-06, -0.86130655, -0.040449757, -0.002678004, -0.00024287197, -0.00045728518, -0.017873853, -0.14784436, -0.9336145, -0.00016125533, -0.68053615, -0.0032407881, -4.2153635e-05, -0.0004256799, -1.0681599e-05, -2.7490969e-05, -0.3449353, -0.013828167, -0.027675685, -0.00020966532, -0.026834095, -0.05320644], "top_logprobs": null, "text_offset": [5702, 5702, 5703, 5710, 5711, 5715, 5718, 5720, 5727, 5728, 5732, 5735, 5737, 5746, 5748, 5754, 5755, 5764, 5766, 5775, 5781, 5782, 5785, 5792, 5793, 5797, 5799, 5808, 5809, 5812, 5815, 5817, 5819, 5821, 5822, 5823, 5824, 5827, 5829, 5830, 5831, 5833, 5836, 5839, 5842, 5844, 5846, 5849, 5851, 5853, 5862, 5863, 5866, 5869, 5871, 5874, 5877, 5879, 5882, 5883, 5885, 5886, 5888, 5890, 5892, 5894, 5903, 5904, 5907, 5910, 5912, 5914, 5916, 5918, 5920, 5922, 5931, 5933, 5939, 5940, 5949, 5951, 5960, 5966, 5967, 5970, 5977, 5978, 5982, 5984, 5993, 5994, 5997, 6000, 6002, 6004, 6006, 6007, 6008, 6009, 6012, 6014, 6015, 6016, 6018, 6021, 6024, 6027, 6029, 6031, 6034, 6036, 6038, 6047, 6048, 6051, 6054, 6056, 6059, 6062, 6064, 6067, 6068, 6070, 6071, 6073, 6075, 6077, 6079, 6088, 6089, 6092, 6095, 6097, 6098, 6100, 6102, 6104, 6106, 6109, 6111, 6118, 6119, 6123, 6126, 6128, 6137, 6143, 6144, 6150, 6152, 6161, 6162, 6165, 6168, 6170, 6172, 6174, 6176, 6178, 6180, 6189, 6195, 6196, 6202, 6204, 6213, 6214, 6217, 6220, 6222, 6224, 6226, 6228, 6232]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.0068541123, -0.089909315, -0.09000452, -6.909574e-05, -0.00067496306, -4.573365e-05, -0.005552822, -0.15312143, -1.7119806e-05, -0.0002360752, -0.00013466804, -0.008571922, -0.2457652, -0.035840396, -0.27645254, -5.0778563e-06, -3.249586e-05, -0.0010596277, -8.531094e-05, -0.03995299, -9.606849e-06, -0.002438854, -1.42597355e-05, -1.0084622e-05, -4.6325007e-05, -0.000143252, -1.1159372e-05, -2.3912831e-05, -1.9765537e-06, 0, -0.0018725195, -4.3586017e-05, -0.00069434993, -0.00015589187, -8.653179e-06, -0.00027745095, -1.4616429e-05, -5.169127e-05, -6.1516675e-06, -1.855031e-05, -4.370523e-05, -0.00013740796, -3.154219e-05, -5.4791635e-05, -0.0009268772, -7.8634315e-05, -1.5327929e-05, -0.0071386797, -5.2288255e-05, -1.2468796e-05, -9.370307e-06, -1.8841804e-07, -4.361666e-06, -0.0005623597, -5.8130416e-05, -5.2288255e-05, -7.541475e-05, -6.206056e-05, -1.771398e-05, -6.38515e-05, -6.122609e-05, -0.00016888563, -2.2484204e-05, -7.839496e-05, -0.00030893143, -3.5717305e-05, -0.00042293806, -1.2622395e-06, -5.3162735e-06, -0.045503516, -0.015335329, -5.0022347e-05, -4.9782993e-05, -0.00023357182, -0.005189969, -0.043204598, -0.15638578, -0.34636945, -0.062087115, -2.4032974e-05, -0.12520388, -0.00017234455, -4.0603925e-05, -5.145473e-05, -3.529076e-06, -7.4639065e-06, -0.2216711, -0.04441422, -0.00011297111, -7.791906e-05, -0.0010030647, -0.000348106, -2.987608e-05, -0.00014134373, -4.361666e-06, -5.197998e-06, -0.71815497, -0.12384637, -0.038239412, -0.0056791743, -0.0018777751, -0.0041654026, -0.20545234, -6.0395385e-05, -3.0826937e-05, -0.0014025412, -0.0045406986, -0.017737756, -0.04082725, -0.038507905, -3.225932e-05, -0.5144944, -5.312365e-05, -1.8668587e-05, -4.5967376e-05, -1.9765537e-06, -1.3823812e-06, -0.024329077, -0.00016769636, -0.0038968776, -9.413332e-05, -0.00012894507, -9.091469e-05, -1.9860674e-05, -6.21807e-05, -2.4272329e-05, -0.00015124086, -3.2906587e-06, -3.9172486e-05, -0.01004896, -0.00042019345, -0.006703847, -0.0031032017, -0.15905431, -0.005043667, -2.7728449e-05, -0.00018557765, -5.5269407e-05, -0.00015708302, -0.00059164374, -0.00025670204, -0.00023488217, -0.0019466907, -9.365555e-05, -4.382537e-05, -4.29881e-05, -0.00011809803, -9.854499e-05, -6.2699432e-06, -2.558363e-05, -5.2885232e-05, -2.8565719e-05, -3.1901687e-05, -3.2906587e-06, -6.89756e-05, -8.244993e-05, -5.956092e-05, -3.2906587e-06, -0.5333583, -0.002063152, -2.4986643e-05, -4.394177e-05, -8.176345e-06, -9.639735e-05, -0.0016699804, -0.000108559456, -6.0633804e-05, -6.862172e-05, -9.305951e-05, -2.1171965e-05, -0.00040677824, -0.00018462398, -7.481963e-05, -6.9453374e-05, -0.011899626, -0.030488133, -0.1499393, -0.099696696, -0.0002338093, -0.0009602284, -0.0001740144, -0.004366952, -0.12911683], "top_logprobs": null, "text_offset": [5702, 5702, 5703, 5710, 5711, 5715, 5718, 5720, 5727, 5728, 5732, 5735, 5737, 5746, 5748, 5754, 5755, 5764, 5766, 5775, 5781, 5782, 5785, 5792, 5793, 5797, 5799, 5808, 5809, 5812, 5815, 5817, 5819, 5821, 5822, 5823, 5824, 5827, 5829, 5830, 5831, 5833, 5836, 5839, 5842, 5844, 5846, 5849, 5851, 5853, 5862, 5863, 5866, 5869, 5871, 5874, 5877, 5879, 5882, 5883, 5885, 5886, 5888, 5890, 5892, 5894, 5903, 5904, 5907, 5910, 5912, 5914, 5916, 5918, 5920, 5922, 5931, 5933, 5942, 5948, 5949, 5955, 5957, 5966, 5967, 5970, 5973, 5975, 5977, 5979, 5981, 5983, 5985, 5994, 5995, 5998, 6001, 6003, 6005, 6007, 6009, 6012, 6014, 6020, 6021, 6030, 6032, 6041, 6043, 6052, 6058, 6059, 6065, 6067, 6076, 6077, 6080, 6083, 6085, 6086, 6087, 6089, 6091, 6093, 6095, 6097, 6106, 6107, 6110, 6113, 6115, 6117, 6120, 6123, 6125, 6127, 6128, 6129, 6130, 6132, 6135, 6138, 6141, 6143, 6146, 6149, 6152, 6154, 6156, 6157, 6158, 6159, 6161, 6164, 6167, 6170, 6172, 6174, 6177, 6179, 6181, 6190, 6191, 6194, 6197, 6199, 6202, 6205, 6207, 6210, 6211, 6213, 6214, 6216, 6218, 6221, 6221, 6221, 6221, 6221, 6221, 6221, 6221]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0"], "token_logprobs": [-0.0068541123, -0.089909315, -0.08264233, -9.675685e-05, -0.000737831, -4.1320116e-05, -0.0052881744, -0.13986714, -1.9980816e-05, -0.00022051518, -0.00013836258, -0.0058578267, -1.5440724, -8.892534e-06, -0.00010283744, -1.9143545e-05, -0.0024052137, -1.5900906, -3.1781543e-05, -0.00012143587, -2.6893982e-05, -0.00749581, -0.267491, -0.020090023, -0.1229657, -1.402038e-05, -1.2468796e-05, -0.00054363545, -6.158372e-05, -0.018939529, -2.693682e-06, -0.0009330826, -2.2159093e-06, -7.584048e-06, -0.00011511593, -0.00026934195, -9.251094e-06, -2.4986643e-05, -1.3823812e-06, 0, -0.0014593061, -6.4446605e-05, -0.00064108433, -0.00013919984, -7.937927e-06, -0.00031107623, -0.00015970749, -0.00011571198, -8.4157e-06, -2.558363e-05, -3.8103353e-05, -0.00019404522, -7.732115e-05, -9.5442745e-05, -0.0008242085, -5.8247755e-05, -2.2484204e-05, -0.009349183, -0.00012238578, -1.7119806e-05, -1.2112103e-05, -6.5092986e-06, -2.0575926e-05, -0.0011480007, -0.00017735413, -0.00017413269, -0.00017234455, -5.896488e-05, -1.4377073e-05, -0.00014098798, -5.2288255e-05, -0.0003250293, -4.1678675e-05, -7.946878e-05, -0.0002448957, -5.896488e-05, -0.0006021416, -5.197998e-06, -3.076318e-07, -0.0426552, -0.014802971, -4.0009756e-05, -4.871012e-05, -4.9427246e-05, -0.00035848093, -0.013054484, -0.023725748, -0.064925045, -9.055464e-07, -2.1529595e-05, -8.984087e-05, -1.5925843e-05, -0.00019392508, -1.022884e-06, -2.8138238e-06, -5.460492e-07, -2.8138238e-06, -6.746778e-06, -2.28437e-05, -7.4639065e-06, -2.1649737e-05, -1.8841804e-07, 0, -0.00011583212, -1.5805701e-05, -0.00012560723, -2.987608e-05, -9.012677e-06, -4.5255874e-05, -2.5744682e-06, -1.676031e-05, -5.197998e-06, -1.163433e-05, -2.9280032e-05, -1.5448071e-05, -1.3306066e-05, -3.7386224e-05, -0.000118453776, -3.249586e-05, -1.2231317e-05, -0.0003280123, -8.5358415e-06, -9.490449e-06, -1.4736571e-05, -3.076318e-07, -6.827632e-08, -0.00021407605, -7.224551e-06, -6.611553e-05, -2.6180607e-05, -3.5357807e-05, -2.8087945e-05, -3.7386224e-05, -0.000107127074, -3.762558e-05, -1.163433e-05, -0.0009558129, -5.6102934e-05, -3.452334e-05, -7.839496e-05, -2.2159093e-06, 0, -0.026539458, -0.009183866, -0.009000832, -0.00024406594, -4.3108244e-05, -8.244993e-05, -0.0075609097, -0.0011445418, -0.060502913, -0.037799753, -0.25847813, -4.4818075e-06, -6.48061e-05, -0.00035848093, -5.5745302e-05, -0.014810592, -1.7400124e-06, -0.00014027084, -6.6619094e-07, -2.5744682e-06, -1.6165199e-05, -4.6206733e-05, -9.72699e-06, -1.5094201e-05, -4.277735e-07, -6.827632e-08, -0.00041023534, -4.859278e-05, -0.00019332903, -3.3212986e-05, -7.4639065e-06, -8.626461e-05, -6.746778e-06, -2.7251614e-05, -3.883893e-06, -1.1753544e-05, -2.9519388e-05, -2.2365928e-05, -9.72699e-06, -2.6538237e-05, -0.00049073686, -4.144026e-05, -8.296486e-06, -0.0012428861, -2.0575926e-05, -1.2468796e-05, -1.306671e-05, -3.076318e-07, 0, -0.0006066752, -2.200643e-05, -0.00012357882, -6.754697e-05, -4.3586017e-05, -2.2484204e-05, -0.0001033124, -7.9946556e-05, -7.517727e-05, -2.2958224e-05, -0.0026280398, -8.268835e-05, -5.0856816e-05, -0.00017842514, -4.0040345e-06, -6.6619094e-07, -0.24336265, -0.011447218, -7.839496e-05, -6.158372e-05, -0.006238012, -0.007420087, -0.5968172, -0.07765086, -0.5129744, -0.10037719, -2.1291178e-05, -0.22293381, -0.00013586106, -3.8457234e-05, -7.016862e-05, -3.6482897e-06, -3.01145e-05, -0.24943863, -0.016012002, -0.00015004877, -0.0001296622, -0.00015040733, -0.00025002356, -2.7013197e-05, -0.00044738431, -5.3162735e-06, -1.8841804e-07, -0.42285016, -0.10945056, -0.0029515235, -0.00014718683, -0.011051122, -0.010027829, -0.1064969, -6.396884e-05, -2.5703772e-05, -0.0007997482, -6.3134365e-05, -0.00641976, -0.0080942195, -0.015662946, -2.4032974e-05, -0.19153304, -4.8353428e-05, -1.5214344e-05, -4.2631407e-05, -1.1430258e-06, -3.051303e-06, -0.01509822], "top_logprobs": null, "text_offset": [5702, 5702, 5703, 5710, 5711, 5715, 5718, 5720, 5727, 5728, 5732, 5735, 5737, 5744, 5745, 5749, 5752, 5754, 5761, 5762, 5766, 5769, 5771, 5780, 5782, 5788, 5789, 5798, 5800, 5809, 5815, 5816, 5819, 5826, 5827, 5831, 5833, 5842, 5843, 5846, 5849, 5851, 5853, 5855, 5856, 5857, 5858, 5861, 5863, 5864, 5865, 5867, 5870, 5873, 5876, 5878, 5880, 5883, 5885, 5887, 5896, 5897, 5900, 5903, 5905, 5908, 5911, 5913, 5916, 5917, 5919, 5920, 5922, 5924, 5926, 5928, 5937, 5938, 5941, 5944, 5946, 5948, 5950, 5952, 5954, 5956, 5965, 5967, 5973, 5974, 5983, 5985, 5994, 6000, 6001, 6004, 6011, 6012, 6016, 6018, 6027, 6028, 6031, 6034, 6036, 6038, 6040, 6041, 6042, 6043, 6046, 6048, 6049, 6050, 6052, 6055, 6058, 6061, 6063, 6065, 6068, 6070, 6072, 6081, 6082, 6085, 6088, 6090, 6093, 6096, 6098, 6101, 6102, 6104, 6105, 6107, 6109, 6111, 6113, 6122, 6123, 6126, 6129, 6131, 6132, 6134, 6136, 6138, 6140, 6143, 6145, 6154, 6156, 6162, 6163, 6172, 6174, 6183, 6189, 6190, 6193, 6200, 6201, 6205, 6207, 6216, 6217, 6220, 6223, 6225, 6227, 6229, 6230, 6231, 6232, 6235, 6237, 6238, 6239, 6241, 6244, 6247, 6250, 6252, 6254, 6257, 6259, 6261, 6270, 6271, 6274, 6277, 6279, 6282, 6285, 6287, 6290, 6291, 6293, 6294, 6296, 6298, 6300, 6302, 6311, 6312, 6315, 6318, 6320, 6322, 6324, 6326, 6329, 6331, 6340, 6342, 6351, 6357, 6358, 6364, 6366, 6375, 6376, 6379, 6382, 6384, 6386, 6388, 6390, 6392, 6394, 6403, 6404, 6407, 6410, 6412, 6414, 6416, 6418, 6421, 6423, 6429, 6430, 6439, 6441, 6450, 6452, 6461, 6467, 6468, 6474, 6476, 6485, 6486, 6489, 6492]}, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.0068541123, -0.08990917, -0.08264233, -9.675685e-05, -0.0007887144, -4.3465872e-05, -0.004661296, -0.14007214, -2.1291178e-05, -0.00030606854, -0.00014945272, -0.008526412, -0.23146924, -0.046678867, -0.25540733, -6.8669196e-06, -2.8087945e-05, -0.001217641, -8.51908e-05, -0.037667293, -6.8669196e-06, -0.0014596655, -1.44972155e-05, -8.4157e-06, -4.8949474e-05, -0.00023309403, -1.402038e-05, -2.9519388e-05, -2.3360508e-06, 0, -0.0013796804, -5.3837026e-05, -0.00069053244, -0.00016614476, -9.012677e-06, -0.0002781662, -6.0395385e-05, -4.29881e-05, -5.912312e-06, -2.1529595e-05, -3.2616e-05, -0.00012918444, -3.201996e-05, -6.408898e-05, -0.0010751426, -9.151261e-05, -1.37819625e-05, -0.0069903517, -5.061746e-05, -1.5567284e-05, -1.0204763e-05, -1.8841804e-07, -5.0778563e-06, -0.000803209, -7.100402e-05, -6.4446605e-05, -5.4432137e-05, -5.2765092e-05, -1.402038e-05, -7.97072e-05, -6.790459e-05, -0.00019690624, -2.582111e-05, -8.447461e-05, -0.0002634979, -5.109523e-05, -0.00078227243, -2.0966954e-06, -4.9586424e-06, -0.054967616, -0.015762141, -4.871012e-05, -5.3242864e-05, -0.00015016893, -0.004255847, -0.041096255, -0.17937633, -0.33305776, -0.07421151, -2.1649737e-05, -0.20601158, -0.00052377454, -3.7863996e-05, -5.7891062e-05, -2.8138238e-06, -5.4364154e-06, -0.25415182, -0.04650252, -8.852958e-05, -6.48061e-05, -0.0009505622, -0.00022170728, -3.9292627e-05, -0.000272799, -3.2906587e-06, -2.8138238e-06, -0.70029426, -0.0759227, -0.032476056, -0.006427439, -0.0018390772, -0.0041069877, -0.22929189, -8.388231e-05, -4.2870764e-05, -0.0017221037, -0.0041255406, -0.018610712, -0.03122278, -0.04405972, -2.9996223e-05, -0.45964572, -5.562516e-05, -2.2484204e-05, -5.037998e-05, -2.0966954e-06, -2.2159093e-06, -0.025224363, -0.00016626397, -0.0044074208, -9.425254e-05, -8.6025255e-05, -9.925743e-05, -2.7133337e-05, -4.5847235e-05, -2.272356e-05, -0.00011201744, -2.9311614e-06, -6.9690854e-05, -0.008276846, -0.0005473328, -0.0054303776, -0.002534938, -0.14584608, -0.005087038, -3.3928238e-05, -0.00019619097, -5.7413286e-05, -0.00016006512, -0.00055699435, -0.0002410829, -0.00020298682, -0.0015769057, -0.00016829051, -5.5385808e-05, -4.1080762e-05, -0.00012536882, -0.00015505555, -6.8669196e-06, -2.033751e-05, -6.0753944e-05, -2.582111e-05, -2.6419024e-05, -4.361666e-06, -5.4194657e-05, -0.000108559456, -5.4432137e-05, -3.051303e-06, -0.50630754, -0.001211018, -2.7251614e-05, -3.7743856e-05, -5.675771e-06, -0.00014349136, -0.0013880371, -0.0001033124, -4.6921985e-05, -7.541475e-05, -7.8634315e-05, -2.1529595e-05, -0.0005201964, -0.00015613029, -7.97072e-05, -7.016862e-05, -0.009860108, -0.029474616, -0.14897807, -0.112653255, -0.00018248011, -0.0009919079, -0.00015863274, -0.005107588, -0.1147533], "top_logprobs": null, "text_offset": [5702, 5702, 5703, 5710, 5711, 5715, 5718, 5720, 5727, 5728, 5732, 5735, 5737, 5746, 5748, 5754, 5755, 5764, 5766, 5775, 5781, 5782, 5785, 5792, 5793, 5797, 5799, 5808, 5809, 5812, 5815, 5817, 5819, 5821, 5822, 5823, 5824, 5827, 5829, 5830, 5831, 5833, 5836, 5839, 5842, 5844, 5846, 5849, 5851, 5853, 5862, 5863, 5866, 5869, 5871, 5874, 5877, 5879, 5882, 5883, 5885, 5886, 5888, 5890, 5892, 5894, 5903, 5904, 5907, 5910, 5912, 5914, 5916, 5918, 5920, 5922, 5931, 5933, 5942, 5948, 5949, 5955, 5957, 5966, 5967, 5970, 5973, 5975, 5977, 5979, 5981, 5983, 5985, 5994, 5995, 5998, 6001, 6003, 6005, 6007, 6009, 6012, 6014, 6020, 6021, 6030, 6032, 6041, 6043, 6052, 6058, 6059, 6065, 6067, 6076, 6077, 6080, 6083, 6085, 6086, 6087, 6089, 6091, 6093, 6095, 6097, 6106, 6107, 6110, 6113, 6115, 6117, 6120, 6123, 6125, 6127, 6128, 6129, 6130, 6132, 6135, 6138, 6141, 6143, 6146, 6149, 6152, 6154, 6156, 6157, 6158, 6159, 6161, 6164, 6167, 6170, 6172, 6174, 6177, 6179, 6181, 6190, 6191, 6194, 6197, 6199, 6202, 6205, 6207, 6210, 6211, 6213, 6214, 6216, 6218, 6221, 6221, 6221, 6221, 6221, 6221, 6221, 6221]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.0068541123, -0.089908846, -0.08264233, -9.675685e-05, -0.00045048565, -3.4048382e-05, -0.005606047, -0.12028474, -2.200643e-05, -0.00027983607, -0.00015863274, -0.009130328, -0.28170684, -0.04651613, -0.27865675, -5.197998e-06, -3.225932e-05, -0.0010701293, -8.00667e-05, -0.03729885, -6.6294406e-06, -0.0023898592, -1.4974988e-05, -9.251094e-06, -4.430127e-05, -0.00012882493, -1.2231317e-05, -2.462996e-05, -2.3360508e-06, 0, -0.001496911, -5.7177684e-05, -0.00088278874, -0.00014098798, -8.176345e-06, -0.00024751923, -3.4642555e-05, -4.9308033e-05, -8.0580685e-06, -2.582111e-05, -3.3928238e-05, -0.00018390873, -3.8457234e-05, -7.088388e-05, -0.0012082733, -7.541475e-05, -1.0800813e-05, -0.006658004, -5.0022347e-05, -1.5925843e-05, -8.653179e-06, -3.076318e-07, -5.3162735e-06, -0.00076795614, -4.871012e-05, -6.253833e-05, -8.674238e-05, -6.0276172e-05, -1.7834122e-05, -7.398424e-05, -5.860725e-05, -0.00017997579, -2.462996e-05, -7.982734e-05, -0.00022927843, -4.5847235e-05, -0.00063559884, -1.8601542e-06, -2.0966954e-06, -0.050820943, -0.015204483, -5.896488e-05, -5.956092e-05, -0.00019463846, -0.0029352626, -0.040300936, -0.17349775, -0.31871054, -0.06802562, -2.2126573e-05, -0.12276533, -0.00015446138, -4.4181128e-05, -6.408898e-05, -3.170517e-06, -2.0966954e-06, -0.22058529, -0.051719017, -8.7337496e-05, -7.9112084e-05, -0.001232561, -0.00039282523, -3.9055147e-05, -0.00038435764, -1.8601542e-06, -1.7400124e-06, -0.69387746, -0.13874432, -0.033367332, -0.005287934, -0.0016964307, -0.0036708321, -0.23349458, -0.00010605607, -0.00023655016, -0.0014421747, -0.0050053275, -0.019498412, -0.032647174, -0.031335685, -3.3450466e-05, -0.51566017, -7.1958624e-05, -2.2245786e-05, -2.7611111e-05, -2.3360508e-06, -2.3360508e-06, -0.02893357, -0.00017711478, -0.0047223787, -0.000113686365, -0.00012000537, -0.00015255497, -2.3912831e-05, -4.6921985e-05, -2.6298881e-05, -0.00017031706, -4.4818075e-06, -5.4075444e-05, -0.009288841, -0.00065850193, -0.0058475137, -0.002072052, -1.9633582, -0.06667268, -5.2288255e-05, -0.0021333357, -0.000110942696, -0.00047433955, -0.00052437244, -0.00038208987, -0.0003195429, -0.0030544759, -0.00011022838, -9.5442745e-05, -4.489638e-05, -0.001791009, -0.00029939285, -5.79217e-06, -3.6311474e-05, -8.268835e-05, -2.665838e-05, -4.275062e-05, -1.7400124e-06, -6.13453e-05, -0.00011976601, -7.601266e-05, -1.6207987e-06, -0.62087196, -0.001101455, -2.4986643e-05, -3.8577375e-05, -6.1516675e-06, -0.00013287991, -0.0018064743, -0.00014146294, -7.279122e-05, -0.00012477185, -5.860725e-05, -2.5344274e-05, -0.00062051, -0.00011905076, -0.00010092916, -7.779892e-05, -0.010562054, -0.031813893, -0.13919252, -0.10789991, -0.00028353152, -0.0013496557, -0.00010963327, -0.0053374907, -0.13353758], "top_logprobs": null, "text_offset": [5702, 5702, 5703, 5710, 5711, 5715, 5718, 5720, 5727, 5728, 5732, 5735, 5737, 5746, 5748, 5754, 5755, 5764, 5766, 5775, 5781, 5782, 5785, 5792, 5793, 5797, 5799, 5808, 5809, 5812, 5815, 5817, 5819, 5821, 5822, 5823, 5824, 5827, 5829, 5830, 5831, 5833, 5836, 5839, 5842, 5844, 5846, 5849, 5851, 5853, 5862, 5863, 5866, 5869, 5871, 5874, 5877, 5879, 5882, 5883, 5885, 5886, 5888, 5890, 5892, 5894, 5903, 5904, 5907, 5910, 5912, 5914, 5916, 5918, 5920, 5922, 5931, 5933, 5942, 5948, 5949, 5955, 5957, 5966, 5967, 5970, 5973, 5975, 5977, 5979, 5981, 5983, 5985, 5994, 5995, 5998, 6001, 6003, 6005, 6007, 6009, 6012, 6014, 6020, 6021, 6030, 6032, 6041, 6043, 6052, 6058, 6059, 6065, 6067, 6076, 6077, 6080, 6083, 6085, 6086, 6087, 6089, 6091, 6093, 6095, 6097, 6106, 6107, 6110, 6113, 6115, 6117, 6120, 6123, 6125, 6127, 6128, 6129, 6130, 6132, 6135, 6138, 6141, 6143, 6146, 6149, 6152, 6154, 6156, 6157, 6158, 6159, 6161, 6164, 6167, 6170, 6172, 6174, 6177, 6179, 6181, 6190, 6191, 6194, 6197, 6199, 6202, 6205, 6207, 6210, 6211, 6213, 6214, 6216, 6218, 6221, 6221, 6221, 6221, 6221, 6221, 6221, 6221]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0068541123, -0.08990917, -0.08264233, -9.675685e-05, -0.00045048565, -3.4048382e-05, -0.005238142, -0.15566812, -1.855031e-05, -0.00021979994, -0.00011547263, -0.007921902, -0.2368118, -0.03802355, -0.2770701, -4.361666e-06, -3.2855354e-05, -0.0010728749, -7.338913e-05, -0.040167276, -5.912312e-06, -0.0021015578, -1.6402679e-05, -6.8669196e-06, -3.97704e-05, -0.00015755986, -1.2351458e-05, -3.154219e-05, -2.3360508e-06, 0, -0.0014738683, -5.264588e-05, -0.00053164794, -0.00016459411, -9.251094e-06, -0.00029462262, -5.550595e-05, -5.8247755e-05, -7.224551e-06, -2.3795494e-05, -2.987608e-05, -0.00013478725, -4.0009756e-05, -7.362661e-05, -0.0010652371, -7.1719274e-05, -1.4616429e-05, -0.008236823, -4.847264e-05, -1.7119806e-05, -8.296486e-06, 0, -2.5744682e-06, -0.0007503564, -6.2420055e-05, -6.110595e-05, -5.264588e-05, -7.076466e-05, -1.6165199e-05, -7.24364e-05, -5.896488e-05, -0.00013180608, -2.4152187e-05, -7.6726035e-05, -0.00028949478, -4.501652e-05, -0.00058806554, -2.693682e-06, -4.6010214e-06, -0.05690194, -0.013709664, -5.3837026e-05, -6.0038692e-05, -0.00017294059, -0.0036931485, -0.045015767, -0.17209703, -0.3353942, -0.056121994, -2.880226e-05, -1.7480913, -0.0009904745, -3.8103353e-05, -8.876706e-05, -4.0040345e-06, -4.721163e-06, -0.76004577, -0.0045326734, -0.017667687, -0.0002981989, -0.00039043918, -0.00010534082, -0.00446819, -0.00033617954, -3.7743856e-05, -0.00022313965, -6.5092986e-06, -9.234426e-05, -0.34018776, -0.019671341, -1.1022401, -0.0036906959, -0.00241364, -0.0029581601, -0.13348277, -5.896488e-05, -1.6165199e-05, -0.0010373741, -0.00036789934, -0.0055988533, -0.007065204, -0.03239583, -1.2588937e-05, -0.3112323, -7.8872734e-05, -1.7834122e-05, -2.462996e-05, -3.7684315e-06, -1.9765537e-06, -0.32385635, -0.00022600066, -0.010095079, -0.00015148021, -0.00011726356, -7.8514175e-05, -1.2828294e-05, -7.076466e-05, -2.3078366e-05, -6.838237e-05, -3.170517e-06, 0, -0.0190038, -0.00094173127, -0.0052343663, -0.001946213, -0.36156482, -0.011223926, -2.9996223e-05, -0.000623968, -0.00036384718, -0.00022850404, -0.0009762774, -7.553489e-05, -0.0002118092, -0.0016890266, -0.00013538517, -4.3108244e-05, -4.0126153e-05, -0.0007374715, -0.0002494275, -4.2433903e-06, -4.0246297e-05, -0.000108796, -4.370523e-05, -3.7148744e-05, -4.1232483e-06, -7.231626e-05, -0.000107127074, -5.693833e-05, -2.9311614e-06, -0.4260984, -0.00064549973, -1.7475562e-05, -2.9280032e-05, -1.2112103e-05, -4.5847235e-05, -0.0019120518, -0.00017151104, -0.000111540605, -6.921402e-05, -6.0633804e-05, -2.6060465e-05, -0.0004968193, -0.00012322118, -0.000120481265, -9.162713e-05, -0.012624795, -0.02524576, -0.110033974, -0.10533198, -0.0001783078, -0.00086435553, -4.394177e-05], "top_logprobs": null, "text_offset": [5702, 5702, 5703, 5710, 5711, 5715, 5718, 5720, 5727, 5728, 5732, 5735, 5737, 5746, 5748, 5754, 5755, 5764, 5766, 5775, 5781, 5782, 5785, 5792, 5793, 5797, 5799, 5808, 5809, 5812, 5815, 5817, 5819, 5821, 5822, 5823, 5824, 5827, 5829, 5830, 5831, 5833, 5836, 5839, 5842, 5844, 5846, 5849, 5851, 5853, 5862, 5863, 5866, 5869, 5871, 5874, 5877, 5879, 5882, 5883, 5885, 5886, 5888, 5890, 5892, 5894, 5903, 5904, 5907, 5910, 5912, 5914, 5916, 5918, 5920, 5922, 5931, 5933, 5942, 5948, 5949, 5955, 5957, 5966, 5967, 5970, 5973, 5975, 5976, 5977, 5979, 5981, 5983, 5985, 5987, 5996, 5997, 6000, 6003, 6005, 6007, 6009, 6011, 6014, 6016, 6022, 6023, 6032, 6034, 6043, 6045, 6054, 6060, 6061, 6067, 6069, 6078, 6079, 6082, 6085, 6087, 6088, 6089, 6091, 6093, 6095, 6097, 6099, 6108, 6109, 6112, 6115, 6117, 6119, 6122, 6125, 6127, 6129, 6130, 6131, 6132, 6134, 6137, 6140, 6143, 6145, 6148, 6151, 6154, 6156, 6158, 6159, 6160, 6161, 6163, 6166, 6169, 6172, 6174, 6176, 6179, 6181, 6183, 6192, 6193, 6196, 6199, 6201, 6204, 6207, 6209, 6212, 6213, 6215, 6216, 6218, 6220, 6223, 6223, 6223, 6223, 6223, 6223]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LzWHKTRXBt1iEsaHWkfb6h2d2WL", "object": "text_completion", "created": 1651004546, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0048568365, -0.07318177, -0.0669145, -3.690939e-05, -0.000929144, -0.00010402765, -0.004511778, -0.73955554, -0.07728723, -0.23162161, -0.16592, -1.306671e-05, -0.12632796, -0.00043271598, -4.8949474e-05, -1.5567284e-05, -1.1514188e-05, -2.9311614e-06, -0.11209116, -0.0066994657, -8.566857e-05, -0.00012918444, -0.000106773194, -0.00033665728, -5.6818186e-05, -0.00019905198, -1.2112103e-05, -8.5358415e-06, -0.19372101, -0.18186282, -0.00013586106, -8.626461e-05, -0.0010787218, -0.0039588106, -0.25326765, -0.07434498, -0.11800551, -0.03973895, -1.3185924e-05, -0.24587987, -0.00053743285, -3.3809963e-05, -6.9861335e-06, -1.2708151e-05, -8.7733215e-06, -0.12547447, -0.038166896, -0.00019499795, -0.0001083201, -0.00043188062, -0.0014470688, -0.0006765137, -0.00088123814, -2.6180607e-05, -4.277735e-07, -1.2379802, -0.17515978, -0.008790172, -0.0009070707, -0.0028081816, -0.0178622, -0.039494555, -0.0447022, -6.015603e-05, -0.0004310471, -0.0001033124], "top_logprobs": null, "text_offset": [4574, 4574, 4575, 4582, 4583, 4587, 4590, 4592, 4601, 4603, 4612, 4618, 4619, 4625, 4627, 4636, 4637, 4640, 4643, 4645, 4647, 4649, 4651, 4653, 4655, 4664, 4665, 4668, 4671, 4673, 4675, 4677, 4679, 4681, 4683, 4692, 4694, 4703, 4709, 4710, 4716, 4718, 4727, 4728, 4731, 4734, 4736, 4738, 4740, 4742, 4744, 4746, 4755, 4756, 4759, 4762, 4764, 4766, 4768, 4770, 4773, 4773, 4773, 4773, 4773, 4773]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0048568365, -0.07318184, -0.0669145, -3.690939e-05, -0.000929144, -0.00010402765, -0.004511778, -0.7123739, -1.4616429e-05, -0.000113686365, -7.4104384e-05, -0.0022012517, -0.07051316, -0.038156677, -0.4970857, -7.584048e-06, -4.048565e-05, -0.0011281295, -0.00027995434, -0.030964045, -5.675771e-06, -0.011485383, -1.402038e-05, -7.937927e-06, -6.337372e-05, -0.00031119544, -1.8310955e-05, -1.4736571e-05, -5.5556293e-06, -1.8841804e-07, -0.004574409, -0.00036634682, -0.0025249564, -0.00032526677, -4.2272848e-05, -0.0010751426, -0.0009840316, -0.00018855974, -2.4152187e-05, -0.00018700723, -0.00030845366, -0.0022436092, -0.0006123982, -0.00047809698, -0.28758308, -0.00016995943, -8.0580685e-06, -0.020494211, -4.883026e-05, -2.582111e-05, -6.031526e-06, -2.3360508e-06, -1.771398e-05, -0.0005630759, -0.00048537247, -0.00012238578, -0.0003282479, -0.00017842514, -2.7490969e-05, -0.0006775875, -5.3837026e-05, -0.0003264598, -7.6252014e-05, -6.2299914e-05, -0.0003165636, -5.5385808e-05, -0.002771899, -2.0966954e-06, -3.170517e-06, -0.07085226, -0.05498462, -0.00012632155, -9.3535404e-05, -0.00018438557, -0.0035541824, -0.017943941, -0.10456273, -0.48224843, -0.03367292, -1.1398727e-05, -0.22674115, -6.802381e-05, -3.8338017e-05, -1.3661821e-05, -3.051303e-06, -5.460492e-07, -0.066613995, -0.018517567, -8.8290224e-05, -7.827482e-05, -0.000845744, -0.00041613853, -6.13453e-05, -0.00012930272, -7.4639065e-06, -1.1430258e-06, -1.1381248, -0.11890083, -0.018271321, -0.0007221462, -0.003971434, -0.0054201274, -1.4379272, -2.4497194, -6.611553e-05, -0.19298862, -0.008338691, -0.0015973814, -0.00037648613, -3.1781543e-05, -1.3823812e-06, -1.0079159, -0.028562326, -0.015682198, -0.002760243, -0.017100306, -0.014246284, -0.062314957, -0.04331458, -3.965026e-05, -0.00050266617, -0.00023559744], "top_logprobs": null, "text_offset": [4574, 4574, 4575, 4582, 4583, 4587, 4590, 4592, 4599, 4600, 4604, 4607, 4609, 4618, 4620, 4626, 4627, 4636, 4638, 4647, 4653, 4654, 4657, 4664, 4665, 4669, 4671, 4680, 4681, 4684, 4687, 4689, 4691, 4693, 4694, 4695, 4696, 4699, 4701, 4702, 4703, 4705, 4708, 4711, 4714, 4716, 4718, 4721, 4723, 4725, 4734, 4735, 4738, 4741, 4743, 4746, 4749, 4751, 4754, 4755, 4757, 4758, 4760, 4762, 4764, 4766, 4775, 4776, 4779, 4782, 4784, 4786, 4788, 4790, 4792, 4794, 4803, 4805, 4814, 4820, 4821, 4827, 4829, 4838, 4839, 4842, 4845, 4847, 4849, 4851, 4853, 4855, 4857, 4866, 4867, 4870, 4873, 4875, 4877, 4879, 4881, 4884, 4886, 4895, 4901, 4902, 4908, 4910, 4919, 4920, 4923, 4926, 4928, 4930, 4932, 4934, 4937, 4937, 4937, 4937, 4937, 4937]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0048568365, -0.07597009, -0.076522134, -4.2392992e-05, -0.0012062431, -0.00014027084, -0.0047837053, -0.68271226, -1.2946569e-05, -0.00015791749, -7.016862e-05, -0.0025555526, -0.081188984, -0.040537026, -0.52061415, -7.584048e-06, -6.9690854e-05, -0.000954619, -0.00012858746, -0.033768594, -5.5556293e-06, -0.012979424, -1.5805701e-05, -1.0444119e-05, -6.516092e-05, -0.00021085552, -1.855031e-05, -1.5327929e-05, -6.8669196e-06, -6.827632e-08, -0.0051773265, -0.00029557722, -0.0019478265, -0.00028293548, -3.3450466e-05, -0.0010655947, -0.00089352694, -0.00013764732, -2.558363e-05, -0.00016852893, -0.00019976817, -0.0020914634, -0.0007995088, -0.0007048478, -0.30966365, -0.00014360964, -9.370307e-06, -0.016756456, -6.4566746e-05, -2.9519388e-05, -5.5556293e-06, -3.170517e-06, -2.7611111e-05, -0.0005451852, -0.00039997965, -0.00011583212, -0.0004110726, -0.00016626397, -2.7371756e-05, -0.00062730775, -4.811501e-05, -0.0003191862, -6.599631e-05, -5.157113e-05, -0.00038984313, -4.680184e-05, -0.0018995715, -2.8138238e-06, -3.051303e-06, -0.07087484, -0.05890662, -0.00010307304, -9.7351025e-05, -0.0001118973, -0.002606648, -0.023645615, -0.09695813, -0.46658713, -0.037888397, -1.2468796e-05, -0.24325621, -5.6818186e-05, -3.3809963e-05, -1.42597355e-05, -5.0778563e-06, -1.8841804e-07, -0.070863836, -0.019928813, -6.99302e-05, -7.601266e-05, -0.0011253858, -0.00039437588, -4.370523e-05, -0.00013812509, -9.130952e-06, 0, -1.1465724, -0.100339696, -0.018959332, -0.00075984333, -0.004375873, -0.0053025563, -0.32928917, -4.5135734e-05, -3.058758e-05, -0.0009774667, -0.004440649, -0.01110181, -0.023577875, -0.018912984, -1.37819625e-05, -1.402835, -0.00066816533, -4.5494293e-05, -2.3795494e-05, -7.8540467e-07, -5.4364154e-06, -0.7577491, -0.0023375202, -0.021467924, -0.00049455435, -0.00020310696, -0.00017413269, -3.9292627e-05, -0.00029414485, -4.2392992e-05, -4.5135734e-05, -5.3162735e-06, -7.1062755e-06, -0.027030155, -0.0021523302, -0.015643328, -0.009596129, -0.07233731, -0.010379551, -0.0001304948, -0.0010029455, -7.4104384e-05, -0.00024477651, -0.0024693254, -0.00020811372, -0.002015551, -0.011011952, -0.00041995506, -0.00014051021, -8.388231e-05, -0.00018248011, -0.00017246376, -1.1159372e-05, -5.944078e-05, -4.9902206e-05, -6.146545e-05, -9.103483e-05, -1.0800813e-05, -6.0276172e-05, -0.0003942557, -3.8338017e-05, -4.6010214e-06, -0.4882807, -0.0004675409, -2.9041616e-05, -1.42597355e-05, -4.2433903e-06, -9.72699e-06, -0.0020532378, -0.00036432498, -0.00018140629, -0.00017699462, -0.00018617464, -2.8682118e-05, -0.0011796867, -0.000113566224, -0.00025300472, -9.162713e-05, -0.011520476, -0.020587789, -0.09426731, -0.07950851], "top_logprobs": null, "text_offset": [4574, 4574, 4575, 4582, 4583, 4587, 4590, 4592, 4599, 4600, 4604, 4607, 4609, 4618, 4620, 4626, 4627, 4636, 4638, 4647, 4653, 4654, 4657, 4664, 4665, 4669, 4671, 4680, 4681, 4684, 4687, 4689, 4691, 4693, 4694, 4695, 4696, 4699, 4701, 4702, 4703, 4705, 4708, 4711, 4714, 4716, 4718, 4721, 4723, 4725, 4734, 4735, 4738, 4741, 4743, 4746, 4749, 4751, 4754, 4755, 4757, 4758, 4760, 4762, 4764, 4766, 4775, 4776, 4779, 4782, 4784, 4786, 4788, 4790, 4792, 4794, 4803, 4805, 4814, 4820, 4821, 4827, 4829, 4838, 4839, 4842, 4845, 4847, 4849, 4851, 4853, 4855, 4857, 4866, 4867, 4870, 4873, 4875, 4877, 4879, 4881, 4884, 4886, 4892, 4893, 4902, 4904, 4913, 4915, 4924, 4930, 4931, 4937, 4939, 4948, 4949, 4952, 4955, 4957, 4958, 4959, 4961, 4963, 4965, 4967, 4969, 4978, 4979, 4982, 4985, 4987, 4989, 4992, 4995, 4997, 4999, 5000, 5001, 5002, 5004, 5007, 5010, 5013, 5015, 5018, 5021, 5024, 5026, 5028, 5029, 5030, 5031, 5033, 5036, 5039, 5042, 5044, 5046, 5049, 5051, 5053, 5062, 5063, 5066, 5069, 5071, 5074, 5077, 5079, 5082, 5083, 5085, 5086, 5088, 5090, 5093, 5093, 5093]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0048569557, -0.08061057, -0.06930339, -4.2631407e-05, -0.0013988401, -0.00013097163, -0.008247939, -0.6917621, -1.1159372e-05, -0.00011201744, -9.890355e-05, -0.0031937289, -0.065054424, -0.03556687, -0.95975417, -0.15227494, -1.3306066e-05, -0.0953246, -0.00014027084, -4.0126153e-05, -6.8669196e-06, -1.0323977e-05, -6.827632e-08, -0.09079951, -0.006500387, -7.24364e-05, -7.6252014e-05, -8.578871e-05, -0.00025574747, -4.477904e-05, -0.00027959672, -4.0040345e-06, -1.022884e-06, -2.9005883, -0.10164119, -0.0009773466, -7.231626e-05, -0.0017468832, -0.0017067596, -0.048248433, -0.068748094, -0.1034411, -0.020117143, -5.912312e-06, -0.08359725, -9.198663e-05, -1.2708151e-05, -2.8138238e-06, -2.0575926e-05, -1.5006569e-06, -0.08541219, -0.032842226, -6.3134365e-05, -3.8338017e-05, -0.0013167119, -0.00093624304, -5.3242864e-05, -0.00042556066, -1.9263687e-05, -1.6207987e-06, -1.1828383, -0.07651146, -0.009698137, -0.00036289258, -0.044849247, -0.0057388223, -0.9314981, -0.07905402, -0.101755284, -0.03091597, -9.490449e-06, -0.20170692, -0.00014885482, -3.3093773e-05, -4.0603925e-05, -6.6619094e-07, -2.6893982e-05, -0.10128251, -0.023379194, -6.826223e-05, -5.4432137e-05, -0.0003974753, -0.00032204814, -6.623567e-05, -0.0002202777, -2.5703772e-05, -4.1232483e-06, -0.6173205, -0.46315426, -0.00042866106, -0.00016197246, -0.003743523, -0.012169586, -0.038039092, -0.03400241, -5.562516e-05, -0.00024990342, -0.00025956213], "top_logprobs": null, "text_offset": [4574, 4574, 4575, 4582, 4583, 4587, 4590, 4592, 4599, 4600, 4604, 4607, 4609, 4618, 4620, 4629, 4635, 4636, 4642, 4644, 4653, 4654, 4657, 4660, 4662, 4664, 4666, 4668, 4670, 4672, 4681, 4682, 4685, 4688, 4690, 4692, 4694, 4696, 4698, 4700, 4709, 4711, 4720, 4726, 4727, 4733, 4735, 4744, 4745, 4748, 4751, 4753, 4755, 4757, 4759, 4761, 4763, 4772, 4773, 4776, 4779, 4781, 4783, 4785, 4787, 4790, 4792, 4801, 4803, 4812, 4818, 4819, 4825, 4827, 4836, 4837, 4840, 4843, 4845, 4847, 4849, 4851, 4853, 4855, 4864, 4865, 4868, 4871, 4873, 4875, 4877, 4879, 4882, 4882, 4882, 4882, 4882, 4882]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0048569557, -0.07973881, -0.07566762, -4.2631407e-05, -0.0012055287, -8.161453e-05, -0.0043460587, -0.7274222, -0.07275196, -0.2310727, -0.17865032, -1.4854846e-05, -0.16409892, -0.00044845813, -5.1930627e-05, -2.0575926e-05, -8.892534e-06, -3.7684315e-06, -0.120276004, -0.008571441, -9.580224e-05, -0.00013431041, -0.00012429406, -0.00044476078, -5.3363005e-05, -0.00032777296, -1.6642034e-05, -8.7733215e-06, -0.20349243, -0.16740787, -0.00014337122, -8.173468e-05, -0.0008642354, -0.00674201, -0.24903254, -0.07104518, -0.111262344, -0.036716077, -1.4377073e-05, -0.23441742, -0.00045609125, -2.7967804e-05, -5.5556293e-06, -1.1873685e-05, -4.1232483e-06, -0.10709241, -0.044837028, -0.00020036235, -7.9112084e-05, -0.00041154944, -0.0016070532, -0.00044977036, -0.0010201293, -3.0826937e-05, -1.1430258e-06, -1.0019326, -0.15709545, -0.035145674, -0.0028977839, -0.004522437, -0.02261687, -0.050793413, -0.041785117, -5.4075444e-05, -0.00022588052, -4.799487e-05], "top_logprobs": null, "text_offset": [4574, 4574, 4575, 4582, 4583, 4587, 4590, 4592, 4601, 4603, 4612, 4618, 4619, 4625, 4627, 4636, 4637, 4640, 4643, 4645, 4647, 4649, 4651, 4653, 4655, 4664, 4665, 4668, 4671, 4673, 4675, 4677, 4679, 4681, 4683, 4692, 4694, 4703, 4709, 4710, 4716, 4718, 4727, 4728, 4731, 4734, 4736, 4738, 4740, 4742, 4744, 4746, 4755, 4756, 4759, 4762, 4764, 4766, 4768, 4770, 4773, 4773, 4773, 4773, 4773, 4773]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0048569557, -0.08071512, -0.07536069, -4.6921985e-05, -0.001225995, -9.2941234e-05, -0.0067500514, -0.74674386, -0.07108805, -0.21169727, -0.16956845, -1.3306066e-05, -0.14544825, -0.00043283522, -4.489638e-05, -2.4272329e-05, -1.2828294e-05, -3.170517e-06, -0.10880839, -0.0055182967, -8.781245e-05, -0.00012214643, -0.000106295425, -0.00040331934, -4.9069615e-05, -0.00023524073, -1.5214344e-05, -8.892534e-06, -0.20705622, -0.18968846, -7.779892e-05, -6.862172e-05, -0.00091279834, -0.005596935, -0.22718158, -0.062366027, -0.10085065, -0.036806356, -1.2231317e-05, -0.2417974, -0.00043891673, -2.7133337e-05, -6.031526e-06, -1.402038e-05, -2.8138238e-06, -0.11143151, -0.043719184, -0.00018331176, -7.708367e-05, -0.00046575186, -0.0015825169, -0.0018411076, -0.0009031922, -3.7505437e-05, -9.055464e-07, -1.6427904, -0.35260084, -0.18611553, -0.002615551, -0.0004508442, -0.00041011896, -0.0014684964, -0.01182097, -0.03224673, -0.038611542, -6.146545e-05], "top_logprobs": null, "text_offset": [4574, 4574, 4575, 4582, 4583, 4587, 4590, 4592, 4601, 4603, 4612, 4618, 4619, 4625, 4627, 4636, 4637, 4640, 4643, 4645, 4647, 4649, 4651, 4653, 4655, 4664, 4665, 4668, 4671, 4673, 4675, 4677, 4679, 4681, 4683, 4692, 4694, 4703, 4709, 4710, 4716, 4718, 4727, 4728, 4731, 4734, 4736, 4738, 4740, 4742, 4744, 4746, 4755, 4756, 4759, 4762, 4764, 4765, 4767, 4769, 4771, 4773, 4776, 4776, 4776, 4776]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0048569557, -0.07959222, -0.07984913, -5.24084e-05, -0.0013185028, -9.305951e-05, -0.0048056855, -0.75931174, -0.05478514, -0.24349183, -0.18994537, -1.3422466e-05, -0.1764711, -0.00043414652, -4.9308033e-05, -1.8788729e-05, -9.490449e-06, -3.6482897e-06, -0.10660663, -0.008334125, -7.9349564e-05, -0.00014611395, -0.00011690406, -0.00040821065, -5.300351e-05, -0.00033039556, -1.771398e-05, -8.176345e-06, -0.19956647, -0.16477643, -0.00016638411, -7.9946556e-05, -0.0008673367, -0.004225738, -0.27134842, -0.08693212, -0.10212819, -0.037934087, -1.3542607e-05, -0.2481869, -0.00055746926, -2.2604345e-05, -4.6010214e-06, -1.402038e-05, -7.224551e-06, -2.793842, -0.2751761, -0.0096669635, -0.0005178132, -0.0037023025, -0.0006486029, -6.599631e-05, -0.0007468994, -1.7475562e-05, -2.4543265e-06, -1.095673, -0.09373536, -0.0017908899, -0.00019070739, -0.005565648, -0.014163819, -0.03598231, -0.04083414, -4.0843282e-05, -0.00017329915, -1.7475562e-05], "top_logprobs": null, "text_offset": [4574, 4574, 4575, 4582, 4583, 4587, 4590, 4592, 4601, 4603, 4612, 4618, 4619, 4625, 4627, 4636, 4637, 4640, 4643, 4645, 4647, 4649, 4651, 4653, 4655, 4664, 4665, 4668, 4671, 4673, 4675, 4677, 4679, 4681, 4683, 4692, 4694, 4703, 4709, 4710, 4716, 4718, 4727, 4728, 4731, 4734, 4736, 4738, 4740, 4742, 4744, 4746, 4755, 4756, 4759, 4762, 4764, 4766, 4768, 4770, 4773, 4773, 4773, 4773, 4773, 4773]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 0.5 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "transform"], "token_logprobs": [-0.0048569557, -0.077644035, -0.065513745, -4.8949474e-05, -0.0010867792, -0.00012238578, -0.0069758277, -0.7489244, -0.06769511, -0.25154638, -0.21520977, -1.5687427e-05, -0.1282691, -0.00054745295, -4.716134e-05, -2.0935424e-05, -1.5214344e-05, -3.529076e-06, -0.10810881, -0.005372009, -7.028876e-05, -0.00013943638, -0.00010176362, -0.00050171156, -5.300351e-05, -0.00036229656, -1.4854846e-05, -8.892534e-06, -0.18438356, -0.17295043, -0.00014587646, -8.364295e-05, -0.00085659855, -0.0049469825, -0.2168355, -2.924179, -8.852958e-05, -0.8429207, -0.02225613, -0.001405404, -0.000976635, -4.871012e-05, -1.1430258e-06, -2.4839873, -0.15225218, -0.2145977, -0.011385663, -0.0056683854, -0.0018149549, -0.0059676687, -0.015601191, -0.03836278, -0.03845327, -4.489638e-05, -0.00038876932, -4.072407e-05, -0.018579928, -0.6366649], "top_logprobs": null, "text_offset": [4574, 4574, 4575, 4582, 4583, 4587, 4590, 4592, 4601, 4603, 4612, 4618, 4619, 4625, 4627, 4636, 4637, 4640, 4643, 4645, 4647, 4649, 4651, 4653, 4655, 4664, 4665, 4668, 4671, 4673, 4675, 4677, 4679, 4681, 4683, 4692, 4698, 4699, 4705, 4707, 4716, 4717, 4720, 4723, 4725, 4726, 4727, 4729, 4731, 4733, 4736, 4736, 4736, 4736, 4736, 4736, 4736, 4736]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", "))))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0048568365, -0.07424238, -0.06831225, -4.0126153e-05, -0.0012404991, -0.00011630989, -0.005165943, -0.7011239, -0.07347662, -0.23521267, -0.20769936, -1.3306066e-05, -0.1667669, -0.00023082721, -5.157113e-05, -2.0696069e-05, -9.72699e-06, -3.170517e-06, -0.10197308, -0.013702355, -8.209043e-05, -0.0001233404, -9.377476e-05, -0.00033582002, -5.598372e-05, -0.00035049114, -1.2828294e-05, -1.0800813e-05, -0.2162518, -0.19689332, -7.1719274e-05, -6.7307614e-05, -0.00062289607, -0.0052035074, -0.27104297, -0.077803604, -0.14693145, -0.041781824, -9.846204e-06, -1.4290264, -0.0019014224, -7.136165e-05, -2.1768952e-05, -2.0815281e-05, -7.8540467e-07, -0.38206333, -0.0042177783, -0.03109746, -0.001035344, -0.0005869927, -0.00012000537, -0.00014015351, -0.00033832624, -8.256821e-05, -0.00060047174, -1.0084622e-05, -2.3360508e-06, -0.1371024, -0.004193296, -0.2557654, -0.041539103, -1.7216624, -0.10480814, -0.0021425916, -0.0034538156, -0.00012620141, -0.0048595313, -0.0020407548, -0.008470507, -0.0023762968, -0.0390559, -0.0006773481, -0.00061406806, -0.00042114808, -0.008791735, -0.00039926343, -1.6165199e-05, -0.00014289531, -0.00014241754, -0.00011392572, -0.00018224075, -5.7532503e-05, -7.302963e-05, -0.00069673505, -0.024549633, -0.56801486, -0.01776069, -0.04313185, -0.039551046, -5.979934e-05], "top_logprobs": null, "text_offset": [4574, 4574, 4575, 4582, 4583, 4587, 4590, 4592, 4601, 4603, 4612, 4618, 4619, 4625, 4627, 4636, 4637, 4640, 4643, 4645, 4647, 4649, 4651, 4653, 4655, 4664, 4665, 4668, 4671, 4673, 4675, 4677, 4679, 4681, 4683, 4692, 4694, 4703, 4709, 4710, 4716, 4718, 4727, 4728, 4731, 4734, 4736, 4737, 4738, 4740, 4742, 4744, 4746, 4748, 4757, 4758, 4761, 4764, 4766, 4768, 4771, 4774, 4776, 4778, 4779, 4780, 4781, 4783, 4786, 4789, 4792, 4794, 4797, 4800, 4803, 4805, 4807, 4808, 4809, 4810, 4812, 4815, 4818, 4821, 4823, 4825, 4829, 4829, 4829, 4829]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0048568365, -0.07430261, -0.07504055, -4.1320116e-05, -0.0014634858, -0.0001270368, -0.005940384, -0.7452842, -1.6521892e-05, -0.00014706762, -7.613187e-05, -0.0029648542, -0.07635087, -0.03044721, -0.5553488, -7.4639065e-06, -4.4181128e-05, -0.0011324257, -0.00015350676, -0.035823714, -7.818713e-06, -0.013866609, -1.8788729e-05, -1.1753544e-05, -5.3597672e-05, -0.0001970245, -1.5214344e-05, -1.4616429e-05, -4.361666e-06, 0, -0.004794068, -0.0003420226, -0.0018344789, -0.00027888143, -4.6684505e-05, -0.00070938055, -0.0010228711, -0.00021896455, -3.2735214e-05, -0.00013621869, -0.00042842168, -0.002450144, -0.000617527, -0.0007668814, -0.2896838, -0.000189275, -8.653179e-06, -0.01745513, -4.5255874e-05, -2.2365928e-05, -9.370307e-06, -2.5744682e-06, -3.965026e-05, -0.00054649834, -0.0004346243, -0.00016280691, -0.00039497006, -0.00015648511, -2.8445576e-05, -0.0006459766, -4.5494293e-05, -0.00034106892, -5.896488e-05, -5.0140625e-05, -0.00041411104, -5.109523e-05, -0.0028295792, -6.1516675e-06, -7.4639065e-06, -0.0694996, -0.056028124, -8.88872e-05, -7.768064e-05, -0.00018438557, -0.0035528664, -0.02481221, -0.10773792, -0.46387967, -0.040104296, -1.6521892e-05, -0.17279689, -7.505805e-05, -3.3689823e-05, -1.3422466e-05, -5.197998e-06, -3.076318e-07, -0.08307904, -0.019244207, -8.042151e-05, -7.6964454e-05, -0.0008199123, -0.0002925942, -5.1930627e-05, -0.00012155601, -5.79217e-06, -1.8841804e-07, -0.92865413, -0.13960378, -0.0031042194, -0.00016519109, -0.008793479, -0.0086880755, -1.0709469, -0.15634988, -0.2730464, -0.05316143, -1.402038e-05, -0.814093, -0.0004523939, -5.169127e-05, -1.688045e-05, -1.7400124e-06, -1.2622395e-06, -0.19995652, -0.00096106285, -0.011699267, -0.0002940247, -0.0001419407, -9.9142904e-05, -0.00010307304, -0.00023214132, -5.061746e-05, -0.00013228387, -5.197998e-06, -4.721163e-06, -0.066255815, -0.00404241, -0.045577627, -0.013845092, -0.15759857, -0.01141032, -0.00034047384, -0.0010923867, -6.015603e-05, -0.0008433579, -0.0024849821, -0.00060488336, -0.0019497377, -0.010148307, -9.0080226e-05, -0.0006152611, -0.0003392808, -0.00036623323, -0.00022242252, -1.8310955e-05, -8.0899285e-05, -4.489638e-05, -0.000104387145, -7.732115e-05, -1.306671e-05, -6.850158e-05, -0.00035561805, -0.0020426668, -0.15642954, -3.3550122, -0.47315392, -0.0001810496, -0.00010402765, -5.5556293e-06, -2.8138238e-06, -0.0057619014, -0.0028662821, -0.0006001122, -0.001224205, -0.00046742076, -4.036551e-05, -0.019773958, -0.00012346054, -0.00038662262, -0.00010176362, -0.05766662, -0.023231307, -0.108666256, -0.08511334, -6.933416e-05, -0.00073926337, -0.00019607085, -0.0072654146], "top_logprobs": null, "text_offset": [4574, 4574, 4575, 4582, 4583, 4587, 4590, 4592, 4599, 4600, 4604, 4607, 4609, 4618, 4620, 4626, 4627, 4636, 4638, 4647, 4653, 4654, 4657, 4664, 4665, 4669, 4671, 4680, 4681, 4684, 4687, 4689, 4691, 4693, 4694, 4695, 4696, 4699, 4701, 4702, 4703, 4705, 4708, 4711, 4714, 4716, 4718, 4721, 4723, 4725, 4734, 4735, 4738, 4741, 4743, 4746, 4749, 4751, 4754, 4755, 4757, 4758, 4760, 4762, 4764, 4766, 4775, 4776, 4779, 4782, 4784, 4786, 4788, 4790, 4792, 4794, 4803, 4805, 4814, 4820, 4821, 4827, 4829, 4838, 4839, 4842, 4845, 4847, 4849, 4851, 4853, 4855, 4857, 4866, 4867, 4870, 4873, 4875, 4877, 4879, 4881, 4884, 4886, 4895, 4897, 4906, 4912, 4913, 4919, 4921, 4930, 4931, 4934, 4937, 4939, 4940, 4941, 4943, 4945, 4947, 4949, 4951, 4960, 4961, 4964, 4967, 4969, 4971, 4974, 4977, 4979, 4981, 4982, 4983, 4984, 4986, 4989, 4992, 4995, 4997, 5000, 5003, 5006, 5008, 5010, 5011, 5012, 5013, 5015, 5018, 5021, 5024, 5026, 5028, 5031, 5033, 5035, 5044, 5045, 5048, 5051, 5053, 5056, 5059, 5061, 5064, 5065, 5067, 5068, 5070, 5072, 5075, 5075, 5075, 5075, 5075, 5075, 5075]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LzeJNP0gjsLLWIsSE8OpM7wsQdg", "object": "text_completion", "created": 1651004554, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004221667, -0.0420113, -0.0633614, -4.751897e-05, -0.0009244911, -5.6340414e-05, -0.0049170917, -0.50233394, -0.08922547, -0.5556724, -2.3317722e-05, -0.00013061494, -0.0019930347, -0.012700733, -0.07483517, -1.3185924e-05, -0.01268039, -0.00019654672, -1.7119806e-05, -2.0575926e-05, -0.00036205718, -4.716134e-05, -2.5703772e-05, -5.197998e-06, -1.8841804e-07, -0.0017403153, -0.00017604003, -0.001734523, -0.00029641076, -8.8410365e-05, -0.0015634737, -0.0015082537, -0.00019249457, -3.2616e-05, -0.000120719684, -7.6726035e-05, -0.0018792074, -0.0012923004, -0.00036468072, -0.55256236, -0.00022504793, -7.818713e-06, -0.044116843, -7.4104384e-05, -2.9519388e-05, -1.1991961e-05, -1.8841804e-07, -1.3823812e-06, -0.00044989053, -0.00028043022, -0.000162209, -0.00023535996, -0.00011225586, -3.058758e-05, -0.00049813156, -4.3347598e-05, -0.00039115347, -6.9453374e-05, -0.00010271822, -0.00042556066, -6.0395385e-05, -0.0007177308, -3.0353855e-05, -9.055464e-07, -0.1418471, -0.14807546, -0.0007124828, -0.00022361554, -0.0016286067, -0.00691959, -0.18730317, -1.3907392, -4.6684505e-05, -0.24625388, -0.0013917363, -5.9201422e-05, -0.00029641076, -1.676031e-05, -4.721163e-06, -0.87611586, -0.029503342, -0.0004959867, -0.00019929133, -0.007863386, -0.029129371, -0.06476592, -0.09266288, -7.732115e-05, -0.00053862494, -0.0003033258], "top_logprobs": null, "text_offset": [4831, 4831, 4832, 4839, 4840, 4844, 4847, 4849, 4858, 4860, 4866, 4867, 4876, 4878, 4887, 4893, 4894, 4897, 4904, 4905, 4909, 4911, 4920, 4921, 4924, 4927, 4929, 4931, 4933, 4934, 4935, 4936, 4939, 4941, 4942, 4943, 4945, 4948, 4951, 4954, 4956, 4958, 4961, 4963, 4965, 4974, 4975, 4978, 4981, 4983, 4986, 4989, 4991, 4994, 4995, 4997, 4998, 5000, 5002, 5004, 5006, 5015, 5016, 5019, 5022, 5024, 5026, 5028, 5030, 5032, 5034, 5043, 5049, 5050, 5056, 5058, 5067, 5068, 5071, 5074, 5076, 5078, 5080, 5082, 5085, 5085, 5085, 5085, 5085, 5085]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004221667, -0.047147933, -0.074545704, -5.3716885e-05, -0.00075775385, -8.471396e-05, -0.005177686, -0.48224756, -0.11065569, -0.9001077, -0.4119104, -1.4377073e-05, -0.112878375, -0.00082349137, -9.449002e-05, -0.00011320953, -7.3446927e-06, -6.827632e-08, -0.12033261, -0.010119648, -0.00038745708, -0.00012429406, -0.00013919984, -0.00072142907, -0.0001015252, -0.0013851724, -7.231626e-05, -1.8907942e-05, -0.20216945, -0.0795058, -0.00031548884, -7.505805e-05, -0.0005312913, -0.006905723, -0.17689037, -1.1570802, -3.3809963e-05, -0.17687699, -0.0010999034, -7.3745825e-05, -3.3093773e-05, -2.28437e-05, -7.8540467e-07, -0.6359761, -0.0101817865, -0.013270999, -0.00010176362, -0.007619106, -0.041187923, -0.05257468], "top_logprobs": null, "text_offset": [4831, 4831, 4832, 4839, 4840, 4844, 4847, 4849, 4858, 4860, 4869, 4875, 4876, 4882, 4884, 4893, 4894, 4897, 4900, 4902, 4904, 4906, 4908, 4910, 4912, 4921, 4922, 4925, 4928, 4930, 4932, 4934, 4936, 4938, 4940, 4949, 4955, 4956, 4962, 4964, 4973, 4974, 4977, 4980, 4982, 4984, 4986, 4988, 4991, 4991]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004221667, -0.03968462, -0.060448203, -4.799487e-05, -0.0012281437, -6.13453e-05, -0.0050419886, -0.46662286, -0.0861415, -0.9768151, -0.4090111, -1.3900239e-05, -0.09391487, -0.000977585, -8.685972e-05, -8.960433e-05, -6.9861335e-06, -6.827632e-08, -0.12210803, -0.010644283, -0.00032038015, -0.0002022697, -0.00012799047, -0.0006595767, -9.234426e-05, -0.0008290979, -7.791906e-05, -2.1051823e-05, -0.20638114, -0.051636606, -0.00023416693, -7.3745825e-05, -0.0004870414, -0.007005658, -0.17496066, -0.39587614, -1.1193076, -4.2153635e-05, -0.00016376152, -0.000965359, -0.0049436274, -0.04052852, -6.1516675e-06, -0.00307809, -0.00013180608, -1.9980816e-05, -9.966347e-06, -8.876706e-05, -2.200643e-05, -2.6180607e-05, -6.2699432e-06, -6.827632e-08, -0.00076640357, -5.216904e-05, -0.000859223, -0.00022963606, -0.00011297111, -0.00088779925, -0.0009779445, -9.997455e-05, -1.7119806e-05, -5.657977e-05, -5.8845668e-05, -0.00038304448, -0.00061227806, -0.00037100064, -0.25162932, -9.628002e-05, -1.1039229e-05, -0.060859296, -3.154219e-05, -1.7356348e-05, -1.0561456e-05, -1.8841804e-07, -5.4364154e-06, -0.00035871653, -0.00036706397, -0.00011475737, -5.6223078e-05, -0.00010045139, -2.9159892e-05, -0.0003345106, -5.1334588e-05, -0.00020215422, -3.9292627e-05, -0.014100586, -0.0007300778, -6.718934e-05, -0.00011058788, -1.7953334e-05, -8.0580685e-06, -0.23052502, -0.010831894, -0.008654765, -9.234426e-05, -0.0074824174, -0.03324199, -0.042801764], "top_logprobs": null, "text_offset": [4831, 4831, 4832, 4839, 4840, 4844, 4847, 4849, 4858, 4860, 4869, 4875, 4876, 4882, 4884, 4893, 4894, 4897, 4900, 4902, 4904, 4906, 4908, 4910, 4912, 4921, 4922, 4925, 4928, 4930, 4932, 4934, 4936, 4938, 4940, 4949, 4951, 4957, 4958, 4967, 4969, 4978, 4984, 4985, 4988, 4995, 4996, 5000, 5002, 5011, 5012, 5015, 5018, 5020, 5022, 5024, 5025, 5026, 5027, 5030, 5032, 5033, 5034, 5036, 5039, 5042, 5045, 5047, 5049, 5052, 5054, 5056, 5065, 5066, 5069, 5072, 5074, 5077, 5080, 5082, 5085, 5086, 5088, 5089, 5091, 5093, 5095, 5097, 5106, 5107, 5110, 5113, 5115, 5117, 5119, 5121, 5124, 5124]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004221667, -0.040391356, -0.06789216, -4.7875652e-05, -0.0011939513, -8.948419e-05, -0.0052951854, -0.99028945, -3.3450466e-05, -0.00056104746, -1.163433e-05, -0.003232955, -0.09922207, -0.03096017, -0.76620454, -1.0800813e-05, -8.3404535e-05, -0.0010940575, -0.005943503, -0.041893758, -9.606849e-06, -0.006523966, -0.000100094694, -1.5094201e-05, -1.4974988e-05, -0.0003348673, -2.6419024e-05, -1.7236207e-05, -9.966347e-06, -1.8841804e-07, -0.0009955469, -6.48061e-05, -0.0012928974, -0.0002775683, -6.7307614e-05, -0.0015107628, -0.0010279454, -0.00015016893, -2.3675353e-05, -8.3165185e-05, -9.592052e-05, -0.0009586768, -0.00095259154, -0.00034357232, -1.1111082, -0.00041142927, -6.1516675e-06, -0.021242263, -4.5494293e-05, -1.6521892e-05, -9.251094e-06, -1.022884e-06, -1.5006569e-06, -0.00048465535, -0.0002997486, -0.00016554873, -8.7696986e-05, -0.00010760485, -3.7148744e-05, -0.00026993704, -0.00011213572, -0.00036944906, -5.037998e-05, -3.643162e-05, -0.0004636042, -7.24364e-05, -0.0016136811, -3.6074933e-05, -3.076318e-07, -0.11361639, -0.036512416, -0.00012274434, -8.161453e-05, -0.00040606305, -0.0006769914, -0.036909454, -0.18527886, -0.7818948, -0.03879277, -7.4639065e-06, -0.0732715, -0.00017341838, -3.4642555e-05, -3.559716e-05, -9.606849e-06, -3.4089344e-06, -0.060154825, -0.013852041, -9.139247e-05, -0.00010235966, -0.0005704706, -0.00013705408, -2.5941252e-05, -0.00011809803, -5.5556293e-06, -4.0040345e-06, -0.09341641, -0.0046320753, -0.02667498, -0.0001779483, -0.0049558487, -0.011518487, -1.1081065, -1.6816924, -3.225932e-05, -0.24258055, -0.0015495638, -0.001114642, -0.00047040381, -2.6773841e-05, -2.5744682e-06, -0.57135314, -0.010041616, -0.015578791, -0.00028484376, -0.027121402, -0.02244179, -0.048459, -0.07044549, -5.264588e-05, -0.00053671666, -0.00020739941], "top_logprobs": null, "text_offset": [4831, 4831, 4832, 4839, 4840, 4844, 4847, 4849, 4856, 4857, 4861, 4864, 4866, 4875, 4877, 4883, 4884, 4893, 4895, 4904, 4910, 4911, 4914, 4921, 4922, 4926, 4928, 4937, 4938, 4941, 4944, 4946, 4948, 4950, 4951, 4952, 4953, 4956, 4958, 4959, 4960, 4962, 4965, 4968, 4971, 4973, 4975, 4978, 4980, 4982, 4991, 4992, 4995, 4998, 5000, 5003, 5006, 5008, 5011, 5012, 5014, 5015, 5017, 5019, 5021, 5023, 5032, 5033, 5036, 5039, 5041, 5043, 5045, 5047, 5049, 5051, 5060, 5062, 5071, 5077, 5078, 5084, 5086, 5095, 5096, 5099, 5102, 5104, 5106, 5108, 5110, 5112, 5114, 5123, 5124, 5127, 5130, 5132, 5134, 5136, 5138, 5141, 5143, 5152, 5158, 5159, 5165, 5167, 5176, 5177, 5180, 5183, 5185, 5187, 5189, 5191, 5194, 5194, 5194, 5194, 5194, 5194]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (connect_strokes (connect_strokes (transform small_circle (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1"], "token_logprobs": [-0.004221667, -0.041241594, -0.07704057, -5.07376e-05, -0.0011956223, -5.7293146e-05, -0.0038727617, -0.97765166, -3.3212986e-05, -0.000391513, -1.1873685e-05, -0.0034926934, -0.09758629, -0.036910936, -0.7994065, -1.0084622e-05, -8.984087e-05, -0.001117747, -0.0054088007, -0.043681942, -1.3306066e-05, -0.006391805, -8.984087e-05, -1.4854846e-05, -1.5925843e-05, -0.00027864208, -3.881579e-05, -1.9503042e-05, -9.72699e-06, -1.8841804e-07, -0.0012051711, -0.00012989782, -0.0016677118, -0.0003244323, -8.7576846e-05, -0.0016390538, -0.0012857355, -0.00016888563, -2.1051823e-05, -0.00010057153, -8.51908e-05, -0.0017706478, -0.0015527881, -0.00035215908, -0.5086499, -0.00016459411, -8.4157e-06, -0.039351083, -5.264588e-05, -2.3435998e-05, -1.37819625e-05, -3.076318e-07, -1.022884e-06, -0.00060094945, -0.0005703532, -0.00015028719, -0.00014957195, -9.139247e-05, -2.8921473e-05, -0.0005860381, -5.1930627e-05, -0.00036444137, -4.5374152e-05, -0.000113805574, -0.00059247814, -5.979934e-05, -0.0015092093, -2.28437e-05, -1.1430258e-06, -0.14498118, -0.06661623, -0.00042889945, -0.0001625685, -0.00039115347, -0.00096655113, -0.029182514, -0.23182946, -0.56567025, -6.6294406e-06, -0.0010279454, -0.0012585222, -0.00357189, -0.010947227, -9.370307e-06, -0.00014551697, -1.9765537e-06, -2.4986643e-05, -8.0580685e-06, -2.5703772e-05, -2.0696069e-05, -4.2272848e-05, -1.7400124e-06, -6.6619094e-07, -0.0007771417, -0.00012465262, -0.0005656985, -0.00017198599, -4.799487e-05, -0.00046479818, -0.00083798793, -8.388231e-05, -1.843017e-05, -6.766711e-05, -6.539934e-05, -0.00041625864, -0.00016995943, -0.00012560723, -0.16016637, -0.00014289531, -1.0561456e-05, -0.0025854919, -1.163433e-05, -1.8073477e-05, -2.6538237e-05, -2.0218295e-05, -5.0778563e-06, -0.00083136663, -7.6252014e-05, -5.109523e-05, -3.3212986e-05, -4.608659e-05, -3.690939e-05, -0.00015374424, -7.553489e-05, -0.00018248011, -3.690939e-05, -0.00055472564, -0.00013216372, -6.850158e-05, -0.00012739444, -1.4854846e-05, -1.022884e-06, -0.061530475, -0.03471182, -0.043539174, -0.0005691593, -0.00012012551, -0.00010450542, -0.003372414, -0.017606657, -3.3626, -0.00043545783, -0.0016479504, -0.00021872611, -0.1689218, -2.6998127, -8.6025255e-05, -0.0006182413, -4.7875652e-05, -0.044948302, -0.055753313, -1.8560024, -2.2604345e-05, -0.35883847, -0.011737562, -0.005385787, -0.0015826372, -4.8353428e-05, -5.460492e-07, -0.5347987, -0.01780917, -0.0023087843, -0.00027423137, -0.0020840557, -0.013308386, -0.028106492, -1.3483609, -0.8576256, -8.244993e-05, -6.4921565e-05, -0.0045780023, -0.0023049612, -0.027369957, -7.584048e-06, -0.00307534, -5.1930627e-05, -1.5214344e-05, -4.361666e-06, -0.00013943638, -1.5687427e-05, -2.7371756e-05, -2.4543265e-06, -6.827632e-08, -0.00071439106, -5.979934e-05, -0.0017330906, -0.00018975277, -2.7967804e-05, -0.0004946726, -0.0003575263, -0.00018915485, -3.0353855e-05, -4.2631407e-05, -5.3242864e-05, -0.00029664824, -0.00021574495, -0.00020835307, -0.18720613, -0.00015755986, -3.8103353e-05, -0.022097865, -0.00011261161, -1.7119806e-05, -2.4272329e-05, -1.2622395e-06, -6.6619094e-07, -0.00043700845, -0.000888874, -0.00022927843, -7.314978e-05, -9.5562886e-05, -2.8565719e-05, -0.00040987958, -9.878341e-05, -0.00020703992, -5.109523e-05, -0.08731874, -0.0018945544, -4.7875652e-05, -0.0008042809, -2.8326363e-05, -3.170517e-06, -0.33293128, -0.012602218, -0.019049298, -0.00031858825, -0.026872726, -0.009300993, -0.5676814, -0.5808406, -1.0899922, -0.05155872, -5.79217e-06, -0.539722, -0.00048477546, -6.38515e-05, -5.7770918e-05, -1.1278585e-05, -1.9765537e-06, -0.30418158, -0.0012348278, -0.0077189323, -0.00029664824, -0.00011666565, -0.00015338662, -0.00015290885, -0.00069053244, -3.7983213e-05, -0.0005457812, -1.4736571e-05, -1.8841804e-07, -0.04063361, -0.0023621954, -0.10000513, -0.015539804, -0.2163127], "top_logprobs": null, "text_offset": [4831, 4831, 4832, 4839, 4840, 4844, 4847, 4849, 4856, 4857, 4861, 4864, 4866, 4875, 4877, 4883, 4884, 4893, 4895, 4904, 4910, 4911, 4914, 4921, 4922, 4926, 4928, 4937, 4938, 4941, 4944, 4946, 4948, 4950, 4951, 4952, 4953, 4956, 4958, 4959, 4960, 4962, 4965, 4968, 4971, 4973, 4975, 4978, 4980, 4982, 4991, 4992, 4995, 4998, 5000, 5003, 5006, 5008, 5011, 5012, 5014, 5015, 5017, 5019, 5021, 5023, 5032, 5033, 5036, 5039, 5041, 5043, 5045, 5047, 5049, 5051, 5060, 5062, 5068, 5069, 5078, 5080, 5089, 5095, 5096, 5099, 5106, 5107, 5111, 5113, 5122, 5123, 5126, 5129, 5131, 5133, 5135, 5136, 5137, 5138, 5141, 5143, 5144, 5145, 5147, 5150, 5153, 5156, 5158, 5160, 5163, 5165, 5167, 5176, 5177, 5180, 5183, 5185, 5188, 5191, 5193, 5196, 5197, 5199, 5200, 5202, 5204, 5206, 5208, 5217, 5218, 5221, 5224, 5226, 5227, 5229, 5231, 5233, 5235, 5238, 5240, 5247, 5248, 5252, 5255, 5257, 5264, 5265, 5269, 5272, 5274, 5283, 5289, 5290, 5296, 5298, 5307, 5308, 5311, 5314, 5316, 5318, 5320, 5322, 5324, 5326, 5335, 5337, 5343, 5344, 5353, 5355, 5364, 5370, 5371, 5374, 5381, 5382, 5386, 5388, 5397, 5398, 5401, 5404, 5406, 5408, 5410, 5411, 5412, 5413, 5416, 5418, 5419, 5420, 5422, 5425, 5428, 5431, 5433, 5435, 5438, 5440, 5442, 5451, 5452, 5455, 5458, 5460, 5463, 5466, 5468, 5471, 5472, 5474, 5475, 5477, 5479, 5481, 5483, 5492, 5493, 5496, 5499, 5501, 5503, 5505, 5507, 5510, 5512, 5521, 5523, 5532, 5538, 5539, 5545, 5547, 5556, 5557, 5560, 5563, 5565, 5566, 5567, 5569, 5571, 5573, 5575, 5577, 5586, 5587, 5590, 5593, 5595, 5597, 5600, 5603]}, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0))) (transform_matrix 0.5 0 0 0))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", "\n", "(", "connect", "_", "stro", "kes", " (", "transform"], "token_logprobs": [-0.004221667, -0.04128346, -0.068678446, -4.4419543e-05, -0.00046789853, -6.6593304e-05, -0.004191081, -0.4746555, -0.0869716, -0.99398714, -0.4186463, -1.5214344e-05, -0.11574575, -0.0008856516, -9.258174e-05, -8.709908e-05, -6.9861335e-06, -6.827632e-08, -0.10651706, -0.011644933, -0.00030237212, -0.00017091405, -0.000120719684, -0.00067675306, -9.890355e-05, -0.0010198909, -8.3165185e-05, -2.0935424e-05, -2.3830464, -0.05748485, -0.085039414, -0.002977531, -0.0036875843, -0.005414016, -0.21245681, -0.37384814, -0.626757, -3.7983213e-05, -8.232979e-05, -0.00031858825, -0.00015636964, -0.034434844, -4.6010214e-06, -0.00053290103, -0.00015696288, -1.2351458e-05, -6.9861335e-06, -7.744129e-05, -2.0218295e-05, -1.8788729e-05, -1.6282536e-05, -6.827632e-08, -0.0009111285, -7.016862e-05, -0.0006540893, -0.00025861035, -0.00012489199, -0.0006705523, -0.0004256799, -0.00010307304, -2.200643e-05, -5.550595e-05, -4.5847235e-05, -0.00031990238, -0.00066255784, -0.00019499795, -0.21778898, -9.9616926e-05, -1.5925843e-05, -0.06350467, -2.2604345e-05, -1.8907942e-05, -1.0800813e-05, -9.055464e-07, -4.277735e-07, -0.00036849445, -0.00033963655, -8.3284394e-05, -5.0976956e-05, -0.000118572985, -2.9756868e-05, -0.00022766957, -5.6340414e-05, -0.00024155974, -4.0126153e-05, -3.4142933, -0.0057119057, -0.062436383, -0.22956285, -0.0003317078, -1.7400124e-06, -3.393863, -0.4661706, -0.71045125, -0.025471346, -0.024832252, -0.01614938, -0.025510175, -0.028703887, -0.057037354, -0.056825537, -5.9085025e-05, -0.0006079856, -0.00017067656, -0.0031672413, -0.22628394], "top_logprobs": null, "text_offset": [4831, 4831, 4832, 4839, 4840, 4844, 4847, 4849, 4858, 4860, 4869, 4875, 4876, 4882, 4884, 4893, 4894, 4897, 4900, 4902, 4904, 4906, 4908, 4910, 4912, 4921, 4922, 4925, 4928, 4930, 4932, 4934, 4936, 4938, 4940, 4949, 4951, 4957, 4958, 4967, 4969, 4978, 4984, 4985, 4988, 4995, 4996, 5000, 5002, 5011, 5012, 5015, 5018, 5020, 5022, 5024, 5025, 5026, 5027, 5030, 5032, 5033, 5034, 5036, 5039, 5042, 5045, 5047, 5049, 5052, 5054, 5056, 5065, 5066, 5069, 5072, 5074, 5077, 5080, 5082, 5085, 5086, 5088, 5089, 5091, 5093, 5096, 5098, 5107, 5108, 5111, 5114, 5116, 5117, 5118, 5120, 5122, 5124, 5126, 5126, 5126, 5126, 5126, 5126, 5126, 5126]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004221667, -0.044924553, -0.086901315, -5.6460554e-05, -0.0011342157, -5.6102934e-05, -0.0036772336, -0.47198737, -0.09532164, -0.5546292, -3.023464e-05, -0.00017508729, -0.0019526042, -0.012646102, -0.07144412, -1.2231317e-05, -0.014018132, -0.00024394579, -2.1171965e-05, -1.402038e-05, -0.00031262785, -4.7279616e-05, -1.8190814e-05, -1.0084622e-05, -1.8841804e-07, -0.0015422818, -0.00014706762, -0.0015687273, -0.0003104802, -8.8290224e-05, -0.001699057, -0.0016293228, -0.0002121687, -1.9860674e-05, -0.00010068981, -9.5562886e-05, -0.0020533581, -0.0010592701, -0.0005639112, -1.105769, -0.00026218753, -6.8669196e-06, -0.044034373, -3.7148744e-05, -1.3542607e-05, -7.937927e-06, -9.055464e-07, -3.076318e-07, -0.00027983607, -0.00013884035, -0.0001010493, -5.467149e-05, -0.00011440349, -4.2631407e-05, -0.0004256799, -8.483411e-05, -0.00029140117, -5.2288255e-05, -2.6419024e-05, -0.00023535996, -5.145473e-05, -0.00032932175, -1.5327929e-05, -7.698572e-06, -0.061120123, -0.054958362, -8.1256905e-05, -7.744129e-05, -0.0008620868, -0.0026274456, -0.07535362, -0.55834156, -0.19474065, -0.023050627, -5.3162735e-06, -0.11787285, -0.000107247215, -6.468596e-05, -3.2140102e-05, -1.1514188e-05, -1.3823812e-06, -0.09569774, -0.014271797, -9.9735196e-05, -8.232979e-05, -0.00015815685, -0.00013586106, -3.762558e-05, -0.0001620926, -6.5092986e-06, -2.2159093e-06, -0.05590199, -0.0030998546, -0.011957351, -0.000116070536, -0.0029961215, -0.03996893, -0.05765595], "top_logprobs": null, "text_offset": [4831, 4831, 4832, 4839, 4840, 4844, 4847, 4849, 4858, 4860, 4866, 4867, 4876, 4878, 4887, 4893, 4894, 4897, 4904, 4905, 4909, 4911, 4920, 4921, 4924, 4927, 4929, 4931, 4933, 4934, 4935, 4936, 4939, 4941, 4942, 4943, 4945, 4948, 4951, 4954, 4956, 4958, 4961, 4963, 4965, 4974, 4975, 4978, 4981, 4983, 4986, 4989, 4991, 4994, 4995, 4997, 4998, 5000, 5002, 5004, 5006, 5015, 5016, 5019, 5022, 5024, 5026, 5028, 5030, 5032, 5034, 5043, 5045, 5054, 5060, 5061, 5067, 5069, 5078, 5079, 5082, 5085, 5087, 5089, 5091, 5093, 5095, 5097, 5106, 5107, 5110, 5113, 5115, 5117, 5119, 5121, 5124, 5124]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004221667, -0.043561902, -0.07135694, -4.799487e-05, -0.0005733325, -6.0038692e-05, -0.0037161822, -0.50601345, -0.099364325, -0.5544688, -2.4986643e-05, -0.00015278964, -0.0021200152, -0.0096359085, -0.072561465, -1.0800813e-05, -0.011775498, -0.0002121687, -1.3661821e-05, -1.7475562e-05, -0.00021097568, -4.7875652e-05, -1.8073477e-05, -6.1516675e-06, -6.827632e-08, -0.0018233745, -0.00016018527, -0.0013782469, -0.00030404294, -7.97072e-05, -0.0015489677, -0.001524192, -0.00020549206, -2.28437e-05, -0.0001083201, -8.626461e-05, -0.002154002, -0.0013618319, -0.0004170931, -0.5457418, -0.0002816242, -8.296486e-06, -0.05367223, -0.00010271822, -3.142485e-05, -1.4139594e-05, -1.8841804e-07, -1.7400124e-06, -0.0005393411, -0.00034536046, -0.00016805116, -0.00017019878, -0.00012417485, -3.5717305e-05, -0.00045418294, -4.0126153e-05, -0.0003668246, -5.490991e-05, -9.854499e-05, -0.00048846815, -3.9292627e-05, -0.0006680452, -3.4403198e-05, -4.277735e-07, -0.137542, -0.08852947, -0.0007114089, -0.00022385397, -0.0013495366, -0.009186572, -0.17986181, -0.35460457, -0.2781575, -0.047363076, -8.653179e-06, -0.090687774, -0.00011249522, -9.5442745e-05, -4.0603925e-05, -1.1753544e-05, -2.0966954e-06, -0.17887482, -0.013920217, -0.00015743972, -0.0001097506, -0.00012465262, -0.00033689477, -5.264588e-05, -0.00027220484, -9.846204e-06, -4.4818075e-06, -0.093558826, -0.009494069, -0.023307383, -0.00031143386, -0.002995049, -0.026461788, -0.054914344], "top_logprobs": null, "text_offset": [4831, 4831, 4832, 4839, 4840, 4844, 4847, 4849, 4858, 4860, 4866, 4867, 4876, 4878, 4887, 4893, 4894, 4897, 4904, 4905, 4909, 4911, 4920, 4921, 4924, 4927, 4929, 4931, 4933, 4934, 4935, 4936, 4939, 4941, 4942, 4943, 4945, 4948, 4951, 4954, 4956, 4958, 4961, 4963, 4965, 4974, 4975, 4978, 4981, 4983, 4986, 4989, 4991, 4994, 4995, 4997, 4998, 5000, 5002, 5004, 5006, 5015, 5016, 5019, 5022, 5024, 5026, 5028, 5030, 5032, 5034, 5043, 5045, 5054, 5060, 5061, 5067, 5069, 5078, 5079, 5082, 5085, 5087, 5089, 5091, 5093, 5095, 5097, 5106, 5107, 5110, 5113, 5115, 5117, 5119, 5121, 5124, 5124]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004221667, -0.044916574, -0.073177665, -4.3465872e-05, -0.00094984594, -6.575884e-05, -0.00479263, -0.46935806, -0.09071969, -0.5437773, -2.9519388e-05, -0.00017282138, -0.002039559, -0.010817313, -0.06631753, -1.0323977e-05, -0.015043458, -0.00016185326, -1.6282536e-05, -1.6999666e-05, -0.00026540618, -3.678925e-05, -2.2604345e-05, -8.0580685e-06, -6.827632e-08, -0.0017949505, -0.00017484887, -0.0017116527, -0.00039330113, -8.221057e-05, -0.0013270971, -0.0014793011, -0.00021157267, -2.5225998e-05, -0.00010355082, -8.531094e-05, -0.0024286367, -0.001297554, -0.0006530146, -1.042917, -0.0003176346, -7.3446927e-06, -0.04391566, -4.1080762e-05, -1.3661821e-05, -6.5092986e-06, -4.277735e-07, -3.076318e-07, -0.00028818252, -0.00010844024, -9.615988e-05, -6.754697e-05, -0.00010355082, -4.5613506e-05, -0.00033200442, -0.0001015252, -0.00033212456, -6.194322e-05, -2.9996223e-05, -0.00021932404, -4.811501e-05, -0.00020215422, -1.3422466e-05, -6.8669196e-06, -0.06023402, -0.03614143, -7.255186e-05, -7.11223e-05, -0.000955216, -0.0024025845, -0.07305193, -0.89232075, -1.44972155e-05, -0.7432561, -0.00047028364, -4.5135734e-05, -0.00013395278, -8.653179e-06, -5.460492e-07, -0.5625037, -0.01472663, -0.020115381, -0.00028925636, -0.009463139, -0.03247821, -0.06291328, -0.08388106, -6.850158e-05, -0.0008129916, -0.00018045263], "top_logprobs": null, "text_offset": [4831, 4831, 4832, 4839, 4840, 4844, 4847, 4849, 4858, 4860, 4866, 4867, 4876, 4878, 4887, 4893, 4894, 4897, 4904, 4905, 4909, 4911, 4920, 4921, 4924, 4927, 4929, 4931, 4933, 4934, 4935, 4936, 4939, 4941, 4942, 4943, 4945, 4948, 4951, 4954, 4956, 4958, 4961, 4963, 4965, 4974, 4975, 4978, 4981, 4983, 4986, 4989, 4991, 4994, 4995, 4997, 4998, 5000, 5002, 5004, 5006, 5015, 5016, 5019, 5022, 5024, 5026, 5028, 5030, 5032, 5034, 5043, 5049, 5050, 5056, 5058, 5067, 5068, 5071, 5074, 5076, 5078, 5080, 5082, 5085, 5085, 5085, 5085, 5085, 5085]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "transform"], "token_logprobs": [-0.004221667, -0.043175347, -0.07534642, -6.6713445e-05, -0.0010006767, -5.7652644e-05, -0.0040779016, -0.9593521, -2.8921473e-05, -0.00032514942, -1.2946569e-05, -0.003586366, -2.5467243, -3.166233e-05, -0.0001722244, -3.7266083e-05, -0.0029135065, -0.09595089, -0.038057975, -0.4027635, -1.5214344e-05, -3.8217877e-05, -0.00076520955, -0.0002562252, -0.025341675, -8.0580685e-06, -0.0036615622, -0.00014074863, -1.6521892e-05, -1.44972155e-05, -0.00035502107, -2.462996e-05, -1.7834122e-05, -9.251094e-06, -6.827632e-08, -0.0008477705, -9.615988e-05, -0.0013321715, -0.00027697318, -4.0126153e-05, -0.0015341023, -0.0010811088, -0.00011690406, -2.1051823e-05, -6.4921565e-05, -7.8514175e-05, -0.0012419315, -0.00069291756, -0.00035728698, -0.4398454, -0.00019332903, -1.402038e-05, -0.012481444, -4.370523e-05, -2.141132e-05, -1.42597355e-05, -9.055464e-07, -1.7400124e-06, -0.0004915713, -0.0007288838, -0.00010963327, -0.00015016893, -0.00010772499, -2.200643e-05, -0.0006243275, -5.0022347e-05, -0.0003645615, -5.2288255e-05, -6.087316e-05, -0.00047219192, -4.6206733e-05, -0.0011861325, -2.9519388e-05, -3.076318e-07, -0.11671369, -0.027311886, -0.00027542253, -0.00013538517, -0.00015577173, -0.00030773747, -0.015796835, -2.9638138, -3.0947078e-05, -0.49646395, -0.0020558652, -4.179789e-05, -0.00011583212, -1.7475562e-05, -3.529076e-06, -0.802654, -0.026399119, -0.013882743, -0.0006440683, -0.009797391, -0.0034563264, -0.25136372, -0.40166572, -1.1261097, -0.10142203, -1.1398727e-05, -0.30681363, -0.00044333027, -9.5442745e-05, -4.8233283e-05, -2.1889093e-05, -4.1232483e-06, -0.13282113, -0.016038049, -0.00039652258, -0.00012810968, -0.00014098798, -0.00012632155, -3.583558e-05, -0.00034297723, -1.9503042e-05, -1.8841804e-07, -0.92636687, -0.31989384, -0.049426105, -0.0004287793, -0.00011678579, -0.00010355082, -0.00805162, -0.015566803, -0.38061845, -1.1445062, -2.0218295e-05, -0.11893097, -0.00048668377, -4.9069615e-05, -0.00015517569, -6.6619094e-07, -8.364295e-05, -0.54261076, -0.0055241096, -0.0039252387, -6.89756e-05, -0.015128836, -0.019478172, -0.047778625, -0.063284814, -2.1171965e-05, -0.0005360014, -0.0003655161, -0.0060946755, -0.6152203], "top_logprobs": null, "text_offset": [4831, 4831, 4832, 4839, 4840, 4844, 4847, 4849, 4856, 4857, 4861, 4864, 4866, 4873, 4874, 4878, 4881, 4883, 4892, 4894, 4900, 4901, 4910, 4912, 4921, 4927, 4928, 4931, 4938, 4939, 4943, 4945, 4954, 4955, 4958, 4961, 4963, 4965, 4967, 4968, 4969, 4970, 4973, 4975, 4976, 4977, 4979, 4982, 4985, 4988, 4990, 4992, 4995, 4997, 4999, 5008, 5009, 5012, 5015, 5017, 5020, 5023, 5025, 5028, 5029, 5031, 5032, 5034, 5036, 5038, 5040, 5049, 5050, 5053, 5056, 5058, 5060, 5062, 5064, 5066, 5068, 5077, 5083, 5084, 5090, 5092, 5101, 5102, 5105, 5108, 5110, 5112, 5114, 5116, 5119, 5121, 5130, 5132, 5141, 5147, 5148, 5154, 5156, 5165, 5166, 5169, 5172, 5174, 5176, 5178, 5180, 5182, 5184, 5193, 5194, 5197, 5200, 5202, 5203, 5205, 5207, 5209, 5211, 5214, 5216, 5225, 5231, 5232, 5238, 5240, 5249, 5250, 5253, 5256, 5258, 5260, 5262, 5264, 5267, 5267, 5267, 5267, 5267, 5267, 5267, 5267]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LzpZcoHJAzVglxVtCq7ngCmKNSa", "object": "text_completion", "created": 1651004565, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0))))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.013031536, -0.1364129, -0.08219088, -0.00016900577, -0.0005207943, -8.483411e-05, -0.0025955916, -0.040662915, -1.163433e-05, -9.628002e-05, -5.7532503e-05, -0.0021452208, -0.063497305, -0.0338096, -0.3288766, -2.2245786e-05, -8.018216e-05, -0.00080189493, -0.0014705256, -0.07285248, -1.2708151e-05, -0.023879752, -2.7133337e-05, -2.8326363e-05, -0.000106773194, -0.00022707166, -1.5327929e-05, -2.665838e-05, -4.1232483e-06, -6.827632e-08, -0.005667486, -0.00037899046, -0.0045001623, -0.000562599, -4.3465872e-05, -0.0014107758, -0.00238287, -0.0005651034, -3.154219e-05, -0.00022671591, -0.00035132372, -0.0050379746, -0.0011315913, -0.0010602257, -0.3576678, -0.0010578377, -2.5105857e-05, -0.030523714, -4.5494293e-05, -3.3093773e-05, -1.2112103e-05, -1.3823812e-06, -0.00013764732, -0.0010155938, -0.0008228944, -0.00039306178, -0.0011043197, -0.0001779483, -4.29881e-05, -0.0012936136, -6.575884e-05, -0.00048728072, -7.434374e-05, -5.6223078e-05, -0.0002607561, -5.2885232e-05, -0.0025978612, -5.5556293e-06, -1.0800813e-05, -0.043038692, -0.012739307, -0.00020322429, -0.00020501523, -0.00065671286, -0.0011736015, -0.023033546, -0.15469357, -0.31599686, -0.045841295, -1.8907942e-05, -0.1217148, -0.00023368915, -4.6206733e-05, -3.0707724e-05, -4.4818075e-06, -3.076318e-07, -0.09311209, -0.019207753, -0.0003411891, -0.0001517177, -0.0005925983, -0.7199732, -0.036900792, -0.23382519, -0.00012310104, -6.551948e-05, -0.0021556765, -0.031089345, -0.024367247, -0.101845495, -0.11006964, -0.000107007865, -0.29450724, -0.0010216809, -8.7576846e-05, -0.00055126764, -2.141132e-05, -4.721163e-06, -0.061220743, -0.0011055127, -0.008410698, -0.0014865842, -0.0011628587, -0.0028812855, -0.06177677, -0.0047254944, -9.782879e-05, -0.00079783896, -2.6419024e-05, -6.051553e-05, -0.013616068, -0.0032308027, -0.01092011, -0.008471469, -0.19445777, -0.005080867, -0.00019070739, -0.0012682484, -0.00042556066, -0.0005592584, -0.0038133461, -0.00100915, -0.003338805, -0.025478806, -0.020153392, -0.0005173354, -0.0007066368, -0.00048060223, -0.00047040381, -8.650302e-05, -0.00023929571, -0.00032860556, -0.00022540275, -0.00044523858, -0.0003626532, -0.0013845743, -0.0019648424, -0.081588544, -0.0011843424, -0.580725, -0.0030478986, -9.925743e-05, -0.000117858675, -1.1278585e-05, -4.9187893e-05, -0.004491242, -0.0029948095, -0.0022486846, -0.00032026, -0.0010343883, -0.0004893054, -0.014146892, -0.000869306, -0.0005522222, -0.0017503458, -0.71193516, -0.116388395, -0.22501148, -0.08883109, -0.0003345106], "top_logprobs": null, "text_offset": [4914, 4914, 4915, 4922, 4923, 4927, 4930, 4932, 4939, 4940, 4944, 4947, 4949, 4958, 4960, 4966, 4967, 4976, 4978, 4987, 4993, 4994, 4997, 5004, 5005, 5009, 5011, 5020, 5021, 5024, 5027, 5029, 5031, 5033, 5034, 5035, 5036, 5039, 5041, 5042, 5043, 5045, 5048, 5051, 5054, 5056, 5058, 5061, 5063, 5065, 5074, 5075, 5078, 5081, 5083, 5086, 5089, 5091, 5094, 5095, 5097, 5098, 5100, 5102, 5104, 5106, 5115, 5116, 5119, 5122, 5124, 5126, 5128, 5130, 5132, 5134, 5143, 5145, 5154, 5160, 5161, 5167, 5169, 5178, 5179, 5182, 5185, 5187, 5189, 5191, 5193, 5195, 5198, 5200, 5206, 5207, 5216, 5218, 5227, 5229, 5238, 5244, 5245, 5251, 5253, 5262, 5263, 5266, 5269, 5271, 5272, 5273, 5275, 5277, 5279, 5281, 5283, 5292, 5293, 5296, 5299, 5301, 5303, 5306, 5309, 5311, 5313, 5314, 5315, 5316, 5318, 5321, 5324, 5327, 5329, 5332, 5335, 5338, 5340, 5342, 5343, 5344, 5345, 5347, 5350, 5353, 5356, 5358, 5360, 5363, 5365, 5367, 5376, 5377, 5380, 5383, 5385, 5388, 5391, 5393, 5396, 5397, 5399, 5400, 5402, 5404, 5407, 5407, 5407, 5407]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.013031536, -0.13830885, -0.086524226, -0.00015004877, -0.0005820413, -0.00012024191, -0.002768611, -0.04333132, -1.2588937e-05, -0.00010665305, -6.0038692e-05, -0.0022460553, -0.05919034, -0.028923385, -1.2604563, -0.4492882, -1.9503042e-05, -1.7771468, -0.0018228969, -9.663671e-05, -5.503005e-05, -2.0696069e-05, -1.8841804e-07, -1.204232, -0.010812011, -0.06358267, -0.006272259, -0.0021673234, -0.0004895429, -0.00019511623, -0.0005495959, -0.00011714342, -0.0013217243, -2.1649737e-05, 0, -0.2707295, -0.011004298, -0.5175489, -0.026008012, -0.6008455, -0.05529532, -0.0013683996, -0.0064950474, -0.00020739941, -0.0057554254, -0.0049959817, -0.014016863, -0.005485513, -0.11240239, -0.0006238507, -0.00047481735, -0.00016292612, -0.0023663188, -0.0002539584, -1.0561456e-05, -6.0633804e-05, -7.124244e-05, -0.00013466804, -0.00027780765, -6.9690854e-05, -8.018216e-05, -0.0031913365, -0.00037171593, -2.9519388e-05, -0.004540338, -0.10964881, -0.38626805, -0.27801323, -0.034763966, -7.1062755e-06, -0.75944114, -6.48061e-05, -7.815842e-05, -1.688045e-05, -2.1051823e-05, -1.8601542e-06, -0.19482331, -0.008562603, -0.00012036205, -0.00020262918, -0.00041375431, -0.000348106, -3.357061e-05, -0.0002014371, -2.5744682e-06, 0, -0.6968159, -0.029063772, -0.003679867, -8.2807564e-05, -0.008122583, -0.092683345, -0.24330822, -0.26939362, -0.28447986, -0.04787504, -9.370307e-06, -1.4614996, -0.00079002563, -6.4566746e-05, -2.5464416e-05, -4.361666e-06, -5.0778563e-06, -0.18812792, -0.0014147162, -0.019041888, -0.0021115337, -0.0012119726, -0.00028782585, -0.00022445, -0.00044011069, -4.811501e-05, -0.00024894974, -1.8601542e-06, -1.7400124e-06, -0.07051725, -0.0045538708, -0.04527941, -0.0042062243, -0.16804735, -0.020618515, -0.0002484729, -0.0015227598, -9.771052e-05, -0.0061303554, -0.0019996043, -0.02186676, -0.019470455, -0.021210603, -0.00064561894, -0.0010771711, -0.00019142075, -0.001764617, -0.00093481154, -3.2140102e-05, -0.00013395278, -7.8634315e-05, -0.00022671591, -0.0002869914, -0.000113328744, -0.00014539869, -0.0008183607, -0.0389418, -0.07659369, -0.021464271, -0.024146734, -0.072136454, -0.020879945, -0.018031752, -9.490449e-06, -0.08786356, -5.979934e-05, -2.200643e-05, -3.2735214e-05, -6.827632e-08, -2.693682e-06, -0.04592691, -0.004211613, -0.0001707939, -9.759038e-05, -0.00030654538, -7.183848e-05, -2.3556138e-05, -0.000113805574, -2.4543265e-06, -3.076318e-07, -0.13601218, -0.012169827, -0.00021896455, -0.00049634156, -0.6025948, -0.6506993, -0.0955166, -0.05167276, -0.00016030073, -0.0010830789, -0.00016578808, -0.0032958062], "top_logprobs": null, "text_offset": [4914, 4914, 4915, 4922, 4923, 4927, 4930, 4932, 4939, 4940, 4944, 4947, 4949, 4958, 4960, 4969, 4975, 4976, 4982, 4984, 4993, 4994, 4997, 5000, 5002, 5003, 5004, 5006, 5008, 5010, 5012, 5014, 5023, 5024, 5027, 5030, 5032, 5034, 5037, 5040, 5042, 5044, 5045, 5046, 5047, 5049, 5052, 5055, 5058, 5060, 5063, 5066, 5069, 5071, 5073, 5074, 5075, 5076, 5078, 5081, 5084, 5087, 5089, 5091, 5094, 5096, 5105, 5107, 5116, 5122, 5123, 5129, 5131, 5140, 5141, 5144, 5147, 5149, 5151, 5153, 5155, 5157, 5159, 5168, 5169, 5172, 5175, 5177, 5179, 5181, 5183, 5186, 5188, 5197, 5199, 5208, 5214, 5215, 5221, 5223, 5232, 5233, 5236, 5239, 5241, 5242, 5243, 5245, 5247, 5249, 5251, 5253, 5262, 5263, 5266, 5269, 5271, 5273, 5276, 5279, 5281, 5283, 5284, 5285, 5286, 5288, 5291, 5294, 5297, 5299, 5302, 5305, 5308, 5310, 5312, 5313, 5314, 5315, 5317, 5320, 5323, 5326, 5328, 5330, 5333, 5335, 5344, 5346, 5355, 5361, 5362, 5368, 5370, 5379, 5380, 5383, 5386, 5388, 5390, 5392, 5394, 5396, 5398, 5407, 5408, 5411, 5414, 5416, 5418, 5420, 5422, 5426, 5426, 5426, 5426, 5426, 5426, 5426]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.013031536, -0.1260156, -0.07329144, -0.00018796182, -0.001207438, -8.137612e-05, -0.0022508358, -0.05066128, -1.688045e-05, -0.00013133019, -7.100402e-05, -0.0020706188, -0.05647716, -0.026813094, -0.31641594, -1.6642034e-05, -4.871012e-05, -0.00096923753, -0.0024056924, -0.06596538, -1.3306066e-05, -0.019453438, -2.1649737e-05, -2.2365928e-05, -0.00011702421, -0.00034142847, -2.045765e-05, -2.9996223e-05, -3.6482897e-06, -6.827632e-08, -0.004793828, -0.0003807795, -0.0049247597, -0.0005401756, -4.7041198e-05, -0.0017895757, -0.002080472, -0.00075715786, -4.179789e-05, -0.0002884219, -0.0004554952, -0.0029927765, -0.0012773204, -0.0013457763, -0.35493296, -0.00080475875, -3.2973632e-05, -0.028372215, -3.8935006e-05, -3.3689823e-05, -1.2588937e-05, -3.883893e-06, -0.0007668814, -0.0010362985, -0.0006116811, -0.00025598682, -0.0013072822, -0.00016721859, -3.9055147e-05, -0.0022118264, -7.75605e-05, -0.00038113716, -0.00014647158, -6.277768e-05, -0.00027136848, -4.4181128e-05, -0.0016126054, -9.130952e-06, -1.2112103e-05, -0.042115368, -0.012044398, -0.0002875865, -0.00012500932, -0.0005272344, -0.0015167308, -0.023686385, -2.1541374, -1.7834122e-05, -2.0416691, -0.0050002346, -4.0009756e-05, -0.00012119652, -9.490449e-06, -6.827632e-08, -1.1689728, -0.026231326, -0.011170639, -0.0017693947, -0.003951569, -0.0034130847, -0.18902951, -4.9069615e-05, -4.1320116e-05, -0.00068432797, -0.0030843087, -0.01981019, -0.034139067, -0.10262706, -6.3900848e-06, -0.58862495, -9.270188e-05, -2.6180607e-05, -1.843017e-05, -3.051303e-06, -8.0580685e-06, -0.1424231, -0.0016576212, -0.008664686, -0.00026051674, -0.0001450392, -0.000102002974, -7.5892516e-05, -9.0198504e-05, -2.9399247e-05, -6.2420055e-05, -4.721163e-06, -2.4543265e-06, -0.015296352, -0.0010237084, -0.01353269, -0.00238962, -0.2082073, -0.0035539442, -6.051553e-05, -0.00038113716, -9.258174e-05, -0.00017997579, -0.0005482874, -0.00021324158, -0.00013931624, -0.0060618706, -0.00036444137, -2.6180607e-05, -4.179789e-05, -6.778445e-05, -7.291136e-05, -1.8190814e-05, -1.0681599e-05, -6.873624e-05, -3.452334e-05, -3.8103353e-05, -1.2622395e-06, -1.42597355e-05, -0.00022790894, -4.5613506e-05, -1.2622395e-06, -1.4435301, -0.00017675622, -1.5094201e-05, -9.606849e-06, -1.1430258e-06, -1.6207987e-06, -0.0006862372, -0.0004057045, -0.00010474478, -0.000118811404, -0.00016554873, -2.4750101e-05, -0.0021158326, -0.00017174664, -0.0001957132, -5.1810483e-05, -0.012320915, -0.024377264, -0.11537075, -0.037030306, -6.051553e-05, -0.0018245695, -3.4403198e-05, -0.0020525197], "top_logprobs": null, "text_offset": [4914, 4914, 4915, 4922, 4923, 4927, 4930, 4932, 4939, 4940, 4944, 4947, 4949, 4958, 4960, 4966, 4967, 4976, 4978, 4987, 4993, 4994, 4997, 5004, 5005, 5009, 5011, 5020, 5021, 5024, 5027, 5029, 5031, 5033, 5034, 5035, 5036, 5039, 5041, 5042, 5043, 5045, 5048, 5051, 5054, 5056, 5058, 5061, 5063, 5065, 5074, 5075, 5078, 5081, 5083, 5086, 5089, 5091, 5094, 5095, 5097, 5098, 5100, 5102, 5104, 5106, 5115, 5116, 5119, 5122, 5124, 5126, 5128, 5130, 5132, 5134, 5143, 5149, 5150, 5156, 5158, 5167, 5168, 5171, 5174, 5176, 5178, 5180, 5182, 5185, 5187, 5193, 5194, 5203, 5205, 5214, 5216, 5225, 5231, 5232, 5238, 5240, 5249, 5250, 5253, 5256, 5258, 5259, 5260, 5262, 5264, 5266, 5268, 5270, 5279, 5280, 5283, 5286, 5288, 5290, 5293, 5296, 5298, 5300, 5301, 5302, 5303, 5305, 5308, 5311, 5314, 5316, 5319, 5322, 5325, 5327, 5329, 5330, 5331, 5332, 5334, 5337, 5340, 5343, 5345, 5347, 5350, 5352, 5354, 5363, 5364, 5367, 5370, 5372, 5375, 5378, 5380, 5383, 5384, 5386, 5387, 5389, 5391, 5394, 5394, 5394, 5394, 5394, 5394, 5394]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.013031536, -0.12984793, -0.08200324, -0.00019392508, -0.0012450337, -8.578871e-05, -0.0025582428, -0.039672963, -1.5448071e-05, -0.00016054008, -5.8725527e-05, -0.002017938, -0.058634367, -0.028626848, -0.35894862, -1.5094201e-05, -8.924483e-05, -0.00082349137, -0.0020972567, -0.0741495, -1.6165199e-05, -0.02345815, -2.4032974e-05, -2.6180607e-05, -8.6025255e-05, -0.00028269706, -2.1649737e-05, -2.582111e-05, -3.2906587e-06, -6.827632e-08, -0.0071620927, -0.00046432132, -0.004625787, -0.00046718423, -4.0843282e-05, -0.0020311393, -0.0027074674, -0.000617527, -3.7743856e-05, -0.00029020815, -0.00037278878, -0.0032984382, -0.0012416921, -0.0008792087, -0.34820035, -0.0006421591, -2.4152187e-05, -4.8362317, -0.0005628365, -3.988961e-05, -1.1398727e-05, -1.6207987e-06, -1.676031e-05, -0.0018915695, -0.0025189226, -0.00075477175, -0.0012530301, -0.00018450571, -5.07376e-05, -0.037643775, -0.00015088324, -0.0006912467, -0.00010665305, -7.1481794e-05, -0.00034929716, -9.7471166e-05, -0.0032849826, -1.0204763e-05, -2.3360508e-06, -0.07704938, -0.02795245, -0.00022826564, -0.000115950395, -0.00019988645, -0.000807982, -0.02337596, -0.11159229, -1.6440023, -1.6521892e-05, -5.467149e-05, -0.0027754847, -0.0004256799, -0.048409075, -8.7733215e-06, -0.011395309, -3.7684315e-06, -1.2351458e-05, -1.5567284e-05, -0.00024203752, -1.7595703e-05, -3.4167595e-05, -1.9765537e-06, 0, -0.0058922963, -0.0006224183, -0.0038588203, -0.00048537247, -3.4762696e-05, -0.0018118488, -0.0016401295, -0.00019643032, -1.6402679e-05, -0.00027673383, -0.00020727927, -0.0010214415, -0.0005990412, -0.00048263065, -0.3499265, -0.0007716535, -3.0353855e-05, -0.39652467, -5.9201422e-05, -1.3306066e-05, -2.4866502e-05, -2.3435998e-05, -3.6482897e-06, -0.0017273573, -0.00062623486, -0.00013395278, -0.00018128614, -0.00012322118, -5.848711e-05, -0.0015031212, -9.639735e-05, -0.00014241754, -3.5717305e-05, -0.0048211985, -0.000436174, -4.0843282e-05, -0.00048823532, -1.5687427e-05, -1.1430258e-06, -0.3527676, -0.013755774, -0.00012560723, -9.270188e-05, -0.004291223, -0.013884376, -0.30893806, -7.040798e-05, -2.4152187e-05, -0.0007631849, -0.00015982577, -0.008042787, -0.025244415, -0.049861826, -1.0920954e-05, -0.92602265, -8.1256905e-05, -4.0126153e-05, -2.462996e-05, -2.2159093e-06, -1.5006569e-06, -0.033777352, -0.0008123946, -0.010537901, -0.0002303513, -0.00017413269, -0.00012918444, -2.1768952e-05, -0.00010998996, -2.582111e-05, -7.159913e-05, -2.4543265e-06, -3.7684315e-06, -0.0065834224, -0.00079312886, -0.021076975, -0.0018482732, -0.33436328, -0.010803033, -6.921402e-05, -0.0009946515, -7.1719274e-05, -0.00018522002, -0.0005227035, -0.000414708, -0.00015195705, -0.0073422077, -0.000769626, -5.6460554e-05, -0.0001064137, -0.0007532202, -0.00015219547, -1.1039229e-05, -5.2288255e-05, -5.6223078e-05, -6.0753944e-05, -5.7532503e-05, -1.022884e-06, -2.8087945e-05, -0.0005168586, -5.264588e-05, -4.9586424e-06, -1.3611382, -0.00027840555, -2.4272329e-05, -2.2245786e-05, -4.277735e-07, -1.8841804e-07, -0.0008033263, -0.00040057753, -0.00014456424, -0.00075023813, -0.00014253768, -3.583558e-05, -0.0078818295, -6.361214e-05, -0.0002395332, -7.1481794e-05, -0.00515396, -0.024235763, -0.116622254, -0.05452477, -8.209043e-05, -0.00050003984, -8.7457636e-05, -0.0022381106], "top_logprobs": null, "text_offset": [4914, 4914, 4915, 4922, 4923, 4927, 4930, 4932, 4939, 4940, 4944, 4947, 4949, 4958, 4960, 4966, 4967, 4976, 4978, 4987, 4993, 4994, 4997, 5004, 5005, 5009, 5011, 5020, 5021, 5024, 5027, 5029, 5031, 5033, 5034, 5035, 5036, 5039, 5041, 5042, 5043, 5045, 5048, 5051, 5054, 5056, 5058, 5061, 5063, 5065, 5074, 5075, 5078, 5081, 5083, 5086, 5089, 5091, 5094, 5095, 5097, 5098, 5100, 5102, 5104, 5106, 5115, 5116, 5119, 5122, 5124, 5126, 5128, 5130, 5132, 5134, 5143, 5145, 5151, 5152, 5161, 5163, 5172, 5178, 5179, 5182, 5189, 5190, 5194, 5196, 5205, 5206, 5209, 5212, 5214, 5216, 5218, 5219, 5220, 5221, 5224, 5226, 5227, 5228, 5230, 5233, 5236, 5239, 5241, 5243, 5246, 5248, 5250, 5259, 5260, 5263, 5266, 5268, 5271, 5274, 5276, 5279, 5280, 5282, 5283, 5285, 5287, 5289, 5291, 5300, 5301, 5304, 5307, 5309, 5311, 5313, 5315, 5318, 5320, 5326, 5327, 5336, 5338, 5347, 5349, 5358, 5364, 5365, 5371, 5373, 5382, 5383, 5386, 5389, 5391, 5392, 5393, 5395, 5397, 5399, 5401, 5403, 5412, 5413, 5416, 5419, 5421, 5423, 5426, 5429, 5431, 5433, 5434, 5435, 5436, 5438, 5441, 5444, 5447, 5449, 5452, 5455, 5458, 5460, 5462, 5463, 5464, 5465, 5467, 5470, 5473, 5476, 5478, 5480, 5483, 5485, 5487, 5496, 5497, 5500, 5503, 5505, 5508, 5511, 5513, 5516, 5517, 5519, 5520, 5522, 5524, 5527, 5527, 5527, 5527, 5527, 5527, 5527]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.013031536, -0.12423866, -0.07683625, -0.00017890292, -0.00067979423, -9.401318e-05, -0.0029805184, -0.046470553, -1.7595703e-05, -0.000111301255, -5.657977e-05, -0.001930745, -0.060758326, -0.028403858, -0.34281394, -1.9503042e-05, -6.850158e-05, -0.0007253057, -0.0028038786, -0.06737736, -9.72699e-06, -0.01666288, -1.9263687e-05, -2.7371756e-05, -9.3535404e-05, -0.0003989058, -1.7834122e-05, -2.558363e-05, -3.6482897e-06, -6.827632e-08, -0.006649963, -0.00043772557, -0.0055451486, -0.0005167393, -5.8010275e-05, -0.0018867917, -0.0022450425, -0.00034464613, -2.462996e-05, -0.00023786427, -0.00040403462, -0.006185292, -0.0016972669, -0.0012069602, -0.3615471, -0.0013694725, -2.8206221e-05, -0.03170242, -4.036551e-05, -3.4403198e-05, -1.2468796e-05, -3.6482897e-06, -0.00021348093, -0.0012049318, -0.0010281838, -0.00037040273, -0.0012100624, -0.00019189759, -3.6311474e-05, -0.0010846297, -5.7293146e-05, -0.0005998747, -7.279122e-05, -5.979934e-05, -0.00026242502, -4.2033495e-05, -0.002336805, -1.0084622e-05, -1.2588937e-05, -0.04076156, -0.012690593, -0.0002644525, -0.00023249895, -0.0007215482, -0.00095247134, -0.02479608, -0.14438362, -0.30724993, -0.056442033, -1.4854846e-05, -0.12828313, -0.0002429912, -3.4287736e-05, -2.7490969e-05, -5.0778563e-06, 0, -0.08077334, -0.015011631, -0.0003372524, -0.00017389427, -0.0004509634, -0.54699343, -0.04044864, -0.004481122, -0.0058418177, -1.8907942e-05, -0.9898915, -0.14133634, -0.24711789, -0.20604616, -1.1080463, -0.08854171, -0.30077636, -0.00034285896, -0.00038650344, -0.004577882, -0.015942356, -0.041137554, -0.0554152, -0.14281367, -6.754697e-05, -0.1677523, -0.0055733183, -0.001409702, -0.00046288988, -0.0006966158, -0.00019082283, -0.0874381, -0.0023389554, -0.019040976, -0.0041674376, -0.0055019353, -0.049185522, -0.05709717, -0.003902562, -0.00034238215, -0.0014438464, -8.244993e-05, -1.4736571e-05, -0.03292181, -0.0052249595, -0.097806394, -0.04694745, -0.1817659, -0.007467526, -0.0011324257, -0.0036650314, -0.00091100833, -0.002614356, -0.0034496873, -0.0031583305, -0.004747893, -0.046428777, -0.025891727, -0.0012938529, -0.0075301016, -0.00831435, -0.0037527978, -0.00020238983, -0.0006742478, -0.00051829003, -0.00035931446, -0.0009151844, -0.0012952853, -0.0006108457, -0.008590978, -0.20510237, -0.004516509, -1.5135025, -0.018467233, -0.00014647158, -0.00019786083, -6.802381e-05, -1.7400124e-06, -0.02483445, -0.024152108, -0.004700223, -0.011960789, -0.0016359488, -0.00062325277, -0.14780857, -0.005158213, -0.0036414019, -0.038298182, -1.0357239, -0.06704274, -0.16799024, -0.09416835], "top_logprobs": null, "text_offset": [4914, 4914, 4915, 4922, 4923, 4927, 4930, 4932, 4939, 4940, 4944, 4947, 4949, 4958, 4960, 4966, 4967, 4976, 4978, 4987, 4993, 4994, 4997, 5004, 5005, 5009, 5011, 5020, 5021, 5024, 5027, 5029, 5031, 5033, 5034, 5035, 5036, 5039, 5041, 5042, 5043, 5045, 5048, 5051, 5054, 5056, 5058, 5061, 5063, 5065, 5074, 5075, 5078, 5081, 5083, 5086, 5089, 5091, 5094, 5095, 5097, 5098, 5100, 5102, 5104, 5106, 5115, 5116, 5119, 5122, 5124, 5126, 5128, 5130, 5132, 5134, 5143, 5145, 5154, 5160, 5161, 5167, 5169, 5178, 5179, 5182, 5185, 5187, 5189, 5191, 5193, 5195, 5197, 5206, 5207, 5210, 5213, 5215, 5217, 5219, 5221, 5225, 5227, 5233, 5234, 5243, 5245, 5254, 5256, 5265, 5271, 5272, 5278, 5280, 5289, 5290, 5293, 5296, 5298, 5299, 5300, 5302, 5304, 5306, 5308, 5310, 5319, 5320, 5323, 5326, 5328, 5330, 5333, 5336, 5338, 5340, 5341, 5342, 5343, 5345, 5348, 5351, 5354, 5356, 5359, 5362, 5365, 5367, 5369, 5370, 5371, 5372, 5374, 5377, 5380, 5383, 5385, 5387, 5390, 5392, 5394, 5403, 5404, 5407, 5410, 5412, 5415, 5418, 5420, 5423, 5424, 5426, 5427, 5429, 5431, 5434, 5434, 5434]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4)))))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", "\n", "("], "token_logprobs": [-0.013031653, -0.12977389, -0.08821752, -0.0001722244, -0.00049658, -7.839496e-05, -0.0030530395, -0.051184807, -1.5214344e-05, -0.00013991416, -6.0753944e-05, -0.0018438551, -0.06029771, -0.028364921, -0.3564553, -1.5448071e-05, -6.051553e-05, -0.00068385113, -0.0010266341, -0.06453278, -1.5687427e-05, -0.020217253, -2.2245786e-05, -2.582111e-05, -8.88872e-05, -0.0002818626, -1.9028084e-05, -2.28437e-05, -4.0040345e-06, -6.827632e-08, -0.0054397257, -0.00042067032, -0.0043479744, -0.00053385564, -3.4642555e-05, -0.0017121305, -0.0029686221, -0.00043366966, -3.5477948e-05, -0.0002057305, -0.0005068385, -0.0032974817, -0.0010896439, -0.00082396914, -0.30956513, -0.00093272305, -3.5240468e-05, -0.029971235, -4.2870764e-05, -3.1781543e-05, -9.72699e-06, -3.6482897e-06, -0.00027935923, -0.0011790916, -0.0007775012, -0.0002949793, -0.0009357662, -0.00020084012, -3.762558e-05, -0.002067035, -6.766711e-05, -0.00059200136, -0.00015565252, -6.7427754e-05, -0.00028293548, -4.2153635e-05, -0.0021855435, -9.012677e-06, -5.675771e-06, -0.0427059, -0.011826039, -0.00022266187, -0.00012620141, -0.0006925608, -0.0022010123, -0.023724586, -0.14862517, -0.32791567, -0.053654745, -1.0800813e-05, -1.8471447, -0.0006064359, -4.9782993e-05, -3.690939e-05, -1.37819625e-05, -5.460492e-07, -0.80470693, -0.0054512317, -0.034465812, -0.0010079559, -0.0010440545, -0.14465794, -0.11769978, -0.0034576424, -0.002627685, -0.0070207845, -3.678925e-05, -3.051303e-06, -0.68623847, -0.034722064, -1.3502437, -0.1593479, -0.56054884, -0.12850305, -0.0063023707, -0.009859269, -0.0026349737, -0.02045029, -0.07377296, -0.013238744, -0.03473299, -0.055207312, -0.0031860154, -0.0042275935, -0.0022218025, -0.006583543, -0.0017719601, -7.4639065e-06, -0.00045811874, -0.0017479578, -0.0005609273, -0.0009572444, -0.00022600066, -0.0001916601, -0.0032290092, -0.023158774, -0.0026141168, -0.009627845, -0.13415718, -0.00013097163, -7.362661e-05, -0.0009205525, -0.0034483713, -0.010133432, -0.039292496, -0.102494575, -9.490449e-06, -0.62039965, -9.162713e-05, -6.194322e-05, -0.00022659577, -2.9041616e-05, -2.2126573e-05, -0.9162658, -0.0048641427, -0.023906427, -0.002309263, -0.007735029, -0.009430108, -0.0019262066, -0.00080953084, -6.2299914e-05, -0.0003109561, -2.0696069e-05, -2.4390605e-05, -0.033679824, -0.0029728066, -0.06383951, -0.006297392, -0.07331306, -0.0062298537, -5.216904e-05, -0.000323121, -0.00043605478, -0.0013136069, -0.00069804816, -0.0021683988, -0.001256015, -0.00938486, -0.00039055935, -0.00040832703, -0.00021777152, -0.0013718604, -0.00034214277, -5.3242864e-05, -6.921402e-05, -0.0002698197, -7.8634315e-05, -0.0004259183, -4.2392992e-05, -9.0675334e-05, -0.0007722504, -0.010242245, -0.00076461444, -0.059353128, -0.11607868], "top_logprobs": null, "text_offset": [4914, 4914, 4915, 4922, 4923, 4927, 4930, 4932, 4939, 4940, 4944, 4947, 4949, 4958, 4960, 4966, 4967, 4976, 4978, 4987, 4993, 4994, 4997, 5004, 5005, 5009, 5011, 5020, 5021, 5024, 5027, 5029, 5031, 5033, 5034, 5035, 5036, 5039, 5041, 5042, 5043, 5045, 5048, 5051, 5054, 5056, 5058, 5061, 5063, 5065, 5074, 5075, 5078, 5081, 5083, 5086, 5089, 5091, 5094, 5095, 5097, 5098, 5100, 5102, 5104, 5106, 5115, 5116, 5119, 5122, 5124, 5126, 5128, 5130, 5132, 5134, 5143, 5145, 5154, 5160, 5161, 5167, 5169, 5178, 5179, 5182, 5185, 5187, 5188, 5189, 5191, 5193, 5195, 5197, 5199, 5208, 5209, 5212, 5215, 5217, 5219, 5222, 5225, 5227, 5229, 5230, 5231, 5232, 5234, 5237, 5240, 5243, 5245, 5248, 5251, 5254, 5256, 5258, 5259, 5260, 5261, 5263, 5266, 5269, 5272, 5274, 5276, 5279, 5281, 5287, 5288, 5297, 5299, 5308, 5310, 5319, 5325, 5326, 5332, 5334, 5343, 5344, 5347, 5350, 5352, 5353, 5354, 5356, 5358, 5360, 5362, 5364, 5373, 5374, 5377, 5380, 5382, 5384, 5387, 5390, 5392, 5394, 5395, 5396, 5397, 5399, 5402, 5405, 5408, 5410, 5413, 5416, 5419, 5421, 5423, 5424, 5425, 5426, 5428, 5431, 5434, 5437, 5439, 5441, 5444, 5444]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.013031653, -0.1348551, -0.080571294, -0.00023535996, -0.0011629778, -8.7337496e-05, -0.0024143562, -0.04147113, -2.1291178e-05, -0.00016912498, -7.8038276e-05, -0.001985805, -0.060242817, -0.026271833, -1.2857046, -0.47959012, -2.1889093e-05, -1.6343883, -0.001999962, -9.198663e-05, -5.264588e-05, -1.5214344e-05, -1.8841804e-07, -1.1203727, -0.009024948, -0.062303346, -0.0057906187, -0.0015121934, -0.0004662296, -0.00019273112, -0.000599397, -0.000109155495, -0.0012420497, -1.44972155e-05, 0, -2.5366714, -0.28032893, -0.008564708, -0.00094650435, -0.0014927924, -0.0013639814, -0.050208796, -0.12990765, -0.18046655, -0.02895652, -5.5556293e-06, -0.9043556, -6.5041706e-05, -4.680184e-05, -1.8907942e-05, -5.197998e-06, -1.2622395e-06, -0.21681054, -0.012945067, -0.00023345168, -7.97072e-05, -0.0005005176, -0.00040200804, -4.382537e-05, -0.00020978546, -1.676031e-05, 0, -1.171526, -0.02767011, -0.03397626, -0.00054065336, -0.006952359, -0.0031393163, -0.61540306, -0.000102479804, -5.2525735e-05, -0.0007204754, -0.00017151104, -0.012924597, -0.022329573, -0.06104656, -3.883893e-06, -0.7440927, -5.586358e-05, -4.382537e-05, -3.3809963e-05, -2.4543265e-06, 0, -0.14739013, -0.0031326201, -0.034899376, -0.0011916828, -0.00039592464, -8.376217e-05, -6.850158e-05, -0.00011964774, -0.009510617, -0.012038424, -0.0006910083, -2.9311614e-06, -0.24351318, -0.02257761, -0.09226857, -0.041686367, -1.1327009, -0.038296074, -0.0009493682, -0.006862872, -0.00045215452, -0.009823872, -0.0056864284, -0.0039033992, -0.0060945554, -0.041871138, -0.00059569965, -0.0031771066, -0.00042830152, -0.0013672047, -0.00074749446, -1.771398e-05, -9.151261e-05, -0.00037636596, -0.00047147667, -0.0009314108, -0.0001375281, -0.0005231795, -0.0018356729, -0.11196889, -0.0002539584, -1.9168802, -0.0014849133, -6.921402e-05, -4.1080762e-05, -3.4089344e-06, -6.9861335e-06, -0.006588763, -0.0018448106, -0.0019427494, -0.0057167606, -0.00033605937, -7.8752586e-05, -0.010070393, -0.00026576474, -0.0007278128, -0.0004478621, -0.018443128, -0.023172501, -0.07371085, -0.043657288, -0.00010569845, -0.0012427659], "top_logprobs": null, "text_offset": [4914, 4914, 4915, 4922, 4923, 4927, 4930, 4932, 4939, 4940, 4944, 4947, 4949, 4958, 4960, 4969, 4975, 4976, 4982, 4984, 4993, 4994, 4997, 5000, 5002, 5003, 5004, 5006, 5008, 5010, 5012, 5014, 5023, 5024, 5027, 5030, 5032, 5034, 5036, 5038, 5040, 5042, 5051, 5053, 5062, 5068, 5069, 5075, 5077, 5086, 5087, 5090, 5093, 5095, 5097, 5099, 5101, 5103, 5105, 5114, 5115, 5118, 5121, 5123, 5125, 5127, 5129, 5132, 5134, 5140, 5141, 5150, 5152, 5161, 5163, 5172, 5178, 5179, 5185, 5187, 5196, 5197, 5200, 5203, 5205, 5206, 5207, 5209, 5211, 5213, 5215, 5217, 5226, 5227, 5230, 5233, 5235, 5237, 5240, 5243, 5245, 5247, 5248, 5249, 5250, 5252, 5255, 5258, 5261, 5263, 5266, 5269, 5272, 5274, 5276, 5277, 5278, 5279, 5281, 5284, 5287, 5290, 5292, 5294, 5297, 5299, 5301, 5310, 5311, 5314, 5317, 5319, 5322, 5325, 5327, 5330, 5331, 5333, 5334, 5336, 5338, 5341, 5341, 5341, 5341, 5341]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.013031653, -0.1375011, -0.07783923, -0.00020024595, -0.00047481735, -7.088388e-05, -0.0025795153, -0.050141796, -1.8788729e-05, -0.00013264055, -6.087316e-05, -0.0019541557, -0.05823955, -0.028370008, -1.2810756, -1.3125024, -0.53426075, -0.61800873, -1.9382902e-05, -0.21549314, -0.0021023941, -8.8051806e-05, -0.0005112539, -2.6773841e-05, -6.827632e-08, -0.2726702, -0.009390756, -0.0003411891, -0.0002528855, -0.00019368572, -0.0028459583, -0.006997914, -0.0022824984, -0.00013931624, -5.460492e-07, -0.71969706, -0.34391668, -0.0012973156, -0.00012739444, -0.0011274132, -0.0019991256, -0.020104736, -1.0492982, -0.0007668814, -5.460492e-07, -1.4712605, -0.13745753, -0.036316894, -0.0065234853, -0.009455498, -0.0033805482, -0.05579648, -0.09005488, -0.06173974, -0.45865905, -3.529076e-06, -0.08878784, -0.00016411634, -2.6298881e-05, -2.8138238e-06, -2.0966954e-06, -3.2906587e-06, -0.061667908, -0.014573059, -0.00017592176, -5.300351e-05, -0.00027220484, -0.0003125086, -5.944078e-05, -0.0007775012, -2.5105857e-05, -5.460492e-07, -1.092064, -0.5134335, -0.10871098, -0.0010123714, -0.00016328375, -0.000111657944, -0.023272669, -0.0046144095, -0.2068336, -0.018833902, -0.025696559, -0.108834244, -4.6010214e-06, -0.020626305, -5.0976956e-05, -2.1171965e-05, -1.5214344e-05, -2.3360508e-06, -7.698572e-06, -0.022724789, -0.0041900026, -6.087316e-05, -5.0976956e-05, -0.00024144053, -5.2525735e-05, -3.5357807e-05, -0.00026588395, -5.0778563e-06, -1.8841804e-07, -0.10508988, -0.017938478, -4.8233283e-05, -5.2288255e-05, -0.0030917823, -0.025274858, -0.081654705, -0.043466404, -8.566857e-05, -0.0009862984, -0.00018975277, -0.0016121276, -0.112591885], "top_logprobs": null, "text_offset": [4914, 4914, 4915, 4922, 4923, 4927, 4930, 4932, 4939, 4940, 4944, 4947, 4949, 4958, 4960, 4969, 4971, 4980, 4986, 4987, 4993, 4995, 5004, 5005, 5008, 5011, 5013, 5015, 5017, 5019, 5021, 5023, 5032, 5033, 5036, 5039, 5041, 5043, 5045, 5047, 5049, 5051, 5060, 5061, 5064, 5067, 5069, 5071, 5073, 5075, 5077, 5079, 5088, 5090, 5099, 5105, 5106, 5112, 5114, 5123, 5124, 5127, 5130, 5132, 5134, 5136, 5138, 5140, 5142, 5151, 5152, 5155, 5158, 5160, 5161, 5163, 5165, 5167, 5169, 5172, 5174, 5183, 5185, 5194, 5200, 5201, 5207, 5209, 5218, 5219, 5222, 5225, 5227, 5229, 5231, 5233, 5235, 5237, 5246, 5247, 5250, 5253, 5255, 5257, 5259, 5261, 5264, 5264, 5264, 5264, 5264, 5264, 5264, 5264]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.013031653, -0.12793556, -0.0801415, -0.00020835307, -0.00056963606, -9.949678e-05, -0.002751218, -0.0522343, -1.4377073e-05, -0.00011118111, -6.9810994e-05, -0.0022201298, -0.07590732, -0.028442185, -0.32223856, -1.2468796e-05, -4.871012e-05, -0.00069685513, -0.00091232057, -0.07098976, -8.653179e-06, -0.018682553, -2.3317722e-05, -1.9621319e-05, -0.00013490739, -0.00039270602, -1.9860674e-05, -2.2604345e-05, -4.1232483e-06, -6.827632e-08, -0.005009102, -0.00041661627, -0.0049158926, -0.0005124441, -3.6311474e-05, -0.0017462852, -0.0029700585, -0.00040308, -3.9172486e-05, -0.00023810269, -0.00041983582, -0.002791146, -0.0015302812, -0.00093319995, -0.33493116, -0.00094137463, -3.452334e-05, -0.02753629, -4.275062e-05, -3.452334e-05, -1.4377073e-05, -1.6207987e-06, -0.0001427761, -0.0017784096, -0.00079515536, -0.0003767255, -0.00094471534, -0.00017818765, -3.4403198e-05, -0.0017068788, -7.684431e-05, -0.0004621737, -0.0001459938, -6.21807e-05, -0.0002199182, -4.6325007e-05, -0.0018316151, -5.5556293e-06, -6.1516675e-06, -0.041794877, -0.012770037, -0.00021550842, -0.00025205011, -0.0004953888, -0.0018421833, -0.020082237, -2.0559685, -2.1649737e-05, -0.14027174, -0.0015012103, -3.4403198e-05, -7.398424e-05, -6.2699432e-06, -6.827632e-08, -0.19079302, -0.0042204685, -0.008953618, -0.0003140574, -0.0017191168, -0.001744374, -0.12985878, -0.00021288394, -0.00014217819, -0.0012051711, -0.014618422, -0.020372542, -0.023834398, -0.03258418, -1.1753544e-05, -0.49634922, -0.00020692257, -4.275062e-05, -1.9980816e-05, -1.9765537e-06, -1.022884e-06, -0.01841514, -0.0003170395, -0.0051976973, -0.00033796768, -7.338913e-05, -0.00013574092, -0.001097997, -0.00021717734, -7.219704e-05, -9.937757e-05, -3.4089344e-06, -1.7400124e-06, -0.0060836417, -0.0006053611, -0.0121761, -0.0038588203, -0.46590397, -0.014060264, -6.754697e-05, -0.0018239715, -0.00012858746, -0.0003042804, -0.0011026489, -0.001025917, -0.0009411362, -0.007583492, -0.0006552833, -0.00010343254, -0.00034106892, -0.0012412143, -0.00012751458, -2.7490969e-05, -9.7234624e-05, -0.00018593716, -6.051553e-05, -0.00018426635, -1.3185924e-05, -7.3745825e-05, -9.842577e-05, -0.0007324648, -6.746778e-06, -1.15639, -0.00075047655, -6.420819e-05, -1.9980816e-05, -4.1232483e-06, -3.170517e-06, -0.001846961, -0.0008410892, -0.00061848067, -0.00027184532, -0.0005704706, -7.1481794e-05, -0.010435864, -0.00017508729, -0.00033510666, -0.0011425115, -0.0071970336, -0.016084021, -0.084584154, -0.02288437, -4.9782993e-05, -0.00049300276, -0.0017685584, -0.0037496863], "top_logprobs": null, "text_offset": [4914, 4914, 4915, 4922, 4923, 4927, 4930, 4932, 4939, 4940, 4944, 4947, 4949, 4958, 4960, 4966, 4967, 4976, 4978, 4987, 4993, 4994, 4997, 5004, 5005, 5009, 5011, 5020, 5021, 5024, 5027, 5029, 5031, 5033, 5034, 5035, 5036, 5039, 5041, 5042, 5043, 5045, 5048, 5051, 5054, 5056, 5058, 5061, 5063, 5065, 5074, 5075, 5078, 5081, 5083, 5086, 5089, 5091, 5094, 5095, 5097, 5098, 5100, 5102, 5104, 5106, 5115, 5116, 5119, 5122, 5124, 5126, 5128, 5130, 5132, 5134, 5143, 5149, 5150, 5156, 5158, 5167, 5168, 5171, 5174, 5176, 5178, 5180, 5182, 5185, 5187, 5193, 5194, 5203, 5205, 5214, 5216, 5225, 5231, 5232, 5238, 5240, 5249, 5250, 5253, 5256, 5258, 5259, 5260, 5262, 5264, 5266, 5268, 5270, 5279, 5280, 5283, 5286, 5288, 5290, 5293, 5296, 5298, 5300, 5301, 5302, 5303, 5305, 5308, 5311, 5314, 5316, 5319, 5322, 5325, 5327, 5329, 5330, 5331, 5332, 5334, 5337, 5340, 5343, 5345, 5347, 5350, 5352, 5354, 5363, 5364, 5367, 5370, 5372, 5375, 5378, 5380, 5383, 5384, 5386, 5387, 5389, 5391, 5394, 5394, 5394, 5394, 5394, 5394, 5394]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 1.25 0)) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 1", ".", "25", " 0", "))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.013031653, -0.1384163, -0.086301394, -0.0001736549, -0.0006174078, -8.3404535e-05, -0.0027741704, -0.04682127, -1.5214344e-05, -8.8410365e-05, -7.708367e-05, -0.002134768, -0.056681834, -0.028350448, -0.34730738, -2.5344274e-05, -6.253833e-05, -0.0007791692, -0.0033144646, -0.07065701, -1.5687427e-05, -0.023084173, -2.8206221e-05, -4.8353428e-05, -0.000118572985, -0.00034452695, -1.9503042e-05, -2.8087945e-05, -3.883893e-06, -6.827632e-08, -0.006236633, -0.00039127364, -0.006132094, -0.00052842835, -5.2765092e-05, -0.0019028557, -0.0030983002, -0.00043009248, -4.1918032e-05, -0.00030869205, -0.00063870015, -0.008846333, -0.0010279454, -0.0011665579, -0.36200684, -0.0010847488, -2.8445576e-05, -0.025782423, -4.954739e-05, -3.166233e-05, -1.4974988e-05, -2.4543265e-06, -0.00019487782, -0.0020558652, -0.0009645246, -0.00045024627, -0.001512671, -0.00021848676, -4.0126153e-05, -0.0014658737, -6.516092e-05, -0.0005318864, -8.137612e-05, -6.7069195e-05, -0.00026540618, -4.8949474e-05, -0.002322225, -7.4639065e-06, -1.0084622e-05, -0.039712347, -0.014446547, -0.00022301951, -0.00022802629, -0.0005039747, -0.0013032836, -0.021115508, -0.16120301, -0.29502514, -0.054587968, -1.0920954e-05, -0.15405619, -0.00021348093, -4.7875652e-05, -3.237946e-05, -6.5092986e-06, -6.827632e-08, -0.094436176, -0.025099672, -0.00032216733, -0.00015219547, -0.00049789407, -0.9721914, -0.03554544, -0.019756386, -0.0031986316, -2.693682e-06, -0.76517636, -0.1267123, -0.036795106, -0.12766626, -0.9064377, -0.0077036754, -0.5550113, -0.00035764647, -7.529741e-05, -0.0019932704, -0.0042084996, -0.040432505, -0.073318124, -7.558448, -0.23787193, -0.004964891, -0.0038456572, -0.00014456424, -1.0444119e-05, -0.6606362, -0.025909156, -0.17427963, -0.017080056, -0.016883388, -0.011392718, -0.03202404, -0.013974554, -0.0004058246, -0.0032740387, -7.458028e-05, -8.876706e-05, -0.09898382, -0.011061128, -4.636355, -2.3831687, -3.1048896, -0.20520517, -0.09739371, -2.1391246, -0.007907601, -0.0002491891, -0.00055031304, -4.716134e-05, -5.675771e-06, -0.033775933, -0.07909317, -0.012014356, -0.013429201, -0.0015482507, -0.0014479051, -0.022602176, -0.0015263426, -0.005572359, -0.0022237136, -0.2540869, -0.061234307, -0.13263871, -0.064532526], "top_logprobs": null, "text_offset": [4914, 4914, 4915, 4922, 4923, 4927, 4930, 4932, 4939, 4940, 4944, 4947, 4949, 4958, 4960, 4966, 4967, 4976, 4978, 4987, 4993, 4994, 4997, 5004, 5005, 5009, 5011, 5020, 5021, 5024, 5027, 5029, 5031, 5033, 5034, 5035, 5036, 5039, 5041, 5042, 5043, 5045, 5048, 5051, 5054, 5056, 5058, 5061, 5063, 5065, 5074, 5075, 5078, 5081, 5083, 5086, 5089, 5091, 5094, 5095, 5097, 5098, 5100, 5102, 5104, 5106, 5115, 5116, 5119, 5122, 5124, 5126, 5128, 5130, 5132, 5134, 5143, 5145, 5154, 5160, 5161, 5167, 5169, 5178, 5179, 5182, 5185, 5187, 5189, 5191, 5193, 5195, 5197, 5206, 5207, 5210, 5213, 5215, 5217, 5219, 5221, 5224, 5226, 5232, 5233, 5242, 5244, 5253, 5255, 5264, 5271, 5273, 5282, 5283, 5286, 5289, 5291, 5292, 5293, 5295, 5297, 5299, 5301, 5303, 5312, 5313, 5316, 5319, 5321, 5323, 5325, 5326, 5328, 5330, 5332, 5334, 5336, 5345, 5346, 5349, 5352, 5354, 5357, 5360, 5362, 5365, 5366, 5368, 5369, 5371, 5373, 5376, 5376, 5376]}, "finish_reason": "stop"}]}, {"id": "cmpl-51M01NUavSIIiTaPY3kO8eVMmSqEv", "object": "text_completion", "created": 1651004577, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.008733471, -0.0970399, -0.08817514, -0.00016864816, -0.00042711227, -8.232979e-05, -0.012309151, -0.4905044, -0.10899156, -1.078407, -0.31324694, -4.954739e-05, -0.19639362, -0.0010867792, -7.958892e-05, -5.7770918e-05, -2.3912831e-05, -1.6207987e-06, -0.22168592, -0.00889817, -8.435633e-05, -0.00011666565, -9.7234624e-05, -0.0010065264, -0.0001517177, -0.0023805986, -1.5567284e-05, -1.3661821e-05, -0.6180935, -0.14448279, -0.00015422201, -8.1136764e-05, -0.002182199, -0.0037446006, -0.14298336, -0.10936691, -0.34972826, -0.029496161, -3.655083e-05, -0.12484137, -0.00027745095, -2.3078366e-05, -4.9586424e-06, -2.1171965e-05, -1.1278585e-05, -0.06931975, -0.018092444, -0.00013800588, -6.0276172e-05, -0.00012787033, -0.00022445, -5.312365e-05, -0.00019142075, -5.4364154e-06, -2.4543265e-06, -0.7706204, -0.078681365, -0.08414271, -0.00072506635, -0.00013133019, -7.5892516e-05, -0.0058250898, -0.021241043, -0.039963655, -0.053846642, -6.48061e-05], "top_logprobs": null, "text_offset": [5138, 5138, 5139, 5146, 5147, 5151, 5154, 5156, 5165, 5167, 5176, 5182, 5183, 5189, 5191, 5200, 5201, 5204, 5207, 5209, 5211, 5213, 5215, 5217, 5219, 5228, 5229, 5232, 5235, 5237, 5239, 5241, 5243, 5245, 5247, 5256, 5258, 5267, 5273, 5274, 5280, 5282, 5291, 5292, 5295, 5298, 5300, 5302, 5304, 5306, 5308, 5310, 5319, 5320, 5323, 5326, 5328, 5329, 5331, 5333, 5335, 5337, 5340, 5340, 5340, 5340]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", "))))", "\n", "(", "connect", "_"], "token_logprobs": [-0.008733351, -0.08999037, -0.08019607, -7.016862e-05, -0.0007398585, -6.909574e-05, -0.009330652, -0.9324485, -1.3661821e-05, -0.00014933258, -4.9902206e-05, -0.0032422235, -0.28975418, -0.038773622, -0.32839176, -5.4364154e-06, -3.2735214e-05, -0.0012777982, -0.00014146294, -0.03596322, -4.2433903e-06, -0.009343766, -2.5464416e-05, -8.892534e-06, -1.2112103e-05, -0.0002220649, -1.0681599e-05, -2.3556138e-05, -9.012677e-06, -1.8841804e-07, -0.0026287579, -0.00025956213, -0.0018270758, -0.0003975945, -4.799487e-05, -0.00074105157, -0.0010127309, -0.00014074863, -2.045765e-05, -4.1080762e-05, -0.00016292612, -0.0020107713, -0.0008470562, -0.00037899046, -0.23746842, -0.00010808168, -8.653179e-06, -0.004847432, -1.44972155e-05, -1.6282536e-05, -6.8669196e-06, -1.5006569e-06, -1.5805701e-05, -0.00062730775, -0.00034333672, -0.00025312486, -0.00012024191, -6.289782e-05, -2.6298881e-05, -0.0005608109, -7.1958624e-05, -0.00028722888, -2.6773841e-05, -3.166233e-05, -0.00014969209, -4.9187893e-05, -0.00093624304, -1.1430258e-06, -4.277735e-07, -0.18851805, -0.038550526, -8.459475e-05, -6.0633804e-05, -0.00017341838, -0.00063112524, -0.035350166, -0.055942897, -0.082603365, -2.9311614e-06, -0.0001375281, -0.0009735328, -3.7148744e-05, -0.0066802637, -1.7400124e-06, -8.423619e-05, -2.3795494e-05, -1.2588937e-05, -5.4364154e-06, -1.6402679e-05, -6.746778e-06, -6.6294406e-06, 0, -1.2622395e-06, -0.0005337355, -3.357061e-05, -0.00050373527, -0.00013896049, -2.6893982e-05, -5.657977e-05, -2.5941252e-05, -2.8565719e-05, -9.966347e-06, -2.4390605e-05, -4.394177e-05, -0.00013371343, -0.00020250905, -7.505805e-05, -0.024403771, -0.00013848272, -6.746778e-06, -0.00072697556, -1.1873685e-05, -8.5358415e-06, -2.28437e-05, -3.076318e-07, -3.4089344e-06, -0.00042138743, -2.8565719e-05, -0.00013347782, -1.8907942e-05, -4.0126153e-05, -4.763911e-05, -0.00018724658, -7.326899e-05, -9.317965e-05, -1.5094201e-05, -0.00065337407, -8.6144464e-05, -6.766711e-05, -0.00047183523, -3.6482897e-06, -6.827632e-08, -0.6365674, -0.049532887, -0.0005562772, -0.00010808168, -0.005512181, -0.0043767113, -0.66160053, -0.42583132, -0.39267942, -0.10333124, -4.6921985e-05, -0.42278963, -0.0009779445, -8.435633e-05, -4.7399757e-05, -4.9586424e-06, -1.5805701e-05, -0.6858357, -0.0031950432, -0.013806656, -0.0006326768, -0.00016185326, -0.00024263356, -0.00012882493, -0.000440229, -5.9321566e-05, -0.00031668, -3.883893e-06, -4.0040345e-06, -0.17164946, -0.00358164, -0.1524527, -0.006486891, -0.088095926, -0.013528218, -0.00012453248, -0.0005911678, -0.00012775393, -0.0002733969, -0.001887031, -0.00015493727, -0.00021956058, -0.008729682, -0.00023166448, -0.00011308939, -9.115311e-05, -0.00039544783, -0.0002220649, -7.584048e-06, -2.784859e-05, -6.253833e-05, -6.325358e-05, -8.8051806e-05, -5.197998e-06, -2.2604345e-05, -0.0002145538, -0.01387942, -0.6229231, -0.060414203, -0.13053793, -0.062791675, -7.24364e-05], "top_logprobs": null, "text_offset": [5138, 5138, 5139, 5146, 5147, 5151, 5154, 5156, 5163, 5164, 5168, 5171, 5173, 5182, 5184, 5190, 5191, 5200, 5202, 5211, 5217, 5218, 5221, 5228, 5229, 5233, 5235, 5244, 5245, 5248, 5251, 5253, 5255, 5257, 5258, 5259, 5260, 5263, 5265, 5266, 5267, 5269, 5272, 5275, 5278, 5280, 5282, 5285, 5287, 5289, 5298, 5299, 5302, 5305, 5307, 5310, 5313, 5315, 5318, 5319, 5321, 5322, 5324, 5326, 5328, 5330, 5339, 5340, 5343, 5346, 5348, 5350, 5352, 5354, 5356, 5358, 5367, 5369, 5375, 5376, 5385, 5387, 5396, 5402, 5403, 5406, 5413, 5414, 5418, 5420, 5429, 5430, 5433, 5436, 5438, 5440, 5442, 5443, 5444, 5445, 5448, 5450, 5451, 5452, 5454, 5457, 5460, 5463, 5465, 5467, 5470, 5472, 5474, 5483, 5484, 5487, 5490, 5492, 5495, 5498, 5500, 5503, 5504, 5506, 5507, 5509, 5511, 5513, 5515, 5524, 5525, 5528, 5531, 5533, 5535, 5537, 5539, 5542, 5544, 5553, 5555, 5564, 5570, 5571, 5577, 5579, 5588, 5589, 5592, 5595, 5597, 5598, 5599, 5601, 5603, 5605, 5607, 5609, 5618, 5619, 5622, 5625, 5627, 5629, 5632, 5635, 5637, 5639, 5640, 5641, 5642, 5644, 5647, 5650, 5653, 5655, 5658, 5661, 5664, 5666, 5668, 5669, 5670, 5671, 5673, 5676, 5679, 5682, 5684, 5686, 5690, 5690, 5690, 5690]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5"], "token_logprobs": [-0.008733351, -0.09302998, -0.07811348, -9.4849514e-05, -0.0008100076, -5.3597672e-05, -0.010303488, -0.9924538, -1.9382902e-05, -0.00014885482, -4.7399757e-05, -0.0033182313, -1.4979879, -1.771398e-05, -0.00017091405, -4.9782993e-05, -0.002780327, -0.17452991, -0.01862814, -0.1601835, -5.675771e-06, -2.1051823e-05, -0.0008122764, -5.8367896e-05, -0.02055335, -5.197998e-06, -0.008264346, -6.6294406e-06, -9.251094e-06, -2.7013197e-05, -0.00020703992, -7.584048e-06, -2.272356e-05, -4.2433903e-06, -6.827632e-08, -0.0017059242, -0.00014122359, -0.0011419145, -0.00055997365, -2.1768952e-05, -0.00051423314, -0.00091697165, -0.00016292612, -2.665838e-05, -6.587617e-05, -0.00013383264, -0.0013543123, -0.0006906526, -0.0003455998, -0.19758388, -9.878341e-05, -1.3185924e-05, -0.0021683988, -1.6045058e-05, -1.7953334e-05, -5.675771e-06, -1.8601542e-06, -9.370307e-06, -0.00058806554, -0.00027101085, -0.00022313965, -9.437268e-05, -6.337372e-05, -2.319758e-05, -0.0004683754, -4.9308033e-05, -0.00032848728, -3.01145e-05, -1.1039229e-05, -0.00019130061, -3.655083e-05, -0.0011275334, -7.3446927e-06, -7.8540467e-07, -0.1252671, -0.011962055, -8.376217e-05, -5.3597672e-05, -5.300351e-05, -0.00019261472, -0.0128564285, -0.019246213, -0.019463709, -1.2622395e-06, -4.036551e-05, -0.00038244936, -2.045765e-05, -0.00040821065, -1.1430258e-06, -3.3809963e-05, -2.1171965e-05, -1.2708151e-05, -2.9311614e-06, -1.3900239e-05, -3.529076e-06, -7.937927e-06, -5.460492e-07, -7.8540467e-07, -0.0002476394, -1.8668587e-05, -0.00018629384, -5.598372e-05, -1.4736571e-05, -5.2525735e-05, -1.5687427e-05, -3.3450466e-05, -9.130952e-06, -1.9980816e-05, -4.608659e-05, -7.744129e-05, -7.75605e-05, -6.0276172e-05, -0.016091108, -5.9085025e-05, -6.1516675e-06, -0.0006191959, -8.653179e-06, -7.224551e-06, -1.3542607e-05, 0, -6.6619094e-07, -0.00017127168, -2.9399247e-05, -6.277768e-05, -1.855031e-05, -4.0603925e-05, -4.871012e-05, -8.662224e-05, -5.8845668e-05, -9.2821094e-05, -2.141132e-05, -0.0004644415, -5.7891062e-05, -5.6818186e-05, -0.00029426313, -2.0966954e-06, 0, -0.7703314, -0.017080178, -0.013176958, -0.00024883242, -8.149626e-05, -5.6102934e-05, -0.002428876, -0.0019144407, -0.12671068, -0.4381066, -0.34966046, -8.0580685e-06, -0.00025062053, -0.00068993546, -3.595572e-05, -0.02734919, -3.529076e-06, -0.0031604832, -1.7400124e-06, -6.031526e-06, -2.9311614e-06, -3.237946e-05, -5.79217e-06, -1.5687427e-05, -9.055464e-07, -1.8841804e-07, -0.00047988512, -3.0473995e-05, -0.00043366966, -7.493791e-05, -9.72699e-06, -6.933416e-05, -2.4510746e-05, -5.6102934e-05, -1.1159372e-05, -4.5255874e-05, -6.253833e-05, -0.00021145344, -0.00012894507, -5.0140625e-05, -0.05513073, -4.2272848e-05, -3.170517e-06, -0.0013424365, -1.3306066e-05, -9.490449e-06, -1.2112103e-05, -3.4167595e-05, -3.883893e-06, -0.00033158858, -8.51908e-05, -0.00013860193, -4.0126153e-05, -4.0126153e-05, -3.01145e-05, -0.0002899688, -5.0260765e-05, -0.00016400088, -2.8445576e-05, -0.00038733694, -7.4460135e-05, -5.3837026e-05, -0.00036634682, -2.4543265e-06, -5.460492e-07, -0.3035929, -0.0096300095, -0.00010343254, -5.8130416e-05, -0.005000714, -0.007623851, -0.19923498, -8.972073e-05, -2.987608e-05, -0.001959049, -0.0021903221, -0.024690261, -0.057974234, -0.022954507, -4.5135734e-05, -0.71879035, -0.00023082721, -1.6999666e-05, -3.0353855e-05, -1.6207987e-06, -1.8841804e-07, -0.13460447, -0.0003151312, -0.0041108183, -0.0001229837, -0.000111540605, -0.00010891614, -2.033751e-05, -4.6921985e-05, -2.28437e-05, -4.6921985e-05, -1.3823812e-06, -3.529076e-06, -0.006034467, -0.00019547573, -0.004648602, -0.0017899344, -0.1597949, -0.0073341615, -6.850158e-05, -0.00033462982, -8.03023e-05, -0.00011118111, -0.001192519, -6.802381e-05, -5.109523e-05, -0.0017115335, -0.00043044917, -4.4539687e-05, -4.7041198e-05, -0.0002547938, -0.0003426196, -9.130952e-06, -4.4181128e-05], "top_logprobs": null, "text_offset": [5138, 5138, 5139, 5146, 5147, 5151, 5154, 5156, 5163, 5164, 5168, 5171, 5173, 5180, 5181, 5185, 5188, 5190, 5199, 5201, 5207, 5208, 5217, 5219, 5228, 5234, 5235, 5238, 5245, 5246, 5250, 5252, 5261, 5262, 5265, 5268, 5270, 5272, 5274, 5275, 5276, 5277, 5280, 5282, 5283, 5284, 5286, 5289, 5292, 5295, 5297, 5299, 5302, 5304, 5306, 5315, 5316, 5319, 5322, 5324, 5327, 5330, 5332, 5335, 5336, 5338, 5339, 5341, 5343, 5345, 5347, 5356, 5357, 5360, 5363, 5365, 5367, 5369, 5371, 5373, 5375, 5384, 5386, 5392, 5393, 5402, 5404, 5413, 5419, 5420, 5423, 5430, 5431, 5435, 5437, 5446, 5447, 5450, 5453, 5455, 5457, 5459, 5460, 5461, 5462, 5465, 5467, 5468, 5469, 5471, 5474, 5477, 5480, 5482, 5484, 5487, 5489, 5491, 5500, 5501, 5504, 5507, 5509, 5512, 5515, 5517, 5520, 5521, 5523, 5524, 5526, 5528, 5530, 5532, 5541, 5542, 5545, 5548, 5550, 5551, 5553, 5555, 5557, 5559, 5562, 5564, 5573, 5575, 5581, 5582, 5591, 5593, 5602, 5608, 5609, 5612, 5619, 5620, 5624, 5626, 5635, 5636, 5639, 5642, 5644, 5646, 5648, 5649, 5650, 5651, 5654, 5656, 5657, 5658, 5660, 5663, 5666, 5669, 5671, 5673, 5676, 5678, 5680, 5689, 5690, 5693, 5696, 5698, 5701, 5704, 5706, 5709, 5710, 5712, 5713, 5715, 5717, 5719, 5721, 5730, 5731, 5734, 5737, 5739, 5741, 5743, 5745, 5748, 5750, 5756, 5757, 5766, 5768, 5777, 5779, 5788, 5794, 5795, 5801, 5803, 5812, 5813, 5816, 5819, 5821, 5822, 5823, 5825, 5827, 5829, 5831, 5833, 5842, 5843, 5846, 5849, 5851, 5853, 5856, 5859, 5861, 5863, 5864, 5865, 5866, 5868, 5871, 5874, 5877, 5879, 5882, 5885, 5888, 5890, 5892, 5893]}, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.008733351, -0.092124775, -0.10339132, -0.0002057305, -0.0008712142, -8.6144464e-05, -0.011269557, -0.48872477, -0.11473399, -1.1773988, -0.30584225, -3.8338017e-05, -0.21690471, -0.001031884, -8.00667e-05, -5.4194657e-05, -1.9143545e-05, -3.170517e-06, -0.21306683, -0.007333502, -9.878341e-05, -0.000113448885, -0.00010450542, -0.00091387215, -0.00011201744, -0.0028062684, -1.9382902e-05, -1.6402679e-05, -0.61216575, -0.11900019, -0.00019297047, -0.00010021203, -0.0015136267, -0.004667104, -0.15895241, -0.13269888, -0.36093143, -0.026701057, -2.045765e-05, -0.10555644, -0.000391513, -2.0815281e-05, -3.529076e-06, -1.6521892e-05, -1.3900239e-05, -0.054924045, -0.01305388, -9.2821094e-05, -5.2288255e-05, -0.00012763379, -0.0001916601, -5.5385808e-05, -0.00017139182, -4.9586424e-06, -4.277735e-07, -0.77370656, -0.07408961, -0.08992183, -0.0005093446, -0.00017997579, -8.149626e-05, -0.00541947, -0.020991633, -0.038755838, -0.060731154, -6.110595e-05], "top_logprobs": null, "text_offset": [5138, 5138, 5139, 5146, 5147, 5151, 5154, 5156, 5165, 5167, 5176, 5182, 5183, 5189, 5191, 5200, 5201, 5204, 5207, 5209, 5211, 5213, 5215, 5217, 5219, 5228, 5229, 5232, 5235, 5237, 5239, 5241, 5243, 5245, 5247, 5256, 5258, 5267, 5273, 5274, 5280, 5282, 5291, 5292, 5295, 5298, 5300, 5302, 5304, 5306, 5308, 5310, 5319, 5320, 5323, 5326, 5328, 5329, 5331, 5333, 5335, 5337, 5340, 5340, 5340, 5340]}, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform_matrix 1 0 0 0)) (transform_matrix 3 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 3", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.008733471, -0.09442504, -3.2837377, -0.49954107, -0.8972718, -0.97423345, -0.31414574, -0.7193379, -0.30030206, -1.3407022, -0.0001754468, -1.1258348, -0.0098776845, -0.001975235, -0.0029210984, -7.493791e-05, -1.7400124e-06, -0.31462356, -0.010495914, -0.048340574, -0.0035620183, -0.001764617, -0.00082635425, -0.0014018249, -0.0057910983, -0.017904254, -0.0052956636, -0.00049860927, -0.00011082348, -0.29883862, -0.02749616, -0.25733706, -0.07236371, -0.9410513, -0.11692424, -0.009130449, -0.008157316, -0.00061132346, -0.010831532, -0.007436419, -0.018114414, -0.016147621, -0.09843957, -0.0041130343, -0.002048996, -0.0025100778, -0.005735165, -0.0009471023, -4.501652e-05, -0.00015386345, -8.781245e-05, -0.0003557382, -0.0007404546, -0.0001722244, -8.3284394e-05, -0.0016661593, -0.006585764, -4.0009756e-05, -0.43065208, -0.07394552, -0.013777949, -0.0016643091, -1.8841804e-07, -0.6923373, -0.4068596, -0.31365982, -0.030162938, -0.028691988, -0.0076093758, -0.016577065, -0.03818857, -0.00033295903, -4.4419543e-05, -1.3391447, -0.038361542, -0.0103453435, -0.002713803, -0.040357593, -0.040046725, -0.16316004, -0.4632105, -0.16440709, -0.25984597, -0.028895717, -0.60647875, -2.7490969e-05, -0.70868176, -0.00094042, -9.604066e-05, -0.00011487751, -3.6482897e-06, -6.6619094e-07, -0.26050028, -0.0018824317, -0.011400496, -0.00027268258, -0.00020477588, -0.00015469792, -0.0003287257, -0.00043343127, -3.5717305e-05, -0.00024311132, -1.3823812e-06, -3.529076e-06, -0.039268322, -0.0013210081, -0.03132689, -0.0034629656, -0.07639005, -0.014294591, -0.000104267005, -0.0009630922, -0.0001101101, -0.00033737256, -0.0009919079, -0.0044989665, -0.00035704856, -0.0062129414, -0.0010750234, -9.4967785e-05, -8.388231e-05, -0.00024060514, -0.0002463262, -3.452334e-05, -5.7057543e-05, -7.9946556e-05, -8.5429216e-05, -8.042151e-05, -7.584048e-06, -2.462996e-05, -0.00023237972, -0.0011582659, -2.7251614e-05, -0.0012874063, -3.4048382e-05, -0.00035692935, -1.0323977e-05, -3.883893e-06, -0.08049177, -0.0050177844, -0.013817957, -0.00022170728, -0.00032192798, -0.0017674835, -0.00030344594, -0.0025967874, -1.5214344e-05, -5.460492e-07, -3.4339688, -0.08951323, -0.0005318864, -0.0006530146, -0.86571276, -0.03812491], "top_logprobs": null, "text_offset": [5138, 5138, 5139, 5148, 5150, 5159, 5161, 5170, 5172, 5181, 5187, 5188, 5194, 5196, 5205, 5206, 5209, 5212, 5214, 5215, 5216, 5218, 5220, 5222, 5224, 5226, 5235, 5236, 5239, 5242, 5244, 5246, 5249, 5252, 5254, 5256, 5257, 5258, 5259, 5261, 5264, 5267, 5270, 5272, 5275, 5278, 5281, 5283, 5285, 5286, 5287, 5288, 5290, 5293, 5296, 5299, 5301, 5303, 5306, 5308, 5317, 5318, 5321, 5324, 5326, 5328, 5330, 5332, 5334, 5336, 5345, 5346, 5349, 5352, 5354, 5356, 5358, 5360, 5362, 5364, 5373, 5375, 5384, 5386, 5395, 5401, 5402, 5408, 5410, 5419, 5420, 5423, 5426, 5428, 5429, 5430, 5432, 5434, 5436, 5438, 5440, 5449, 5450, 5453, 5456, 5458, 5460, 5463, 5466, 5468, 5470, 5471, 5472, 5473, 5475, 5478, 5481, 5484, 5486, 5489, 5492, 5495, 5497, 5499, 5500, 5501, 5502, 5504, 5507, 5510, 5513, 5515, 5517, 5520, 5522, 5531, 5532, 5535, 5538, 5540, 5542, 5544, 5546, 5548, 5550, 5559, 5560, 5563, 5566, 5568, 5570, 5572, 5574, 5577]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.008733471, -0.095973395, -0.0849075, -0.000104387145, -0.00035907602, -7.064452e-05, -0.009398216, -0.9201917, -2.0218295e-05, -0.00018081025, -5.848711e-05, -0.002755761, -0.27359596, -0.03719157, -0.29750112, -5.4364154e-06, -2.9636725e-05, -0.00105736, -0.000113805574, -0.036560576, -6.031526e-06, -0.008012145, -1.4736571e-05, -7.584048e-06, -1.2946569e-05, -0.00014420661, -1.2112103e-05, -2.0218295e-05, -4.361666e-06, -6.827632e-08, -0.002902806, -0.000189275, -0.0019084689, -0.00045490012, -4.370523e-05, -0.00083691406, -0.0014514871, -0.00015469792, -2.5703772e-05, -6.3014224e-05, -0.0003290824, -0.0026417272, -0.00081668893, -0.00037755995, -0.22646305, -7.839496e-05, -6.8669196e-06, -0.0036344011, -1.9621319e-05, -1.9143545e-05, -6.5092986e-06, -2.0966954e-06, -1.8190814e-05, -0.000672576, -0.00033987593, -0.00021503064, -0.00014420661, -8.3996834e-05, -2.7251614e-05, -0.00074272143, -6.575884e-05, -0.00021419431, -2.7133337e-05, -2.8326363e-05, -0.00012810968, -4.5494293e-05, -0.0007893104, -1.3823812e-06, -4.277735e-07, -0.16424355, -0.034993198, -7.56541e-05, -6.361214e-05, -0.00013395278, -0.00045263232, -0.033569854, -3.172268, -2.6060465e-05, -1.0103618, -0.0016553525, -4.4181128e-05, -0.00016471426, -1.306671e-05, -6.6619094e-07, -0.6797314, -0.008255693, -0.00031548884, -8.435633e-05, -0.0027705838, -0.004572195, -0.7348734, -7.076466e-05, -0.00014659172, -0.0012677707, -0.0035441942, -0.031566463, -0.054728728, -0.024362484, -1.2708151e-05, -0.9931755, -8.7696986e-05, -1.2946569e-05, -1.5925843e-05, -1.5006569e-06, -3.076318e-07, -0.01940652, -0.00029307103, -0.0031142037, -0.00012989782, -8.00667e-05, -6.432833e-05, -2.4152187e-05, -7.314978e-05, -3.0947078e-05, -6.862172e-05, -3.6482897e-06, 0, -0.008554669, -0.0003123885, -0.008261522, -0.0040230798, -0.26084608, -0.0089501925, -0.00011988616, -0.00035370977, -8.3284394e-05, -0.000116070536, -0.0010530055, -0.00020084012, -0.00011869313, -0.002465263, -0.00060631573, -4.3465872e-05, -9.687513e-05, -0.00019511623, -8.185389e-05, -9.012677e-06, -3.058758e-05, -4.6206733e-05, -5.562516e-05, -4.859278e-05, -3.170517e-06, -2.2958224e-05, -0.00016674175, -0.00010748563, -2.2159093e-06, -0.88837576, -0.00020262918, -1.5805701e-05, -1.0323977e-05, -1.8601542e-06, -1.4377073e-05, -0.0018539474, -0.00031477172, -0.000106773194, -7.11223e-05, -0.00010379017, -2.6180607e-05, -0.0011369031, -8.00667e-05, -0.00012560723, -5.586358e-05, -0.11844008, -0.02342111, -0.08382395, -0.06655742, -0.000106533844, -0.0013672047, -0.0001351458, -0.013491667], "top_logprobs": null, "text_offset": [5138, 5138, 5139, 5146, 5147, 5151, 5154, 5156, 5163, 5164, 5168, 5171, 5173, 5182, 5184, 5190, 5191, 5200, 5202, 5211, 5217, 5218, 5221, 5228, 5229, 5233, 5235, 5244, 5245, 5248, 5251, 5253, 5255, 5257, 5258, 5259, 5260, 5263, 5265, 5266, 5267, 5269, 5272, 5275, 5278, 5280, 5282, 5285, 5287, 5289, 5298, 5299, 5302, 5305, 5307, 5310, 5313, 5315, 5318, 5319, 5321, 5322, 5324, 5326, 5328, 5330, 5339, 5340, 5343, 5346, 5348, 5350, 5352, 5354, 5356, 5358, 5367, 5373, 5374, 5380, 5382, 5391, 5392, 5395, 5398, 5400, 5402, 5404, 5406, 5409, 5411, 5417, 5418, 5427, 5429, 5438, 5440, 5449, 5455, 5456, 5462, 5464, 5473, 5474, 5477, 5480, 5482, 5483, 5484, 5486, 5488, 5490, 5492, 5494, 5503, 5504, 5507, 5510, 5512, 5514, 5517, 5520, 5522, 5524, 5525, 5526, 5527, 5529, 5532, 5535, 5538, 5540, 5543, 5546, 5549, 5551, 5553, 5554, 5555, 5556, 5558, 5561, 5564, 5567, 5569, 5571, 5574, 5576, 5578, 5587, 5588, 5591, 5594, 5596, 5599, 5602, 5604, 5607, 5608, 5610, 5611, 5613, 5615, 5618, 5618, 5618, 5618, 5618, 5618, 5618]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.008733471, -0.092062235, -0.09909056, -0.000109035354, -0.00088935083, -5.0976956e-05, -0.016119335, -0.5243312, -0.09138033, -1.1349232, -0.33805943, -3.9055147e-05, -0.21537085, -0.0012419315, -5.6102934e-05, -3.4167595e-05, -2.0098154e-05, -3.051303e-06, -0.20927194, -0.0060811816, -9.317965e-05, -0.00012608219, -9.878341e-05, -0.00085540453, -0.0001283481, -0.002228373, -1.9503042e-05, -1.5094201e-05, -0.5601865, -0.109956466, -0.00016733873, -7.4460135e-05, -0.0011683488, -0.003895082, -0.1663222, -0.1077589, -0.38403934, -0.029684335, -2.7371756e-05, -0.10981203, -0.0003218097, -1.9741461e-05, -4.4818075e-06, -2.4032974e-05, -1.0920954e-05, -0.071302846, -0.017121105, -9.520714e-05, -4.680184e-05, -0.00018200328, -0.0002358368, -4.680184e-05, -0.00018093038, -4.6010214e-06, -1.3823812e-06, -0.8414491, -0.07527778, -0.08356051, -0.0007680734, -0.00010510146, -6.635395e-05, -0.0058281487, -0.024492761, -0.03814658, -0.061419994, -8.018216e-05], "top_logprobs": null, "text_offset": [5138, 5138, 5139, 5146, 5147, 5151, 5154, 5156, 5165, 5167, 5176, 5182, 5183, 5189, 5191, 5200, 5201, 5204, 5207, 5209, 5211, 5213, 5215, 5217, 5219, 5228, 5229, 5232, 5235, 5237, 5239, 5241, 5243, 5245, 5247, 5256, 5258, 5267, 5273, 5274, 5280, 5282, 5291, 5292, 5295, 5298, 5300, 5302, 5304, 5306, 5308, 5310, 5319, 5320, 5323, 5326, 5328, 5329, 5331, 5333, 5335, 5337, 5340, 5340, 5340, 5340]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.008733351, -0.09840879, -0.08016326, -0.00011070334, -0.00089997076, -5.157113e-05, -0.008351493, -0.9027624, -2.0815281e-05, -0.00018557765, -4.716134e-05, -0.0030815576, -0.28672704, -0.039930467, -0.31425354, -4.2433903e-06, -3.023464e-05, -0.0010876146, -0.00013335768, -0.039498463, -6.3900848e-06, -0.010810926, -1.8073477e-05, -8.0580685e-06, -1.9980816e-05, -0.0003033258, -1.0561456e-05, -1.843017e-05, -4.4818075e-06, -6.827632e-08, -0.0031113944, -0.00028854018, -0.0020175795, -0.00047493746, -5.0500123e-05, -0.00077475474, -0.0016272934, -0.00020811372, -2.9041616e-05, -6.551948e-05, -0.00022814641, -0.0019577357, -0.0010105823, -0.00030893143, -0.23546736, -8.388231e-05, -7.698572e-06, -0.004772566, -1.5567284e-05, -1.6045058e-05, -7.3446927e-06, -7.8540467e-07, -1.5327929e-05, -0.0006667348, -0.00025527156, -0.00023071081, -0.00011988616, -7.529741e-05, -2.6060465e-05, -0.00055997365, -5.4194657e-05, -0.00030487834, -2.3435998e-05, -3.8457234e-05, -0.00013896049, -3.6074933e-05, -0.00070842594, -1.3823812e-06, -3.076318e-07, -0.17563143, -0.033148333, -9.24644e-05, -5.979934e-05, -0.00014229833, -0.0005898546, -0.039988656, -0.035488866, -0.085341424, -2.9311614e-06, -0.00010367096, -0.001322679, -2.8445576e-05, -0.0055173975, -1.9765537e-06, -4.859278e-05, -6.746778e-06, -1.1514188e-05, -7.1062755e-06, -1.843017e-05, -6.6294406e-06, -8.0580685e-06, -3.076318e-07, -1.1430258e-06, -0.00056486396, -2.880226e-05, -0.0005867533, -0.00013562171, -2.4750101e-05, -6.826223e-05, -3.5240468e-05, -1.8668587e-05, -8.296486e-06, -2.5941252e-05, -4.4181128e-05, -0.00014468438, -0.00015016893, -5.991855e-05, -0.023771038, -0.00010295758, -7.224551e-06, -0.00058526185, -1.2588937e-05, -8.0580685e-06, -2.1051823e-05, -3.076318e-07, -2.8138238e-06, -0.0005300982, -3.2735214e-05, -0.00012000537, -2.3675353e-05, -4.0246297e-05, -4.9069615e-05, -0.00019225522, -6.99302e-05, -0.00013371343, -1.9980816e-05, -0.0004625332, -0.00011308939, -8.5429216e-05, -0.00054649834, -3.170517e-06, 0, -0.66812414, -0.047409885, -0.00041166772, -9.520714e-05, -0.004736514, -0.004197605, -0.90208143, -0.00012179443, -0.0001341912, -0.005679774, -0.02679846, -0.08503708, -0.13738073, -0.07488816, -6.0633804e-05, -0.74464226, -0.0015337429, -4.716134e-05, -2.3795494e-05, -2.693682e-06, -1.8073477e-05, -0.21750061, -0.0009816437, -0.00875698, -0.00028866032, -0.00020119963, -0.00039342127, -0.00017389427, -0.00020036235, -3.5477948e-05, -0.00029986876, -1.6207987e-06, -1.7400124e-06, -0.06370038, -0.0020249253, -0.045146458, -0.009722815, -0.21251829, -0.018296575, -0.0007112888, -0.0016122478, -0.0001643557, -0.0005467358, -0.003739395, -0.00093117333, -0.00028555995, -0.01870478, -0.00081072474, -0.000120601406, -7.1481794e-05, -0.0005311711, -0.00022397317, -1.0920954e-05, -5.9201422e-05, -4.3227457e-05, -6.158372e-05, -0.00014265596, -9.251094e-06, -2.3795494e-05, -0.00054423057, -0.00082313374, -6.087316e-05, -0.7362363, -0.00043486364, -1.5687427e-05, -1.5448071e-05, -6.6619094e-07, -4.036551e-05, -0.0020374095, -0.0007557255, -0.000107007865, -5.300351e-05, -9.0080226e-05, -2.3078366e-05, -0.0013466117, -0.00013502566, -0.00020131696, -6.718934e-05, -0.047132935, -0.02843262, -0.10911713, -0.08534454, -0.00015648511, -0.0010123714, -0.00013597934, -0.0089450795], "top_logprobs": null, "text_offset": [5138, 5138, 5139, 5146, 5147, 5151, 5154, 5156, 5163, 5164, 5168, 5171, 5173, 5182, 5184, 5190, 5191, 5200, 5202, 5211, 5217, 5218, 5221, 5228, 5229, 5233, 5235, 5244, 5245, 5248, 5251, 5253, 5255, 5257, 5258, 5259, 5260, 5263, 5265, 5266, 5267, 5269, 5272, 5275, 5278, 5280, 5282, 5285, 5287, 5289, 5298, 5299, 5302, 5305, 5307, 5310, 5313, 5315, 5318, 5319, 5321, 5322, 5324, 5326, 5328, 5330, 5339, 5340, 5343, 5346, 5348, 5350, 5352, 5354, 5356, 5358, 5367, 5369, 5375, 5376, 5385, 5387, 5396, 5402, 5403, 5406, 5413, 5414, 5418, 5420, 5429, 5430, 5433, 5436, 5438, 5440, 5442, 5443, 5444, 5445, 5448, 5450, 5451, 5452, 5454, 5457, 5460, 5463, 5465, 5467, 5470, 5472, 5474, 5483, 5484, 5487, 5490, 5492, 5495, 5498, 5500, 5503, 5504, 5506, 5507, 5509, 5511, 5513, 5515, 5524, 5525, 5528, 5531, 5533, 5535, 5537, 5539, 5542, 5544, 5550, 5551, 5560, 5562, 5571, 5573, 5582, 5588, 5589, 5595, 5597, 5606, 5607, 5610, 5613, 5615, 5616, 5617, 5619, 5621, 5623, 5625, 5627, 5636, 5637, 5640, 5643, 5645, 5647, 5650, 5653, 5655, 5657, 5658, 5659, 5660, 5662, 5665, 5668, 5671, 5673, 5676, 5679, 5682, 5684, 5686, 5687, 5688, 5689, 5691, 5694, 5697, 5700, 5702, 5704, 5707, 5709, 5711, 5720, 5721, 5724, 5727, 5729, 5732, 5735, 5737, 5740, 5741, 5743, 5744, 5746, 5748, 5751, 5751, 5751, 5751, 5751, 5751, 5751]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.008733351, -0.09636731, -0.07868452, -7.076466e-05, -0.00080261106, -6.432833e-05, -0.013149114, -0.9420171, -1.4377073e-05, -0.00014313185, -5.6102934e-05, -0.004031161, -0.2978434, -0.050701544, -0.3447984, -4.6010214e-06, -3.0353855e-05, -0.0014585898, -0.0002022697, -0.04403294, -6.2699432e-06, -0.011983891, -2.3795494e-05, -9.606849e-06, -1.6999666e-05, -0.00024501586, -1.0920954e-05, -2.4152187e-05, -4.2433903e-06, -1.8841804e-07, -0.0038186123, -0.00022313965, -0.0020714551, -0.00049514946, -4.1558535e-05, -0.000803209, -0.0009627327, -0.0001698393, -2.7490969e-05, -5.2885232e-05, -0.00019762148, -0.0019024963, -0.0012393042, -0.00043080773, -0.21949281, -8.936497e-05, -9.846204e-06, -0.0049668686, -1.5567284e-05, -1.5687427e-05, -1.1753544e-05, -2.693682e-06, -1.6521892e-05, -0.00068790605, -0.0003625331, -0.0002448957, -0.00014969209, -8.2927705e-05, -2.7728449e-05, -0.0005937923, -5.503005e-05, -0.00029223657, -2.2365928e-05, -2.558363e-05, -0.00013001703, -4.048565e-05, -0.00045644888, -5.460492e-07, -6.827632e-08, -0.18777676, -0.02916693, -0.00011082348, -5.4194657e-05, -0.00013800588, -0.00050290365, -0.039858077, -0.04451236, -0.09206642, -2.2159093e-06, -8.5905114e-05, -0.00096619444, -2.784859e-05, -0.007447409, -2.2159093e-06, -0.00019285125, -2.319758e-05, -1.2828294e-05, -5.197998e-06, -1.8073477e-05, -5.79217e-06, -1.0681599e-05, -3.076318e-07, -2.2159093e-06, -0.00081883755, -3.3928238e-05, -0.00056784705, -0.00010939391, -2.6060465e-05, -7.3865966e-05, -3.0353855e-05, -4.4539687e-05, -1.1873685e-05, -2.4750101e-05, -3.488097e-05, -0.0003931819, -0.00014063035, -8.244993e-05, -0.03077846, -0.00015517569, -9.251094e-06, -0.00063291617, -9.370307e-06, -8.296486e-06, -2.272356e-05, -1.8841804e-07, -1.1430258e-06, -0.00047362337, -4.1918032e-05, -7.9112084e-05, -2.1529595e-05, -4.6206733e-05, -6.09933e-05, -0.00020179474, -8.221057e-05, -9.258174e-05, -1.771398e-05, -0.0005930761, -7.052812e-05, -8.578871e-05, -0.001030569, -4.2433903e-06, -6.827632e-08, -1.9363505, -0.029609304, -0.00017258391, -7.9112084e-05, -0.007104944, -0.010440562, -0.66606754, -0.00013490739, -0.0045479424, -0.0034341959, -0.021049215, -0.052887715, -0.09867642, -0.05276587, -7.124244e-05, -0.5849248, -0.0008353625, -2.7251614e-05, -2.4510746e-05, -2.9311614e-06, -2.2159093e-06, -0.046818458, -0.00089054485, -0.0066512832, -0.00028174432, -0.00016662253, -0.0001319253, -3.9172486e-05, -0.00026254423, -3.2855354e-05, -0.00020334445, -1.8601542e-06, -1.1514188e-05, -0.022746434, -0.0017096263, -0.032617867, -0.0075716604, -0.41400483, -0.010824966, -0.00013860193, -0.00026373632, -0.00010820183, -0.00027888143, -0.0016008441, -0.0005991576, -0.00023678952, -0.0068459506, -0.00046539606, -0.000102240454, -0.00010534082, -0.0006680452, -0.000113448885, -9.606849e-06, -3.357061e-05, -4.763911e-05, -6.0276172e-05, -4.7041198e-05, -6.1516675e-06, -2.6893982e-05, -0.00035871653, -0.0004910945, -1.1039229e-05, -0.8928699, -0.0013863653, -3.0707724e-05, -2.6773841e-05, -1.5006569e-06, -7.493791e-05, -0.0037405915, -0.0014743459, -0.0001390797, -0.00023082721, -0.0001507631, -3.7505437e-05, -0.00084073155, -0.00010510146, -0.00016674175, -0.0001086796, -0.15910308, -0.03631368, -0.10892729, -0.08703337, -0.00017854528, -0.0009492508, -8.6144464e-05, -0.008130635], "top_logprobs": null, "text_offset": [5138, 5138, 5139, 5146, 5147, 5151, 5154, 5156, 5163, 5164, 5168, 5171, 5173, 5182, 5184, 5190, 5191, 5200, 5202, 5211, 5217, 5218, 5221, 5228, 5229, 5233, 5235, 5244, 5245, 5248, 5251, 5253, 5255, 5257, 5258, 5259, 5260, 5263, 5265, 5266, 5267, 5269, 5272, 5275, 5278, 5280, 5282, 5285, 5287, 5289, 5298, 5299, 5302, 5305, 5307, 5310, 5313, 5315, 5318, 5319, 5321, 5322, 5324, 5326, 5328, 5330, 5339, 5340, 5343, 5346, 5348, 5350, 5352, 5354, 5356, 5358, 5367, 5369, 5375, 5376, 5385, 5387, 5396, 5402, 5403, 5406, 5413, 5414, 5418, 5420, 5429, 5430, 5433, 5436, 5438, 5440, 5442, 5443, 5444, 5445, 5448, 5450, 5451, 5452, 5454, 5457, 5460, 5463, 5465, 5467, 5470, 5472, 5474, 5483, 5484, 5487, 5490, 5492, 5495, 5498, 5500, 5503, 5504, 5506, 5507, 5509, 5511, 5513, 5515, 5524, 5525, 5528, 5531, 5533, 5535, 5537, 5539, 5542, 5544, 5550, 5551, 5560, 5562, 5571, 5573, 5582, 5588, 5589, 5595, 5597, 5606, 5607, 5610, 5613, 5615, 5616, 5617, 5619, 5621, 5623, 5625, 5627, 5636, 5637, 5640, 5643, 5645, 5647, 5650, 5653, 5655, 5657, 5658, 5659, 5660, 5662, 5665, 5668, 5671, 5673, 5676, 5679, 5682, 5684, 5686, 5687, 5688, 5689, 5691, 5694, 5697, 5700, 5702, 5704, 5707, 5709, 5711, 5720, 5721, 5724, 5727, 5729, 5732, 5735, 5737, 5740, 5741, 5743, 5744, 5746, 5748, 5751, 5751, 5751, 5751, 5751, 5751, 5751]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6)", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", ")", "\n", "("], "token_logprobs": [-0.008733351, -0.10088354, -0.08951531, -9.437268e-05, -0.00089710695, -5.07376e-05, -0.0121126305, -0.48342007, -0.1217486, -1.0824127, -0.3298644, -4.4539687e-05, -0.21779107, -0.0011844616, -6.89756e-05, -3.7743856e-05, -2.6180607e-05, -3.051303e-06, -0.22526419, -0.00624371, -8.531094e-05, -0.00012477185, -8.8171946e-05, -0.000924968, -0.000113686365, -0.0024874911, -1.7953334e-05, -2.0098154e-05, -1.5852056, -0.108044066, -0.060275044, -0.00090671214, -0.009453091, -0.0070579406, -0.22515383, -0.181177, -0.38818365, -0.037981942, -3.5240468e-05, -2.0793316, -0.0011065884, -8.483411e-05, -3.881579e-05, -3.7684315e-06, -1.6207987e-06, -0.33348414, -0.005179783, -0.021418536, -0.0009786607, -0.00023166448, -0.00012715602, -0.0001526695, -0.0004266345, -6.194322e-05, -0.00021443368, -8.296486e-06, -4.838501e-06, -0.12783165, -0.004408618, -0.2942179, -0.022993539, -0.83413285, -0.064776674, -0.0024037804, -0.0016329656, -0.00011082348, -0.004503457, -0.0009048029, -0.006101452, -0.0059342086, -0.027801368, -0.000980093, -0.00049622235, -0.00028174432, -0.0013140846, -0.00044845813, -1.3900239e-05, -4.46589e-05, -6.2299914e-05, -8.900641e-05, -0.00012715602, -9.370307e-06, -2.4510746e-05, -0.00030201545, -0.0061037904, -0.1459596, -3.9655035, -0.8598911, -0.017818697, -0.050950326], "top_logprobs": null, "text_offset": [5138, 5138, 5139, 5146, 5147, 5151, 5154, 5156, 5165, 5167, 5176, 5182, 5183, 5189, 5191, 5200, 5201, 5204, 5207, 5209, 5211, 5213, 5215, 5217, 5219, 5228, 5229, 5232, 5235, 5237, 5239, 5241, 5243, 5245, 5247, 5256, 5258, 5267, 5273, 5274, 5280, 5282, 5291, 5292, 5295, 5298, 5300, 5301, 5302, 5304, 5306, 5308, 5310, 5312, 5321, 5322, 5325, 5328, 5330, 5332, 5335, 5338, 5340, 5342, 5343, 5344, 5345, 5347, 5350, 5353, 5356, 5358, 5361, 5364, 5367, 5369, 5371, 5372, 5373, 5374, 5376, 5379, 5382, 5385, 5387, 5389, 5392, 5394, 5395, 5395]}, "finish_reason": "stop"}]}, {"id": "cmpl-51M0BIJ3JsPL4nVxu4HZyzJypANvp", "object": "text_completion", "created": 1651004587, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.007597182, -0.10980306, -0.07682911, -2.7133337e-05, -0.0011558789, -5.693833e-05, -0.011381563, -1.0687221, -5.79217e-06, -0.00028353152, -3.595572e-05, -0.004728908, -0.19872764, -0.036315285, -0.51596045, -5.912312e-06, -5.20489e-05, -0.0011198947, -0.00011201744, -0.073021084, -6.746778e-06, -0.010403521, -2.0935424e-05, -1.0084622e-05, -2.3675353e-05, -0.00023321231, -1.6402679e-05, -1.4854846e-05, -7.3446927e-06, 0, -0.0030463443, -6.599631e-05, -0.001496911, -0.0002121687, -1.8907942e-05, -0.0006401316, -0.000116546435, -0.00010748563, -1.5805701e-05, -4.275062e-05, -5.9679198e-05, -0.0007072329, -0.00053093175, -0.00022278015, -0.070020474, -0.00014551697, -9.606849e-06, -0.07185692, -2.7251614e-05, -2.033751e-05, -5.675771e-06, -2.5744682e-06, -1.6045058e-05, -0.00082361064, -0.00016089863, -0.00016066022, -0.00020394142, -8.054166e-05, -2.4272329e-05, -0.00038042187, -7.302963e-05, -0.00046432132, -4.6921985e-05, -5.3363005e-05, -0.00022766957, -4.5374152e-05, -0.0022968973, -7.8540467e-07, -1.8841804e-07, -0.12069402, -0.028784428, -9.878341e-05, -0.00011392572, -0.00019893186, -0.0019554652, -0.050571308, -0.17557994, -0.660838, -0.14601092, -2.3317722e-05, -0.1655082, -0.00013097163, -3.9172486e-05, -1.2828294e-05, -2.4543265e-06, -1.8841804e-07, -2.7521715, -0.118640795, -0.003392152, -0.00027506487, -0.1152995, -0.00038173224, -3.595572e-05, -0.00035394725, -8.5358415e-06, -8.7733215e-06, -0.9735581, -0.06084574, -0.038940996, -0.0011397669, -0.0033083032, -0.0027163744, -0.66522557, -6.0395385e-05, -3.953198e-05, -0.0012256374, -0.003292338, -0.018476946, -0.044182133, -0.0624886, -7.818713e-06, -0.5295985, -9.258174e-05, -4.4539687e-05, -1.0323977e-05, -1.6207987e-06, -3.076318e-07, -0.11629479, -0.0005673702, -0.005638653, -0.0001476646, -8.471396e-05, -6.0395385e-05, -4.29881e-05, -9.949678e-05, -2.2126573e-05, -3.678925e-05, -1.6207987e-06, -2.5744682e-06, -0.024261473, -0.000421624, -0.015673056, -0.0033102774, -0.6525989, -0.010641571, -9.759038e-05, -0.0005024268, -6.2420055e-05, -0.00022385397, -0.00048596945, -4.2153635e-05, -0.0003317078, -0.004695549, -0.00045776297, -5.0856816e-05, -4.966285e-05, -0.0004992054, -0.00017914227, -7.584048e-06, -8.51908e-05, -4.966285e-05, -3.225932e-05, -5.5745302e-05, -3.4089344e-06, -2.7967804e-05, -0.00021407605, -8.244993e-05, -4.4818075e-06, -0.43276006, -6.170386e-05, -2.2365928e-05, -5.197998e-06, -1.4974988e-05, -4.0040345e-06, -0.0013680401, -6.778445e-05, -4.2392992e-05, -6.933416e-05, -8.447461e-05, -3.166233e-05, -0.0007616324, -0.000107247215, -0.00014480359, -5.4314798e-05, -0.011258344, -0.033843815, -0.103096105, -0.08500567], "top_logprobs": null, "text_offset": [4404, 4404, 4405, 4412, 4413, 4417, 4420, 4422, 4429, 4430, 4434, 4437, 4439, 4448, 4450, 4456, 4457, 4466, 4468, 4477, 4483, 4484, 4487, 4494, 4495, 4499, 4501, 4510, 4511, 4514, 4517, 4519, 4521, 4523, 4524, 4525, 4526, 4529, 4531, 4532, 4533, 4535, 4538, 4541, 4544, 4546, 4548, 4551, 4553, 4555, 4564, 4565, 4568, 4571, 4573, 4576, 4579, 4581, 4584, 4585, 4587, 4588, 4590, 4592, 4594, 4596, 4605, 4606, 4609, 4612, 4614, 4616, 4618, 4620, 4622, 4624, 4633, 4635, 4644, 4650, 4651, 4657, 4659, 4668, 4669, 4672, 4675, 4677, 4679, 4681, 4683, 4685, 4687, 4696, 4697, 4700, 4703, 4705, 4707, 4709, 4711, 4714, 4716, 4722, 4723, 4732, 4734, 4743, 4745, 4754, 4760, 4761, 4767, 4769, 4778, 4779, 4782, 4785, 4787, 4788, 4789, 4791, 4793, 4795, 4797, 4799, 4808, 4809, 4812, 4815, 4817, 4819, 4822, 4825, 4827, 4829, 4830, 4831, 4832, 4834, 4837, 4840, 4843, 4845, 4848, 4851, 4854, 4856, 4858, 4859, 4860, 4861, 4863, 4866, 4869, 4872, 4874, 4876, 4879, 4881, 4883, 4892, 4893, 4896, 4899, 4901, 4904, 4907, 4909, 4912, 4913, 4915, 4916, 4918, 4920, 4923, 4923, 4923]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.007597182, -0.10980306, -0.07682923, -2.7133337e-05, -0.0011558789, -5.693833e-05, -0.011381563, -1.0687221, -5.79217e-06, -0.00028353152, -3.595572e-05, -0.004728908, -0.19872764, -0.036315285, -0.5159575, -5.912312e-06, -5.20489e-05, -0.0011198947, -0.00011201744, -0.073021084, -6.746778e-06, -0.010403521, -2.0935424e-05, -1.0084622e-05, -2.3675353e-05, -0.00023321231, -1.6402679e-05, -1.4854846e-05, -7.3446927e-06, 0, -0.0030463443, -6.599631e-05, -0.001496911, -0.0002121687, -1.8907942e-05, -0.0006401316, -0.000116546435, -0.00010748563, -1.5805701e-05, -4.275062e-05, -5.9679198e-05, -0.0007072329, -0.00053093175, -0.00022278015, -0.070020474, -0.00014551697, -8.892534e-06, -0.06769607, -2.9519388e-05, -1.6282536e-05, -4.6010214e-06, -2.4543265e-06, -1.5094201e-05, -0.0006947066, -0.00015052655, -0.0001620926, -0.0001910622, -8.7932596e-05, -2.5703772e-05, -0.0003891288, -6.9453374e-05, -0.00039079774, -4.8233283e-05, -7.11223e-05, -0.0002113333, -4.036551e-05, -0.0022430103, -1.5006569e-06, -1.8841804e-07, -0.08767797, -0.032120053, -0.000102002974, -8.078007e-05, -0.00018915485, -0.002228373, -0.04361221, -0.17015615, -0.7078045, -7.3446927e-06, -0.0001562495, -0.0020124433, -0.0027756048, -0.038478296, -6.8669196e-06, -0.0011295627, -9.055464e-07, -8.4157e-06, -1.1873685e-05, -4.3347598e-05, -8.4157e-06, -1.0800813e-05, -2.2159093e-06, 0, -0.0013010148, -4.036551e-05, -0.00071021594, -0.00012167429, -1.9503042e-05, -0.00043581732, -0.00013526501, -4.9069615e-05, -1.2588937e-05, -4.4539687e-05, -5.6102934e-05, -0.0003490606, -0.00025062053, -0.00014063035, -0.026179807, -0.000161138, -9.490449e-06, -0.021783117, -1.1398727e-05, -1.1991961e-05, -1.4736571e-05, -2.0935424e-05, -1.9765537e-06, -0.00084049406, -4.7875652e-05, -8.936497e-05, -6.13453e-05, -5.7532503e-05, -6.6829845e-05, -0.0002176523, -8.268835e-05, -0.00019511623, -4.9782993e-05, -0.0036890204, -0.00055568025, -5.157113e-05, -0.001339094, -1.37819625e-05, -6.827632e-08, -0.9948758, -0.20485252, -0.0027062725, -0.00089209457, -0.006744831, -0.006817144, -0.7832986, -0.00011523515, -0.00013216372, -0.0024951391, -0.007881708, -0.07390162, -0.10013307, -0.17735787, -3.0947078e-05, -0.7347884, -0.00085743394, -5.503005e-05, -1.9503042e-05, -4.838501e-06, -5.460492e-07, -0.47505024, -0.0013062066, -0.013199425, -0.0005055272, -0.00013836258, -0.00016674175, -6.623567e-05, -0.0002338093, -3.249586e-05, -0.00012679932, -2.5744682e-06, -6.031526e-06, -0.11788029, -0.0029636614, -0.043955766, -0.006466313, -0.48906708, -0.010394187, -0.00018033247, -0.0005982039, -8.447461e-05, -0.0008591047, -0.0035211653, -0.0005200772, -0.0013959743, -0.017177554, -0.00084288017, -8.7932596e-05, -5.944078e-05, -0.00083100714, -0.00014623316, -1.0561456e-05, -7.24364e-05, -7.493791e-05, -8.221057e-05, -7.5774245e-05, -5.912312e-06, -4.1200903e-05, -0.00045919348, -0.00058168365, -1.3542607e-05, -0.48959386, -0.0017532724, -5.956092e-05, -9.139247e-05, -6.3900848e-06, -7.8540467e-07, -0.043618932, -0.0055049327, -0.0005701139, -0.0010043769, -0.0002992727, -6.635395e-05, -0.001331932, -0.00027506487, -0.0010047345, -0.00060226076, -0.22615778, -0.050544914, -0.12902033, -0.114162095, -0.0001064137, -0.0019723675, -9.7471166e-05, -0.013925171], "top_logprobs": null, "text_offset": [4404, 4404, 4405, 4412, 4413, 4417, 4420, 4422, 4429, 4430, 4434, 4437, 4439, 4448, 4450, 4456, 4457, 4466, 4468, 4477, 4483, 4484, 4487, 4494, 4495, 4499, 4501, 4510, 4511, 4514, 4517, 4519, 4521, 4523, 4524, 4525, 4526, 4529, 4531, 4532, 4533, 4535, 4538, 4541, 4544, 4546, 4548, 4551, 4553, 4555, 4564, 4565, 4568, 4571, 4573, 4576, 4579, 4581, 4584, 4585, 4587, 4588, 4590, 4592, 4594, 4596, 4605, 4606, 4609, 4612, 4614, 4616, 4618, 4620, 4622, 4624, 4633, 4635, 4641, 4642, 4651, 4653, 4662, 4668, 4669, 4672, 4679, 4680, 4684, 4686, 4695, 4696, 4699, 4702, 4704, 4706, 4708, 4709, 4710, 4711, 4714, 4716, 4717, 4718, 4720, 4723, 4726, 4729, 4731, 4733, 4736, 4738, 4740, 4749, 4750, 4753, 4756, 4758, 4761, 4764, 4766, 4769, 4770, 4772, 4773, 4775, 4777, 4779, 4781, 4790, 4791, 4794, 4797, 4799, 4801, 4803, 4805, 4808, 4810, 4816, 4817, 4826, 4828, 4837, 4839, 4848, 4854, 4855, 4861, 4863, 4872, 4873, 4876, 4879, 4881, 4882, 4883, 4885, 4887, 4889, 4891, 4893, 4902, 4903, 4906, 4909, 4911, 4913, 4916, 4919, 4921, 4923, 4924, 4925, 4926, 4928, 4931, 4934, 4937, 4939, 4942, 4945, 4948, 4950, 4952, 4953, 4954, 4955, 4957, 4960, 4963, 4966, 4968, 4970, 4973, 4975, 4977, 4986, 4987, 4990, 4993, 4995, 4998, 5001, 5003, 5006, 5007, 5009, 5010, 5012, 5014, 5017, 5017, 5017, 5017, 5017, 5017, 5017]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.007597182, -0.106088884, -0.07522348, -3.8935006e-05, -0.000859223, -5.7652644e-05, -0.01274299, -0.4310632, -0.120232716, -0.1628644, -0.3958508, -1.6165199e-05, -0.17139906, -0.0005929559, -5.8247755e-05, -1.9741461e-05, -7.698572e-06, -4.2433903e-06, -0.13189211, -0.0015357721, -7.613187e-05, -9.270188e-05, -5.7652644e-05, -0.00048095893, -4.954739e-05, -0.00067842286, -1.9143545e-05, -2.6419024e-05, -0.7565795, -0.15081532, -8.8410365e-05, -4.9069615e-05, -0.00052962045, -0.006703367, -0.13400075, -0.27285093, -0.116821006, -0.09188384, -1.1039229e-05, -1.8048426, -0.0013344383, -4.9902206e-05, -3.0826937e-05, -2.693682e-06, -1.1430258e-06, -0.8940563, -0.015667062, -0.0017320148, -0.000120719684, -0.0056727617, -0.00091995555, -0.00012930272, -0.0010306891, -3.5717305e-05, -3.076318e-07, -1.1131845, -0.050121743, -0.0024968137, -0.00030034652, -0.008483611, -0.0150928935, -0.043319684, -0.03964121, -3.690939e-05, -0.0006168108, -5.4364154e-06], "top_logprobs": null, "text_offset": [4404, 4404, 4405, 4412, 4413, 4417, 4420, 4422, 4431, 4433, 4442, 4448, 4449, 4455, 4457, 4466, 4467, 4470, 4473, 4475, 4477, 4479, 4481, 4483, 4485, 4494, 4495, 4498, 4501, 4503, 4505, 4507, 4509, 4511, 4513, 4522, 4524, 4533, 4539, 4540, 4546, 4548, 4557, 4558, 4561, 4564, 4566, 4568, 4570, 4572, 4574, 4576, 4585, 4586, 4589, 4592, 4594, 4596, 4598, 4600, 4603, 4603, 4603, 4603, 4603, 4603]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.007597182, -0.10607869, -0.076484494, -4.0246297e-05, -0.00090945675, -4.9782993e-05, -0.009655528, -0.34832826, -0.11628823, -0.16829418, -0.43963405, -1.3900239e-05, -0.15287542, -0.0005156646, -5.693833e-05, -2.3795494e-05, -7.937927e-06, -4.1232483e-06, -0.13215433, -0.0054571647, -6.4921565e-05, -9.5562886e-05, -4.751897e-05, -0.0005052878, -4.1678675e-05, -0.00020286761, -1.5805701e-05, -2.7490969e-05, -1.0479987, -0.040302053, -0.0007893104, -0.00010045139, -0.0010004373, -0.005277268, -0.13848408, -0.34517232, -2.633935, -9.21049e-05, -0.0002038222, -0.0076487763, -0.0037565064, -0.44178456, -4.1200903e-05, -0.040436722, -4.179789e-05, -4.7399757e-05, -9.139247e-05, -0.0007728455, -6.122609e-05, -9.699527e-05, -1.1753544e-05, -3.076318e-07, -0.013368126, -0.00041995506, -0.007146484, -0.00074987864, -2.665838e-05, -0.0018400329, -0.0009055181, -0.00024084355, -2.045765e-05, -6.7427754e-05, -0.00037648613, -0.002216366, -0.0013399285, -0.00044177964, -0.15522905, -0.00055568025, -1.3542607e-05, -0.29447192, -5.1215375e-05, -2.8087945e-05, -1.2231317e-05, -5.460492e-07, -9.251094e-06, -0.0026305516, -0.00092150713, -0.00033135017, -0.00022826564, -9.151261e-05, -4.4419543e-05, -0.00085743394, -0.00013788574, -0.00066458626, -6.0633804e-05, -0.035326827, -0.0010592701, -7.291136e-05, -0.00093994226, -2.1889093e-05, -6.827632e-08, -0.97067386, -0.069262, -0.00083500484, -0.00018033247, -0.012236016, -0.016902605, -0.04203803], "top_logprobs": null, "text_offset": [4404, 4404, 4405, 4412, 4413, 4417, 4420, 4422, 4431, 4433, 4442, 4448, 4449, 4455, 4457, 4466, 4467, 4470, 4473, 4475, 4477, 4479, 4481, 4483, 4485, 4494, 4495, 4498, 4501, 4503, 4505, 4507, 4509, 4511, 4513, 4522, 4524, 4530, 4531, 4540, 4542, 4551, 4557, 4558, 4561, 4568, 4569, 4573, 4575, 4584, 4585, 4588, 4591, 4593, 4595, 4597, 4598, 4599, 4600, 4603, 4605, 4606, 4607, 4609, 4612, 4615, 4618, 4620, 4622, 4625, 4627, 4629, 4638, 4639, 4642, 4645, 4647, 4650, 4653, 4655, 4658, 4659, 4661, 4662, 4664, 4666, 4668, 4670, 4679, 4680, 4683, 4686, 4688, 4690, 4692, 4694, 4697, 4697]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.007597182, -0.105204836, -0.07274997, -2.6893982e-05, -0.00075691944, -5.7413286e-05, -0.011049014, -0.404613, -0.12296354, -0.17761356, -0.35933173, -1.44972155e-05, -0.1746564, -0.0005874705, -5.1334588e-05, -1.3542607e-05, -9.130952e-06, -3.6482897e-06, -0.13341902, -0.0012228909, -7.815842e-05, -9.699527e-05, -5.4314798e-05, -0.00041315737, -4.2272848e-05, -0.00069888175, -8.5358415e-06, -1.6402679e-05, -0.7867762, -2.1240103, -0.109804586, -0.0004878777, -0.00021324158, -8.03023e-05, -0.0019293117, -0.0042794934, -0.08059759, -0.5626718, -0.059372928, -0.034526765, -5.197998e-06, -0.1082852, -6.528106e-05, -1.9741461e-05, -3.4089344e-06, -1.2112103e-05, -2.0966954e-06, -0.059729096, -0.013012514, -4.656436e-05, -3.142485e-05, -0.00040331934, -9.4849514e-05, -3.559716e-05, -0.00016566887, -4.6010214e-06, -3.076318e-07, -1.0094608, -0.024926662, -0.011740035, -0.000120481265, -0.0022586633, -0.018958302, -0.040710777, -0.032712888, -4.811501e-05], "top_logprobs": null, "text_offset": [4404, 4404, 4405, 4412, 4413, 4417, 4420, 4422, 4431, 4433, 4442, 4448, 4449, 4455, 4457, 4466, 4467, 4470, 4473, 4475, 4477, 4479, 4481, 4483, 4485, 4494, 4495, 4498, 4501, 4503, 4504, 4506, 4508, 4510, 4512, 4514, 4516, 4525, 4527, 4536, 4542, 4543, 4549, 4551, 4560, 4561, 4564, 4567, 4569, 4571, 4573, 4575, 4577, 4579, 4588, 4589, 4592, 4595, 4597, 4599, 4601, 4603, 4606, 4606, 4606, 4606]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.007597182, -0.10390423, -0.07482624, -3.8103353e-05, -0.0010399977, -4.2153635e-05, -0.010704165, -0.45628196, -0.11086777, -0.15354894, -0.42484513, -1.771398e-05, -0.18988922, -0.0005231795, -5.3955304e-05, -2.0098154e-05, -9.130952e-06, -4.361666e-06, -0.11229681, -0.0011511039, -6.635395e-05, -8.495144e-05, -5.8130416e-05, -0.00042305636, -3.941184e-05, -0.00019976817, -1.2828294e-05, -1.4616429e-05, -3.3645804, -0.057703175, -0.09509816, -0.0027343642, -0.0004609816, -0.0001517177, -0.008675928, -0.0063696695, -0.14987761, -0.32980546, -0.06383633, -0.05213891, -8.0580685e-06, -0.1775425, -7.350647e-05, -2.1889093e-05, -3.170517e-06, -1.7953334e-05, -3.6482897e-06, -0.093251966, -0.009370361, -7.541475e-05, -4.6325007e-05, -0.00039544783, -0.0003266982, -5.9085025e-05, -0.00024060514, -1.7953334e-05, -4.277735e-07, -1.1110184, -0.028456474, -0.016401641, -0.00023333247, -0.0048505478, -0.019895619, -0.047672972, -0.039173417, -4.2272848e-05], "top_logprobs": null, "text_offset": [4404, 4404, 4405, 4412, 4413, 4417, 4420, 4422, 4431, 4433, 4442, 4448, 4449, 4455, 4457, 4466, 4467, 4470, 4473, 4475, 4477, 4479, 4481, 4483, 4485, 4494, 4495, 4498, 4501, 4503, 4504, 4505, 4507, 4509, 4511, 4513, 4515, 4524, 4526, 4535, 4541, 4542, 4548, 4550, 4559, 4560, 4563, 4566, 4568, 4570, 4572, 4574, 4576, 4578, 4587, 4588, 4591, 4594, 4596, 4598, 4600, 4602, 4605, 4605, 4605, 4605]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.007597182, -0.100193486, -0.07765459, -4.0963423e-05, -0.00090068503, -5.669991e-05, -0.012435033, -1.1184719, -6.6294406e-06, -0.00040320013, -3.2140102e-05, -0.003892928, -0.20982832, -0.037153777, -0.54544157, -4.838501e-06, -4.966285e-05, -0.0010525278, -0.00013359329, -0.05343497, -7.224551e-06, -0.009883222, -1.5687427e-05, -9.606849e-06, -2.2604345e-05, -0.00016519109, -1.6642034e-05, -1.1991961e-05, -4.6010214e-06, 0, -0.0029714934, -7.076466e-05, -0.0016651436, -0.00021324158, -1.688045e-05, -0.00069076894, -0.0002903283, -0.00011511593, -1.3185924e-05, -3.690939e-05, -7.028876e-05, -0.0005184101, -0.0005356419, -0.00018653227, -0.066247344, -0.00014349136, -7.698572e-06, -0.06584893, -2.9399247e-05, -1.9143545e-05, -6.5092986e-06, -1.1430258e-06, -5.3162735e-06, -0.00068337336, -0.000159348, -0.00014349136, -0.00015815685, -8.256821e-05, -2.033751e-05, -0.0003803027, -6.826223e-05, -0.0004453587, -4.5494293e-05, -5.550595e-05, -0.00023130498, -4.144026e-05, -0.0018989736, -7.8540467e-07, -6.827632e-08, -0.09049631, -0.03991775, -0.00011392572, -8.650302e-05, -0.00014086877, -0.0022811834, -0.055148553, -0.15781629, -0.734372, -6.3900848e-06, -0.00020370207, -0.0018018776, -0.0035152435, -0.03157975, -6.2699432e-06, -0.0021001252, -1.6165199e-05, -1.2828294e-05, -1.1753544e-05, -5.0260765e-05, -7.937927e-06, -8.653179e-06, -2.0966954e-06, 0, -0.00129994, -4.7399757e-05, -0.0007681936, -0.00014587646, -1.8907942e-05, -0.00030308927, -9.198663e-05, -5.7293146e-05, -1.2828294e-05, -4.9187893e-05, -7.100402e-05, -0.00030893143, -0.00022683514, -0.00013919984, -0.027430667, -0.00016137547, -6.6294406e-06, -0.016563917, -1.2231317e-05, -1.6282536e-05, -1.7953334e-05, -1.1991961e-05, -1.022884e-06, -0.00079539383, -5.7057543e-05, -7.469949e-05, -5.956092e-05, -5.8247755e-05, -6.015603e-05, -0.0002416799, -6.778445e-05, -0.0002698197, -5.4791635e-05, -0.0064373952, -0.0005670125, -6.5041706e-05, -0.00088278874, -1.6642034e-05, -6.827632e-08, -0.98977673, -0.17431603, -0.0018288685, -0.0008085771, -0.006816363, -0.0061803143, -0.9039237, -0.00012727616, -0.0019126497, -0.002931201, -0.010228635, -0.07113497, -0.09562147, -0.16607116, -2.3675353e-05, -0.7417062, -0.0005540104, -3.1901687e-05, -9.012677e-06, -4.4818075e-06, -1.8841804e-07, -0.16667022, -0.0002603966, -0.0075379075, -0.00020692257, -0.00013216372, -0.00013919984, -4.763911e-05, -0.0002513358, -3.4048382e-05, -9.3535404e-05, -2.2159093e-06, -3.170517e-06, -0.03797012, -0.0010865398, -0.037280228, -0.0067019863, -0.99773026, -0.026347466, -9.186649e-05, -0.0014430091, -0.000101643476, -0.00029891508, -0.0009471023, -0.00019010947, -0.00029020815, -0.00585297, -0.0014653959, -3.941184e-05, -0.00010283744, -0.003590434, -0.00019201681, -1.2708151e-05, -6.6829845e-05, -0.00012357882, -7.398424e-05, -6.182308e-05, -1.1430258e-06, -2.033751e-05, -0.0001599459, -0.00020835307, -7.8540467e-07, -0.88867784, -5.4432137e-05, -2.582111e-05, -1.5448071e-05, -2.693682e-06, -5.0778563e-06, -0.00081490085, -0.000118811404, -8.7932596e-05, -0.00010414779, -8.03023e-05, -2.9041616e-05, -0.001858009, -0.000109155495, -0.00021813008, -5.1334588e-05, -0.032109097, -0.036890958, -0.14169821, -0.09005004, -0.000108796, -0.0013270971, -7.553489e-05, -0.011037806], "top_logprobs": null, "text_offset": [4404, 4404, 4405, 4412, 4413, 4417, 4420, 4422, 4429, 4430, 4434, 4437, 4439, 4448, 4450, 4456, 4457, 4466, 4468, 4477, 4483, 4484, 4487, 4494, 4495, 4499, 4501, 4510, 4511, 4514, 4517, 4519, 4521, 4523, 4524, 4525, 4526, 4529, 4531, 4532, 4533, 4535, 4538, 4541, 4544, 4546, 4548, 4551, 4553, 4555, 4564, 4565, 4568, 4571, 4573, 4576, 4579, 4581, 4584, 4585, 4587, 4588, 4590, 4592, 4594, 4596, 4605, 4606, 4609, 4612, 4614, 4616, 4618, 4620, 4622, 4624, 4633, 4635, 4641, 4642, 4651, 4653, 4662, 4668, 4669, 4672, 4679, 4680, 4684, 4686, 4695, 4696, 4699, 4702, 4704, 4706, 4708, 4709, 4710, 4711, 4714, 4716, 4717, 4718, 4720, 4723, 4726, 4729, 4731, 4733, 4736, 4738, 4740, 4749, 4750, 4753, 4756, 4758, 4761, 4764, 4766, 4769, 4770, 4772, 4773, 4775, 4777, 4779, 4781, 4790, 4791, 4794, 4797, 4799, 4801, 4803, 4805, 4808, 4810, 4816, 4817, 4826, 4828, 4837, 4839, 4848, 4854, 4855, 4861, 4863, 4872, 4873, 4876, 4879, 4881, 4882, 4883, 4885, 4887, 4889, 4891, 4893, 4902, 4903, 4906, 4909, 4911, 4913, 4916, 4919, 4921, 4923, 4924, 4925, 4926, 4928, 4931, 4934, 4937, 4939, 4942, 4945, 4948, 4950, 4952, 4953, 4954, 4955, 4957, 4960, 4963, 4966, 4968, 4970, 4973, 4975, 4977, 4986, 4987, 4990, 4993, 4995, 4998, 5001, 5003, 5006, 5007, 5009, 5010, 5012, 5014, 5017, 5017, 5017, 5017, 5017, 5017, 5017]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.007597182, -0.10260077, -0.0755262, -2.8565719e-05, -0.00080893666, -5.216904e-05, -0.010944997, -0.39265075, -0.11717331, -0.1912509, -1.3791019, -0.42925796, -0.47712862, -1.771398e-05, -0.26492187, -0.0017341643, -5.4432137e-05, -9.2941234e-05, -1.7236207e-05, -1.1039229e-05, -0.22977006, -0.0045951875, -7.422359e-05, -0.000101643476, -0.00031071954, -0.0014147162, -0.00067496306, -0.0031110349, -3.3450466e-05, -2.8565719e-05, -0.97682875, -0.18090793, -0.00018474413, -0.00012942286, -0.00046932904, -0.001306445, -0.0040647346, -0.4077809, -8.0899285e-05, -7.8540467e-07, -0.8734971, -0.04841777, -0.005095487, -0.0018071913, -0.003101529, -0.0055695446, -0.069371946, -0.25340217, -0.02384093, -0.44322777, -0.0107703805, -0.033064973, -2.9311614e-06, -0.043629892, -0.00011392572, -1.8788729e-05, -5.912312e-06, -1.0204763e-05, -2.9311614e-06, -0.044212658, -0.00075298175, -3.6074933e-05, -2.880226e-05, -8.924483e-05, -0.000197384, -2.1649737e-05, -0.00018438557, -2.2159093e-06, -4.0040345e-06, -0.24208452, -0.21399517, -3.7983213e-05, -1.9143545e-05, -0.00013347782, -0.00044392727, -3.7983213e-05, -0.0012116159, -2.4032974e-05, -3.076318e-07, -1.3295798, -0.173512, -0.017570987, -0.0014138799, -0.044596057, -0.018569361, -0.043671485, -0.039200008, -5.991855e-05, -0.00054936216, -8.221057e-05], "top_logprobs": null, "text_offset": [4404, 4404, 4405, 4412, 4413, 4417, 4420, 4422, 4431, 4433, 4442, 4444, 4453, 4459, 4460, 4466, 4468, 4477, 4478, 4481, 4484, 4486, 4488, 4490, 4492, 4494, 4496, 4505, 4506, 4509, 4512, 4514, 4516, 4518, 4520, 4522, 4524, 4533, 4534, 4537, 4540, 4542, 4544, 4546, 4548, 4550, 4552, 4561, 4563, 4572, 4574, 4583, 4589, 4590, 4596, 4598, 4607, 4608, 4611, 4614, 4616, 4618, 4620, 4622, 4624, 4626, 4635, 4636, 4639, 4642, 4644, 4646, 4648, 4650, 4652, 4654, 4663, 4664, 4667, 4670, 4672, 4674, 4676, 4678, 4681, 4681, 4681, 4681, 4681, 4681]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.007597182, -0.105242044, -0.07155757, -4.1200903e-05, -0.0010859419, -5.6340414e-05, -0.011099217, -1.17119, -6.1516675e-06, -0.00035680918, -3.9055147e-05, -0.0042678798, -0.19907902, -0.039435156, -0.9096894, -0.33028704, -2.3078366e-05, -0.1257842, -0.0004058246, -5.4552278e-05, -1.4616429e-05, -1.0920954e-05, -6.827632e-08, -0.10159415, -0.0011255041, -5.8130416e-05, -6.277768e-05, -7.1958624e-05, -0.00014623316, -7.20769e-05, -0.0008726466, -6.031526e-06, -7.8540467e-07, -0.52507925, -0.15300126, -6.9453374e-05, -4.0603925e-05, -8.7576846e-05, -0.0011171491, -0.039166536, -0.14296988, -0.13297857, -0.03070446, -3.170517e-06, -0.06790319, -3.8577375e-05, -1.3661821e-05, -2.693682e-06, -1.9621319e-05, -3.529076e-06, -0.042472154, -0.010298248, -4.608659e-05, -3.8457234e-05, -0.00048263065, -0.00010522067, -4.811501e-05, -0.0002118092, -1.3306066e-05, -1.9765537e-06, -1.2640563, -0.10110345, -0.050375585, -0.0005617646, -6.6949986e-05, -0.00012381817, -0.0021435483, -0.0029109966, -0.30662885, -0.44105163, -0.1441498, -0.09308866, -9.490449e-06, -1.4092396, -0.0007023416, -8.876706e-05, -2.8445576e-05, -1.2946569e-05, -7.1062755e-06, -0.6923282, -0.0078037484, -0.00010080995, -5.8845668e-05, -0.0031231125, -0.00045263232, -7.779892e-05, -0.0005935529, -1.4854846e-05, -1.8668587e-05, -0.9703199, -0.06344688, -0.0041184197, -0.00028639348, -0.0033443072, -0.018862385, -0.048917834, -0.039474837, -1.8310955e-05], "top_logprobs": null, "text_offset": [4404, 4404, 4405, 4412, 4413, 4417, 4420, 4422, 4429, 4430, 4434, 4437, 4439, 4448, 4450, 4459, 4465, 4466, 4472, 4474, 4483, 4484, 4487, 4490, 4492, 4494, 4496, 4498, 4500, 4502, 4511, 4512, 4515, 4518, 4520, 4522, 4524, 4526, 4528, 4530, 4539, 4541, 4550, 4556, 4557, 4563, 4565, 4574, 4575, 4578, 4581, 4583, 4585, 4587, 4589, 4591, 4593, 4602, 4603, 4606, 4609, 4611, 4612, 4614, 4616, 4618, 4620, 4623, 4625, 4634, 4636, 4645, 4651, 4652, 4658, 4660, 4669, 4670, 4673, 4676, 4678, 4680, 4682, 4684, 4686, 4688, 4697, 4698, 4701, 4704, 4706, 4708, 4710, 4712, 4715, 4715, 4715, 4715]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.007597182, -0.09902871, -0.0766137, -2.9280032e-05, -0.0008916177, -5.562516e-05, -0.011294691, -0.4355222, -0.11152479, -0.16086735, -0.43598753, -1.7595703e-05, -2.0133667, -0.0021437877, -5.7177684e-05, -2.272356e-05, -1.2112103e-05, -8.4157e-06, -0.84967166, -0.008322766, -0.00012894507, -7.601266e-05, -0.00026993704, -0.00064168224, -6.623567e-05, -0.0024141169, -1.9028084e-05, -1.676031e-05, -0.89938426, -0.09263266, -0.004448973, -0.0003974753, -0.0018514985, -0.0044017364, -0.09023946, -0.23968346, -0.052199826, -0.047446262, -1.0561456e-05, -0.55117077, -8.3045044e-05, -3.0353855e-05, -6.2699432e-06, -1.6165199e-05, -6.2699432e-06, -0.22301404, -0.017958261, -9.139247e-05, -6.7427754e-05, -7.291136e-05, -0.00016423648, -5.8845668e-05, -0.00017770988, -1.0800813e-05, -1.8841804e-07, -0.99784523, -0.012444447, -0.04141087, -0.0012484955, -0.000100094694, -0.00013729343, -0.0020139983, -0.017089212, -0.059747696, -0.047265403, -5.109523e-05], "top_logprobs": null, "text_offset": [4404, 4404, 4405, 4412, 4413, 4417, 4420, 4422, 4431, 4433, 4442, 4448, 4449, 4455, 4457, 4466, 4467, 4470, 4473, 4475, 4477, 4479, 4481, 4483, 4485, 4494, 4495, 4498, 4501, 4503, 4505, 4507, 4509, 4511, 4513, 4522, 4524, 4533, 4539, 4540, 4546, 4548, 4557, 4558, 4561, 4564, 4566, 4568, 4570, 4572, 4574, 4576, 4585, 4586, 4589, 4592, 4594, 4595, 4596, 4598, 4600, 4602, 4605, 4605, 4605, 4605]}, "finish_reason": "stop"}]}]}