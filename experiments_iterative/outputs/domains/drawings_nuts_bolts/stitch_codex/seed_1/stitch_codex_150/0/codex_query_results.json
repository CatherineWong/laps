{"curr_prompt_idx": 9, "max_num_prompts": 10, "programs_valid": ["(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_circle (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0)))", "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2.5 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform small_circle (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0)))", "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.25 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 3.5 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform_matrix 1 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 12))))) 12 (transform_matrix 1 (/ (* 2 pi) 12) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 3.2 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0))) (connect_strokes (transform small_circle (transform_matrix 2 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0))))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.25 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.25 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))"], "programs_invalid": ["(connect_strokes (connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform long_vertical_line (transform_matrix 0 1 0.5 0)) 4 (transform_matrix 1 1 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))", "(transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)) (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.", "(connect_strokes (connect_strokes (transform (connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 2 1 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 2 1 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 16 (transform_matrix 1 (/ (* 2 pi) 16) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 3 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "(connect_strokes (transform (transform small_ring (transform_matrix 0.5 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform small_circle (transform_matrix 2 0 0 0)) 4 (transform_matrix 0.5 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (repeat_transform (transform small_circle (transform_matrix 2 0 0 0)) 4 (transform_matrix 0.5 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0))))", ")", "\"\"\"", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0))", "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform small_square (transform_matrix 0.5 0 0 0)))"], "prompt_text": ["(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))\n", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))\n", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))\n(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))\n(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))\n(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))\n"], "prompt_example_types": ["programs"], "prompt_programs": [["(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))"], ["(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))"], ["(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4.25 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))"], ["(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))"], ["(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))"]], "engine": "davinci-codex", "separator": "\n", "completion": [{"id": "cmpl-51LesrUjDi9UJ79OO9RvvOnht2VOX", "object": "text_completion", "created": 1651003266, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0054240827, -0.073615514, -0.038931265, -4.0246297e-05, -0.0010447716, -0.0001517177, -0.024705047, -0.73120356, -0.12553942, -0.42444494, -0.3376609, -2.7728449e-05, -0.16075367, -0.0010286607, -9.270188e-05, -0.00017484887, -8.296486e-06, -2.693682e-06, -0.23671103, -0.031431325, -7.279122e-05, -9.341901e-05, -0.00036372704, -0.0014929116, -8.054166e-05, -0.0017455689, -7.3446927e-06, -1.44972155e-05, -1.7196239, -0.11734059, -0.16808727, -0.037845932, -0.03162386, -0.013834758, -0.18047817, -0.55537885, -0.21150497, -0.12104721, -7.698572e-06, -0.15438269, -0.00072983844, -5.109523e-05, -1.3900239e-05, -1.0561456e-05, -1.0084622e-05, -0.3884612, -0.092230335, -0.003554541, -0.00044261315, -0.0002202777, -0.0008080994, -8.471396e-05, -0.0008185982, -7.698572e-06, -9.055464e-07, -1.7298901, -0.661281, -0.29353803, -0.0031602436, -0.000566058, -0.00043629415, -0.0069107064, -0.024909243], "top_logprobs": null, "text_offset": [4423, 4423, 4424, 4431, 4432, 4436, 4439, 4441, 4450, 4452, 4461, 4467, 4468, 4474, 4476, 4485, 4486, 4489, 4492, 4494, 4496, 4498, 4500, 4502, 4504, 4513, 4514, 4517, 4520, 4522, 4524, 4526, 4528, 4530, 4532, 4541, 4543, 4552, 4558, 4559, 4565, 4567, 4576, 4577, 4580, 4583, 4585, 4587, 4589, 4591, 4593, 4595, 4604, 4605, 4608, 4611, 4613, 4614, 4616, 4618, 4620, 4622, 4625]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0054240827, -0.073615514, -0.038931265, -4.0246297e-05, -0.0010447716, -0.0001517177, -0.023665264, -0.6841429, -0.13433632, -0.48317984, -0.3477478, -3.0473995e-05, -1.9046125, -0.0028123031, -7.016862e-05, -0.00030201545, -1.2112103e-05, -1.0800813e-05, -0.7644886, -0.004751366, -0.07217996, -0.0024560003, -0.0016646658, -0.0002905667, -0.0034310264, -0.0013870825, -8.2927705e-05, -0.0018500651, -1.0084622e-05, -1.1753544e-05, -2.186135, -0.30248898, -0.033975214, -0.0015542204, -0.01029849, -0.015253862, -0.21598576, -0.37018767, -0.24041569, -0.06290294, -2.0696069e-05, -0.46159053, -0.00052938296, -6.6593304e-05, -7.517727e-05, -1.1430258e-06, -1.8841804e-07, -0.5888085, -0.081617, -0.00015207719, -8.447461e-05, -0.00011618975, -0.0005318864, -5.216904e-05, -0.0003718351, -6.5092986e-06, -3.6482897e-06, -0.709908, -0.39714786, -0.00885355, -0.00016626397, -0.010919509, -0.014383416], "top_logprobs": null, "text_offset": [4423, 4423, 4424, 4431, 4432, 4436, 4439, 4441, 4450, 4452, 4461, 4467, 4468, 4474, 4476, 4485, 4486, 4489, 4492, 4494, 4495, 4496, 4498, 4500, 4502, 4504, 4506, 4515, 4516, 4519, 4522, 4524, 4526, 4528, 4530, 4532, 4534, 4543, 4545, 4554, 4560, 4561, 4567, 4569, 4578, 4579, 4582, 4585, 4587, 4589, 4591, 4593, 4595, 4597, 4606, 4607, 4610, 4613, 4615, 4617, 4619, 4621, 4624]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2.25 0 0 0))) (transform small_circle (transform_matrix 0.5 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0054240827, -0.07361545, -0.038931265, -4.0246297e-05, -0.00074844714, -0.00011249522, -0.035053503, -0.65476847, -2.1768952e-05, -0.00012286357, -3.4167595e-05, -0.0082993265, -0.10802115, -0.08546295, -0.6854363, -5.4364154e-06, -5.8725527e-05, -0.0014531579, -0.00014074863, -0.0452279, -6.031526e-06, -0.0070866947, -1.2468796e-05, -8.892534e-06, -1.9503042e-05, -0.00023845845, -1.2468796e-05, -2.9996223e-05, -2.8138238e-06, -6.6619094e-07, -0.0026839213, -0.00018426635, -0.002913746, -0.00021407605, -3.643162e-05, -0.0032013238, -0.0010678634, -0.000116546435, -2.6180607e-05, -9.305951e-05, -0.00038745708, -0.002094867, -0.0013029249, -0.00021371653, -0.56387645, -0.0001850999, -6.746778e-06, -0.011576733, -3.762558e-05, -1.6642034e-05, -1.0204763e-05, -1.1430258e-06, -3.7863996e-05, -0.0008406114, -0.00025789507, -0.00011416413, -0.00011034852, -9.949678e-05, -3.130471e-05, -0.000306903, -7.922942e-05, -0.00034703218, -8.388231e-05, -5.956092e-05, -0.00027578016, -5.657977e-05, -0.0019865234, -1.7400124e-06, -2.8138238e-06, -1.0710342, -0.046730638, -0.0005952247, -6.09933e-05, -0.00035132372, -0.00080452027, -0.030795671, -0.034793895, -0.064234324, -2.5744682e-06, -2.6773841e-05, -0.00043724783, -2.9159892e-05, -0.003558011, -1.1430258e-06, -1.4974988e-05, -1.3185924e-05, -1.2946569e-05, -3.051303e-06, -1.8190814e-05, -6.2699432e-06, -1.6282536e-05, -6.827632e-08, -6.6619094e-07, -0.0005080306, -3.4403198e-05, -0.00054649834, -8.447461e-05, -2.6298881e-05, -0.00019189759, -3.9055147e-05, -5.9679198e-05, -2.0696069e-05, -3.0353855e-05, -6.110595e-05, -0.00024155974, -0.00011928824, -6.838237e-05, -0.05938906, -5.109523e-05, -5.3162735e-06, -0.0014237302, -1.3185924e-05, -8.7733215e-06, -4.0843282e-05, 0, -1.8601542e-06, -0.00043999054, -8.7337496e-05, -0.0001887991, -1.7595703e-05, -7.326899e-05, -4.775551e-05, -0.0003209734, -6.2299914e-05, -0.00018462398, -3.3212986e-05, -0.00013776746, -0.00016638411, -5.7891062e-05, -0.00017818765, -1.6207987e-06, -3.170517e-06, -0.27620023, -0.57306, -0.10190081, -0.0006133528, -9.0437854e-05, -6.9573514e-05, -0.0013569397, -0.0042682374, -0.4532562, -0.27858385, -1.5925843e-05, -2.3845181, -0.0012248012, -6.373136e-05, -0.0010336741, -1.0800813e-05, -3.883893e-06, -0.57565755, -0.0027229476, -0.05519957, -0.0007384261, -0.00059498526, -0.00025324314, -0.038251672, -0.02949082, -0.090529725, -0.041045826], "top_logprobs": null, "text_offset": [4423, 4423, 4424, 4431, 4432, 4436, 4439, 4441, 4448, 4449, 4453, 4456, 4458, 4467, 4469, 4475, 4476, 4485, 4487, 4496, 4502, 4503, 4506, 4513, 4514, 4518, 4520, 4529, 4530, 4533, 4536, 4538, 4540, 4542, 4543, 4544, 4545, 4548, 4550, 4551, 4552, 4554, 4557, 4560, 4563, 4565, 4567, 4570, 4572, 4574, 4583, 4584, 4587, 4590, 4592, 4595, 4598, 4600, 4603, 4604, 4606, 4607, 4609, 4611, 4613, 4615, 4624, 4625, 4628, 4631, 4633, 4635, 4637, 4639, 4641, 4643, 4652, 4654, 4660, 4661, 4670, 4672, 4681, 4687, 4688, 4691, 4698, 4699, 4703, 4705, 4714, 4715, 4718, 4721, 4723, 4725, 4727, 4728, 4729, 4730, 4733, 4735, 4736, 4737, 4739, 4742, 4745, 4748, 4750, 4752, 4755, 4757, 4759, 4768, 4769, 4772, 4775, 4777, 4780, 4783, 4785, 4788, 4789, 4791, 4792, 4794, 4796, 4798, 4800, 4809, 4810, 4813, 4816, 4818, 4819, 4821, 4823, 4825, 4827, 4830, 4832, 4841, 4847, 4848, 4854, 4856, 4865, 4866, 4869, 4872, 4874, 4875, 4876, 4878, 4880, 4882, 4885, 4885, 4885]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform_matrix 1 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0054240827, -0.073615186, -0.03893108, -4.179789e-05, -0.0009160169, -0.00015636964, -0.022068495, -0.69993323, -0.12031782, -0.43257752, -1.7093291, -0.3937143, -0.5958196, -5.145473e-05, -1.4789618, -0.004205086, -0.00024859305, -0.0006630347, -2.5703772e-05, -1.9621319e-05, -0.49874848, -0.0057729324, -0.065698184, -0.0027548044, -0.002629595, -0.0006147833, -0.002969819, -0.0041978443, -0.0072359946, -0.0034332385, -0.00031942554, -0.00017496901, -0.82548475, -0.07526493, -0.47056353, -0.101282254, -0.45852345, -0.09302142, -0.014368964, -0.026963593, -0.00022766957, -0.009369519, -0.03484549, -0.011713983, -0.01646981, -0.07769576, -0.0033826425, -0.001168467, -0.0003411891, -0.002825156, -0.0004259183, -4.3347598e-05, -0.00016924512, -8.00667e-05, -0.0003059484, -0.00035740712, -7.744129e-05, -4.2033495e-05, -0.0011739582, -0.0043279203, -3.5717305e-05, -0.25061053, -0.010185217, -0.018425582, -0.00025050133, -4.9069615e-05, -0.71398735, -0.39374578, -0.2611844, -0.027346069, -0.027941661, -0.0071021216, -0.09175649, -1.412898, -3.7028603e-05, -0.41356653, -0.0027646676, -6.7427754e-05, -0.0011148814, -9.490449e-06, -1.0920954e-05, -0.625382, -0.1702263, -0.00215472, -0.00032002066, -0.021452518, -0.015274927], "top_logprobs": null, "text_offset": [4423, 4423, 4424, 4431, 4432, 4436, 4439, 4441, 4450, 4452, 4461, 4463, 4472, 4478, 4479, 4485, 4487, 4496, 4497, 4500, 4503, 4505, 4506, 4507, 4509, 4511, 4513, 4515, 4517, 4526, 4527, 4530, 4533, 4535, 4537, 4540, 4543, 4545, 4547, 4548, 4549, 4550, 4552, 4555, 4558, 4561, 4563, 4566, 4569, 4572, 4574, 4576, 4577, 4578, 4579, 4581, 4584, 4587, 4590, 4592, 4594, 4597, 4599, 4608, 4609, 4612, 4615, 4617, 4619, 4621, 4623, 4625, 4627, 4636, 4642, 4643, 4649, 4651, 4660, 4661, 4664, 4667, 4669, 4671, 4673, 4675, 4678]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0054240827, -0.07111909, -0.030981751, -6.933416e-05, -0.0007930096, -0.00015982577, -0.031529617, -0.7046344, -2.28437e-05, -0.00012322118, -3.0707724e-05, -0.0059640105, -0.09650227, -0.0932182, -0.64638567, -5.675771e-06, -5.0500123e-05, -0.0013314544, -0.00011571198, -0.038812287, -4.838501e-06, -0.006297752, -1.0800813e-05, -1.5567284e-05, -1.2708151e-05, -0.00031787396, -1.2588937e-05, -3.166233e-05, -2.2159093e-06, -1.8841804e-07, -0.002409158, -0.000111778085, -0.0030754602, -0.00022325605, -4.2511267e-05, -0.0020144754, -0.0010758588, -0.00021360109, -2.319758e-05, -8.423619e-05, -0.0001697229, -0.0012375133, -0.0013038795, -0.000246804, -0.5729173, -0.00019332903, -6.746778e-06, -0.01332083, -3.5477948e-05, -1.2946569e-05, -8.4157e-06, -9.055464e-07, -2.8326363e-05, -0.00082826347, -0.00024227405, -0.00015040733, -0.00016674175, -0.000161138, -3.7386224e-05, -0.00027888143, -0.00010569845, -0.0003377283, -7.350647e-05, -5.3955304e-05, -0.00028567822, -4.5494293e-05, -0.0040269704, -1.6207987e-06, -4.1232483e-06, -0.5513363, -0.062086985, -0.000111420464, -6.599631e-05, -0.00011750104, -0.0017880232, -0.032414608, -0.09417929, -0.17227516, -4.361666e-06, -8.5905114e-05, -0.0008195528, -3.643162e-05, -0.0072406786, -2.0966954e-06, -0.000111540605, -1.8601542e-06, -9.490449e-06, -1.9765537e-06, -2.1051823e-05, -7.224551e-06, -2.1768952e-05, -3.076318e-07, -1.5006569e-06, -0.00061979383, -4.5494293e-05, -0.00062552054, -0.00010891614, -3.0353855e-05, -0.00032383628, -0.00041625864, -0.0001086796, -1.3542607e-05, -6.158372e-05, -0.00012608219, -0.00059224066, -0.0003377283, -0.00023655016, -0.086349085, -7.839496e-05, -6.2699432e-06, -0.0023390746, -2.9996223e-05, -1.0204763e-05, -2.3317722e-05, -6.827632e-08, -1.3823812e-06, -0.0005150704, -0.00013383264, -0.00017437205, -2.2245786e-05, -8.3045044e-05, -5.2885232e-05, -0.00041923978, -6.468596e-05, -0.00021348093, -3.3212986e-05, -0.00020894819, -0.0003774407, -7.11223e-05, -0.00024358816, -1.6207987e-06, -3.4089344e-06, -0.4051301, -0.05091307, -0.00011237507, -6.373136e-05, -0.003085684, -0.009387085, -0.6201084, -8.459475e-05, -0.00036944906, -0.0025982207, -0.0038065852, -0.029957049, -0.05110112, -0.0504058, -1.6282536e-05, -0.7817856, -0.0001427761, -3.7743856e-05, -7.517727e-05, -3.4089344e-06, -1.8841804e-07, -0.18591286, -0.0005393411, -0.009282103, -0.00018295787, -9.508793e-05, -0.00021979994, -2.7490969e-05, -0.0001390797, -3.7983213e-05, -0.00015028719, -9.055464e-07, -3.6482897e-06, -0.012081261, -0.0011444216, -0.027189692, -0.014810228, -0.3878426, -0.009144763, -0.0001229837, -0.000924371, -0.00012179443, -0.00021538827, -0.0015650262, -0.00013824523, -0.00040725604, -0.0077331066, -0.00019607085, -7.553489e-05, -5.2525735e-05, -0.0005794187, -0.00015732239, -1.0681599e-05, -6.611553e-05, -5.037998e-05, -7.6605895e-05, -3.3093773e-05, -1.2622395e-06, -2.1171965e-05, -0.00024084355, -8.781245e-05, -2.2159093e-06, -1.3130063, -0.00013991416, -3.023464e-05, -4.036551e-05, -1.8841804e-07, -7.698572e-06, -0.0009981714, -0.00045048565, -0.00030988507, -8.352281e-05, -0.00015302899, -3.7148744e-05, -0.0011832668, -0.0001233404, -0.0002351206, -8.8171946e-05, -0.01729823, -0.027271153, -0.10847312, -0.057256717, -0.00010188283], "top_logprobs": null, "text_offset": [4423, 4423, 4424, 4431, 4432, 4436, 4439, 4441, 4448, 4449, 4453, 4456, 4458, 4467, 4469, 4475, 4476, 4485, 4487, 4496, 4502, 4503, 4506, 4513, 4514, 4518, 4520, 4529, 4530, 4533, 4536, 4538, 4540, 4542, 4543, 4544, 4545, 4548, 4550, 4551, 4552, 4554, 4557, 4560, 4563, 4565, 4567, 4570, 4572, 4574, 4583, 4584, 4587, 4590, 4592, 4595, 4598, 4600, 4603, 4604, 4606, 4607, 4609, 4611, 4613, 4615, 4624, 4625, 4628, 4631, 4633, 4635, 4637, 4639, 4641, 4643, 4652, 4654, 4660, 4661, 4670, 4672, 4681, 4687, 4688, 4691, 4698, 4699, 4703, 4705, 4714, 4715, 4718, 4721, 4723, 4725, 4727, 4728, 4729, 4730, 4733, 4735, 4736, 4737, 4739, 4742, 4745, 4748, 4750, 4752, 4755, 4757, 4759, 4768, 4769, 4772, 4775, 4777, 4780, 4783, 4785, 4788, 4789, 4791, 4792, 4794, 4796, 4798, 4800, 4809, 4810, 4813, 4816, 4818, 4820, 4822, 4824, 4827, 4829, 4835, 4836, 4845, 4847, 4856, 4858, 4867, 4873, 4874, 4880, 4882, 4891, 4892, 4895, 4898, 4900, 4901, 4902, 4904, 4906, 4908, 4910, 4912, 4921, 4922, 4925, 4928, 4930, 4932, 4935, 4938, 4940, 4942, 4943, 4944, 4945, 4947, 4950, 4953, 4956, 4958, 4961, 4964, 4967, 4969, 4971, 4972, 4973, 4974, 4976, 4979, 4982, 4985, 4987, 4989, 4992, 4994, 4996, 5005, 5006, 5009, 5012, 5014, 5017, 5020, 5022, 5025, 5026, 5028, 5029, 5031, 5033, 5036, 5036, 5036, 5036]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0054240827, -0.0708122, -0.04125414, -3.583558e-05, -0.0010134461, -0.00022790894, -0.024228435, -0.6553947, -0.122851856, -0.39223894, -0.3412773, -2.8087945e-05, -0.17558128, -0.0010715617, -7.529741e-05, -0.00018760514, -7.3446927e-06, -2.2159093e-06, -0.24723734, -0.04214017, -7.2672e-05, -0.000104625564, -0.00031453517, -0.0011398852, -6.420819e-05, -0.0020276718, -6.031526e-06, -5.0778563e-06, -0.5076954, -0.12376332, -0.0036205826, -0.00010760485, -0.0038374593, -0.011013879, -2.4078996, -0.0023892603, -0.00065945653, -0.004076046, -0.0052196267, -0.10750369, -0.03976686, -0.049481653, -9.130952e-06, -1.7536922, -0.0017551836, -9.234426e-05, -0.00021872611, -6.3900848e-06, -9.055464e-07, -0.26373985, -0.0069429968, -0.049742162, -0.0004256799, -0.0010548538, -0.00027303834, -0.0017754228, -0.00090671214, -0.00023535996, -0.001203857, -2.4152187e-05, -2.3078366e-05, -0.18904378, -0.014530302, -0.24547501, -0.029903494, -0.22596262, -0.049035143, -0.008305396, -0.013451795, -0.0001319253, -0.0037679945, -0.011078605, -0.010453511, -0.0038024562, -0.03066838, -0.0006711474, -0.00017210613, -0.00019201681, -0.00068766857, -0.00016888563, -2.9159892e-05, -9.2941234e-05, -9.139247e-05, -0.00021944042, -0.00020215422, -6.5092986e-06, -3.988961e-05, -0.00037851362, -0.0002471616, -5.79217e-06, -1.1282398, -0.0011068278, -4.2392992e-05, -0.00010748563, -2.0966954e-06, -5.79217e-06, -0.0043906015, -0.0024758386, -0.0006682836, -0.00086196855, -0.0002382219, -4.6206733e-05, -0.0018796852, -0.00022421066, -0.0007997482, -6.361214e-05, -0.16593893, -0.013831736, -0.044958282, -0.044622604, -4.1200903e-05], "top_logprobs": null, "text_offset": [4423, 4423, 4424, 4431, 4432, 4436, 4439, 4441, 4450, 4452, 4461, 4467, 4468, 4474, 4476, 4485, 4486, 4489, 4492, 4494, 4496, 4498, 4500, 4502, 4504, 4513, 4514, 4517, 4520, 4522, 4524, 4526, 4528, 4530, 4532, 4538, 4539, 4548, 4550, 4559, 4561, 4570, 4576, 4577, 4583, 4585, 4594, 4595, 4598, 4601, 4603, 4604, 4605, 4607, 4609, 4611, 4613, 4615, 4624, 4625, 4628, 4631, 4633, 4635, 4638, 4641, 4643, 4645, 4646, 4647, 4648, 4650, 4653, 4656, 4659, 4661, 4664, 4667, 4670, 4672, 4674, 4675, 4676, 4677, 4679, 4682, 4685, 4688, 4690, 4692, 4695, 4697, 4699, 4708, 4709, 4712, 4715, 4717, 4720, 4723, 4725, 4728, 4729, 4731, 4732, 4734, 4736, 4739, 4739, 4739, 4739]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform small_square (transform_matrix 0.5 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0054240827, -0.0708122, -0.04125414, -3.583558e-05, -0.0010134461, -0.00022790894, -0.033036266, -0.69014263, -0.13073401, -0.41064444, -5.5249677, -0.20245133, -0.0016563081, -0.0015041932, -0.00026838828, -3.076318e-07, -1.3576347, -0.07556361, -0.05829793, -0.008562603, -0.007888439, -0.005839899, -0.0023604035, -0.008758182, -9.425254e-05, -9.966347e-06, -0.9931723, -0.10238542, -0.2929376, -0.027465098, -0.017493524, -0.018537665, -0.20988642, -1.5756261, -0.00018736672, -0.886836, -0.003301485, -6.38515e-05, -0.00064168224, -4.6010214e-06, -1.2622395e-06, -0.5483938, -0.007557907, -0.06808661, -0.0022485652, -0.0018347172, -0.00026123386, -0.012578437, -0.016720094, -0.043191157, -0.047850028, -5.0022347e-05, -0.0002875865, -4.7279616e-05, -0.031158704], "top_logprobs": null, "text_offset": [4423, 4423, 4424, 4431, 4432, 4436, 4439, 4441, 4450, 4452, 4461, 4468, 4470, 4479, 4480, 4483, 4486, 4488, 4490, 4492, 4494, 4496, 4498, 4507, 4508, 4511, 4514, 4516, 4518, 4520, 4522, 4524, 4526, 4535, 4541, 4542, 4548, 4550, 4559, 4560, 4563, 4566, 4568, 4569, 4570, 4572, 4574, 4576, 4579, 4579, 4579, 4579, 4579, 4579, 4579]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0054240827, -0.0708122, -0.04125414, -3.583558e-05, -0.0010134461, -0.00022790894, -0.043637797, -0.7007208, -0.12958185, -0.4210719, -0.34212798, -2.1649737e-05, -0.13575028, -0.000888874, -9.38949e-05, -0.000120601406, -1.0444119e-05, -7.698572e-06, -0.22908312, -0.02808933, -8.1019425e-05, -0.00011964774, -0.00034285896, -0.0012261152, -6.2299914e-05, -0.0015975006, -5.4364154e-06, -7.698572e-06, -0.48955905, -0.10476498, -0.0031635347, -0.00015541504, -0.0032417458, -0.013834758, -0.19205967, -0.65897983, -2.0452344, -0.00022504793, -6.38515e-05, -0.00754031, -0.0037178574, -0.25967926, -2.0098154e-05, -0.013272626, -5.79217e-06, -3.154219e-05, -2.5105857e-05, -0.0003731464, -3.6670972e-05, -5.979934e-05, -2.3360508e-06, -9.055464e-07, -0.0052689984, -0.0007372341, -0.005308729, -0.00045191802, -2.2484204e-05, -0.0021189405, -0.002549577, -0.00031107623, -3.1065356e-05, -0.000113805574, -0.00072602095, -0.0024276802, -0.0030996155, -0.0007429607, -0.5916879, -0.0004662296, -1.5214344e-05, -0.06128361, -0.00011082348, -3.4403198e-05, -1.2351458e-05, -2.4543265e-06, -2.3675353e-05, -0.0017717208, -0.0020926555, -0.00045215452, -0.0001722244, -0.00015148021, -3.5001114e-05, -0.00065039104, -8.507158e-05, -0.0003534704, -9.186649e-05, -0.0010428615, -0.0035026215, -8.638288e-05, -0.00039437588, -6.6294406e-06, -2.3795494e-05, -0.37210253, -0.23747197, -0.0007248298, -0.00010355082, -0.010475015, -0.031175554, -0.032463003, -0.025909156, -3.130471e-05, -0.00033403284, -2.5344274e-05, -0.022655344], "top_logprobs": null, "text_offset": [4423, 4423, 4424, 4431, 4432, 4436, 4439, 4441, 4450, 4452, 4461, 4467, 4468, 4474, 4476, 4485, 4486, 4489, 4492, 4494, 4496, 4498, 4500, 4502, 4504, 4513, 4514, 4517, 4520, 4522, 4524, 4526, 4528, 4530, 4532, 4541, 4543, 4549, 4550, 4559, 4561, 4570, 4576, 4577, 4580, 4587, 4588, 4592, 4594, 4603, 4604, 4607, 4610, 4612, 4614, 4616, 4617, 4618, 4619, 4622, 4624, 4625, 4626, 4628, 4631, 4634, 4637, 4639, 4641, 4644, 4646, 4648, 4657, 4658, 4661, 4664, 4666, 4669, 4672, 4674, 4677, 4678, 4680, 4681, 4683, 4685, 4687, 4689, 4698, 4699, 4702, 4705, 4707, 4709, 4711, 4713, 4716, 4716, 4716, 4716, 4716, 4716, 4716]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 12))))) 12 (transform_matrix 1 (/ (* 2 pi) 12) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 12", "))", ")))", " 12", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 12", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0054240827, -0.0708122, -0.04125414, -3.583558e-05, -0.0010134461, -0.00022790894, -0.020714352, -0.74347454, -2.319758e-05, -0.00010414779, -2.6298881e-05, -0.0060366266, -0.09762356, -0.10147322, -0.63759536, -6.746778e-06, -4.954739e-05, -0.0013611156, -0.00013109177, -0.037194416, -4.838501e-06, -0.005611861, -9.012677e-06, -1.0084622e-05, -1.4377073e-05, -0.00026791144, -1.1753544e-05, -3.0947078e-05, -1.3823812e-06, -1.022884e-06, -0.0025230444, -0.0001916601, -0.0022708478, -0.0002121687, -3.690939e-05, -0.0031238298, -0.0008987768, -0.00020346364, -2.4986643e-05, -8.2807564e-05, -0.00038149662, -0.0020250445, -0.0010066447, -0.0001740144, -4.925239, -0.0037942578, -3.883893e-06, -0.086077705, -0.00011750104, -2.4750101e-05, -5.312365e-05, -1.3823812e-06, -7.8540467e-07, -0.0021494036, -0.0008759873, -0.00060774625, -0.0018044448, -0.00019976817, -6.337372e-05, -0.0018437349, -0.00014039098, -0.0010612976, -0.0002395332, -0.00046921265, -0.0013034027, -0.00013287991, -0.008174863, -7.3446927e-06, -5.460492e-07, -0.90635556, -0.06501238, -0.00052055495, -0.00014587646, -0.0013600418, -0.0017279543, -0.05590256, -0.06257007, -0.23245871, -9.130952e-06, -0.00035680918, -0.0018412278, -9.461016e-05, -0.012886438, -7.224551e-06, -0.004244353, -1.1159372e-05, -1.3185924e-05, -3.170517e-06, -3.0473995e-05, -1.1278585e-05, -2.8565719e-05, -1.3823812e-06, -5.197998e-06, -0.0011904896, -7.076466e-05, -0.0015423981, -0.00021503064, -7.958892e-05, -0.0010144017, -0.001505986, -0.0003554988, -2.0218295e-05, -0.00018867897, -0.0001287076, -0.0012763658, -0.0008637576, -0.0004133967, -0.75409967, -0.000870499, -8.892534e-06, -0.006751432, -4.394177e-05, -2.5941252e-05, -2.8087945e-05, -1.8601542e-06, -2.9399247e-05, -0.001006287, -0.00094590924, -0.00018820119, -8.650302e-05, -9.341901e-05, -7.6252014e-05, -0.00105557, -0.00011630989, -0.00028722888, -6.862172e-05, -0.00021348093, -0.0005069586, -6.6829845e-05, -0.0004003382, -1.7400124e-06, 0, -0.50189817, -0.055593506, -0.00023476298, -6.873624e-05, -0.0075776665, -0.008748744, -0.46390575, -5.9201422e-05, -2.4866502e-05, -0.0016143982, -0.002842909, -0.020694638, -0.040830478, -0.08154437, -2.0218295e-05, -0.58484477, -0.00011070334, -3.357061e-05, -3.7863996e-05, -2.4543265e-06, -6.8669196e-06, -0.14012171, -0.0012686079, -0.016989838, -0.0002633787, -0.00013216372, -0.00015148021, -0.00021514892, -0.00011666565, -3.655083e-05, -0.00016614476, -1.9765537e-06, -4.277735e-07, -0.030866854, -0.0023540705, -0.064016595, -0.017208118, -2.4580297, -0.15369156, -0.0006181249, -0.007710883, -0.0001485, -0.0010179817, -0.0015659799, -0.0014645586, -0.0092582805, -0.05024985, -0.00013848272, -0.00024751923, -0.00010998996, -0.0078041083, -0.00041118995, -4.5135734e-05, -9.115311e-05, -7.684431e-05, -9.5442745e-05, -6.909574e-05, -9.055464e-07, -2.1649737e-05, -0.00024608686, -0.00037290892, -1.3823812e-06, -1.9797987, -0.0018928845, -3.2140102e-05, -4.7041198e-05, -3.076318e-07, -2.7133337e-05, -0.003403456, -0.0011447802, -0.00032622044, -0.00019332903, -0.00016018527, -4.0009756e-05, -0.0033577036, -0.00014217819, -0.00022134777, -8.7696986e-05, -0.010848285, -0.020399064, -0.08510568, -0.039520662, -7.219704e-05], "top_logprobs": null, "text_offset": [4423, 4423, 4424, 4431, 4432, 4436, 4439, 4441, 4448, 4449, 4453, 4456, 4458, 4467, 4469, 4475, 4476, 4485, 4487, 4496, 4502, 4503, 4506, 4513, 4514, 4518, 4520, 4529, 4530, 4533, 4536, 4538, 4540, 4542, 4543, 4544, 4545, 4548, 4550, 4551, 4552, 4554, 4557, 4560, 4563, 4566, 4568, 4571, 4574, 4576, 4585, 4586, 4589, 4592, 4594, 4597, 4600, 4602, 4605, 4606, 4609, 4610, 4612, 4614, 4616, 4618, 4627, 4628, 4631, 4634, 4636, 4638, 4640, 4642, 4644, 4646, 4655, 4657, 4663, 4664, 4673, 4675, 4684, 4690, 4691, 4694, 4701, 4702, 4706, 4708, 4717, 4718, 4721, 4724, 4726, 4728, 4730, 4731, 4732, 4733, 4736, 4738, 4739, 4740, 4742, 4745, 4748, 4751, 4753, 4755, 4758, 4760, 4762, 4771, 4772, 4775, 4778, 4780, 4783, 4786, 4788, 4791, 4792, 4794, 4795, 4797, 4799, 4801, 4803, 4812, 4813, 4816, 4819, 4821, 4823, 4825, 4827, 4830, 4832, 4838, 4839, 4848, 4850, 4859, 4861, 4870, 4876, 4877, 4883, 4885, 4894, 4895, 4898, 4901, 4903, 4904, 4905, 4907, 4909, 4911, 4913, 4915, 4924, 4925, 4928, 4931, 4933, 4935, 4938, 4941, 4943, 4945, 4946, 4947, 4948, 4950, 4953, 4956, 4959, 4961, 4964, 4967, 4970, 4972, 4974, 4975, 4976, 4977, 4979, 4982, 4985, 4988, 4990, 4992, 4995, 4997, 4999, 5008, 5009, 5012, 5015, 5017, 5020, 5023, 5025, 5028, 5029, 5031, 5032, 5034, 5036, 5039, 5039, 5039, 5039]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0))) (connect_strokes (transform small_circle (transform_matrix 2 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0))))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "connect", "_", "stro", "kes", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0054240827, -0.0708122, -0.04125414, -3.583558e-05, -0.0010134461, -0.00010808168, -0.025120212, -0.70260817, -2.0935424e-05, -0.00012989782, -2.9756868e-05, -0.006970487, -0.1069661, -0.08345677, -0.8177097, -0.2172339, -1.6642034e-05, -0.110307746, -0.0005943874, -6.432833e-05, -7.279122e-05, -6.2699432e-06, -3.076318e-07, -0.19559726, -0.01964259, -5.693833e-05, -8.876706e-05, -0.00015839339, -0.0010213233, -8.3284394e-05, -0.004340733, -1.1039229e-05, -1.1430258e-06, -0.71459746, -0.103040524, -0.0005943874, -5.7413286e-05, -8.3045044e-05, -0.003629497, -0.032734506, -1.6057382, -2.9636725e-05, -2.014487, -0.0032646495, -4.036551e-05, -0.00049383816, -8.296486e-06, -5.460492e-07, -0.5653493, -0.19554506, -0.019280486, -0.0012821563, -0.010424843, -0.011764523, -2.9890606, -0.0031717243, -0.0017509436, -7.8872734e-05, -0.02988427, -0.11556696, -1.9011436, -4.2392992e-05, -0.4861794, -0.0027221113, -9.127325e-05, -0.00086990296, -2.5703772e-05, -9.055464e-07, -0.4144291, -0.063601345, -0.0037817562, -0.0002322596, -0.0003233585, -0.018445011, -0.11659794, -0.36756647, -8.3165185e-05, -0.32075188, -0.002111175, -1.4736571e-05, -5.1215375e-05, -4.9308033e-05, -0.00018438557, -0.2746168, -0.23114082, -0.012760499, -0.0012054095, -0.022819487, -0.023885122, -0.041083332, -0.05079523, -3.8338017e-05, -0.00035883667, -0.00012560723, -0.01964259], "top_logprobs": null, "text_offset": [4423, 4423, 4424, 4431, 4432, 4436, 4439, 4441, 4448, 4449, 4453, 4456, 4458, 4467, 4469, 4478, 4484, 4485, 4491, 4493, 4502, 4503, 4506, 4509, 4511, 4513, 4515, 4517, 4519, 4521, 4530, 4531, 4534, 4537, 4539, 4541, 4543, 4545, 4547, 4549, 4558, 4564, 4565, 4571, 4573, 4582, 4583, 4586, 4589, 4591, 4593, 4595, 4597, 4600, 4602, 4609, 4610, 4614, 4617, 4619, 4628, 4634, 4635, 4641, 4643, 4652, 4653, 4656, 4659, 4661, 4663, 4665, 4667, 4669, 4671, 4680, 4686, 4687, 4693, 4695, 4704, 4705, 4708, 4711, 4713, 4715, 4717, 4719, 4723, 4723, 4723, 4723, 4723, 4723, 4723]}, "finish_reason": "stop"}]}, {"id": "cmpl-51Lf1FlfI2KkTRbhl3vxTkoU4gl7h", "object": "text_completion", "created": 1651003275, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 3.5 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 3", ".", "5", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.004864503, -0.08184584, -0.060642738, -5.3363005e-05, -0.0011315913, -0.00015696288, -0.014071631, -0.7019778, -1.5925843e-05, -0.00027995434, -6.718934e-05, -0.0074094585, -0.050077807, -0.0318937, -0.79909086, -0.26484388, -1.5567284e-05, -1.5650284, -0.0019573774, -6.6829845e-05, -2.7967804e-05, -1.7119806e-05, -1.8841804e-07, -0.67618364, -0.019109141, -0.001050857, -0.00030582916, -0.0007554889, -0.0007009111, -7.231626e-05, -0.0037070895, -4.5255874e-05, -9.055464e-07, -3.4910433, -1.4143785, -0.9064938, -0.019830134, -0.00874814, -0.00089209457, -0.002653859, -0.0019228623, -0.0334411, -0.23342277, -1.5176677, -5.0140625e-05, -9.103483e-05, -0.002575511, -0.0013801571, -0.113193244, -1.163433e-05, -0.027498242, -7.517727e-05, -2.665838e-05, -9.878341e-05, -0.000368853, -2.6180607e-05, -2.1768952e-05, -9.490449e-06, -2.0966954e-06, -0.013062816, -0.00095807976, -0.010892032, -0.0010176222, -2.200643e-05, -0.005594777, -0.0023359074, -0.00026027925, -1.9980816e-05, -0.0001485, -0.00010593593, -0.00070341537, -0.0010910763, -0.0002286242, -0.011851128, -0.00012500932, -1.7356348e-05, -0.110247985, -0.00010748563, -1.855031e-05, -1.5094201e-05, -3.883893e-06, -1.1514188e-05, -0.0032935347, -0.00072268123, -0.00022480857, -0.0003402345, -0.00012012551, -3.0353855e-05, -0.0004662296, -7.779892e-05, -0.00051697873, -0.00015207719, -0.072265804, -0.0006728154, -3.130471e-05, -0.0002555109, -8.7733215e-06, -1.8601542e-06, -0.88246167, -0.034798525, -0.0001526695, -0.00012179443, -0.01419695, -0.0070320107, -0.7042167, -0.2292882, -0.49862197, -0.08190593, -5.79217e-06, -0.6425224, -0.00027947655, -5.0022347e-05, -2.1171965e-05, -4.277735e-07, -1.0204763e-05, -0.83198506, -0.02839607, -0.00091768877, -0.000111301255, -0.00019809927, -0.00037708215, -6.146545e-05, -0.00040785116, -1.8907942e-05, -3.076318e-07, -1.1808289, -0.048436668, -0.010284338, -0.00199805, -0.016720217, -0.013890598, -0.039864216, -0.027855853, -1.6402679e-05, -0.0008243249], "top_logprobs": null, "text_offset": [4479, 4479, 4480, 4487, 4488, 4492, 4495, 4497, 4504, 4505, 4509, 4512, 4514, 4523, 4525, 4534, 4540, 4541, 4547, 4549, 4558, 4559, 4562, 4565, 4567, 4569, 4571, 4573, 4575, 4577, 4586, 4587, 4590, 4593, 4595, 4596, 4597, 4599, 4601, 4603, 4605, 4607, 4616, 4618, 4624, 4625, 4634, 4636, 4645, 4651, 4652, 4655, 4662, 4663, 4667, 4669, 4678, 4679, 4682, 4685, 4687, 4689, 4691, 4692, 4693, 4694, 4697, 4699, 4700, 4701, 4703, 4706, 4709, 4712, 4714, 4716, 4719, 4721, 4723, 4732, 4733, 4736, 4739, 4741, 4744, 4747, 4749, 4752, 4753, 4755, 4756, 4758, 4760, 4762, 4764, 4773, 4774, 4777, 4780, 4782, 4784, 4786, 4788, 4791, 4793, 4802, 4804, 4813, 4819, 4820, 4826, 4828, 4837, 4838, 4841, 4844, 4846, 4848, 4850, 4852, 4854, 4856, 4865, 4866, 4869, 4872, 4874, 4876, 4878, 4880, 4883, 4883, 4883, 4883, 4883]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.25 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "25", " 0", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.004864503, -0.08184584, -0.060642738, -5.3363005e-05, -0.0011315913, -0.00015696288, -0.014071631, -0.7177364, -0.07982434, -0.26071388, -0.3603008, -1.676031e-05, -1.4475195, -0.003063621, -9.365555e-05, -7.183848e-05, -2.5105857e-05, -2.8138238e-06, -1.3603835, -0.06360541, -0.013326266, -0.0034161364, -0.00095342594, -0.0016318901, -0.00021503064, -0.005124665, -8.892534e-06, -8.7733215e-06, -2.5720932, -0.15421668, -0.3415548, -0.011853361, -0.009165277, -0.001710578, -0.007427052, -0.005085482, -0.15877257, -0.1905305, -0.8849926, -3.4048382e-05, -5.3716885e-05, -0.002305559, -0.000703774, -0.08264992, -1.0800813e-05, -0.014104999, -8.5358415e-06, -1.7119806e-05, -3.965026e-05, -0.0004823913, -2.4750101e-05, -1.855031e-05, -6.031526e-06, -6.827632e-08, -0.010329444, -0.0006219424, -0.006075005, -0.0004015312, -1.4616429e-05, -0.0024005533, -0.0008477705, -0.00023214132, -1.5094201e-05, -6.0753944e-05, -0.00012846824, -0.0004126805, -0.0002555109, -0.00026123386, -0.009057549, -0.00012214643, -1.1039229e-05, -0.08129934, -6.909574e-05, -1.306671e-05, -9.130952e-06, -1.022884e-06, -0.00011273176, -0.0024147157, -0.00059319526, -0.00018021514, -0.00028854018, -9.687513e-05, -3.3450466e-05, -0.0003626532, -0.00010557923, -0.00046658723, -9.151261e-05, -0.0075243358, -0.0006215829, -5.037998e-05, -0.0003222875, -8.0580685e-06, -6.6619094e-07, -1.0458341, -0.06844002, -2.375145, -0.0071144267, -0.0014093436, -0.0002277888, -0.011944319, -0.015175676, -0.051256828, -0.033613555], "top_logprobs": null, "text_offset": [4479, 4479, 4480, 4487, 4488, 4492, 4495, 4497, 4506, 4508, 4517, 4523, 4524, 4530, 4532, 4541, 4542, 4545, 4548, 4550, 4552, 4554, 4556, 4558, 4560, 4569, 4570, 4573, 4576, 4578, 4579, 4580, 4582, 4584, 4586, 4588, 4590, 4599, 4601, 4607, 4608, 4617, 4619, 4628, 4634, 4635, 4638, 4645, 4646, 4650, 4652, 4661, 4662, 4665, 4668, 4670, 4672, 4674, 4675, 4676, 4677, 4680, 4682, 4683, 4684, 4686, 4689, 4692, 4695, 4697, 4699, 4702, 4704, 4706, 4715, 4716, 4719, 4722, 4724, 4727, 4730, 4732, 4735, 4736, 4738, 4739, 4741, 4743, 4745, 4747, 4756, 4757, 4760, 4763, 4765, 4766, 4768, 4770, 4772, 4774, 4777, 4777, 4777]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.004864503, -0.081845514, -0.060988907, -4.7041198e-05, -0.00089579565, -0.00011559277, -0.013832883, -0.679132, -0.06749079, -1.5593785, -0.00038578815, -0.00028198276, -0.0037253357, -0.005635655, -0.12715894, -1.1398727e-05, -0.018024957, -6.396884e-05, -1.6999666e-05, -5.956092e-05, -0.000685521, -3.1901687e-05, -3.655083e-05, -1.4854846e-05, -1.8841804e-07, -0.01091011, -0.00070031313, -0.0053587635, -0.0005524597, -2.9636725e-05, -0.0039023228, -0.0008606544, -0.00026123386, -1.6642034e-05, -8.3165185e-05, -7.791906e-05, -0.0003708805, -0.00066935836, -0.00034285896, -0.009060856, -0.00012286357, -1.1278585e-05, -0.08289129, -0.00028353152, -2.8682118e-05, -1.3661821e-05, -4.4818075e-06, -1.5214344e-05, -0.002234766, -0.0006830176, -0.00024692412, -0.00040677824, -0.00012787033, -2.9756868e-05, -0.0004968193, -6.122609e-05, -0.00052890525, -8.495144e-05, -0.0004789305, -0.0013022078, -7.3865966e-05, -0.001756615, -2.7013197e-05, -1.5006569e-06, -0.5339866, -0.05205678, -0.0007587686, -0.000456569, -0.0029665888, -0.004199223, -0.082090646, -0.33552182, -0.7591947, -5.7293146e-05, -5.3242864e-05, -0.001620247, -0.0009760399, -0.06250896, -7.3446927e-06, -0.013009072, -2.9311614e-06, -1.1514188e-05, -3.4167595e-05, -0.00025157514, -1.9621319e-05, -2.1171965e-05, -2.8138238e-06, -1.8841804e-07, -0.010311856, -0.0009871329, -0.003992679, -0.0004838218, -3.690939e-05, -0.0017102233, -0.0019081113, -0.0002329739, -1.6045058e-05, -0.00012667918, -0.00010605607, -0.00080237177, -0.0005711877, -0.00015290885, -0.0061727576, -7.8514175e-05, -9.72699e-06, -0.044677887, -0.0002660041, -2.7133337e-05, -2.319758e-05, -0.0011971729, -5.0778563e-06, -0.006087717, -0.0013905423, -0.00018522002, -0.000161138, -0.00014158308, -4.8353428e-05, -0.00035227832, -8.697986e-05, -0.0002643333, -6.3134365e-05, -0.004982684, -0.0013728751, -5.061746e-05, -0.00021383668, -1.0681599e-05, -4.9586424e-06, -0.9460977, -0.037339933, -0.0143505195, -0.0026387384, -0.012630347, -0.022472326, -0.045329742, -0.025340512], "top_logprobs": null, "text_offset": [4479, 4479, 4480, 4487, 4488, 4492, 4495, 4497, 4506, 4508, 4514, 4515, 4524, 4526, 4535, 4541, 4542, 4545, 4552, 4553, 4557, 4559, 4568, 4569, 4572, 4575, 4577, 4579, 4581, 4582, 4583, 4584, 4587, 4589, 4590, 4591, 4593, 4596, 4599, 4602, 4604, 4606, 4609, 4611, 4613, 4622, 4623, 4626, 4629, 4631, 4634, 4637, 4639, 4642, 4643, 4645, 4646, 4648, 4650, 4652, 4654, 4663, 4664, 4667, 4670, 4672, 4674, 4676, 4678, 4680, 4682, 4691, 4693, 4699, 4700, 4709, 4711, 4720, 4726, 4727, 4730, 4737, 4738, 4742, 4744, 4753, 4754, 4757, 4760, 4762, 4764, 4766, 4767, 4768, 4769, 4772, 4774, 4775, 4776, 4778, 4781, 4784, 4787, 4789, 4791, 4794, 4796, 4798, 4807, 4808, 4811, 4814, 4816, 4819, 4822, 4824, 4827, 4828, 4830, 4831, 4833, 4835, 4837, 4839, 4848, 4849, 4852, 4855, 4857, 4859, 4861, 4863, 4866, 4866, 4866]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.004864503, -0.08184571, -0.060988907, -4.7041198e-05, -0.00089579565, -0.00011559277, -0.013832883, -0.69693536, -0.07955001, -0.28209233, -0.34051177, -1.7236207e-05, -0.24042682, -0.0014020633, -6.9810994e-05, -4.048565e-05, -1.4854846e-05, -2.8138238e-06, -0.1744244, -0.02020302, -0.00015839339, -0.00022158712, -0.00015386345, -0.0006305301, -5.037998e-05, -0.00096130127, -1.3542607e-05, -1.1991961e-05, -0.6651179, -0.066344984, -0.0015195354, -0.00038865104, -0.0013590863, -0.0046748305, -0.15538687, -0.13052712, -0.6317002, -2.4986643e-05, -5.0022347e-05, -0.001004496, -0.00012203379, -0.045379017, -7.224551e-06, -0.006985851, -7.584048e-06, -1.44972155e-05, -2.0696069e-05, -0.00015160035, -1.4616429e-05, -1.4854846e-05, -4.4818075e-06, -1.8841804e-07, -0.0066039436, -0.00024871225, -0.0026716702, -0.00024608686, -2.0575926e-05, -0.0018138792, -0.00034846272, -0.0001526695, -1.3900239e-05, -5.3837026e-05, -7.481963e-05, -0.000494912, -0.00020620546, -0.00016280691, -0.005066071, -0.00016840879, -1.3900239e-05, -0.08137735, -9.842577e-05, -2.1051823e-05, -9.370307e-06, -1.3823812e-06, -0.0001589913, -0.0016329656, -0.0003109561, -0.00011583212, -0.00014015351, -0.00010963327, -2.319758e-05, -0.0003642048, -7.720381e-05, -0.00037457785, -9.2941234e-05, -0.009972441, -0.0008747952, -8.4116975e-05, -0.00017699462, -4.4818075e-06, -1.6207987e-06, -0.60149705, -0.04030081, -0.11435789, -0.0015633535, -0.0002773308, -0.0002634979, -0.0045104627, -0.019504854, -0.06557993, -0.042407975, -7.183848e-05, -0.0009726983], "top_logprobs": null, "text_offset": [4479, 4479, 4480, 4487, 4488, 4492, 4495, 4497, 4506, 4508, 4517, 4523, 4524, 4530, 4532, 4541, 4542, 4545, 4548, 4550, 4552, 4554, 4556, 4558, 4560, 4569, 4570, 4573, 4576, 4578, 4580, 4582, 4584, 4586, 4588, 4597, 4599, 4605, 4606, 4615, 4617, 4626, 4632, 4633, 4636, 4643, 4644, 4648, 4650, 4659, 4660, 4663, 4666, 4668, 4670, 4672, 4673, 4674, 4675, 4678, 4680, 4681, 4682, 4684, 4687, 4690, 4693, 4695, 4697, 4700, 4702, 4704, 4713, 4714, 4717, 4720, 4722, 4725, 4728, 4730, 4733, 4734, 4736, 4737, 4739, 4741, 4743, 4745, 4754, 4755, 4758, 4761, 4763, 4764, 4765, 4767, 4769, 4771, 4774, 4774, 4774, 4774, 4774]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform long_vertical_line (transform_matrix 0 1 0.5 0)) 4 (transform_matrix 1 1 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " long", "_", "vert", "ical", "_", "line", " (", "transform", "_", "mat", "rix", " 0", " 1", " 0", ".", "5", " 0", "))", " 4", " (", "transform", "_", "mat", "rix", " 1", " 1", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004864503, -0.0841265, -0.069909506, -6.3134365e-05, -0.00061991304, -0.00020096028, -0.012762853, -0.66962254, -1.688045e-05, -0.00024906988, -7.6605895e-05, -0.005583509, -0.06065097, -0.036511056, -0.61523247, -9.251094e-06, -4.1320116e-05, -0.001011536, -9.687513e-05, -5.832027, -0.0012952853, -0.7683581, -0.0007211925, -0.0017008497, -0.012107683, -0.016277926, -0.00016578808, -0.0015147005, -7.684431e-05, -4.277735e-07, -0.9718996, -2.310569, -0.49835694, -2.344014, -0.27331954, -0.628054, -0.065853894, -2.4464345, -0.00891074, -0.00015946814, -0.003942891, -2.558363e-05, -7.8540467e-07, -0.328121, -4.1000834, -0.8277843, -0.07389257, -0.021254743, -0.003882815, -0.01362054, -1.2700384, -0.5542368, -0.00016089863, -7.8514175e-05, -0.004135838, -0.0021163113, -0.56383777, -4.0246297e-05, -0.14251292, -3.201996e-05, -5.6818186e-05, -0.00021324158, -0.0012180005, -3.8217877e-05, -0.00010665305, -1.0204763e-05, -8.0580685e-06, -0.030162016, -0.0031867311, -0.03457181, -0.0059992704, -8.209043e-05, -0.012405821, -0.0023281402, -0.0014708842, -1.9621319e-05, -0.00079372677, -0.00060428825, -0.0025067898, -0.0056564566, -0.0033571047, -0.029856147, -0.00050421304, -1.306671e-05, -0.22999252, -0.00038745708, -2.1649737e-05, -1.688045e-05, -2.693682e-06, -8.0580685e-06, -0.0031946837, -0.008473573, -0.0010404745, -0.0012101826, -0.00011940838, -5.5385808e-05, -0.00057106843, -0.0001097506, -0.0009700729, -0.00025324314, -0.049255904, -0.011094758, -3.965026e-05, -0.00023488217, -1.1753544e-05, -1.2622395e-06, -0.5583548, -0.027190305, -0.0010241861, -0.0007430809, -0.15177318, -0.009229221, -0.16546613, -0.280823, -0.63570935, -1.7475562e-05, -5.300351e-05, -0.004002434, -0.00026743364, -0.57865775, -3.2855354e-05, -0.08746796, -1.8190814e-05, -4.2153635e-05, -8.662224e-05, -0.00056069077, -2.5703772e-05, -3.7028603e-05, -2.8138238e-06, -6.827632e-08, -0.011809753, -0.0014794212, -0.007600486, -0.0007585893, -7.3745825e-05, -0.0032461102, -0.0018082671, -0.00033844542, -3.1185496e-05, -0.00019786083, -0.00010271822, -0.00084431254, -0.0006906526, -0.00019010947, -0.00857156, -0.000107247215, -9.72699e-06, -0.068898015, -0.00018057182, -1.8310955e-05, -1.2112103e-05, -0.0005400564, -2.693682e-06, -0.00467459, -0.0011083174, -0.0005108944, -0.00022492779, -9.0795475e-05, -5.5745302e-05, -0.00041530497, -6.3492e-05, -0.0004436879, -0.00010557923, -0.009991465, -0.0007615132, -3.690939e-05, -0.0005441123, -4.0040345e-06, -1.1514188e-05, -0.76326805, -0.06270467, -0.0006398941, -0.00020561034, -0.036362197, -0.09869872, -0.70056856, -0.21499743, -0.60411936, -0.35035786, -5.979934e-05, -0.71863925, -0.0014989405, -0.00012119652, -5.586358e-05, -1.2946569e-05, -1.2622395e-06, -0.68908954, -0.016466597, -0.000716181, -0.00038662262, -0.0002145538, -0.0008348247, -7.732115e-05, -0.0016763088, -6.5092986e-06, -3.051303e-06, -1.86752, -0.049261976, -0.17842053, -0.027314523, -0.014852878, -0.037506074, -0.059915327, -0.050930064, -4.6325007e-05, -0.00030666363, -0.00022635736], "top_logprobs": null, "text_offset": [4479, 4479, 4480, 4487, 4488, 4492, 4495, 4497, 4504, 4505, 4509, 4512, 4514, 4523, 4525, 4531, 4532, 4541, 4543, 4552, 4557, 4558, 4562, 4566, 4567, 4571, 4573, 4582, 4583, 4586, 4589, 4591, 4593, 4595, 4596, 4597, 4599, 4601, 4603, 4605, 4614, 4615, 4618, 4621, 4623, 4625, 4627, 4629, 4631, 4633, 4642, 4644, 4650, 4651, 4660, 4662, 4671, 4677, 4678, 4681, 4688, 4689, 4693, 4695, 4704, 4705, 4708, 4711, 4713, 4715, 4717, 4718, 4719, 4720, 4723, 4725, 4726, 4727, 4729, 4732, 4735, 4738, 4740, 4742, 4745, 4747, 4749, 4758, 4759, 4762, 4765, 4767, 4770, 4773, 4775, 4778, 4779, 4781, 4782, 4784, 4786, 4788, 4790, 4799, 4800, 4803, 4806, 4808, 4810, 4812, 4814, 4817, 4819, 4828, 4830, 4836, 4837, 4846, 4848, 4857, 4863, 4864, 4867, 4874, 4875, 4879, 4881, 4890, 4891, 4894, 4897, 4899, 4901, 4903, 4904, 4905, 4906, 4909, 4911, 4912, 4913, 4915, 4918, 4921, 4924, 4926, 4928, 4931, 4933, 4935, 4944, 4945, 4948, 4951, 4953, 4956, 4959, 4961, 4964, 4965, 4967, 4968, 4970, 4972, 4974, 4976, 4985, 4986, 4989, 4992, 4994, 4996, 4998, 5000, 5003, 5005, 5014, 5016, 5025, 5031, 5032, 5038, 5040, 5049, 5050, 5053, 5056, 5058, 5060, 5062, 5064, 5066, 5068, 5077, 5078, 5081, 5084, 5086, 5088, 5090, 5092, 5095, 5095, 5095, 5095, 5095, 5095]}, "finish_reason": "stop"}, {"text": ")", "index": 5, "logprobs": {"tokens": ["\n", ")", "\n", "\"\"\"", "\n\n", "\n", "class"], "token_logprobs": [-0.004864503, -4.4306064, -0.35183382, -2.4971368, -1.9114954, -0.34053877, -2.604165], "top_logprobs": null, "text_offset": [4479, 4479, 4480, 4480, 4480, 4480, 4480]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.004864503, -0.08441876, -0.066372626, -6.38515e-05, -0.0009292642, -0.0001815255, -0.016391829, -0.74663734, -1.3422466e-05, -0.00024775858, -6.7307614e-05, -0.0060410043, -0.06349185, -0.027762393, -0.64170563, -1.0561456e-05, -4.2870764e-05, -0.0009852228, -5.3716885e-05, -0.04078571, -6.1516675e-06, -0.0054317536, -8.7733215e-06, -1.1514188e-05, -5.2765092e-05, -0.00029366894, -1.4736571e-05, -1.4377073e-05, -2.5744682e-06, 0, -0.008137364, -0.00025598682, -0.002730299, -0.00023845845, -1.7356348e-05, -0.00196771, -0.000431523, -0.000118333635, -1.37819625e-05, -6.158372e-05, -4.656436e-05, -0.00022999368, -0.00022313965, -9.162713e-05, -0.0045411782, -0.00014217819, -9.606849e-06, -0.04321406, -4.7399757e-05, -1.5925843e-05, -1.0561456e-05, -6.6619094e-07, -0.00017770988, -0.0016571434, -0.00022600066, -0.00013323847, -0.00023941304, -8.9960085e-05, -2.3435998e-05, -0.00029295182, -3.97704e-05, -0.00024251342, -6.647409e-05, -0.00019285125, -0.00029450248, -2.7728449e-05, -0.0034800724, -6.1516675e-06, -1.3823812e-06, -0.111557506, -0.033107053, -0.00018724658, -0.00016793102, -0.00033916067, -0.0027864245, -0.011118926, -0.53437424, -1.37819625e-05, -0.14212355, -0.00037171593, -3.953198e-05, -2.462996e-05, -1.6207987e-06, -2.0098154e-05, -0.32794586, -0.016262902, -0.0046609375, -0.0008337527, -0.003009994, -0.0021284379, -0.4912543, -9.520714e-05, -0.001240379, -0.0017825883, -0.0035507723, -0.02003456, -0.03778304, -0.11966104, -2.6419024e-05, -0.40575975, -0.000120839824, -3.058758e-05, -7.698572e-06, -4.838501e-06, 0, -0.070262276, -0.00076509226, -0.010723626, -0.00027840555, -0.00016662253, -9.437268e-05, -8.984087e-05, -0.00012846824, -2.2126573e-05, -6.873624e-05, -1.8601542e-06, 0, -0.017394539, -0.00073675625, -0.007810717, -0.0040418115, -0.5493834, -0.004388445, -9.794894e-05, -0.00046134015, -6.754697e-05, -0.00012131666, -0.0022789137, -6.909574e-05, -0.00048370167, -0.002508225, -0.00020012581, -0.0001191709, -5.8130416e-05, -0.0016979841, -7.326899e-05, -1.9621319e-05, -3.5477948e-05, -6.0395385e-05, -4.4419543e-05, -4.966285e-05, -1.3823812e-06, -6.420819e-05, -8.507158e-05, -2.7133337e-05, -4.277735e-07, -1.5036477, -0.0004223411, -1.5925843e-05, -1.1873685e-05, -5.0778563e-06, -1.4854846e-05, -0.0014135223, -0.000346913, -9.437268e-05, -0.00018045263, -0.00015386345, -2.8087945e-05, -0.0018926451, -7.636654e-05, -0.0002733969, -0.000111420464, -0.008038641, -0.022225777, -0.08995509, -0.06813153, -4.656436e-05], "top_logprobs": null, "text_offset": [4479, 4479, 4480, 4487, 4488, 4492, 4495, 4497, 4504, 4505, 4509, 4512, 4514, 4523, 4525, 4531, 4532, 4541, 4543, 4552, 4558, 4559, 4562, 4569, 4570, 4574, 4576, 4585, 4586, 4589, 4592, 4594, 4596, 4598, 4599, 4600, 4601, 4604, 4606, 4607, 4608, 4610, 4613, 4616, 4619, 4621, 4623, 4626, 4628, 4630, 4639, 4640, 4643, 4646, 4648, 4651, 4654, 4656, 4659, 4660, 4662, 4663, 4665, 4667, 4669, 4671, 4680, 4681, 4684, 4687, 4689, 4691, 4693, 4695, 4697, 4699, 4708, 4714, 4715, 4721, 4723, 4732, 4733, 4736, 4739, 4741, 4743, 4745, 4747, 4750, 4752, 4758, 4759, 4768, 4770, 4779, 4781, 4790, 4796, 4797, 4803, 4805, 4814, 4815, 4818, 4821, 4823, 4824, 4825, 4827, 4829, 4831, 4833, 4835, 4844, 4845, 4848, 4851, 4853, 4855, 4858, 4861, 4863, 4865, 4866, 4867, 4868, 4870, 4873, 4876, 4879, 4881, 4884, 4887, 4890, 4892, 4894, 4895, 4896, 4897, 4899, 4902, 4905, 4908, 4910, 4912, 4915, 4917, 4919, 4928, 4929, 4932, 4935, 4937, 4940, 4943, 4945, 4948, 4949, 4951, 4952, 4954, 4956, 4959, 4959, 4959, 4959]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 0.5 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.004864503, -0.084418625, -0.066372626, -6.38515e-05, -0.0009292642, -0.0001815255, -0.011086741, -0.7045343, -0.0720911, -0.27820936, -0.3269001, -1.44972155e-05, -0.28732756, -0.0014684964, -0.00011404399, -3.5240468e-05, -1.9503042e-05, -5.197998e-06, -0.17485537, -0.0153685585, -0.00018641399, -0.0002773308, -0.00013311833, -0.0007128404, -5.300351e-05, -0.0002121687, -1.3422466e-05, -2.4032974e-05, -0.662575, -0.06257534, -0.0006482434, -0.00028973413, -0.0015555937, -0.0042505204, -0.15524708, -0.14068928, -0.61590767, -2.4272329e-05, -3.655083e-05, -0.0012624016, -0.000702105, -0.04969781, -7.698572e-06, -0.0057240147, -4.838501e-06, -1.3306066e-05, -1.7356348e-05, -0.00016197246, -1.5925843e-05, -1.3900239e-05, -3.7684315e-06, 0, -0.0066188206, -0.000287946, -0.0027211546, -0.00021836943, -1.9028084e-05, -0.0017697524, -0.000403677, -0.00018724658, -1.5327929e-05, -5.3597672e-05, -6.885639e-05, -0.00047171512, -0.00022397317, -0.00016650239, -0.005277268, -0.00017234455, -1.1039229e-05, -0.07021029, -7.469949e-05, -1.843017e-05, -1.0920954e-05, -1.7400124e-06, -6.766711e-05, -0.0018156711, -0.00020131696, -8.149626e-05, -0.00019297047, -7.708367e-05, -2.4510746e-05, -0.00033051384, -9.317965e-05, -0.00029044657, -8.685972e-05, -0.008051741, -0.0008909025, -4.144026e-05, -0.00036849445, -3.170517e-06, -2.5744682e-06, -0.6093014, -0.040061798, -0.116273694, -0.0011287275, -0.00027613778, -0.00025109737, -0.006504168, -0.019220877, -0.064824685, -0.04763703, -7.481963e-05, -0.0009286662], "top_logprobs": null, "text_offset": [4479, 4479, 4480, 4487, 4488, 4492, 4495, 4497, 4506, 4508, 4517, 4523, 4524, 4530, 4532, 4541, 4542, 4545, 4548, 4550, 4552, 4554, 4556, 4558, 4560, 4569, 4570, 4573, 4576, 4578, 4580, 4582, 4584, 4586, 4588, 4597, 4599, 4605, 4606, 4615, 4617, 4626, 4632, 4633, 4636, 4643, 4644, 4648, 4650, 4659, 4660, 4663, 4666, 4668, 4670, 4672, 4673, 4674, 4675, 4678, 4680, 4681, 4682, 4684, 4687, 4690, 4693, 4695, 4697, 4700, 4702, 4704, 4713, 4714, 4717, 4720, 4722, 4725, 4728, 4730, 4733, 4734, 4736, 4737, 4739, 4741, 4743, 4745, 4754, 4755, 4758, 4761, 4763, 4764, 4765, 4767, 4769, 4771, 4774, 4774, 4774, 4774, 4774]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.004864503, -0.084418826, -0.05833495, -7.768064e-05, -0.0008804027, -0.0001687683, -0.018855581, -0.78639185, -1.6999666e-05, -0.00027482552, -6.2420055e-05, -0.0071427026, -0.0515574, -0.029598808, -0.59940034, -1.1159372e-05, -5.0260765e-05, -0.00097329344, -4.608659e-05, -0.03480266, -5.4364154e-06, -0.0055999923, -9.012677e-06, -1.0323977e-05, -5.503005e-05, -0.00023404865, -1.42597355e-05, -1.7119806e-05, -3.7684315e-06, -1.8841804e-07, -0.008222578, -0.0002934296, -0.0032141795, -0.00024287197, -2.558363e-05, -0.0016967892, -0.0006338098, -0.00011547263, -1.5448071e-05, -5.2288255e-05, -6.551948e-05, -0.0002663608, -0.00016376152, -0.00014217819, -0.0045932704, -0.00013693394, -1.0204763e-05, -0.034402147, -6.408898e-05, -2.1051823e-05, -9.606849e-06, -6.6619094e-07, -7.279122e-05, -0.0017080727, -0.00027721157, -0.00011726356, -0.00022719182, -7.791906e-05, -2.2604345e-05, -0.0003039237, -4.7279616e-05, -0.00025694142, -8.984087e-05, -0.0001536241, -0.00035657262, -3.2855354e-05, -0.003281334, -3.7684315e-06, -4.361666e-06, -0.10317071, -0.027312318, -0.00019929133, -0.00016519109, -0.0002968876, -0.0024390933, -0.011333093, -0.5414224, -1.1278585e-05, -0.16133069, -0.00049956393, -4.4419543e-05, -3.2855354e-05, -1.7400124e-06, -2.6060465e-05, -0.33089, -0.013697461, -0.0047076484, -0.0014422939, -0.0029894284, -0.0023857357, -0.44326454, -0.00011237507, -0.0010751426, -0.0016406073, -0.0031173145, -0.018740429, -0.042521287, -0.118374325, -2.6419024e-05, -0.42049727, -9.365555e-05, -3.201996e-05, -8.0580685e-06, -4.1232483e-06, -6.827632e-08, -0.061481543, -0.0007356825, -0.012654491, -0.00042734694, -0.00022600066, -0.00013097163, -9.401318e-05, -0.000106773194, -2.8087945e-05, -9.461016e-05, -1.6207987e-06, 0, -0.019598033, -0.00055544183, -0.0058158566, -0.0031174337, -0.5534585, -0.004275602, -8.578871e-05, -0.00042794488, -6.516092e-05, -0.00011475737, -0.0018157904, -8.578871e-05, -0.0005350468, -0.0025404345, -0.0002176523, -7.362661e-05, -7.255186e-05, -0.0016146366, -7.505805e-05, -2.0815281e-05, -2.9636725e-05, -5.7532503e-05, -5.1930627e-05, -5.4075444e-05, -1.7400124e-06, -8.51908e-05, -5.0856816e-05, -2.7133337e-05, -4.277735e-07, -1.4043602, -0.00035180151, -1.5327929e-05, -1.3306066e-05, -6.031526e-06, -1.3900239e-05, -0.0015839504, -0.0005479298, -8.078007e-05, -0.00016805116, -0.00016495361, -2.7251614e-05, -0.0016867588, -7.028876e-05, -0.00030284992, -9.842577e-05, -0.0075993445, -0.02238632, -0.09602699, -0.055411857, -4.871012e-05], "top_logprobs": null, "text_offset": [4479, 4479, 4480, 4487, 4488, 4492, 4495, 4497, 4504, 4505, 4509, 4512, 4514, 4523, 4525, 4531, 4532, 4541, 4543, 4552, 4558, 4559, 4562, 4569, 4570, 4574, 4576, 4585, 4586, 4589, 4592, 4594, 4596, 4598, 4599, 4600, 4601, 4604, 4606, 4607, 4608, 4610, 4613, 4616, 4619, 4621, 4623, 4626, 4628, 4630, 4639, 4640, 4643, 4646, 4648, 4651, 4654, 4656, 4659, 4660, 4662, 4663, 4665, 4667, 4669, 4671, 4680, 4681, 4684, 4687, 4689, 4691, 4693, 4695, 4697, 4699, 4708, 4714, 4715, 4721, 4723, 4732, 4733, 4736, 4739, 4741, 4743, 4745, 4747, 4750, 4752, 4758, 4759, 4768, 4770, 4779, 4781, 4790, 4796, 4797, 4803, 4805, 4814, 4815, 4818, 4821, 4823, 4824, 4825, 4827, 4829, 4831, 4833, 4835, 4844, 4845, 4848, 4851, 4853, 4855, 4858, 4861, 4863, 4865, 4866, 4867, 4868, 4870, 4873, 4876, 4879, 4881, 4884, 4887, 4890, 4892, 4894, 4895, 4896, 4897, 4899, 4902, 4905, 4908, 4910, 4912, 4915, 4917, 4919, 4928, 4929, 4932, 4935, 4937, 4940, 4943, 4945, 4948, 4949, 4951, 4952, 4954, 4956, 4959, 4959, 4959, 4959]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.004864503, -0.084418826, -0.05833495, -7.768064e-05, -0.0005521021, -0.0001835511, -0.0154439155, -0.746273, -1.5925843e-05, -0.00027101085, -7.1958624e-05, -0.006214082, -0.0607601, -0.034020167, -0.6157231, -1.1278585e-05, -3.965026e-05, -0.0009116053, -4.7875652e-05, -0.038407624, -5.197998e-06, -0.004184197, -9.490449e-06, -9.012677e-06, -3.154219e-05, -0.00039413653, -1.42597355e-05, -1.4616429e-05, -3.2906587e-06, -6.827632e-08, -0.006187211, -0.00022349542, -0.0033013648, -0.00021598431, -2.2604345e-05, -0.0015360115, -0.0005095821, -0.0001283481, -1.6999666e-05, -5.0500123e-05, -5.7293146e-05, -0.00033379628, -0.0002433488, -0.00013323847, -0.0037460357, -0.00012453248, -9.370307e-06, -0.036428712, -4.1200903e-05, -2.0218295e-05, -8.176345e-06, -1.1430258e-06, -6.9573514e-05, -0.0018440945, -0.0002830547, -0.00014349136, -0.00022409332, -7.183848e-05, -2.7251614e-05, -0.00024477651, -4.489638e-05, -0.00032324117, -9.9735196e-05, -0.00016304628, -0.00028889967, -3.201996e-05, -0.0037294049, -6.2699432e-06, -7.8540467e-07, -0.10195472, -0.028833877, -0.0002164621, -0.00020012581, -0.00031203084, -0.0025309327, -0.0096970545, -0.5087275, -1.2468796e-05, -0.13704571, -9.628002e-05, -4.3108244e-05, -2.2245786e-05, -5.197998e-06, -1.8310955e-05, -0.32039952, -0.012153114, -0.0037391556, -0.00068480574, -0.0029252837, -0.00250512, -0.41461223, -9.0795475e-05, -0.0011848203, -0.0016645484, -0.0033290568, -0.020274062, -0.039571077, -0.11306757, -2.582111e-05, -0.41570497, -0.00048728072, -2.9519388e-05, -7.3446927e-06, -5.0778563e-06, 0, -0.05474881, -0.00080475875, -0.012599744, -0.00018772435, -0.00015446138, -0.000109155495, -0.00012381817, -0.000110467736, -2.9280032e-05, -7.20769e-05, -9.055464e-07, 0, -0.018149193, -0.00061705016, -0.009659982, -0.006089937, -0.5561384, -0.004458731, -6.862172e-05, -0.0006249226, -6.396884e-05, -0.00013502566, -0.0014982242, -8.209043e-05, -0.00052246416, -0.002599655, -0.00018414622, -8.256821e-05, -7.076466e-05, -0.0013213666, -8.7932596e-05, -1.9503042e-05, -3.2140102e-05, -5.9085025e-05, -4.2392992e-05, -4.9187893e-05, -1.9765537e-06, -5.0022347e-05, -8.948419e-05, -2.319758e-05, -4.277735e-07, -0.6494945, -5.669991e-05, -1.9860674e-05, -8.653179e-06, -4.4818075e-06, -7.698572e-06, -0.001740674, -0.00013884035, -8.209043e-05, -0.00013276069, -0.00012453248, -2.6773841e-05, -0.0007262603, -0.00010951312, -0.00020727927, -0.00013025544, -0.02513604, -0.02166799, -0.0938145, -0.07382705, -6.623567e-05], "top_logprobs": null, "text_offset": [4479, 4479, 4480, 4487, 4488, 4492, 4495, 4497, 4504, 4505, 4509, 4512, 4514, 4523, 4525, 4531, 4532, 4541, 4543, 4552, 4558, 4559, 4562, 4569, 4570, 4574, 4576, 4585, 4586, 4589, 4592, 4594, 4596, 4598, 4599, 4600, 4601, 4604, 4606, 4607, 4608, 4610, 4613, 4616, 4619, 4621, 4623, 4626, 4628, 4630, 4639, 4640, 4643, 4646, 4648, 4651, 4654, 4656, 4659, 4660, 4662, 4663, 4665, 4667, 4669, 4671, 4680, 4681, 4684, 4687, 4689, 4691, 4693, 4695, 4697, 4699, 4708, 4714, 4715, 4721, 4723, 4732, 4733, 4736, 4739, 4741, 4743, 4745, 4747, 4750, 4752, 4758, 4759, 4768, 4770, 4779, 4781, 4790, 4796, 4797, 4803, 4805, 4814, 4815, 4818, 4821, 4823, 4824, 4825, 4827, 4829, 4831, 4833, 4835, 4844, 4845, 4848, 4851, 4853, 4855, 4858, 4861, 4863, 4865, 4866, 4867, 4868, 4870, 4873, 4876, 4879, 4881, 4884, 4887, 4890, 4892, 4894, 4895, 4896, 4897, 4899, 4902, 4905, 4908, 4910, 4912, 4915, 4917, 4919, 4928, 4929, 4932, 4935, 4937, 4940, 4943, 4945, 4948, 4949, 4951, 4952, 4954, 4956, 4959, 4959, 4959, 4959]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LfDNosEEmB1nKxy3XNaHRPS3FuC", "object": "text_completion", "created": 1651003287, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0))))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))))", "\n", "(", "connect", "_", "stro", "kes", " (", "transform"], "token_logprobs": [-0.006383405, -0.08875924, -0.056506675, -0.0001015252, -0.00069434993, -0.00022951684, -0.0069222883, -0.5693575, -1.5687427e-05, -0.00020668321, -4.9308033e-05, -0.0041007027, -0.11623486, -0.020378929, -1.8905091, -1.9382902e-05, -7.768064e-05, -0.001448383, -0.000998529, -0.07548429, -4.1232483e-06, -0.00903325, -1.2112103e-05, -9.72699e-06, -2.5703772e-05, -0.00022421066, -1.6999666e-05, -2.1649737e-05, -6.6294406e-06, 0, -0.006865332, -0.00041118995, -0.0061155446, -0.00040665813, -2.6538237e-05, -0.002322943, -0.00048370167, -0.00013466804, -1.8190814e-05, -9.258174e-05, -7.827482e-05, -0.0007635397, -0.0006844481, -0.00029867573, -0.43006152, -0.00037791664, -1.5567284e-05, -0.07409481, -3.1901687e-05, -2.1051823e-05, -1.4139594e-05, -1.2622395e-06, -4.1232483e-06, -0.0013580126, -0.0011157168, -0.00033880305, -0.0002372673, -0.00015779921, -3.5120327e-05, -0.00040952102, -9.0198504e-05, -0.00046825802, -0.0001033124, -3.333313e-05, -0.00047398286, -4.430127e-05, -0.004221547, -2.1051823e-05, -1.2622395e-06, -0.55239296, -0.07830233, -0.00014814144, -9.56821e-05, -7.601266e-05, -0.0009773466, -0.023621753, -0.030686634, -0.16326173, -8.0580685e-06, -0.00013025544, -0.0005382664, -0.00011630989, -0.010669766, -2.0966954e-06, -0.0005437528, -3.7684315e-06, -3.2906587e-06, -3.4089344e-06, -2.3078366e-05, -6.031526e-06, -1.7475562e-05, -2.0966954e-06, -1.8841804e-07, -0.0013561024, -7.255186e-05, -0.00083751103, -0.00011237507, -2.6893982e-05, -0.000353232, -0.0003250293, -3.1781543e-05, -1.2828294e-05, -4.179789e-05, -5.467149e-05, -0.00013073228, -8.459475e-05, -0.000110467736, -0.06850117, -0.00019309061, -7.698572e-06, -0.0074977316, -1.676031e-05, -1.2588937e-05, -2.9159892e-05, -0.00015160035, -3.7386224e-05, -0.00064371066, -6.48061e-05, -8.5549356e-05, -2.2245786e-05, -5.6460554e-05, -6.253833e-05, -0.000143252, -6.277768e-05, -0.00018963263, -7.922942e-05, -0.00022015757, -0.00011320953, -3.4048382e-05, -0.00014814144, -2.4543265e-06, -4.2433903e-06, -1.1542453, -0.038115375, -0.0016086057, -0.00045919348, -0.0052618706, -0.006661723, -0.48047203, -5.8010275e-05, -3.4642555e-05, -0.0013494163, -0.006785698, -0.030253854, -0.060574282, -0.05910294, -1.688045e-05, -0.5484502, -0.00025276537, -2.045765e-05, -2.6419024e-05, -5.0778563e-06, -1.8841804e-07, -0.09310987, -0.00047195444, -0.004549261, -0.0001517177, -0.00012250594, -0.00016614476, -2.2245786e-05, -0.00015851353, -2.3317722e-05, -0.00030153766, -1.6207987e-06, -4.6010214e-06, -0.01634172, -0.0010978768, -0.009818754, -0.002830894, -0.04979498, -0.0055471268, -7.97072e-05, -0.00049634156, -8.674238e-05, -6.6593304e-05, -0.0013393334, -3.1185496e-05, -0.00018021514, -0.0072529865, -0.00043736608, -6.766711e-05, -5.157113e-05, -0.00023786427, -0.00023857858, -1.1991961e-05, -6.516092e-05, -9.759038e-05, -3.2973632e-05, -7.6964454e-05, -2.0966954e-06, -2.033751e-05, -0.00030654538, -0.00019010947, -2.9311614e-06, -0.43033445, -0.00018987012, -3.7148744e-05, -2.9399247e-05, -1.022884e-06, -1.1039229e-05, -0.0019903465, -0.00030857194, -0.00011690406, -6.3014224e-05, -8.161453e-05, -3.643162e-05, -0.0006072694, -0.000116426294, -0.0002484729, -8.650302e-05, -1.6591504, -0.14354897, -0.27817306, -0.14965737, -0.00021800993, -0.0020145946, -0.00043975122, -0.014485068, -0.77396345], "top_logprobs": null, "text_offset": [4575, 4575, 4576, 4583, 4584, 4588, 4591, 4593, 4600, 4601, 4605, 4608, 4610, 4619, 4621, 4627, 4628, 4637, 4639, 4648, 4654, 4655, 4658, 4665, 4666, 4670, 4672, 4681, 4682, 4685, 4688, 4690, 4692, 4694, 4695, 4696, 4697, 4700, 4702, 4703, 4704, 4706, 4709, 4712, 4715, 4717, 4719, 4722, 4724, 4726, 4735, 4736, 4739, 4742, 4744, 4747, 4750, 4752, 4755, 4756, 4758, 4759, 4761, 4763, 4765, 4767, 4776, 4777, 4780, 4783, 4785, 4787, 4789, 4791, 4793, 4795, 4804, 4806, 4812, 4813, 4822, 4824, 4833, 4839, 4840, 4843, 4850, 4851, 4855, 4857, 4866, 4867, 4870, 4873, 4875, 4877, 4879, 4880, 4881, 4882, 4885, 4887, 4888, 4889, 4891, 4894, 4897, 4900, 4902, 4904, 4907, 4909, 4911, 4920, 4921, 4924, 4927, 4929, 4932, 4935, 4937, 4940, 4941, 4943, 4944, 4946, 4948, 4950, 4952, 4961, 4962, 4965, 4968, 4970, 4972, 4974, 4976, 4979, 4981, 4987, 4988, 4997, 4999, 5008, 5010, 5019, 5025, 5026, 5032, 5034, 5043, 5044, 5047, 5050, 5052, 5053, 5054, 5056, 5058, 5060, 5062, 5064, 5073, 5074, 5077, 5080, 5082, 5084, 5087, 5090, 5092, 5094, 5095, 5096, 5097, 5099, 5102, 5105, 5108, 5110, 5113, 5116, 5119, 5121, 5123, 5124, 5125, 5126, 5128, 5131, 5134, 5137, 5139, 5141, 5144, 5146, 5148, 5157, 5158, 5161, 5164, 5166, 5169, 5172, 5174, 5177, 5178, 5180, 5181, 5183, 5185, 5189, 5189, 5189, 5189, 5189, 5189, 5189, 5189]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", ".", "25", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.006383405, -0.08875912, -0.056506675, -7.11223e-05, -0.00062802393, -0.00022790894, -0.009074567, -0.8556597, -0.06161871, -0.23921582, -0.272249, -1.2588937e-05, -0.08842241, -0.0012601318, -6.373136e-05, -2.784859e-05, -1.9143545e-05, -4.1232483e-06, -0.13716754, -0.012960102, -7.839496e-05, -0.00022003835, -7.529741e-05, -0.0005627192, -7.5892516e-05, -0.0009786607, -3.452334e-05, -2.558363e-05, -2.545498, -0.09586075, -0.037684996, -0.016361654, -0.006510946, -0.007247462, -0.19816138, -0.10652707, -0.66595376, -0.17422502, -3.2140102e-05, -0.20157427, -0.001661204, -4.9187893e-05, -1.44972155e-05, -2.4510746e-05, -5.8247755e-05, -0.13431756, -0.036082476, -0.00044977036, -0.00028710873, -0.00021622273, -0.000491332, -7.1719274e-05, -0.0006359574, -9.966347e-06, -6.6619094e-07, -1.323467, -0.70787936, -0.30263722, -0.0013706664, -0.00045179878, -0.0012681301, -0.01513634, -0.032153904, -0.036476187, -0.039636187, -6.89756e-05, -0.00037100064], "top_logprobs": null, "text_offset": [4575, 4575, 4576, 4583, 4584, 4588, 4591, 4593, 4602, 4604, 4613, 4619, 4620, 4626, 4628, 4637, 4638, 4641, 4644, 4646, 4648, 4650, 4652, 4654, 4656, 4665, 4666, 4669, 4672, 4674, 4676, 4678, 4680, 4682, 4684, 4693, 4695, 4704, 4710, 4711, 4717, 4719, 4728, 4729, 4732, 4735, 4737, 4739, 4741, 4743, 4745, 4747, 4756, 4757, 4760, 4763, 4765, 4766, 4768, 4770, 4772, 4774, 4777, 4777, 4777, 4777, 4777]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.006383405, -0.08875898, -0.056506798, -7.11223e-05, -0.00062802393, -0.00022790894, -0.009074567, -0.8345345, -0.05801055, -0.2639765, -0.2714941, -1.1039229e-05, -0.07629136, -0.001167275, -6.337372e-05, -3.678925e-05, -1.5327929e-05, -2.4543265e-06, -0.13556774, -0.013136735, -8.3165185e-05, -0.00012584659, -6.5041706e-05, -0.0005319464, -8.065993e-05, -0.0010349862, -2.5941252e-05, -1.4854846e-05, -2.6195254, -0.09287751, -0.0393217, -0.01654004, -0.009176284, -0.0067459107, -0.17877774, -0.13459028, -0.6873633, -4.3465872e-05, -8.376217e-05, -0.0022884128, -0.0021599764, -0.14589469, -1.2588937e-05, -0.019805875, -1.4377073e-05, -2.0575926e-05, -1.5925843e-05, -0.00019177745, -1.402038e-05, -1.8788729e-05, -6.1516675e-06, -6.827632e-08, -0.0076236106, -0.00040868655, -0.0077281804, -0.0006906526, -3.0707724e-05, -0.0027734526, -0.001265624, -0.00024751923, -2.582111e-05, -0.00013037559, -0.0001229837, -0.002195281, -0.00167834, -0.00054291834, -0.18934366, -0.00031584647, -9.012677e-06, -0.15522473, -5.2885232e-05, -2.7371756e-05, -1.5925843e-05, -3.051303e-06, -8.5358415e-06, -0.0017297462, -0.000403677, -0.00015434122, -9.103483e-05, -9.687513e-05, -4.29881e-05, -0.00035788392, -0.00010271822, -0.00035883667, -8.197403e-05, -0.0014201474, -0.0008270714, -5.8725527e-05, -0.0002949793, -7.584048e-06, -4.1232483e-06, -0.34606534, -0.02666843, -0.0063841864, -0.0006487193, -0.014661304, -0.021980327, -0.044826306, -0.037759457], "top_logprobs": null, "text_offset": [4575, 4575, 4576, 4583, 4584, 4588, 4591, 4593, 4602, 4604, 4613, 4619, 4620, 4626, 4628, 4637, 4638, 4641, 4644, 4646, 4648, 4650, 4652, 4654, 4656, 4665, 4666, 4669, 4672, 4674, 4676, 4678, 4680, 4682, 4684, 4693, 4695, 4701, 4702, 4711, 4713, 4722, 4728, 4729, 4732, 4739, 4740, 4744, 4746, 4755, 4756, 4759, 4762, 4764, 4766, 4768, 4769, 4770, 4771, 4774, 4776, 4777, 4778, 4780, 4783, 4786, 4789, 4791, 4793, 4796, 4798, 4800, 4809, 4810, 4813, 4816, 4818, 4821, 4824, 4826, 4829, 4830, 4832, 4833, 4835, 4837, 4839, 4841, 4850, 4851, 4854, 4857, 4859, 4861, 4863, 4865, 4868, 4868, 4868]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", "))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.006383405, -0.08875879, -0.056506675, -7.11223e-05, -0.00062802393, -0.00022790894, -0.009074567, -0.6033426, -1.5567284e-05, -0.00019988645, -5.0260765e-05, -0.0048131743, -0.1272395, -0.026740175, -0.19867411, -0.13477524, -1.0920954e-05, -0.035556864, -0.0004909753, -3.1781543e-05, -2.582111e-05, -1.2946569e-05, -1.8841804e-07, -0.079485215, -0.014069273, -8.924483e-05, -8.650302e-05, -6.0276172e-05, -0.00029450248, -5.9679198e-05, -0.0017866499, -6.6713445e-05, -1.5006569e-06, -0.6877779, -0.04163603, -4.9069615e-05, -3.2973632e-05, -5.4552278e-05, -0.000757874, -0.013397907, -0.03813878, -0.30429688, -6.3900848e-06, -1.306671e-05, -0.00096106285, -0.0014727954, -0.020614376, -4.2433903e-06, -0.0025720445, -5.2525735e-05, -1.3542607e-05, -3.170517e-06, -4.8949474e-05, -7.3446927e-06, -1.7834122e-05, -7.4639065e-06, -6.827632e-08, -0.0018666079, -9.9616926e-05, -0.0023345936, -0.00024644638, -3.988961e-05, -0.0017835438, -0.0006959005, -0.00016244836, -2.4510746e-05, -7.601266e-05, -0.00010140506, -0.00086769613, -0.00046778028, -0.00027780765, -0.038835213, -0.00010772499, -1.1159372e-05, -0.036365725, -1.9028084e-05, -1.7236207e-05, -1.7834122e-05, -5.4432137e-05, -5.598372e-05, -0.0009760399, -0.00021562482, -0.00012691665, -4.847264e-05, -0.000104267005, -3.0473995e-05, -0.00022891893, -7.1958624e-05, -0.00036563535, -9.151261e-05, -0.00058842317, -0.00015028719, -4.5374152e-05, -0.00011678579, -5.3162735e-06, -6.8669196e-06, -0.13156623, -0.005315799, -0.00026528694, -0.0001191709, -0.0017027009, -0.0032226122, -1.3791205, -0.1924882, -0.8829817, -0.23496325, -2.9636725e-05, -1.0146043, -0.002313505, -4.6684505e-05, -2.7371756e-05, -4.277735e-07, -2.1889093e-05, -0.06949148, -0.0016705774, -0.010034633, -0.00029378536, -0.000113566224, -9.985534e-05, -0.00043951374, -0.0009096961, -6.6829845e-05, -0.002760243, -1.4974988e-05, 0, -0.3041057, -0.009896769, -0.48078158, -0.017741153, -0.11282953, -0.019439945, -0.00037922888, -0.0022103922, -7.100402e-05, -0.0010548538, -0.001798295, -0.0007936066, -0.001237991, -0.019107135, -7.24364e-05, -0.0005899748, -8.531094e-05, -0.00092389324, -0.0008115602, -3.357061e-05, -4.3586017e-05, -8.0899285e-05, -6.6829845e-05, -0.00011750104, -9.72699e-06, -3.9055147e-05, -0.0007443922, -0.32023236, -0.20184346, -3.1742227, -0.6096691, -0.053350214, -0.12419716, -0.10396673, -0.00017174664, -0.00045024627, -0.0001097506, -0.009137064], "top_logprobs": null, "text_offset": [4575, 4575, 4576, 4583, 4584, 4588, 4591, 4593, 4600, 4601, 4605, 4608, 4610, 4619, 4621, 4630, 4636, 4637, 4643, 4645, 4654, 4655, 4658, 4661, 4663, 4665, 4667, 4669, 4671, 4673, 4682, 4683, 4686, 4689, 4691, 4693, 4695, 4697, 4699, 4701, 4710, 4712, 4718, 4719, 4728, 4730, 4739, 4745, 4746, 4749, 4756, 4757, 4761, 4763, 4772, 4773, 4776, 4779, 4781, 4783, 4785, 4786, 4787, 4788, 4791, 4793, 4794, 4795, 4797, 4800, 4803, 4806, 4808, 4810, 4813, 4815, 4817, 4826, 4827, 4830, 4833, 4835, 4838, 4841, 4843, 4846, 4847, 4849, 4850, 4852, 4854, 4856, 4858, 4867, 4868, 4871, 4874, 4876, 4878, 4880, 4882, 4885, 4887, 4896, 4898, 4907, 4913, 4914, 4920, 4922, 4931, 4932, 4935, 4938, 4940, 4941, 4942, 4944, 4946, 4948, 4950, 4952, 4961, 4962, 4965, 4968, 4970, 4972, 4975, 4978, 4980, 4982, 4983, 4984, 4985, 4987, 4990, 4993, 4996, 4998, 5001, 5004, 5007, 5009, 5011, 5012, 5013, 5014, 5016, 5019, 5022, 5025, 5027, 5029, 5032, 5034, 5036, 5036, 5036, 5036, 5036, 5036, 5036]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.006383405, -0.08236205, -0.06621397, -9.0318645e-05, -0.0007423638, -0.0002202777, -0.009865046, -0.82996905, -0.066848606, -0.22204308, -0.29937914, -1.1278585e-05, -0.105875835, -0.0011619041, -4.6921985e-05, -3.7148744e-05, -1.402038e-05, -2.8138238e-06, -0.12288563, -0.011498587, -6.2299914e-05, -0.00015457776, -7.4460135e-05, -0.00056963606, -7.9946556e-05, -0.0011722865, -3.154219e-05, -1.306671e-05, -0.95212066, -0.028993698, -7.1719274e-05, -0.00010283744, -0.00040522762, -0.004988614, -0.24782075, -0.14205073, -0.5355972, -6.802381e-05, -6.432833e-05, -0.0029462634, -0.0060850796, -0.117620856, -8.176345e-06, -0.014101008, -1.1398727e-05, -2.7728449e-05, -9.606849e-06, -0.0002912829, -1.4139594e-05, -1.9263687e-05, -3.7684315e-06, -3.076318e-07, -0.006382808, -0.00033641793, -0.0050367755, -0.00039735518, -6.9810994e-05, -0.0027338865, -0.0017249703, -0.0003655161, -3.4167595e-05, -0.00013311833, -0.00015481713, -0.0029751991, -0.0019685463, -0.0012545827, -0.114450246, -0.00030570905, -1.2468796e-05, -0.26425487, -0.00010414779, -2.9636725e-05, -2.0098154e-05, -6.2699432e-06, -0.00013180608, -0.0021571098, -0.0008707374, -0.00020727927, -0.00014265596, -0.00013168594, -3.4403198e-05, -0.0002869914, -9.532728e-05, -0.000295933, -8.1256905e-05, -0.0075095627, -0.0014929116, -0.00058687344, -0.0005782248, -2.1529595e-05, -1.1159372e-05, -1.9231689, -0.19949713, -0.0044823196, -0.0007967051, -0.031824168, -0.015216222, -0.043031033, -0.032199945], "top_logprobs": null, "text_offset": [4575, 4575, 4576, 4583, 4584, 4588, 4591, 4593, 4602, 4604, 4613, 4619, 4620, 4626, 4628, 4637, 4638, 4641, 4644, 4646, 4648, 4650, 4652, 4654, 4656, 4665, 4666, 4669, 4672, 4674, 4676, 4678, 4680, 4682, 4684, 4693, 4695, 4701, 4702, 4711, 4713, 4722, 4728, 4729, 4732, 4739, 4740, 4744, 4746, 4755, 4756, 4759, 4762, 4764, 4766, 4768, 4769, 4770, 4771, 4774, 4776, 4777, 4778, 4780, 4783, 4786, 4789, 4791, 4793, 4796, 4798, 4800, 4809, 4810, 4813, 4816, 4818, 4821, 4824, 4826, 4829, 4830, 4832, 4833, 4835, 4837, 4839, 4841, 4850, 4851, 4854, 4857, 4859, 4861, 4863, 4865, 4868, 4868, 4868]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.006383405, -0.08409187, -0.060653064, -9.401318e-05, -0.00039723687, -0.00026576474, -0.007522534, -0.56121004, -2.141132e-05, -0.00018331176, -6.9573514e-05, -0.004270933, -0.12071541, -0.020974344, -0.20262483, -0.12226226, -1.0561456e-05, -0.039734114, -0.00058466673, -2.7611111e-05, -2.7611111e-05, -1.1873685e-05, -6.827632e-08, -0.07717718, -0.012166567, -7.97072e-05, -9.925743e-05, -7.744129e-05, -0.00031691935, -6.575884e-05, -0.0025111535, -4.5255874e-05, -1.7400124e-06, -0.76465786, -0.04137222, -4.573365e-05, -3.5240468e-05, -5.4314798e-05, -0.00069267815, -0.016377708, -0.036997523, -0.30249268, -6.6294406e-06, -1.6642034e-05, -0.0010558084, -0.00011404399, -0.015081518, -4.9586424e-06, -0.0024668174, -5.24084e-05, -8.4157e-06, -3.529076e-06, -5.4314798e-05, -7.3446927e-06, -1.4377073e-05, -8.5358415e-06, -6.827632e-08, -0.0024560003, -0.00010557923, -0.002432461, -0.0002251634, -5.1930627e-05, -0.0020790987, -0.0005960573, -0.00013431041, -2.4750101e-05, -7.088388e-05, -0.00010259808, -0.0008994939, -0.00057488505, -0.0003016569, -0.04724347, -0.00014611395, -8.653179e-06, -0.0273027, -1.5448071e-05, -1.6402679e-05, -1.7595703e-05, -9.699527e-05, -2.6893982e-05, -0.000754295, -0.00022880347, -7.326899e-05, -5.0856816e-05, -8.447461e-05, -2.880226e-05, -0.00020310696, -7.8038276e-05, -0.00032586468, -8.447461e-05, -0.0005194802, -0.000109035354, -4.7399757e-05, -0.00010498132, -9.966347e-06, -4.721163e-06, -0.15440835, -0.007806031, -0.00016793102, -7.458028e-05, -0.0018412278, -0.00310984, -0.31989673, -9.794894e-05, -0.0013839774, -0.0017778117, -0.0057496126, -0.02270357, -0.06471219, -0.045397416, -2.3912831e-05, -0.46764606, -0.0004285409, -1.6282536e-05, -2.6419024e-05, -6.031526e-06, -1.8601542e-06, -0.020576105, -0.0003937789, -0.0074834987, -0.00015446138, -9.56821e-05, -9.878341e-05, -6.6593304e-05, -7.279122e-05, -3.0353855e-05, -7.136165e-05, -2.693682e-06, -1.3823812e-06, -0.01707175, -0.00047762014, -0.0080730105, -0.0012742182, -0.031112835, -0.0059992704, -5.6818186e-05, -0.00028770664, -6.9690854e-05, -0.00020406157, -0.0019210712, -0.0002541968, -0.00020835307, -0.01029048, -0.00031668, -6.9573514e-05, -5.3363005e-05, -0.00021371653, -0.00036539597, -1.0561456e-05, -3.965026e-05, -7.815842e-05, -4.775551e-05, -3.4762696e-05, -6.9861335e-06, -2.9159892e-05, -0.0004602654, -0.00011249522, -5.197998e-06, -0.46453905, -0.00028078974, -4.2033495e-05, -6.1516675e-06, -6.814395e-05, -1.5006569e-06, -0.0019301489, -0.00039520938, -8.018216e-05, -0.00010343254, -7.9349564e-05, -3.0353855e-05, -0.0015338629, -7.684431e-05, -0.00031322293, -0.00011678579, -0.044128742, -0.05319726, -0.09464602, -0.07987819, -9.103483e-05], "top_logprobs": null, "text_offset": [4575, 4575, 4576, 4583, 4584, 4588, 4591, 4593, 4600, 4601, 4605, 4608, 4610, 4619, 4621, 4630, 4636, 4637, 4643, 4645, 4654, 4655, 4658, 4661, 4663, 4665, 4667, 4669, 4671, 4673, 4682, 4683, 4686, 4689, 4691, 4693, 4695, 4697, 4699, 4701, 4710, 4712, 4718, 4719, 4728, 4730, 4739, 4745, 4746, 4749, 4756, 4757, 4761, 4763, 4772, 4773, 4776, 4779, 4781, 4783, 4785, 4786, 4787, 4788, 4791, 4793, 4794, 4795, 4797, 4800, 4803, 4806, 4808, 4810, 4813, 4815, 4817, 4826, 4827, 4830, 4833, 4835, 4838, 4841, 4843, 4846, 4847, 4849, 4850, 4852, 4854, 4856, 4858, 4867, 4868, 4871, 4874, 4876, 4878, 4880, 4882, 4885, 4887, 4893, 4894, 4903, 4905, 4914, 4916, 4925, 4931, 4932, 4938, 4940, 4949, 4950, 4953, 4956, 4958, 4959, 4960, 4962, 4964, 4966, 4968, 4970, 4979, 4980, 4983, 4986, 4988, 4990, 4993, 4996, 4998, 5000, 5001, 5002, 5003, 5005, 5008, 5011, 5014, 5016, 5019, 5022, 5025, 5027, 5029, 5030, 5031, 5032, 5034, 5037, 5040, 5043, 5045, 5047, 5050, 5052, 5054, 5063, 5064, 5067, 5070, 5072, 5075, 5078, 5080, 5083, 5084, 5086, 5087, 5089, 5091, 5094, 5094, 5094, 5094]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.006383405, -0.08409187, -0.062051594, -0.00011273176, -0.00050922454, -0.00031632424, -0.010208341, -0.80780035, -0.059008665, -0.24733198, -1.8051016, -0.4544257, -0.62175226, -3.3212986e-05, -0.13891792, -0.0027830764, -0.00013085242, -0.0001963102, -3.3450466e-05, -8.5358415e-06, -0.16282737, -0.010237065, -0.00022111216, -0.00035108434, -0.0008113217, -0.006228296, -0.010393222, -0.0057904986, -7.9946556e-05, -6.7307614e-05, -0.6589018, -0.043231923, -0.0001895134, -0.00024155974, -0.0006340482, -0.005487251, -0.008810615, -0.79473734, -0.7469449, -2.1171965e-05, -4.072407e-05, -0.0015303993, -0.001256015, -0.040312972, -5.3162735e-06, -0.004266562, -8.176345e-06, -1.1514188e-05, -4.361666e-06, -8.876706e-05, -9.606849e-06, -1.7953334e-05, -7.4639065e-06, -5.460492e-07, -0.00476035, -0.00030857194, -0.004098069, -0.00030475817, -4.1558535e-05, -0.0022943865, -0.0011616655, -0.0002824577, -4.0126153e-05, -9.9735196e-05, -9.818829e-05, -0.0011401245, -0.0010655947, -0.00093528844, -0.08900048, -0.0001740144, -1.676031e-05, -0.087161414, -3.201996e-05, -1.4139594e-05, -1.7356348e-05, -6.6294406e-06, -1.6402679e-05, -0.0014957781, -0.0007532202, -0.0001195276, -0.0002170572, -9.24644e-05, -4.1678675e-05, -0.00033355693, -8.173468e-05, -0.0003813765, -8.507158e-05, -0.02510805, -0.00046575186, -2.784859e-05, -0.00041745167, -4.361666e-06, -4.6010214e-06, -0.2997802, -0.009192708, -0.00027244323, -0.00021503064, -0.028669292, -0.013314971, -0.46540934, -0.18482918, -0.5524367, -0.39869812, -0.10256583, -0.117468014, -4.6010214e-06, -0.91536003, -0.00039043918, -3.201996e-05, -1.843017e-05, -9.055464e-07, -1.0084622e-05, -0.024750743, -0.00012369896, -0.0039310427, -5.5385808e-05, -7.648668e-05, -7.958892e-05, -0.000100094694, -0.0005555619, -3.965026e-05, -0.00074069394, -3.2906587e-06, 0, -0.13728371, -0.0015723101, -0.0066790036, -0.002159617, -0.033495028, -0.00460896, -5.7293146e-05, -0.00053290103, -8.721922e-05, -5.145473e-05, -0.00045704586, -6.778445e-05, -0.00017699462, -0.0025479035, -0.00039187065, -7.159913e-05, -7.481963e-05, -0.0002057305, -0.00024179816, -1.8907942e-05, -4.430127e-05, -0.00011666565, -1.9143545e-05, -7.553489e-05, -4.721163e-06, -2.272356e-05, -0.0002057305, -0.0008815948, -2.6419024e-05, -1.0080156, -0.0011798069, -2.0815281e-05, -4.4181128e-05, -4.9069615e-05, -2.3360508e-06, -0.00406306, -0.0045709964, -0.00024513318, -0.00024215765, -0.00013133019, -5.264588e-05, -0.0028648477, -0.00011201744, -0.00032085512, -0.000113805574, -0.15226898, -0.017713733], "top_logprobs": null, "text_offset": [4575, 4575, 4576, 4583, 4584, 4588, 4591, 4593, 4602, 4604, 4613, 4615, 4624, 4630, 4631, 4637, 4639, 4648, 4649, 4652, 4655, 4657, 4659, 4661, 4663, 4665, 4667, 4676, 4677, 4680, 4683, 4685, 4687, 4689, 4691, 4693, 4695, 4704, 4706, 4712, 4713, 4722, 4724, 4733, 4739, 4740, 4743, 4750, 4751, 4755, 4757, 4766, 4767, 4770, 4773, 4775, 4777, 4779, 4780, 4781, 4782, 4785, 4787, 4788, 4789, 4791, 4794, 4797, 4800, 4802, 4804, 4807, 4809, 4811, 4820, 4821, 4824, 4827, 4829, 4832, 4835, 4837, 4840, 4841, 4843, 4844, 4846, 4848, 4850, 4852, 4861, 4862, 4865, 4868, 4870, 4872, 4874, 4876, 4879, 4881, 4890, 4892, 4901, 4903, 4912, 4918, 4919, 4925, 4927, 4936, 4937, 4940, 4943, 4945, 4946, 4947, 4949, 4951, 4953, 4955, 4957, 4966, 4967, 4970, 4973, 4975, 4977, 4980, 4983, 4985, 4987, 4988, 4989, 4990, 4992, 4995, 4998, 5001, 5003, 5006, 5009, 5012, 5014, 5016, 5017, 5018, 5019, 5021, 5024, 5027, 5030, 5032, 5034, 5037, 5039, 5041, 5050, 5051, 5054, 5057, 5059, 5062, 5065, 5067, 5070, 5071, 5073, 5074, 5076, 5078, 5081]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2.25 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", ".", "25", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.006383285, -0.08409187, -0.062051594, -0.00011273176, -0.00050922454, -0.00031632424, -0.010208341, -0.80780035, -0.05683399, -0.24954419, -0.24547167, -1.2351458e-05, -0.08869314, -0.001444204, -5.848711e-05, -3.583558e-05, -1.7953334e-05, -2.8138238e-06, -0.13887136, -0.011901555, -6.909574e-05, -0.00013252322, -6.7307614e-05, -0.0006040489, -7.6726035e-05, -0.0018000858, -2.5464416e-05, -1.402038e-05, -0.7398138, -0.092975564, -0.00026898243, -0.00013884035, -0.00023595692, -0.007226031, -0.17307714, -0.14291254, -0.656051, -0.24468626, -3.4642555e-05, -0.22609569, -0.0024124442, -5.8725527e-05, -2.6180607e-05, -2.7371756e-05, -4.799487e-05, -0.13041058, -0.05162217, -0.00037135737, -0.0001831916, -0.0011961, -0.0005763155, -6.647409e-05, -0.001036658, -9.846204e-06, -2.693682e-06, -0.3759671, -0.2271204, -0.15265591, -0.0008814775, -0.00027792776, -0.0012678908, -0.015833596, -0.044658322, -0.048141968, -0.05429278, -0.00011106284, -0.00084490766], "top_logprobs": null, "text_offset": [4575, 4575, 4576, 4583, 4584, 4588, 4591, 4593, 4602, 4604, 4613, 4619, 4620, 4626, 4628, 4637, 4638, 4641, 4644, 4646, 4648, 4650, 4652, 4654, 4656, 4665, 4666, 4669, 4672, 4674, 4676, 4678, 4680, 4682, 4684, 4693, 4695, 4704, 4710, 4711, 4717, 4719, 4728, 4729, 4732, 4735, 4737, 4739, 4741, 4743, 4745, 4747, 4756, 4757, 4760, 4763, 4765, 4766, 4768, 4770, 4772, 4774, 4777, 4777, 4777, 4777, 4777]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform small_square (transform_matrix 0.5 0 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.006383285, -0.08409187, -0.06205185, -0.00011273176, -0.00050922454, -0.00031632424, -0.010208341, -0.5467502, -1.5214344e-05, -0.00024215765, -6.432833e-05, -0.005482037, -0.12085207, -0.022062218, -0.208026, -0.12545894, -9.490449e-06, -0.042044867, -0.0005945075, -3.881579e-05, -2.141132e-05, -8.176345e-06, -6.827632e-08, -0.0864632, -0.017740062, -8.1019425e-05, -8.674238e-05, -7.5774245e-05, -0.00032252402, -6.38515e-05, -0.001934507, -3.9172486e-05, -1.5006569e-06, -0.6981264, -0.039444827, -5.1215375e-05, -3.643162e-05, -5.991855e-05, -0.00078668504, -0.014839265, -0.036786634, -1.3867854, -0.08588979, -5.912312e-06, -0.06932563, -0.0005832353, -1.8788729e-05, -8.5358415e-06, -1.7953334e-05, -4.2433903e-06, -0.05719815, -0.039424863, -9.186649e-05, -6.408898e-05, -0.0005966542, -0.00017747053, -3.201996e-05, -0.00013001703, -7.584048e-06, -3.170517e-06, -0.3379766, -0.06374523, -0.022431547, -0.00036563535, -6.38515e-05, -0.00032359784, -0.0018494673, -0.0014717197, -0.088425405, -0.7111938, -1.855031e-05, -0.022584436, -0.0006487193, -2.1768952e-05, -2.5941252e-05, -4.361666e-06, -5.675771e-06, -0.019195357, -0.0001532674, -0.005219746, -0.00015923065, -7.827482e-05, -7.613187e-05, -0.004625009, -0.02207526, -0.07003281, -0.07408191, -0.00011022838, -0.0007204754, -0.0003881742, -0.010657235], "top_logprobs": null, "text_offset": [4575, 4575, 4576, 4583, 4584, 4588, 4591, 4593, 4600, 4601, 4605, 4608, 4610, 4619, 4621, 4630, 4636, 4637, 4643, 4645, 4654, 4655, 4658, 4661, 4663, 4665, 4667, 4669, 4671, 4673, 4682, 4683, 4686, 4689, 4691, 4693, 4695, 4697, 4699, 4701, 4710, 4712, 4721, 4727, 4728, 4734, 4736, 4745, 4746, 4749, 4752, 4754, 4756, 4758, 4760, 4762, 4764, 4773, 4774, 4777, 4780, 4782, 4783, 4785, 4787, 4789, 4791, 4794, 4796, 4805, 4811, 4812, 4818, 4820, 4829, 4830, 4833, 4836, 4838, 4839, 4840, 4842, 4844, 4846, 4849, 4849, 4849, 4849, 4849, 4849, 4849]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.006383285, -0.08409187, -0.06205185, -0.00011273176, -0.00050922454, -0.00031632424, -0.010208341, -0.9023677, -0.07823627, -0.22902745, -1.873099, -0.47429398, -0.63440657, -2.8445576e-05, -0.10906348, -0.002933234, -0.00012643983, -0.00020096028, -4.430127e-05, -6.2699432e-06, -0.1703326, -0.012019547, -0.00020262918, -0.00043032994, -0.0008162131, -0.005117056, -0.01255194, -0.0065018283, -0.00010605607, -0.0001736549, -0.6710965, -0.051426053, -0.00023464282, -0.00023810269, -0.00058072904, -0.0058731153, -0.011601699, -0.7664334, -0.7478842, -2.3435998e-05, -3.058758e-05, -0.002079994, -0.0011120185, -0.048144035, -4.4818075e-06, -0.003790551, -8.7733215e-06, -9.251094e-06, -4.1232483e-06, -9.806815e-05, -9.130952e-06, -2.2604345e-05, -5.912312e-06, -4.277735e-07, -0.0042570448, -0.00028198276, -0.004383356, -0.00036122272, -4.0843282e-05, -0.0029586388, -0.0011989638, -0.0002202777, -3.5477948e-05, -7.6252014e-05, -0.00011082348, -0.0013133684, -0.0013176665, -0.00076556916, -0.07702988, -0.00014217819, -1.4616429e-05, -0.0737908, -3.965026e-05, -1.2708151e-05, -1.6282536e-05, -1.6642034e-05, -0.00012763379, -0.0018600383, -0.00085802993, -0.00011535529, -0.00014933258, -0.000109155495, -4.2631407e-05, -0.0004155434, -0.00011475737, -0.00039568718, -8.483411e-05, -0.014703463, -0.00028412943, -2.6893982e-05, -0.00050039747, -6.5092986e-06, -3.2906587e-06, -2.160506, -0.29691252, -0.00076556916, -0.00053456903, -0.11108742, -0.011946431, -0.2989398, -0.14836006, -0.60305834, -5.3716885e-05, -0.00033307917, -0.0018424217, -0.001185894, -0.1287519, -4.1232483e-06, -0.009522411, -6.6619094e-07, -1.402038e-05, -1.3542607e-05, -9.7234624e-05, -1.402038e-05, -4.0843282e-05, -9.72699e-06, -2.5744682e-06, -0.0066953255, -0.00037970475, -0.003417332, -0.0002386978, -5.1334588e-05, -0.0020041426, -0.0013114592, -0.00023333247, -7.937927e-06, -6.754697e-05, -7.183848e-05, -0.00060738955, -0.0011992023, -0.00016400088, -0.09125533, -0.00018378951, -1.0323977e-05, -0.10738423, -5.1334588e-05, -1.8907942e-05, -9.606849e-06, -9.866513e-05, -1.9028084e-05, -0.0016534413, -0.00029104354, -0.00011523515, -4.751897e-05, -9.56821e-05, -6.516092e-05, -0.0004310471, -6.051553e-05, -0.000254913, -8.471396e-05, -0.0013401678, -0.00071212515, -4.871012e-05, -0.0016220398, -6.3900848e-06, -1.2622395e-06, -0.4403478, -0.018825032, -0.0021700708, -0.000301777, -0.030943511, -0.012850814, -0.04142702], "top_logprobs": null, "text_offset": [4575, 4575, 4576, 4583, 4584, 4588, 4591, 4593, 4602, 4604, 4613, 4615, 4624, 4630, 4631, 4637, 4639, 4648, 4649, 4652, 4655, 4657, 4659, 4661, 4663, 4665, 4667, 4676, 4677, 4680, 4683, 4685, 4687, 4689, 4691, 4693, 4695, 4704, 4706, 4712, 4713, 4722, 4724, 4733, 4739, 4740, 4743, 4750, 4751, 4755, 4757, 4766, 4767, 4770, 4773, 4775, 4777, 4779, 4780, 4781, 4782, 4785, 4787, 4788, 4789, 4791, 4794, 4797, 4800, 4802, 4804, 4807, 4809, 4811, 4820, 4821, 4824, 4827, 4829, 4832, 4835, 4837, 4840, 4841, 4843, 4844, 4846, 4848, 4850, 4852, 4861, 4862, 4865, 4868, 4870, 4872, 4874, 4876, 4879, 4881, 4890, 4892, 4898, 4899, 4908, 4910, 4919, 4925, 4926, 4929, 4936, 4937, 4941, 4943, 4952, 4953, 4956, 4959, 4961, 4963, 4965, 4966, 4967, 4968, 4971, 4973, 4974, 4975, 4977, 4980, 4983, 4986, 4988, 4990, 4993, 4995, 4997, 5006, 5007, 5010, 5013, 5015, 5018, 5021, 5023, 5026, 5027, 5029, 5030, 5032, 5034, 5036, 5038, 5047, 5048, 5051, 5054, 5056, 5058, 5060, 5062, 5065, 5065]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LfMasBUTonmpJ23vbJgbpgfhYj6", "object": "text_completion", "created": 1651003296, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.011306567, -0.097824335, -0.091670595, -0.00022939671, -0.0012285032, -0.00024704146, -0.0040153624, -0.7175856, -0.0487317, -0.38657334, -1.6521892e-05, -5.2288255e-05, -0.0017984132, -0.00028591757, -0.08482094, -1.1278585e-05, -0.016012972, -2.7728449e-05, -9.490449e-06, -0.00015839339, -0.00083184446, -3.5120327e-05, -4.7041198e-05, -7.4639065e-06, 0, -0.00479251, -0.00029330945, -0.010426048, -0.00038984313, -2.9519388e-05, -0.0014409816, -0.0010442939, -0.0003204956, -2.5464416e-05, -0.00014551697, -0.00042627778, -0.002907409, -0.0011517019, -0.00043414652, -0.59713864, -0.00062170305, -1.7834122e-05, -3.5868478, -0.0031792559, -7.005035e-05, -4.9427246e-05, -2.5744682e-06, -1.5006569e-06, -0.0050234767, -0.0039615617, -0.0025017718, -0.0041122544, -0.00029950924, -0.00010367096, -0.01975195, -0.00016924512, -0.0012969561, -0.00022266187, -0.00051757385, -0.0012634745, -0.0018181783, -0.012933291, -4.7875652e-05, -1.8841804e-07, -0.9759325, -0.116797484, -0.0012621622, -0.00050015905, -0.0038169366, -0.0044153845, -0.15665448, -0.102815636, -0.87058437, -0.06990663, -1.3900239e-05, -0.24313664, -0.0005565166, -7.6964454e-05, -3.2973632e-05, -9.846204e-06, -2.0966954e-06, -0.5736816, -0.028719101, -0.00018021514, -0.0001459938, -0.00077904906, -0.0002965309, -5.7293146e-05, -0.00032383628, -6.2699432e-06, -1.9765537e-06, -0.24433926, -0.1353928, -0.00046611042, -8.8290224e-05, -0.0026058108, -0.016476598, -0.04257111], "top_logprobs": null, "text_offset": [4311, 4311, 4312, 4319, 4320, 4324, 4327, 4329, 4338, 4340, 4346, 4347, 4356, 4358, 4367, 4373, 4374, 4377, 4384, 4385, 4389, 4391, 4400, 4401, 4404, 4407, 4409, 4411, 4413, 4414, 4415, 4416, 4419, 4421, 4422, 4423, 4425, 4428, 4431, 4434, 4436, 4438, 4441, 4443, 4445, 4454, 4455, 4458, 4461, 4463, 4466, 4469, 4471, 4474, 4475, 4477, 4478, 4480, 4482, 4484, 4486, 4495, 4496, 4499, 4502, 4504, 4506, 4508, 4510, 4512, 4514, 4523, 4525, 4534, 4540, 4541, 4547, 4549, 4558, 4559, 4562, 4565, 4567, 4569, 4571, 4573, 4575, 4577, 4586, 4587, 4590, 4593, 4595, 4597, 4599, 4601, 4604, 4604]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_square (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", "\n", "("], "token_logprobs": [-0.011306567, -0.097824335, -0.091670595, -0.00022939671, -0.0012285032, -0.00024704146, -0.0040153624, -0.69267184, -3.3212986e-05, -0.00026743364, -4.2392992e-05, -0.0022737756, -0.10734535, -0.02479828, -0.47627375, -2.6082804, -0.39266917, -0.4031609, -2.1051823e-05, -0.28775677, -0.003674064, -3.9172486e-05, -0.00085337984, -1.8310955e-05, 0, -0.23533076, -0.012104726, -0.00014718683, -0.00021204854, -0.0011950243, -0.004220828, -0.0057553053, -0.006697366, -5.6102934e-05, -1.2622395e-06, -2.8362637, -0.25198272, -0.13304605, -0.016933458, -0.00821765, -0.0076654735, -0.03148896, -0.40185857, -0.0010898814, -1.2468796e-05, -1.005745, -0.16358079, -0.0010235882, -0.0007597232, -0.00096010824, -0.0028957513, -0.047880605, -2.550977, -2.2365928e-05, -0.09405303, -0.0014100596, -3.5357807e-05, -0.00023905636, -1.843017e-05, -1.6207987e-06, -1.6575992, -0.07219161, -0.016013397, -0.0016335617, -0.010520913, -0.0029493703, -0.6006676, -6.539934e-05, -4.6921985e-05, -0.0011466885, -8.3284394e-05, -0.021643508, -0.024710119, -0.54850084, -0.007476532, -0.04591768, -3.7684315e-06, -0.109934114, -0.0002338093, -3.023464e-05, -7.100402e-05, -5.4364154e-06, -1.8841804e-07, -0.29312786, -0.00086769613, -0.021014642, -0.00032026, -0.00015422201, -9.65175e-05, -0.000120839824, -0.00047976777, -1.6045058e-05, -0.000754295, -1.0561456e-05, -7.584048e-06, -0.051175207, -0.002687507, -0.16879372, -0.02950807, -0.26788276, -0.012059963, -0.000118453776, -0.0016584566, -0.00010796247, -0.002186618, -0.0026782434, -0.00142003, -0.0021950414, -0.010825447, -0.00062718947, -0.00019714465, -0.0007281695, -0.00023917557, -0.00013669553, -1.2588937e-05, -2.462996e-05, -4.6921985e-05, -5.693833e-05, -0.000120719684, -7.4639065e-06, -3.8935006e-05, -0.00028007446, -0.00016519109, -5.79217e-06, -0.10193955, -5.586358e-05, -0.00096189824, -2.033751e-05, -1.1430258e-06, -0.28975165, -0.13659711, -0.034266807, -0.00078954885, -0.0016628759, -0.05291813, -0.0008930492, -0.009765789, -1.9263687e-05, -6.599631e-05, -0.93367976, -0.25072554, -0.04639494, -0.0012844233, -0.34210196, -4.056251, -0.35488766], "top_logprobs": null, "text_offset": [4311, 4311, 4312, 4319, 4320, 4324, 4327, 4329, 4336, 4337, 4341, 4344, 4346, 4355, 4357, 4366, 4368, 4377, 4383, 4384, 4390, 4392, 4401, 4402, 4405, 4408, 4410, 4412, 4414, 4416, 4418, 4420, 4429, 4430, 4433, 4436, 4438, 4440, 4442, 4444, 4446, 4448, 4457, 4458, 4461, 4464, 4466, 4468, 4470, 4472, 4474, 4476, 4485, 4491, 4492, 4498, 4500, 4509, 4510, 4513, 4516, 4518, 4520, 4522, 4524, 4527, 4529, 4535, 4536, 4545, 4547, 4556, 4558, 4567, 4569, 4578, 4584, 4585, 4591, 4593, 4602, 4603, 4606, 4609, 4611, 4612, 4613, 4615, 4617, 4619, 4621, 4623, 4632, 4633, 4636, 4639, 4641, 4643, 4646, 4649, 4651, 4653, 4654, 4655, 4656, 4658, 4661, 4664, 4667, 4669, 4672, 4675, 4678, 4680, 4682, 4683, 4684, 4685, 4687, 4690, 4693, 4696, 4698, 4700, 4703, 4705, 4714, 4715, 4718, 4721, 4723, 4725, 4727, 4729, 4731, 4733, 4742, 4743, 4746, 4749, 4751, 4753, 4755, 4757, 4759, 4759]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.011306567, -0.09923155, -0.09034058, -0.00015851353, -0.0011673952, -0.00016519109, -0.0067865974, -0.66542244, -0.04197985, -0.35862648, -2.3556138e-05, -7.827482e-05, -0.0013638621, -0.00029330945, -0.08754154, -1.0800813e-05, -0.022478055, -2.3435998e-05, -1.1514188e-05, -0.00014587646, -0.0008744357, -3.0947078e-05, -4.29881e-05, -7.1062755e-06, -6.827632e-08, -0.0046384814, -0.00038650344, -0.009209852, -0.0004436879, -2.9756868e-05, -0.0013576549, -0.0008814775, -0.00038185148, -3.1185496e-05, -0.00016232915, -0.00034488458, -0.0014458749, -0.0020587316, -0.00045215452, -1.0376468, -0.00062504277, -2.8921473e-05, -0.100672185, -0.00020942597, -3.8457234e-05, -2.0935424e-05, -2.5744682e-06, -3.1185496e-05, -0.0018029516, -0.0009760399, -0.0005133987, -0.00053683587, -0.00013836258, -4.036551e-05, -0.0010269899, -7.4460135e-05, -0.0010041384, -9.854499e-05, -6.015603e-05, -0.0006780653, -0.00015350676, -0.0027882175, -2.9636725e-05, -6.6619094e-07, -1.4575831, -0.10475557, -0.00070842594, -0.00045072404, -0.00080738415, -0.0032417458, -0.10296276, -0.13493751, -1.045056, -2.8921473e-05, -0.00021526907, -0.0028957513, -0.0016592939, -0.18379493, -1.8073477e-05, -0.038134877, -1.5687427e-05, -1.2112103e-05, -2.8921473e-05, -0.0003266982, -2.558363e-05, -1.8310955e-05, -4.361666e-06, -6.6619094e-07, -0.0077532292, -0.0006939923, -0.0049497974, -0.00037684283, -6.110595e-05, -0.0021001252, -0.0023589702, -0.0002997486, -1.1753544e-05, -0.00016733873, -0.00034321658, -0.007361841, -0.0009246085, -0.0003290824, -0.8158013, -0.0010743082, -7.4639065e-06, -0.017065505, -3.941184e-05, -1.676031e-05, -2.7013197e-05, -2.1171965e-05, -4.838501e-06, -0.0006826581, -0.00019070739, -0.00018760514, -0.00010796247, -8.924483e-05, -7.255186e-05, -0.0010515723, -9.401318e-05, -0.00034285896, -5.7532503e-05, -0.021590093, -0.0013185028, -0.000106295425, -0.0025701327, -2.3795494e-05, -1.022884e-06, -0.8470818, -0.041926764, -0.00034285896, -0.0002797159, -0.013983378, -0.030468103, -0.06022731, -0.029273529, -3.8217877e-05, -0.0016711752, -9.115311e-05], "top_logprobs": null, "text_offset": [4311, 4311, 4312, 4319, 4320, 4324, 4327, 4329, 4338, 4340, 4346, 4347, 4356, 4358, 4367, 4373, 4374, 4377, 4384, 4385, 4389, 4391, 4400, 4401, 4404, 4407, 4409, 4411, 4413, 4414, 4415, 4416, 4419, 4421, 4422, 4423, 4425, 4428, 4431, 4434, 4436, 4438, 4441, 4443, 4445, 4454, 4455, 4458, 4461, 4463, 4466, 4469, 4471, 4474, 4475, 4477, 4478, 4480, 4482, 4484, 4486, 4495, 4496, 4499, 4502, 4504, 4506, 4508, 4510, 4512, 4514, 4523, 4525, 4531, 4532, 4541, 4543, 4552, 4558, 4559, 4562, 4569, 4570, 4574, 4576, 4585, 4586, 4589, 4592, 4594, 4596, 4598, 4599, 4600, 4601, 4604, 4606, 4607, 4608, 4610, 4613, 4616, 4619, 4621, 4623, 4626, 4628, 4630, 4639, 4640, 4643, 4646, 4648, 4651, 4654, 4656, 4659, 4660, 4662, 4663, 4665, 4667, 4669, 4671, 4680, 4681, 4684, 4687, 4689, 4691, 4693, 4695, 4698, 4698, 4698, 4698, 4698, 4698]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.011306567, -0.09807724, -0.08711101, -0.00014241754, -0.0009037291, -0.000246207, -0.0057755695, -0.62543255, -0.047882475, -0.35259455, -1.6999666e-05, -6.623567e-05, -0.0016479504, -0.00028985427, -0.08376698, -8.892534e-06, -0.019574327, -2.6538237e-05, -8.892534e-06, -0.00016578808, -0.0008024919, -3.643162e-05, -3.3212986e-05, -5.912312e-06, 0, -0.005159771, -0.0003278922, -0.007393006, -0.0003884117, -3.333313e-05, -0.0016635929, -0.0010198909, -0.00038423753, -3.201996e-05, -0.00017675622, -0.00045466074, -0.0018175814, -0.0019054831, -0.0003624167, -0.57357216, -0.0006982875, -1.42597355e-05, -3.1082437, -0.000754295, -2.9159892e-05, -3.249586e-05, -6.6619094e-07, -2.8138238e-06, -0.0031366865, -0.0030343859, -0.0018423016, -0.0018713255, -0.0002981989, -7.219704e-05, -0.027557181, -0.00016995943, -0.0009318886, -0.00020835307, -0.0004292552, -0.0012671774, -0.0048021534, -0.011735873, -2.9159892e-05, -3.076318e-07, -0.8428639, -0.11020859, -0.0006359574, -0.0003937789, -0.00091053057, -0.0023345936, -0.08951315, -0.08076261, -0.6641361, -1.4854846e-05, -0.000108559456, -0.0023104588, -0.000161138, -0.04996571, -2.9311614e-06, -0.009440818, -1.4139594e-05, -8.0580685e-06, -1.9143545e-05, -7.076466e-05, -1.6282536e-05, -1.0444119e-05, -3.170517e-06, -3.076318e-07, -0.0028066272, -0.00018176393, -0.0012653846, -0.0001792624, -2.8682118e-05, -0.00045776297, -0.0006438308, -0.00010188283, -1.2588937e-05, -5.657977e-05, -0.00013574092, -0.0015820393, -0.0005154262, -0.00021598431, -0.2020552, -0.00010665305, -1.37819625e-05, -0.5045128, -6.862172e-05, -1.676031e-05, -2.7490969e-05, -3.7684315e-06, -2.5744682e-06, -0.00041279974, -0.00020417797, -0.00013693394, -4.3465872e-05, -8.0899285e-05, -3.9055147e-05, -0.0005447074, -9.520714e-05, -0.00033653717, -6.754697e-05, -0.0036244115, -0.0003204956, -5.061746e-05, -0.0006660177, -3.170517e-06, -1.5006569e-06, -0.75433165, -0.044992134, -0.00012131666, -8.447461e-05, -0.0037099007, -0.024512308, -0.055410158, -0.02530787, -2.4032974e-05, -0.0010649977, -5.6223078e-05], "top_logprobs": null, "text_offset": [4311, 4311, 4312, 4319, 4320, 4324, 4327, 4329, 4338, 4340, 4346, 4347, 4356, 4358, 4367, 4373, 4374, 4377, 4384, 4385, 4389, 4391, 4400, 4401, 4404, 4407, 4409, 4411, 4413, 4414, 4415, 4416, 4419, 4421, 4422, 4423, 4425, 4428, 4431, 4434, 4436, 4438, 4441, 4443, 4445, 4454, 4455, 4458, 4461, 4463, 4466, 4469, 4471, 4474, 4475, 4477, 4478, 4480, 4482, 4484, 4486, 4495, 4496, 4499, 4502, 4504, 4506, 4508, 4510, 4512, 4514, 4523, 4525, 4531, 4532, 4541, 4543, 4552, 4558, 4559, 4562, 4569, 4570, 4574, 4576, 4585, 4586, 4589, 4592, 4594, 4596, 4598, 4599, 4600, 4601, 4604, 4606, 4607, 4608, 4610, 4613, 4616, 4619, 4621, 4623, 4626, 4628, 4630, 4639, 4640, 4643, 4646, 4648, 4651, 4654, 4656, 4659, 4660, 4662, 4663, 4665, 4667, 4669, 4671, 4680, 4681, 4684, 4687, 4689, 4691, 4693, 4695, 4698, 4698, 4698, 4698, 4698, 4698]}, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix", "index": 4, "logprobs": {"tokens": ["\n", "(", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix"], "token_logprobs": [-0.011306567, -0.10455167, -3.2953134, -0.4765501, -0.96585, -0.69753516, -0.45393214, -0.58567405, -0.36735934, -0.44458798, -0.29473916, -0.26629823, -0.24706121, -0.20077053, -0.19178075, -0.2045543, -0.16664366, -0.1455695, -0.16526346, -0.12882578, -0.1409088, -0.13450089, -0.13825758, -0.11553083, -0.118847996, -0.09658479, -0.104179785, -0.096392974, -0.11221058, -0.08874941, -0.097420715, -0.07457575, -0.08663336, -0.065150924, -0.0789841, -0.06646964, -0.07069181, -0.055345397, -0.06269572, -0.05058322, -0.07164612, -0.04822516, -0.06299467, -0.04838918, -0.0667652, -0.041999616, -0.055808775, -0.041512076, -0.061171636, -0.044187363, -0.05584943, -0.04346086, -3.5410726, -0.011680632, -0.025544845, -0.00022707166, -0.18294847, -0.9389655, -0.0004009333, -0.0004885883, -4.883026e-05, -0.03644553, -0.66837597, -0.11625957, -1.2441989, -0.0005505505, -0.00055699435, -0.008310084, -0.07540015, -0.2838981, -7.24364e-05, -0.038232163, -5.562516e-05, -5.944078e-05, -0.00011535529, -0.0036623995, -9.699527e-05, -0.0008961523, -1.5094201e-05, -3.076318e-07, -0.01351106, -0.0012473016, -0.0148899015, -0.0014926723, -0.00010748563, -0.0038682143, -0.0052231015, -0.0004684955, -3.225932e-05, -0.0005107761, -0.0007628254, -0.0023276634, -0.002782239, -0.005977622, -0.82398486, -0.0032366037, -0.0002164621, -0.115729496, -0.0007006726, -6.158372e-05, -0.00010283744, -6.6294406e-06, -6.6619094e-07, -0.0029212185, -0.00086029776, -0.0013639814, -0.0014189545, -0.00025574747, -6.289782e-05, -0.00031298358, -0.00027911988, -0.0011574305, -0.00015446138, -0.05921462, -0.2949243, -0.23498277, -0.08364728, -0.0033131477, -8.7733215e-06, -0.56586725, -0.034374636, -0.0013288279, -0.003453337, -0.107719064, -0.013808227, -0.10732352, -0.111534715, -0.48669907, -0.08001333, -1.7119806e-05, -0.052899964, -0.0012579252, -0.00019392508, -0.0006874292, -1.1991961e-05, -2.9159892e-05, -0.089833334, -0.00991164, -9.305951e-05, -0.00035776378, -0.026213706, -0.007615682, -0.00019881358, -0.0026866707, -1.6045058e-05, -1.0444119e-05, -0.18847826, -0.09381287, -0.0017184608, -0.0001101101, -0.4964062, -0.014724936, -1.2503653, -0.17721817, -0.71646327, -2.9280032e-05, -2.9280032e-05, -0.0013728751, -0.00016185326, -0.02486806, -1.3900239e-05, -0.0061401916, -4.2433903e-06, -1.2468796e-05, -1.2231317e-05, -0.00014158308, -1.1991961e-05, -3.023464e-05, -5.5556293e-06, 0, -0.0014403837, -6.6829845e-05, -0.0008817149, -0.00014039098, -3.3450466e-05, -0.00022540275, -0.00021777152, -8.626461e-05, -1.9028084e-05, -4.847264e-05, -9.782879e-05, -0.0005401756, -9.38949e-05, -0.0002113333, -2.0569835, -0.007204838, -0.00014515934, -0.07191752, -0.0001643557, -8.078007e-05, -3.7028603e-05, -1.0084622e-05, -5.675771e-06, -0.001521088, -0.00084359536, -0.0005850234, -0.00031286344, -0.00025074068, -9.794894e-05, -0.00054804806, -8.256821e-05, -0.00067675306, -7.6605895e-05, -0.02971866, -0.0017047293, -0.00021741669, -0.005111364, -3.7028603e-05, -2.5225998e-05, -0.40369126, -0.20898114, -0.0008767044, -0.00023249895, -0.0824928, -0.03280188, -0.044598803, -0.030177249, -2.4553313, -9.222505e-05, -0.00018140629, -0.0038690525, -0.007064364, -0.14174965, -2.8087945e-05, -0.03098292, -4.4419543e-05, -4.6206733e-05, -3.881579e-05, -0.00012322118, -3.3212986e-05, -4.9782993e-05, -1.5006569e-06, -6.827632e-08, -0.0037852253, -0.0005504303, -0.0025514883, -0.00023285468, -7.839496e-05, -0.00075417483, -0.00092735497, -9.365555e-05, -1.5448071e-05, -6.2299914e-05, -9.2821094e-05, -0.0010299757, -0.0005697553, -0.00022051518, -0.90535754, -0.0049161324, -5.7177684e-05, -0.03131176, -0.00016960275, -3.9055147e-05, -1.1873685e-05, -2.4866502e-05, -6.6619094e-07], "top_logprobs": null, "text_offset": [4311, 4311, 4312, 4321, 4323, 4332, 4334, 4343, 4345, 4354, 4356, 4365, 4367, 4376, 4378, 4387, 4389, 4398, 4400, 4409, 4411, 4420, 4422, 4431, 4433, 4442, 4444, 4453, 4455, 4464, 4466, 4475, 4477, 4486, 4488, 4497, 4499, 4508, 4510, 4519, 4521, 4530, 4532, 4541, 4543, 4552, 4554, 4563, 4565, 4574, 4576, 4585, 4587, 4594, 4595, 4599, 4602, 4604, 4611, 4612, 4616, 4619, 4621, 4630, 4632, 4638, 4639, 4648, 4650, 4659, 4665, 4666, 4669, 4676, 4677, 4681, 4683, 4692, 4693, 4696, 4699, 4701, 4703, 4705, 4706, 4707, 4708, 4711, 4713, 4714, 4715, 4717, 4720, 4723, 4726, 4728, 4730, 4733, 4735, 4737, 4746, 4747, 4750, 4753, 4755, 4758, 4761, 4763, 4766, 4767, 4769, 4770, 4772, 4774, 4776, 4778, 4787, 4788, 4791, 4794, 4796, 4798, 4800, 4802, 4804, 4806, 4815, 4817, 4826, 4832, 4833, 4839, 4841, 4850, 4851, 4854, 4857, 4859, 4861, 4863, 4865, 4867, 4869, 4878, 4879, 4882, 4885, 4887, 4889, 4891, 4893, 4896, 4898, 4907, 4909, 4915, 4916, 4925, 4927, 4936, 4942, 4943, 4946, 4953, 4954, 4958, 4960, 4969, 4970, 4973, 4976, 4978, 4980, 4982, 4983, 4984, 4985, 4988, 4990, 4991, 4992, 4994, 4997, 5000, 5003, 5005, 5007, 5010, 5012, 5014, 5023, 5024, 5027, 5030, 5032, 5035, 5038, 5040, 5043, 5044, 5046, 5047, 5049, 5051, 5053, 5055, 5064, 5065, 5068, 5071, 5073, 5075, 5077, 5079, 5081, 5083, 5092, 5094, 5100, 5101, 5110, 5112, 5121, 5127, 5128, 5131, 5138, 5139, 5143, 5145, 5154, 5155, 5158, 5161, 5163, 5165, 5167, 5168, 5169, 5170, 5173, 5175, 5176, 5177, 5179, 5182, 5185, 5188, 5190, 5192, 5195, 5197, 5199, 5208, 5209, 5212]}, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.011306567, -0.097307704, -0.08442531, -0.00021634194, -0.0012116159, -0.00020024595, -0.0049334434, -0.6978537, -0.04775706, -1.3332007, -0.43189296, -1.3185924e-05, -1.750645, -0.0027350795, -0.0001118973, -0.00038876932, -4.2153635e-05, 0, -1.6271635, -0.04509071, -0.00094984594, -0.00037326562, -0.0009503228, -0.0022677418, -0.0072109015, -0.015010844, -3.881579e-05, -8.0580685e-06, -0.9417771, -0.15341045, -0.001603233, -0.00043832068, -0.0046966276, -0.0073811766, -0.30106628, -0.14228076, -0.53219336, -3.2855354e-05, -7.279122e-05, -0.002191637, -0.0013461339, -0.15190494, -1.4974988e-05, -0.026168425, -6.746778e-06, -1.7236207e-05, -4.46589e-05, -0.00029080606, -2.0815281e-05, -2.4750101e-05, -2.9311614e-06, 0, -0.0059607737, -0.0002264775, -0.007066225, -0.00041745167, -2.272356e-05, -0.0015558321, -0.00096070615, -0.00030773747, -3.8935006e-05, -0.00010593593, -0.0006630347, -0.0025713276, -0.0008222993, -0.00051017915, -0.44445235, -0.00023082721, -2.2604345e-05, -0.0579201, -4.370523e-05, -1.42597355e-05, -1.8788729e-05, -7.224551e-06, -8.4157e-06, -0.0009075475, -0.0008991363, -0.0002386978, -0.00019619097, -9.425254e-05, -3.6074933e-05, -0.00047600848, -7.982734e-05, -0.0003297995, -6.516092e-05, -0.002517248, -0.00047541337, -6.420819e-05, -0.00028341232, -3.7684315e-06, -9.055464e-07, -0.72068524, -0.032220937, -0.00022826564, -6.718934e-05, -0.0033268435, -0.015611544, -0.0397325], "top_logprobs": null, "text_offset": [4311, 4311, 4312, 4319, 4320, 4324, 4327, 4329, 4338, 4340, 4349, 4355, 4356, 4362, 4364, 4373, 4374, 4377, 4380, 4382, 4384, 4386, 4388, 4390, 4392, 4401, 4402, 4405, 4408, 4410, 4412, 4414, 4416, 4418, 4420, 4429, 4431, 4437, 4438, 4447, 4449, 4458, 4464, 4465, 4468, 4475, 4476, 4480, 4482, 4491, 4492, 4495, 4498, 4500, 4502, 4504, 4505, 4506, 4507, 4510, 4512, 4513, 4514, 4516, 4519, 4522, 4525, 4527, 4529, 4532, 4534, 4536, 4545, 4546, 4549, 4552, 4554, 4557, 4560, 4562, 4565, 4566, 4568, 4569, 4571, 4573, 4575, 4577, 4586, 4587, 4590, 4593, 4595, 4597, 4599, 4601, 4604, 4604]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.011306567, -0.0964195, -0.08476904, -0.0002038222, -0.0011573102, -0.00013478725, -0.0042560874, -0.69998395, -2.8565719e-05, -0.00027256247, -4.5613506e-05, -0.0019490204, -0.12630272, -0.02771521, -1.1627076, -9.606849e-06, -0.00010510146, -0.0007698653, -0.00013860193, -0.07118219, -6.1516675e-06, -0.011394404, -6.8669196e-06, -1.1278585e-05, -0.00013311833, -0.00039497006, -2.4032974e-05, -2.7967804e-05, -4.361666e-06, 0, -0.0028804473, -0.00013884035, -0.0042326218, -0.00034726874, -1.6642034e-05, -0.0012183582, -0.00047100076, -0.00016888563, -2.6298881e-05, -6.182308e-05, -0.0001758016, -0.00097639667, -0.0006452613, -0.00037243115, -0.6995058, -0.0006882656, -1.4974988e-05, -0.06730308, -4.7041198e-05, -1.4616429e-05, -1.0681599e-05, -3.2906587e-06, -1.4139594e-05, -0.0006981674, -0.00023667031, -0.00014873935, -0.0002229003, -0.00012012551, -3.5477948e-05, -0.00015481713, -0.00010283744, -0.00047207458, -7.779892e-05, -4.3465872e-05, -0.000456569, -8.256821e-05, -0.0074175033, -2.1649737e-05, -5.460492e-07, -0.6164476, -0.05953208, -0.00024013019, -0.00018224075, -0.00016662253, -0.0016237105, -0.06170728, -0.0988919, -0.6819832, -0.034111995, -6.2699432e-06, -0.11136428, -0.00012179443, -3.690939e-05, -2.319758e-05, -6.1516675e-06, -3.170517e-06, -0.30882475, -0.039503794, -9.377476e-05, -0.00010045139, -0.0011145219, -0.00025849018, -4.573365e-05, -0.0011394074, -6.5092986e-06, -1.022884e-06, -0.49702227, -0.12157714, -0.00034083053, -6.766711e-05, -0.0019678301, -0.048140157, -0.80065763, -7.350647e-05, -6.146545e-05, -0.0010877347, -0.00010271822, -0.017554305, -0.07378342, -0.015858905, -4.4818075e-06, -1.3352191, -7.791906e-05, -1.5925843e-05, -6.5092986e-06, -6.1516675e-06, -1.5006569e-06, -0.11670625, -0.0003137007, -0.009568265, -9.24644e-05, -0.00011475737, -9.139247e-05, -5.7891062e-05, -4.144026e-05, -2.6298881e-05, -6.408898e-05, -2.4543265e-06, -3.4089344e-06, -0.016403401, -0.00070496794, -0.0052223834, -0.0075011547, -0.76021326, -0.008336946, -4.072407e-05, -0.000391513, -0.00011022838, -0.000100094694, -0.0016266955, -5.4552278e-05, -0.0009936969, -0.0058282674, -0.00011106284, -5.6102934e-05, -7.732115e-05, -0.0002797159, -0.00017627938, -5.5556293e-06, -4.763911e-05, -5.7177684e-05, -5.490991e-05, -7.302963e-05, -1.5006569e-06, -3.559716e-05, -0.000297601, -6.2420055e-05, -1.1430258e-06, -1.9311887, -7.922942e-05, -2.0098154e-05, -2.0935424e-05, -1.5006569e-06, -4.6010214e-06, -0.0007863274, -0.00024072528, -0.00019392508, -0.000118333635, -0.00013371343, -5.4432137e-05, -0.0010116551, -0.00012381817, -0.00025145593, -7.4460135e-05, -0.0050548096, -0.020670539, -0.09164792, -0.04619679], "top_logprobs": null, "text_offset": [4311, 4311, 4312, 4319, 4320, 4324, 4327, 4329, 4336, 4337, 4341, 4344, 4346, 4355, 4357, 4363, 4364, 4373, 4375, 4384, 4390, 4391, 4394, 4401, 4402, 4406, 4408, 4417, 4418, 4421, 4424, 4426, 4428, 4430, 4431, 4432, 4433, 4436, 4438, 4439, 4440, 4442, 4445, 4448, 4451, 4453, 4455, 4458, 4460, 4462, 4471, 4472, 4475, 4478, 4480, 4483, 4486, 4488, 4491, 4492, 4494, 4495, 4497, 4499, 4501, 4503, 4512, 4513, 4516, 4519, 4521, 4523, 4525, 4527, 4529, 4531, 4540, 4542, 4551, 4557, 4558, 4564, 4566, 4575, 4576, 4579, 4582, 4584, 4586, 4588, 4590, 4592, 4594, 4603, 4604, 4607, 4610, 4612, 4614, 4616, 4618, 4621, 4623, 4629, 4630, 4639, 4641, 4650, 4652, 4661, 4667, 4668, 4674, 4676, 4685, 4686, 4689, 4692, 4694, 4695, 4696, 4698, 4700, 4702, 4704, 4706, 4715, 4716, 4719, 4722, 4724, 4726, 4729, 4732, 4734, 4736, 4737, 4738, 4739, 4741, 4744, 4747, 4750, 4752, 4755, 4758, 4761, 4763, 4765, 4766, 4767, 4768, 4770, 4773, 4776, 4779, 4781, 4783, 4786, 4788, 4790, 4799, 4800, 4803, 4806, 4808, 4811, 4814, 4816, 4819, 4820, 4822, 4823, 4825, 4827, 4830, 4830, 4830]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.011306567, -0.10186715, -0.09352027, -0.00013407106, -0.0009783021, -0.00016829051, -0.0062220567, -0.6580899, -0.034122355, -0.36374223, -1.2946569e-05, -7.183848e-05, -0.0012230111, -0.00043486364, -0.11289859, -7.4639065e-06, -0.016629487, -2.6298881e-05, -9.846204e-06, -0.00013133019, -0.0007974823, -2.665838e-05, -3.7505437e-05, -7.1062755e-06, -6.827632e-08, -0.005777908, -0.00026779127, -0.0098956255, -0.00041196714, -2.3078366e-05, -0.0016118892, -0.0013545516, -0.00030535142, -3.249586e-05, -0.0001552949, -0.00038686107, -0.0018128045, -0.0011306357, -0.00042305636, -0.5733627, -0.00061347015, -1.2828294e-05, -0.07843042, -6.396884e-05, -2.3078366e-05, -1.1398727e-05, -4.4818075e-06, -3.7266083e-05, -0.0017234168, -0.00015779921, -0.0001476646, -0.00021848676, -0.0001118973, -4.036551e-05, -0.00014718683, -9.449002e-05, -0.0004352194, -8.566857e-05, -3.5120327e-05, -0.0008953178, -7.982734e-05, -0.0021918763, -2.8087945e-05, -9.055464e-07, -0.8013351, -0.11433249, -0.0008441924, -0.0002419183, -0.0024354486, -0.0029774117, -0.117882505, -0.10430984, -1.178452, -0.0438304, -7.224551e-06, -0.15858147, -0.00034667455, -6.146545e-05, -3.1781543e-05, -7.1062755e-06, -1.9765537e-06, -0.6197912, -0.05966449, -0.00017866449, -8.8410365e-05, -0.0010624916, -0.0003151312, -7.529741e-05, -0.00053874415, -1.1991961e-05, -5.460492e-07, -0.4102004, -0.26506057, -0.0013272163, -7.100402e-05, -0.0015396535, -0.018592315, -0.05614399], "top_logprobs": null, "text_offset": [4311, 4311, 4312, 4319, 4320, 4324, 4327, 4329, 4338, 4340, 4346, 4347, 4356, 4358, 4367, 4373, 4374, 4377, 4384, 4385, 4389, 4391, 4400, 4401, 4404, 4407, 4409, 4411, 4413, 4414, 4415, 4416, 4419, 4421, 4422, 4423, 4425, 4428, 4431, 4434, 4436, 4438, 4441, 4443, 4445, 4454, 4455, 4458, 4461, 4463, 4466, 4469, 4471, 4474, 4475, 4477, 4478, 4480, 4482, 4484, 4486, 4495, 4496, 4499, 4502, 4504, 4506, 4508, 4510, 4512, 4514, 4523, 4525, 4534, 4540, 4541, 4547, 4549, 4558, 4559, 4562, 4565, 4567, 4569, 4571, 4573, 4575, 4577, 4586, 4587, 4590, 4593, 4595, 4597, 4599, 4601, 4604, 4604]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.011306689, -0.09720273, -0.07687668, -0.00015589187, -0.0012670573, -0.0002301129, -0.005004608, -0.74696153, -3.058758e-05, -0.0002640958, -5.20489e-05, -0.0020480405, -0.11760476, -0.027651235, -0.47568133, -0.104475975, -9.606849e-06, -0.08608355, -0.0004346243, -3.941184e-05, -3.1781543e-05, -4.361666e-06, -6.827632e-08, -0.07207425, -0.01973523, -6.862172e-05, -7.434374e-05, -9.0318645e-05, -0.00052592315, -8.197403e-05, -0.00082253676, -1.8788729e-05, -1.7400124e-06, -0.6085089, -0.17628431, -6.0633804e-05, -4.1080762e-05, -9.365555e-05, -0.0015688464, -0.03795563, -0.08137696, -0.50501096, -5.5556293e-06, -1.843017e-05, -0.0019033336, -0.00014253768, -0.03904914, -8.0580685e-06, -0.0070515764, -0.00011905076, -1.1991961e-05, -1.4139594e-05, -6.7069195e-05, -1.3185924e-05, -2.3912831e-05, -6.1516675e-06, -1.8841804e-07, -0.0025253159, -6.539934e-05, -0.0017181013, -0.00029509945, -4.5967376e-05, -0.0006982875, -0.0003812573, -0.00016137547, -2.7728449e-05, -5.0500123e-05, -0.00022266187, -0.0016767867, -0.00028102813, -0.00060047174, -0.30808207, -0.00019750134, -1.771398e-05, -0.0145454835, -2.784859e-05, -1.8310955e-05, -7.818713e-06, -2.4750101e-05, -4.3108244e-05, -0.0006382224, -0.0005890202, -6.2420055e-05, -6.158372e-05, -8.1136764e-05, -2.5464416e-05, -0.00031179338, -4.2870764e-05, -0.0003744577, -5.6223078e-05, -0.0016353527, -0.00020107947, -5.3242864e-05, -0.00040427395, -7.4639065e-06, -4.1232483e-06, -0.1801162, -0.08083304, -0.00022254174, -8.078007e-05, -0.0038542124, -0.00232802, -0.33562937, -0.00014313185, -0.0019669929, -0.0038644446, -0.00648773, -0.017162822, -0.074534975, -0.013989242, -1.3661821e-05, -0.2027319, -0.00011070334, -1.8073477e-05, -1.9382902e-05, -8.4157e-06, -5.460492e-07, -0.055261802, -0.0006898153, -0.0137539, -0.00014683108, -9.818829e-05, -0.00013073228, -7.040798e-05, -0.00012155601, -2.665838e-05, -0.00014360964, -3.6482897e-06, 0, -0.024771884, -0.0022038799, -0.011013759, -0.0048023327, -0.13488805, -0.0045427326, -6.873624e-05, -0.00041458878, -7.1958624e-05, -0.00018987012, -0.0027473946, -0.00014360964, -0.0005191226, -0.0065711234, -0.00018760514, -5.956092e-05, -7.946878e-05, -0.00013872207, -0.00011404399, -1.2231317e-05, -4.7279616e-05, -5.1334588e-05, -6.718934e-05, -5.7413286e-05, -3.4089344e-06, -3.142485e-05, -0.0005666531, -0.00028639348, -3.2906587e-06, -0.90709186, -0.000254913, -1.6045058e-05, -5.061746e-05, -3.7684315e-06, -2.8138238e-06, -0.000713794, -0.000363131, -0.0001736549, -5.586358e-05, -0.000118931544, -2.7013197e-05, -0.0025477842, -0.00014683108, -0.00039842993, -5.7177684e-05, -0.012008142, -0.051006276, -0.12424993, -0.07399134], "top_logprobs": null, "text_offset": [4311, 4311, 4312, 4319, 4320, 4324, 4327, 4329, 4336, 4337, 4341, 4344, 4346, 4355, 4357, 4366, 4372, 4373, 4379, 4381, 4390, 4391, 4394, 4397, 4399, 4401, 4403, 4405, 4407, 4409, 4418, 4419, 4422, 4425, 4427, 4429, 4431, 4433, 4435, 4437, 4446, 4448, 4454, 4455, 4464, 4466, 4475, 4481, 4482, 4485, 4492, 4493, 4497, 4499, 4508, 4509, 4512, 4515, 4517, 4519, 4521, 4522, 4523, 4524, 4527, 4529, 4530, 4531, 4533, 4536, 4539, 4542, 4544, 4546, 4549, 4551, 4553, 4562, 4563, 4566, 4569, 4571, 4574, 4577, 4579, 4582, 4583, 4585, 4586, 4588, 4590, 4592, 4594, 4603, 4604, 4607, 4610, 4612, 4614, 4616, 4618, 4621, 4623, 4629, 4630, 4639, 4641, 4650, 4652, 4661, 4667, 4668, 4674, 4676, 4685, 4686, 4689, 4692, 4694, 4695, 4696, 4698, 4700, 4702, 4704, 4706, 4715, 4716, 4719, 4722, 4724, 4726, 4729, 4732, 4734, 4736, 4737, 4738, 4739, 4741, 4744, 4747, 4750, 4752, 4755, 4758, 4761, 4763, 4765, 4766, 4767, 4768, 4770, 4773, 4776, 4779, 4781, 4783, 4786, 4788, 4790, 4799, 4800, 4803, 4806, 4808, 4811, 4814, 4816, 4819, 4820, 4822, 4823, 4825, 4827, 4830, 4830, 4830]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.011306689, -0.09555562, -0.08005064, -0.00012608219, -0.0010402352, -0.0001687683, -0.005342584, -0.7912637, -3.1065356e-05, -0.00036837524, -5.3837026e-05, -0.0021861412, -0.10412071, -0.028730877, -1.1772335, -7.584048e-06, -9.866513e-05, -0.0008955563, -0.00015732239, -0.067279674, -6.5092986e-06, -0.010836294, -6.6294406e-06, -8.653179e-06, -0.00014039098, -0.00047809698, -3.678925e-05, -3.5717305e-05, -3.6482897e-06, 0, -0.0027099783, -0.00016709937, -0.0036922512, -0.00034011435, -1.5094201e-05, -0.0014399061, -0.00051900244, -0.00023142513, -2.4032974e-05, -7.827482e-05, -0.0001173809, -0.0009312907, -0.00066840375, -0.00034035373, -0.68284404, -0.0006053611, -1.5687427e-05, -0.08161603, -4.859278e-05, -1.4736571e-05, -8.892534e-06, -2.3360508e-06, -6.8669196e-06, -0.00055997365, -0.00016197246, -0.00017246376, -0.0002640958, -0.00012608219, -3.130471e-05, -0.00017258391, -9.592052e-05, -0.0003848345, -0.00010212031, -4.5967376e-05, -0.00070305873, -6.826223e-05, -0.0058280285, -1.8073477e-05, -3.076318e-07, -0.5963878, -0.051704645, -0.00020072184, -0.00018378951, -0.00019118235, -0.0014549479, -0.06673709, -0.11618498, -0.6317752, -0.028363386, -5.79217e-06, -0.116717495, -0.00020561034, -4.5255874e-05, -1.9980816e-05, -6.9861335e-06, -3.170517e-06, -0.3248524, -0.03887729, -9.234426e-05, -8.972073e-05, -0.0014938671, -0.00025252788, -5.0260765e-05, -0.0009641651, -4.0040345e-06, -6.6619094e-07, -0.4873364, -0.12213167, -0.00074785395, -7.016862e-05, -0.002329336, -0.06284353, -0.7373511, -8.1019425e-05, -3.8338017e-05, -0.000975442, -7.982734e-05, -0.01243105, -0.08403508, -0.012702, -3.6482897e-06, -1.4000095, -6.13453e-05, -2.0815281e-05, -6.031526e-06, -7.4639065e-06, -9.055464e-07, -0.16046849, -0.00026194818, -0.010664345, -9.234426e-05, -0.00010367096, -7.5774245e-05, -6.38515e-05, -4.9782993e-05, -3.3809963e-05, -7.481963e-05, -1.5006569e-06, -3.883893e-06, -0.01494792, -0.0001617331, -0.0059696464, -0.007035012, -0.8154512, -0.006855073, -4.6921985e-05, -0.0003733858, -0.00010844024, -0.00010665305, -0.0017219835, -5.0140625e-05, -0.00048537247, -0.00624125, -0.00014063035, -5.7652644e-05, -6.611553e-05, -0.00022707166, -0.0001821234, -8.176345e-06, -4.179789e-05, -5.8845668e-05, -4.2631407e-05, -4.716134e-05, -2.2159093e-06, -2.7133337e-05, -0.00039807137, -7.028876e-05, -1.2622395e-06, -0.8470689, -6.885639e-05, -1.5567284e-05, -1.9028084e-05, -6.827632e-08, -9.055464e-07, -0.00038924522, -0.00022433081, -9.425254e-05, -7.326899e-05, -0.00011392572, -3.2140102e-05, -0.0011227585, -0.00016411634, -0.00018093038, -4.501652e-05, -0.0056239683, -0.030270934, -0.11205723, -0.051972453], "top_logprobs": null, "text_offset": [4311, 4311, 4312, 4319, 4320, 4324, 4327, 4329, 4336, 4337, 4341, 4344, 4346, 4355, 4357, 4363, 4364, 4373, 4375, 4384, 4390, 4391, 4394, 4401, 4402, 4406, 4408, 4417, 4418, 4421, 4424, 4426, 4428, 4430, 4431, 4432, 4433, 4436, 4438, 4439, 4440, 4442, 4445, 4448, 4451, 4453, 4455, 4458, 4460, 4462, 4471, 4472, 4475, 4478, 4480, 4483, 4486, 4488, 4491, 4492, 4494, 4495, 4497, 4499, 4501, 4503, 4512, 4513, 4516, 4519, 4521, 4523, 4525, 4527, 4529, 4531, 4540, 4542, 4551, 4557, 4558, 4564, 4566, 4575, 4576, 4579, 4582, 4584, 4586, 4588, 4590, 4592, 4594, 4603, 4604, 4607, 4610, 4612, 4614, 4616, 4618, 4621, 4623, 4629, 4630, 4639, 4641, 4650, 4652, 4661, 4667, 4668, 4674, 4676, 4685, 4686, 4689, 4692, 4694, 4695, 4696, 4698, 4700, 4702, 4704, 4706, 4715, 4716, 4719, 4722, 4724, 4726, 4729, 4732, 4734, 4736, 4737, 4738, 4739, 4741, 4744, 4747, 4750, 4752, 4755, 4758, 4761, 4763, 4765, 4766, 4767, 4768, 4770, 4773, 4776, 4779, 4781, 4783, 4786, 4788, 4790, 4799, 4800, 4803, 4806, 4808, 4811, 4814, 4816, 4819, 4820, 4822, 4823, 4825, 4827, 4830, 4830, 4830]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LfXxYZTBQSJZ5VgmPN2FcYD8Dq3", "object": "text_completion", "created": 1651003307, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.004803651, -0.046681367, -0.051220126, -4.847264e-05, -0.0013278142, -5.9201422e-05, -0.0063661924, -0.5157127, -0.07198592, -0.6152713, -0.33665335, -1.843017e-05, -0.19674085, -0.0010178615, -9.3535404e-05, -3.4403198e-05, -1.0204763e-05, -1.8841804e-07, -0.11022189, -0.0017019836, -0.00014969209, -0.00014408647, -0.0003803027, -0.00049514946, -6.432833e-05, -0.00033713412, -6.9861335e-06, -1.0204763e-05, -0.20195381, -0.00061991304, -9.425254e-05, -5.467149e-05, -0.000924968, -0.0040321783, -0.13392906, -0.19440405, -0.6952264, -0.09806935, -1.4139594e-05, -0.31620485, -0.0005327809, -3.2735214e-05, -6.746778e-06, -5.4364154e-06, -2.3360508e-06, -0.13189974, -0.004400538, -0.00026898243, -0.00010128584, -0.0026973665, -0.00047869395, -5.657977e-05, -0.0001941635, -5.0778563e-06, -1.022884e-06, -0.98516154, -0.006076086, -0.029113965, -0.001038325, -0.007539949, -0.015899843, -4.5149584, -0.662922, -0.4815748, -0.0065000276, -0.008150588], "top_logprobs": null, "text_offset": [4537, 4537, 4538, 4545, 4546, 4550, 4553, 4555, 4564, 4566, 4575, 4581, 4582, 4588, 4590, 4599, 4600, 4603, 4606, 4608, 4610, 4612, 4614, 4616, 4618, 4627, 4628, 4631, 4634, 4636, 4638, 4640, 4642, 4644, 4646, 4655, 4657, 4666, 4672, 4673, 4679, 4681, 4690, 4691, 4694, 4697, 4699, 4701, 4703, 4705, 4707, 4709, 4718, 4719, 4722, 4725, 4727, 4729, 4731, 4733, 4736, 4736, 4736, 4736, 4736, 4736]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.004803651, -0.046681367, -0.051220126, -4.847264e-05, -0.0013278142, -5.9201422e-05, -0.0063661924, -0.93247443, -1.44972155e-05, -0.00033200442, -6.6294406e-06, -0.002806747, -0.05922101, -0.04024093, -0.86349326, -7.584048e-06, -9.782879e-05, -0.00079688436, -0.0009099346, -0.048341695, -7.3446927e-06, -0.008807672, -6.587617e-05, -1.5448071e-05, -1.4377073e-05, -0.00014146294, -1.4854846e-05, -1.5448071e-05, -4.838501e-06, -6.827632e-08, -0.0013924524, -6.814395e-05, -0.0024872527, -0.00020692257, -6.015603e-05, -0.0006107265, -0.00076425495, -9.663671e-05, -3.0353855e-05, -7.136165e-05, -0.000102479804, -0.0013695926, -0.0006200332, -0.00026731353, -0.11025664, -0.00016650239, -1.0204763e-05, -0.030496921, -2.8326363e-05, -1.9028084e-05, -9.846204e-06, -1.5006569e-06, -5.912312e-06, -0.00072351756, -0.00027566, -0.00011404399, -0.00021514892, -0.00012620141, -4.1080762e-05, -0.00045275246, -6.0753944e-05, -0.00037123813, -5.0140625e-05, -0.00020871071, -0.00040809053, -3.249586e-05, -0.0015086123, -3.883893e-06, -1.2622395e-06, -0.18885514, -0.00070496794, -7.56541e-05, -5.8130416e-05, -0.00013800588, -0.0014335185, -0.014161098, -0.74586546, -0.08510919, -0.041188855, -1.771398e-05, -0.08596636, -0.00011070334, -4.8949474e-05, -3.655083e-05, -9.370307e-06, -6.827632e-08, -0.09243141, -0.0006773481, -7.5774245e-05, -7.8514175e-05, -0.0012238455, -6.122609e-05, -2.4152187e-05, -5.1930627e-05, -8.653179e-06, -7.4639065e-06, -0.7366942, -0.0023687086, -0.000663274, -0.00010987075, -0.007827537, -0.0051909275, -0.27239805, -0.00010379017, -0.00020656308, -0.00088434125, -0.00129636, -0.018626928, -0.03543452, -0.055302307, -1.9263687e-05, -0.51452076, -7.6252014e-05, -2.8682118e-05, -3.2973632e-05, -6.6619094e-07, -1.7400124e-06, -0.028609859, -0.0002042981, -0.0018851201, -0.00022635736, -8.912656e-05, -6.873624e-05, -3.058758e-05, -0.000120719684, -2.558363e-05, -7.839496e-05, -1.8601542e-06, -3.170517e-06, -0.0067417696, -0.00046181606, -0.017437905, -0.004398682, -0.08858853, -0.0027857076, -0.00010486492, -0.00014563711, -8.435633e-05, -6.575884e-05, -0.0008082195, -0.00019511623, -0.0004113101, -0.005699196, -0.00026576474, -8.244993e-05, -3.6311474e-05, -0.00014003337, -0.00010080995, -9.846204e-06, -4.2511267e-05, -6.48061e-05, -4.0009756e-05, -5.657977e-05, -3.883893e-06, -6.289782e-05, -0.0003109561, -3.9172486e-05, -5.460492e-07, -1.4093173, -0.00014444596, -1.1991961e-05, -1.843017e-05, -1.6207987e-06, -1.5006569e-06, -0.00042401004, -0.00022576131, -8.972073e-05, -8.7576846e-05, -9.7471166e-05, -2.462996e-05, -0.004116865, -0.00013478725, -0.00017592176, -5.216904e-05, -0.0061172848, -0.033567328, -0.09262129, -0.078048654], "top_logprobs": null, "text_offset": [4537, 4537, 4538, 4545, 4546, 4550, 4553, 4555, 4562, 4563, 4567, 4570, 4572, 4581, 4583, 4589, 4590, 4599, 4601, 4610, 4616, 4617, 4620, 4627, 4628, 4632, 4634, 4643, 4644, 4647, 4650, 4652, 4654, 4656, 4657, 4658, 4659, 4662, 4664, 4665, 4666, 4668, 4671, 4674, 4677, 4679, 4681, 4684, 4686, 4688, 4697, 4698, 4701, 4704, 4706, 4709, 4712, 4714, 4717, 4718, 4720, 4721, 4723, 4725, 4727, 4729, 4738, 4739, 4742, 4745, 4747, 4749, 4751, 4753, 4755, 4757, 4766, 4768, 4777, 4783, 4784, 4790, 4792, 4801, 4802, 4805, 4808, 4810, 4812, 4814, 4816, 4818, 4820, 4829, 4830, 4833, 4836, 4838, 4840, 4842, 4844, 4847, 4849, 4855, 4856, 4865, 4867, 4876, 4878, 4887, 4893, 4894, 4900, 4902, 4911, 4912, 4915, 4918, 4920, 4921, 4922, 4924, 4926, 4928, 4930, 4932, 4941, 4942, 4945, 4948, 4950, 4952, 4955, 4958, 4960, 4962, 4963, 4964, 4965, 4967, 4970, 4973, 4976, 4978, 4981, 4984, 4987, 4989, 4991, 4992, 4993, 4994, 4996, 4999, 5002, 5005, 5007, 5009, 5012, 5014, 5016, 5025, 5026, 5029, 5032, 5034, 5037, 5040, 5042, 5045, 5046, 5048, 5049, 5051, 5053, 5056, 5056, 5056]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004803651, -0.04746926, -0.0479315, -4.7875652e-05, -0.0014256403, -5.4791635e-05, -0.0055619315, -0.5170033, -0.06942312, -0.6027418, -0.33105397, -1.8073477e-05, -0.22635017, -0.0010471578, -7.613187e-05, -3.2140102e-05, -1.1159372e-05, -3.076318e-07, -0.097113, -0.0005552024, -0.00018414622, -0.00014969209, -0.00029068594, -0.0004509634, -4.4419543e-05, -0.0008817149, -9.251094e-06, -9.846204e-06, -0.1722971, -0.00067066966, -9.782879e-05, -6.7069195e-05, -0.0010966838, -0.004516749, -0.13545081, -0.21020621, -0.6693237, -0.0959995, -1.6402679e-05, -0.31048384, -0.00065230025, -3.5717305e-05, -8.892534e-06, -6.8669196e-06, -2.9311614e-06, -0.11591608, -0.004596863, -0.000306306, -9.663671e-05, -0.0028531316, -0.0005548457, -4.799487e-05, -0.0001617331, -1.1039229e-05, -7.8540467e-07, -0.94176, -0.00578918, -0.024266971, -0.0012211048, -0.007794797, -0.015335329, -0.035089187, -0.0826624, -6.563869e-05, -0.0009810467, -0.00020286761], "top_logprobs": null, "text_offset": [4537, 4537, 4538, 4545, 4546, 4550, 4553, 4555, 4564, 4566, 4575, 4581, 4582, 4588, 4590, 4599, 4600, 4603, 4606, 4608, 4610, 4612, 4614, 4616, 4618, 4627, 4628, 4631, 4634, 4636, 4638, 4640, 4642, 4644, 4646, 4655, 4657, 4666, 4672, 4673, 4679, 4681, 4690, 4691, 4694, 4697, 4699, 4701, 4703, 4705, 4707, 4709, 4718, 4719, 4722, 4725, 4727, 4729, 4731, 4733, 4736, 4736, 4736, 4736, 4736, 4736]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004803651, -0.048936617, -0.05776146, -5.0260765e-05, -0.0019065579, -5.0022347e-05, -0.0042296285, -0.5489686, -0.07987115, -0.8123614, -1.8190814e-05, -0.00015124086, -0.0016021583, -0.002623919, -0.081167325, -1.0204763e-05, -0.0155211575, -0.000115950395, -1.5214344e-05, -2.0815281e-05, -0.0001283481, -2.141132e-05, -1.163433e-05, -3.6482897e-06, 0, -0.002192173, -0.00011082348, -0.0027453024, -0.00031071954, -4.5255874e-05, -0.0016277712, -0.0005967725, -0.00015815685, -2.319758e-05, -0.00013824523, -8.209043e-05, -0.0007018657, -0.00060631573, -0.0003444068, -0.12584518, -0.0003103619, -1.1991961e-05, -0.090439744, -3.4642555e-05, -2.2958224e-05, -2.5105857e-05, -0.000113805574, -5.79217e-06, -0.00087169197, -0.00020620546, -9.174727e-05, -0.00036980762, -0.00011940838, -5.312365e-05, -0.0007516705, -6.0633804e-05, -0.00026254423, -4.883026e-05, -0.0016489058, -0.0005236572, -3.4287736e-05, -0.0013006572, -6.8669196e-06, -2.8138238e-06, -0.2493574, -0.0010695333, -0.00021526907, -0.0002139559, -0.004559739, -0.0062153996, -0.06642001, -1.0316291, -4.5967376e-05, -0.3375908, -0.0017388819, -5.7652644e-05, -0.00015052655, -1.0920954e-05, -6.8669196e-06, -0.4569299, -0.0049112802, -0.00028126748, -0.00024132038, -0.0062618223, -0.019972717, -0.060414262, -0.062155485, -6.89756e-05, -0.0010774095, -5.9201422e-05], "top_logprobs": null, "text_offset": [4537, 4537, 4538, 4545, 4546, 4550, 4553, 4555, 4564, 4566, 4572, 4573, 4582, 4584, 4593, 4599, 4600, 4603, 4610, 4611, 4615, 4617, 4626, 4627, 4630, 4633, 4635, 4637, 4639, 4640, 4641, 4642, 4645, 4647, 4648, 4649, 4651, 4654, 4657, 4660, 4662, 4664, 4667, 4669, 4671, 4680, 4681, 4684, 4687, 4689, 4692, 4695, 4697, 4700, 4701, 4703, 4704, 4706, 4708, 4710, 4712, 4721, 4722, 4725, 4728, 4730, 4732, 4734, 4736, 4738, 4740, 4749, 4755, 4756, 4762, 4764, 4773, 4774, 4777, 4780, 4782, 4784, 4786, 4788, 4791, 4791, 4791, 4791, 4791, 4791]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004803651, -0.0461662, -0.051186502, -4.5967376e-05, -0.0017203118, -4.430127e-05, -0.0051973383, -0.48431492, -0.07290177, -0.8188776, -1.6045058e-05, -0.00020894819, -0.0016981023, -0.0031217358, -0.08889865, -1.0444119e-05, -0.014747198, -9.0558e-05, -1.42597355e-05, -1.7356348e-05, -0.00014337122, -2.0218295e-05, -1.37819625e-05, -2.693682e-06, 0, -0.0026472248, -0.000100094694, -0.0018269576, -0.00026278265, -4.4181128e-05, -0.0011727642, -0.0006552833, -0.00013836258, -2.0935424e-05, -0.0001270368, -0.00013526501, -0.0011616655, -0.00067341333, -0.0003104802, -0.13388047, -0.00030034652, -1.1159372e-05, -0.0829859, -4.0126153e-05, -2.3795494e-05, -1.42597355e-05, -8.653179e-06, -5.3162735e-06, -0.0008561208, -0.00017747053, -0.00011440349, -0.00032920254, -0.000111540605, -4.179789e-05, -0.00060846336, -5.8367896e-05, -0.00031715777, -4.144026e-05, -0.0010315245, -0.0005929559, -3.5120327e-05, -0.00076103635, -6.031526e-06, -1.4616429e-05, -0.28038257, -0.0011677528, -0.00027935923, -0.00025407854, -0.005150484, -0.00483713, -0.05489898, -0.531356, -0.10700843, -0.07304571, -1.8907942e-05, -0.17847694, -0.00011618975, -8.948419e-05, -3.655083e-05, -1.3900239e-05, -9.606849e-06, -2.0721865, -0.02950322, -0.0056337966, -0.0014778678, -0.00592, -0.00076604687, -4.7279616e-05, -0.0007944392, -9.72699e-06, -8.7733215e-06, -0.86250716, -0.010065698, -0.043645643, -0.0013351545, -0.004103217, -0.02127374, -0.048721936], "top_logprobs": null, "text_offset": [4537, 4537, 4538, 4545, 4546, 4550, 4553, 4555, 4564, 4566, 4572, 4573, 4582, 4584, 4593, 4599, 4600, 4603, 4610, 4611, 4615, 4617, 4626, 4627, 4630, 4633, 4635, 4637, 4639, 4640, 4641, 4642, 4645, 4647, 4648, 4649, 4651, 4654, 4657, 4660, 4662, 4664, 4667, 4669, 4671, 4680, 4681, 4684, 4687, 4689, 4692, 4695, 4697, 4700, 4701, 4703, 4704, 4706, 4708, 4710, 4712, 4721, 4722, 4725, 4728, 4730, 4732, 4734, 4736, 4738, 4740, 4749, 4751, 4760, 4766, 4767, 4773, 4775, 4784, 4785, 4788, 4791, 4793, 4795, 4797, 4799, 4801, 4803, 4812, 4813, 4816, 4819, 4821, 4823, 4825, 4827, 4830, 4830]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004803651, -0.048646715, -0.048354898, -5.550595e-05, -0.0018497066, -4.5847235e-05, -0.0047781356, -0.5057443, -0.085643716, -0.6196614, -0.34218338, -2.5464416e-05, -0.19208573, -0.0008345872, -7.005035e-05, -5.503005e-05, -9.72699e-06, 0, -0.10238456, -0.000464082, -0.00021026042, -0.00013693394, -0.0002991535, -0.00040308, -4.2153635e-05, -0.0003201408, -5.912312e-06, -8.4157e-06, -0.18907423, -0.0009579596, -0.00010283744, -7.076466e-05, -0.0011021711, -0.004422628, -0.14335234, -0.2060657, -0.6496326, -0.095687896, -1.4139594e-05, -0.28635585, -0.00066625705, -3.7028603e-05, -8.5358415e-06, -6.3900848e-06, -1.1430258e-06, -0.10305038, -0.004168516, -0.00031501107, -9.222505e-05, -0.0020074279, -0.00047135746, -4.489638e-05, -0.00014086877, -1.2351458e-05, -1.6207987e-06, -1.1003793, -0.006578443, -0.028794613, -0.0011202514, -0.007214203, -0.016162401, -0.037964918, -0.072783306, -9.127325e-05, -0.0008536183, -0.0002103787], "top_logprobs": null, "text_offset": [4537, 4537, 4538, 4545, 4546, 4550, 4553, 4555, 4564, 4566, 4575, 4581, 4582, 4588, 4590, 4599, 4600, 4603, 4606, 4608, 4610, 4612, 4614, 4616, 4618, 4627, 4628, 4631, 4634, 4636, 4638, 4640, 4642, 4644, 4646, 4655, 4657, 4666, 4672, 4673, 4679, 4681, 4690, 4691, 4694, 4697, 4699, 4701, 4703, 4705, 4707, 4709, 4718, 4719, 4722, 4725, 4727, 4729, 4731, 4733, 4736, 4736, 4736, 4736, 4736, 4736]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004803651, -0.046189047, -0.046499774, -3.3093773e-05, -0.0014425323, -5.0500123e-05, -0.0058114817, -0.50428146, -0.07438402, -0.6349657, -1.6981416, -0.3420992, -0.39652234, -1.9263687e-05, -0.31702772, -0.0016591738, -9.866513e-05, -0.00018915485, -2.784859e-05, -1.8841804e-07, -0.15560183, -0.001496911, -0.00021872611, -0.00026469093, -0.00017902305, -0.0017698726, -9.818829e-05, -0.0012688463, -3.2616e-05, -1.4854846e-05, -0.9118846, -0.004478188, -0.0013498942, -0.00024370644, -0.003145475, -0.0018987342, -0.003600304, -0.08963414, -9.437268e-05, -1.5006569e-06, -0.4877406, -0.0058112424, -0.0009274723, -0.00033737256, -0.0026197357, -0.0041721673, -0.07105503, -0.22378172, -0.7819872, -0.8246362, -5.0778563e-06, -0.28255, -0.00031346135, -4.9308033e-05, -1.1039229e-05, -4.7875652e-05, -1.3823812e-06, -0.13070895, -0.0011788532, -9.878341e-05, -4.966285e-05, -0.0009400614, -6.09933e-05, -5.264588e-05, -0.00030654538, -8.892534e-06, -1.022884e-06, -0.47305623, -0.0011656033, -0.00039592464, -0.00014384899, -0.0037463943, -0.016028538, -0.03516432], "top_logprobs": null, "text_offset": [4537, 4537, 4538, 4545, 4546, 4550, 4553, 4555, 4564, 4566, 4575, 4577, 4586, 4592, 4593, 4599, 4601, 4610, 4611, 4614, 4617, 4619, 4621, 4623, 4625, 4627, 4629, 4638, 4639, 4642, 4645, 4647, 4649, 4651, 4653, 4655, 4657, 4666, 4667, 4670, 4673, 4675, 4677, 4679, 4681, 4683, 4685, 4694, 4696, 4705, 4711, 4712, 4718, 4720, 4729, 4730, 4733, 4736, 4738, 4740, 4742, 4744, 4746, 4748, 4757, 4758, 4761, 4764, 4766, 4768, 4770, 4772, 4775, 4775]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (transform small_square (transform_matrix 2 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.004803651, -0.049995728, -0.050112095, -3.7386224e-05, -0.0019003468, -5.6460554e-05, -0.005290092, -0.9514975, -1.843017e-05, -0.0002513358, -1.3306066e-05, -0.0026251732, -0.060822617, -0.030865746, -0.60920775, -0.2230404, -2.0575926e-05, -0.14751135, -0.00017234455, -6.468596e-05, -2.5703772e-05, -1.3661821e-05, -6.827632e-08, -0.0755253, -0.0007306757, -0.00018260024, -0.00013681567, -0.00019511623, -0.00017592176, -3.4762696e-05, -0.0003940164, -4.838501e-06, -3.6482897e-06, -0.16887127, -0.00051983976, -9.7351025e-05, -5.860725e-05, -9.377476e-05, -0.0009116053, -0.024019552, -0.06354443, -0.9495401, -1.8190814e-05, -0.00011237507, -0.0007558447, -4.799487e-05, -0.031900838, -6.6294406e-06, -0.003469128, -0.00011523515, -2.7490969e-05, -8.653179e-06, -7.517727e-05, -8.653179e-06, -1.8190814e-05, -3.170517e-06, -1.6207987e-06, -0.0011058722, -6.9810994e-05, -0.0007453468, -0.00021586417, -3.023464e-05, -0.00038936536, -0.00049026, -6.516092e-05, -2.1649737e-05, -2.4152187e-05, -7.56541e-05, -0.0006805105, -0.0003525167, -0.00036694473, -0.07823994, -0.0001195276, -1.2231317e-05, -0.05576176, -2.1649737e-05, -1.3900239e-05, -1.1514188e-05, -4.277735e-07, -8.0580685e-06, -0.00065862207, -0.00023285468, -0.00012572645, -9.4849514e-05, -8.626461e-05, -3.225932e-05, -0.00038674276, -8.5429216e-05, -0.00027101085, -4.0246297e-05, -0.03717821, -0.0009533068, -2.7490969e-05, -0.00020465575, -4.721163e-06, -3.051303e-06, -0.10644538, -0.001130754, -0.00010474478, -7.20769e-05, -0.002846316, -0.004088137, -1.4651345, -0.82629955, -3.7743856e-05, -0.6471418, -0.0025165319, -6.361214e-05, -0.00052377454, -5.912312e-06, -8.176345e-06, -0.7530233, -0.00446442, -0.00046968853, -0.0003151312, -0.00895819, -0.0169625, -0.047985908, -0.08229442, -4.477904e-05, -0.0007593665, -0.0001517177], "top_logprobs": null, "text_offset": [4537, 4537, 4538, 4545, 4546, 4550, 4553, 4555, 4562, 4563, 4567, 4570, 4572, 4581, 4583, 4592, 4598, 4599, 4605, 4607, 4616, 4617, 4620, 4623, 4625, 4627, 4629, 4631, 4633, 4635, 4644, 4645, 4648, 4651, 4653, 4655, 4657, 4659, 4661, 4663, 4672, 4674, 4680, 4681, 4690, 4692, 4701, 4707, 4708, 4711, 4718, 4719, 4723, 4725, 4734, 4735, 4738, 4741, 4743, 4745, 4747, 4748, 4749, 4750, 4753, 4755, 4756, 4757, 4759, 4762, 4765, 4768, 4770, 4772, 4775, 4777, 4779, 4788, 4789, 4792, 4795, 4797, 4800, 4803, 4805, 4808, 4809, 4811, 4812, 4814, 4816, 4818, 4820, 4829, 4830, 4833, 4836, 4838, 4840, 4842, 4844, 4847, 4849, 4858, 4864, 4865, 4871, 4873, 4882, 4883, 4886, 4889, 4891, 4893, 4895, 4897, 4900, 4900, 4900, 4900, 4900, 4900]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.004803651, -0.04576486, -0.04948704, -4.394177e-05, -0.0014401444, -4.954739e-05, -0.0054651955, -0.9253083, -1.8310955e-05, -0.0003280123, -9.251094e-06, -0.0028993385, -0.06128849, -0.03516333, -0.8921738, -6.2699432e-06, -0.00010235966, -0.0008750327, -0.0001015252, -0.054745413, -5.4364154e-06, -0.007106742, -7.768064e-05, -1.7953334e-05, -1.2231317e-05, -0.00013300005, -1.5687427e-05, -1.7475562e-05, -5.5556293e-06, -6.827632e-08, -0.0011707367, -8.2807564e-05, -0.002421885, -0.00022313965, -7.183848e-05, -0.00056069077, -0.00072166836, -6.9573514e-05, -3.1185496e-05, -7.744129e-05, -9.186649e-05, -0.0009986492, -0.00085278286, -0.0003891288, -0.109449826, -0.0002192039, -1.37819625e-05, -0.035760332, -2.8445576e-05, -1.7953334e-05, -1.0561456e-05, -2.9311614e-06, -6.746778e-06, -0.00089806155, -0.00021085552, -0.00015422201, -0.00029283168, -0.00011249522, -3.333313e-05, -0.00045525676, -5.7770918e-05, -0.00028293548, -5.7532503e-05, -0.0002103787, -0.00043164124, -3.225932e-05, -0.0013353939, -3.2906587e-06, -1.022884e-06, -1.9845486, -0.0041383505, -0.00078167446, -0.00036825513, -0.008775922, -0.0023672755, -0.035209883, -0.7056792, -0.15903376, -0.060054313, -1.5687427e-05, -1.5094025, -0.00073234556, -5.312365e-05, -5.0140625e-05, -3.170517e-06, -7.8540467e-07, -0.91942805, -0.004473937, -0.0073624416, -0.0006060773, -0.0002107382, -0.00012310104, -0.0015225213, -0.00024025032, -3.0947078e-05, -0.00014337122, -3.170517e-06, -9.72699e-06, -0.48100042, -0.002922175, -0.08418777, -0.01708206, -1.4483867, -0.0247326, -0.00026493028, -0.00079193484, -0.00010474478, -0.0009075475, -0.0023438542, -0.00040164858, -0.0009845094, -0.008313511, -0.0002860377, -0.00031143386, -0.00014098798, -0.0033920319, -0.00020930769, -1.8310955e-05, -4.1918032e-05, -9.365555e-05, -0.00011416413, -0.0001033124, -4.361666e-06, -3.1185496e-05, -0.00023357182, -0.005047082, -0.3188071, -2.6273556, -0.015185299, -9.5442745e-05, -0.00014444596, -1.8190814e-05, -3.170517e-06, -0.013977696, -0.0055287853, -0.0009786607, -0.0013039997, -0.0001010493, -4.7041198e-05, -0.010318903, -0.000179498, -0.0004236524, -0.0002251634, -0.03475292, -0.023719462, -0.053973086], "top_logprobs": null, "text_offset": [4537, 4537, 4538, 4545, 4546, 4550, 4553, 4555, 4562, 4563, 4567, 4570, 4572, 4581, 4583, 4589, 4590, 4599, 4601, 4610, 4616, 4617, 4620, 4627, 4628, 4632, 4634, 4643, 4644, 4647, 4650, 4652, 4654, 4656, 4657, 4658, 4659, 4662, 4664, 4665, 4666, 4668, 4671, 4674, 4677, 4679, 4681, 4684, 4686, 4688, 4697, 4698, 4701, 4704, 4706, 4709, 4712, 4714, 4717, 4718, 4720, 4721, 4723, 4725, 4727, 4729, 4738, 4739, 4742, 4745, 4747, 4749, 4751, 4753, 4755, 4757, 4766, 4768, 4777, 4783, 4784, 4790, 4792, 4801, 4802, 4805, 4808, 4810, 4811, 4812, 4814, 4816, 4818, 4820, 4822, 4831, 4832, 4835, 4838, 4840, 4842, 4845, 4848, 4850, 4852, 4853, 4854, 4855, 4857, 4860, 4863, 4866, 4868, 4871, 4874, 4877, 4879, 4881, 4882, 4883, 4884, 4886, 4889, 4892, 4895, 4897, 4899, 4902, 4904, 4906, 4915, 4916, 4919, 4922, 4924, 4927, 4930, 4932, 4935, 4936, 4938, 4939, 4941, 4943, 4946, 4946]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))))", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " ("], "token_logprobs": [-0.004803651, -0.045805667, -0.045692418, -4.501652e-05, -0.0016603677, -4.751897e-05, -0.004728908, -0.9203155, -2.0696069e-05, -0.00032431216, -1.0444119e-05, -0.0024536105, -0.06318265, -0.03301883, -4.6642923, -0.006116504, -0.022290014, -0.00013669553, -0.036883228, -2.4108894, -0.0009882086, -0.0017358362, -4.9782993e-05, -0.017345354, -0.17872302, -0.11616243, -0.59624106, -0.49024615, -5.0976956e-05, -0.29190466, -0.0019890324, -5.4314798e-05, -0.00011905076, -1.8788729e-05, -6.827632e-08, -0.11665661, -0.0018249272, -0.0003123885, -0.00022588052, -0.0010221587, -0.0016890266, -0.005616596, -0.0046324334, -4.6325007e-05, -2.1171965e-05, -2.1808977, -0.018644962, -0.007256409, -0.0011124962, -0.017225461, -0.0041776136, -0.27735898, -0.35084468, -0.46685496, -0.11158384, -3.869565e-05, -0.25463456, -0.0010630885, -4.7041198e-05, -3.2616e-05, -1.5805701e-05, -1.5006569e-06, -0.20784022, -0.0031028425, -0.00042997237, -9.449002e-05, -0.0045139943, -0.00049634156, -7.422359e-05, -0.0009225819, -3.4642555e-05, -1.5006569e-06, -0.43779957, -0.002562187, -0.0021676817, -0.00015982577, -0.45298642, -0.0024533712, -0.59392506, -0.08672591, -0.32674778, -0.050093476, -1.3306066e-05, -2.0526435, -0.0011311135, -6.6713445e-05, -8.4116975e-05, -8.7733215e-06, -6.6619094e-07, -0.38460106, -0.0058641806, -0.009258821, -0.0007959898, -0.00023524073, -0.00017139182, -0.00050719705, -0.00034035373, -4.406191e-05, -0.00027864208, -3.4089344e-06, -6.746778e-06, -0.31526655, -0.0029094412, -0.07976043, -0.020590099, -0.19301711, -0.007942029, -0.0003172779, -0.0007636599, -8.268835e-05, -0.007947074, -0.001953678, -0.0035858273, -0.013076163, -0.0339508, -0.0010181, -0.00046730434, -0.00020847135, -0.00031501107, -0.00017651686, -1.7119806e-05, -3.4403198e-05, -7.040798e-05, -6.850158e-05, -0.00012882493, -1.2112103e-05, -7.398424e-05, -0.00049216923, -0.027636286, -0.025790311, -0.83063704, -0.06794759, -0.39175236, -0.15382835, -0.06742581, -1.306671e-05, -0.914667, -0.00036444137, -3.1065356e-05, -0.00011225586, -1.022884e-06, -6.827632e-08, -2.2881894, -0.007997001, -0.010207318, -0.0007332964, -0.00024597047, -0.00011523515, -0.00020942597, -0.00033146844, -3.2973632e-05, -0.00061406806, -3.7684315e-06, -6.827632e-08, -0.062490374, -0.0023225835, -0.038357947, -0.012368649, -0.18274823, -0.010420267, -0.000110942696, -0.0008526637, -0.00018295787, -0.0007430809, -0.00095533516, -0.003944564, -0.0007600818, -0.007452153, -0.00027649727, -0.00012572645, -0.00018975277, -0.0012337549, -0.00048406117, -6.1516675e-06, -9.222505e-05, -0.00020656308, -7.636654e-05, -0.0002968876, -8.892534e-06, -4.2392992e-05, -0.00045490012, -1.2731414, -0.24509467, -0.05706821, -0.20791733, -0.26785013, -0.32695374, -0.09415171, -1.0084622e-05, -0.7370391, -0.00042436953, -4.048565e-05, -0.00010665305, -4.1232483e-06, -1.8601542e-06, -0.7445512, -0.0016194115, -0.0073093036, -0.0010144017, -0.00019893186, -9.9142904e-05, -0.00015970749, -0.0003601489, -3.0707724e-05, -0.00086531014, -3.4089344e-06, -1.022884e-06, -0.11962933, -0.0016176216, -0.028238853, -0.008089116, -0.11356404, -0.009149335, -0.00012858746, -0.00040689655, -0.00015124086, -0.002197192, -0.00086149166, -0.009276808, -0.014813737, -0.012847251, -0.001112853, -0.00017783002, -8.232979e-05, -0.0001607785, -0.00013502566, -5.3162735e-06, -7.946878e-05, -6.528106e-05, -0.00013061494, -6.516092e-05, -3.7028603e-05, -5.6340414e-05, -0.000259442, -0.09039499, -0.013173938, -0.013206734, -0.021580836, -0.027496649, -0.058669195, -0.02018386, -6.746778e-06, -0.31625164, -9.794894e-05, -2.5225998e-05, -3.9055147e-05, -7.8540467e-07, -1.8841804e-07, -0.65798753, -0.0002131233, -0.003523437, -0.0002229003, -0.00010486492, -7.458028e-05, -2.3795494e-05, -4.7399757e-05], "top_logprobs": null, "text_offset": [4537, 4537, 4538, 4545, 4546, 4550, 4553, 4555, 4562, 4563, 4567, 4570, 4572, 4581, 4583, 4590, 4591, 4595, 4598, 4600, 4607, 4608, 4612, 4615, 4617, 4626, 4628, 4637, 4643, 4644, 4650, 4652, 4661, 4662, 4665, 4668, 4670, 4672, 4674, 4676, 4678, 4680, 4689, 4690, 4693, 4696, 4698, 4700, 4702, 4704, 4706, 4708, 4717, 4719, 4728, 4734, 4735, 4741, 4743, 4752, 4753, 4756, 4759, 4761, 4763, 4765, 4767, 4769, 4771, 4780, 4781, 4784, 4787, 4789, 4791, 4793, 4795, 4798, 4800, 4809, 4811, 4820, 4826, 4827, 4833, 4835, 4844, 4845, 4848, 4851, 4853, 4854, 4855, 4857, 4859, 4861, 4863, 4865, 4874, 4875, 4878, 4881, 4883, 4885, 4888, 4891, 4893, 4895, 4896, 4897, 4898, 4900, 4903, 4906, 4909, 4911, 4914, 4917, 4920, 4922, 4924, 4925, 4926, 4927, 4929, 4932, 4935, 4938, 4940, 4942, 4945, 4947, 4956, 4958, 4967, 4973, 4974, 4980, 4982, 4991, 4992, 4995, 4998, 5000, 5001, 5002, 5004, 5006, 5008, 5010, 5012, 5021, 5022, 5025, 5028, 5030, 5032, 5035, 5038, 5040, 5042, 5043, 5044, 5045, 5047, 5050, 5053, 5056, 5058, 5061, 5064, 5067, 5069, 5071, 5072, 5073, 5074, 5076, 5079, 5082, 5085, 5087, 5091, 5094, 5096, 5105, 5107, 5116, 5122, 5123, 5129, 5131, 5140, 5141, 5144, 5147, 5149, 5150, 5151, 5153, 5155, 5157, 5159, 5161, 5170, 5171, 5174, 5177, 5179, 5181, 5184, 5187, 5189, 5191, 5192, 5193, 5194, 5196, 5199, 5202, 5205, 5207, 5210, 5213, 5216, 5218, 5220, 5221, 5222, 5223, 5225, 5228, 5231, 5234, 5236, 5238, 5241, 5243, 5252, 5254, 5263, 5269, 5270, 5276, 5278, 5287, 5288, 5291, 5294, 5296, 5297, 5298, 5300, 5302, 5304, 5306]}, "finish_reason": "length"}]}, {"id": "cmpl-51LfhLnm0pbCRJQM0HMDpDzW0OUe7", "object": "text_completion", "created": 1651003317, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0))) (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0025155756, -0.032307982, -0.040301744, -3.357061e-05, -0.000712005, -4.6010214e-06, -0.0036133437, -0.96336997, -1.688045e-05, -0.00027947655, -5.5556293e-06, -0.0021220464, -0.058049455, -0.026221594, -0.8435222, -1.9027555, -0.2528857, -0.51729363, -2.3912831e-05, -0.11063386, -0.0024173448, -4.5135734e-05, -0.0003989058, -3.0473995e-05, -1.8841804e-07, -0.17216265, -0.011717602, -0.00012155601, -0.0001614947, -0.00025217026, -0.0013608764, -0.003634163, -0.0021208515, -0.00012846824, -4.036551e-05, -0.34648398, -0.22956787, -0.00025896798, -0.000111301255, -0.0006040489, -0.0026168663, -0.017326007, -1.1470382, -0.030843312, -0.16556817, -8.653179e-06, -0.038786013, -0.000167457, -1.9621319e-05, -1.0561456e-05, -1.44972155e-05, -2.5744682e-06, -0.05459351, -0.034987453, -0.000301181, -5.7652644e-05, -0.00020107947, -0.0003131028, -3.488097e-05, -0.00054983527, -4.1320116e-05, -3.051303e-06, -1.6492922, -0.34427875, -0.098397866, -0.0023333996, -0.00024692412, -0.000246207, -0.021493439, -0.0022517913, -0.064691074, -0.61044776, -0.037413564, -2.0022411, -0.019009752, -0.023276635, -2.4543265e-06, -0.03217065, -0.00015613029, -1.3306066e-05, -3.488097e-05, -1.306671e-05, -3.6482897e-06, -0.017840602, -0.011796544, -8.209043e-05, -3.9292627e-05, -6.158372e-05, -7.016862e-05, -2.1171965e-05, -0.00013228387, -3.883893e-06, -1.3823812e-06, -0.023571223, -0.069193654, -6.09933e-05, -2.5225998e-05, -6.277768e-05, -8.388231e-05, -2.6773841e-05, -0.05403266, -0.0018764609, -0.014642614, -4.2433903e-06, -0.00730438, -4.5967376e-05, -6.5092986e-06, -2.045765e-05, -1.2622395e-06, -1.3823812e-06, -0.014912406, -0.025283903, -6.373136e-05, -3.5120327e-05, -0.00011392572, -9.186649e-05, -1.8668587e-05, -0.0002561051, -1.855031e-05, -4.277735e-07, -2.2934303, -0.32395804, -0.0014726752, -0.00031739712, -0.02832623, -0.024537902, -1.6975358, -0.0005734527, -0.00019619097, -0.002361958, -0.008906229, -0.030977262, -0.0071964324, -0.32867473, -9.370307e-06, -0.22039886, -6.802381e-05, -3.6195077e-05, -2.0935424e-05, -5.3162735e-06, -3.883893e-06, -0.030156549, -0.0011097498, -0.0058362423, -0.00019094298, -0.00012477185, -6.528106e-05, -3.4167595e-05, -7.922942e-05, -3.4403198e-05, -0.0001607785, -5.912312e-06, -4.361666e-06, -0.009129727, -0.0005659378, -0.013342816, -0.0081463205, -0.23022307, -0.0066471426, -7.291136e-05, -0.0006186008, -0.00011225586, -0.00011690406, -0.00067496306, -0.00038375973, -0.0008075043, -0.0085436655, -0.00038352038, -8.7576846e-05, -0.000120481265, -0.00014957195, -0.0001418215, -7.1062755e-06, -0.00010045139, -3.7743856e-05, -6.99302e-05, -4.9782993e-05, -6.6619094e-07, -2.2126573e-05, -0.00014647158, -0.00018605449, -4.277735e-07, -0.8702868, -0.00052162877, -3.237946e-05, -3.166233e-05, -1.022884e-06, 0, -0.0015527881, -0.0006156178, -0.00020394142, -0.00030535142, -0.00020525271, -5.7891062e-05, -0.0063365, -0.00016447584, -0.00036789934, -4.489638e-05, -0.07242446, -0.0397152, -4.301002, -0.95138246, -0.88573533, -0.008195296, -0.006212581], "top_logprobs": null, "text_offset": [4345, 4345, 4346, 4353, 4354, 4358, 4361, 4363, 4370, 4371, 4375, 4378, 4380, 4389, 4391, 4400, 4402, 4411, 4417, 4418, 4424, 4426, 4435, 4436, 4439, 4442, 4444, 4446, 4448, 4450, 4452, 4454, 4463, 4464, 4467, 4470, 4472, 4474, 4476, 4478, 4480, 4482, 4491, 4493, 4502, 4508, 4509, 4515, 4517, 4526, 4527, 4530, 4533, 4535, 4537, 4539, 4541, 4543, 4545, 4554, 4555, 4558, 4561, 4563, 4564, 4566, 4568, 4570, 4572, 4575, 4577, 4586, 4588, 4597, 4599, 4608, 4614, 4615, 4621, 4623, 4632, 4633, 4636, 4639, 4641, 4643, 4645, 4647, 4649, 4651, 4660, 4661, 4664, 4667, 4669, 4671, 4673, 4675, 4677, 4679, 4688, 4690, 4699, 4705, 4706, 4712, 4714, 4723, 4724, 4727, 4730, 4732, 4734, 4736, 4738, 4740, 4742, 4751, 4752, 4755, 4758, 4760, 4762, 4764, 4766, 4770, 4772, 4778, 4779, 4788, 4790, 4799, 4801, 4810, 4816, 4817, 4823, 4825, 4834, 4835, 4838, 4841, 4843, 4844, 4845, 4847, 4849, 4851, 4853, 4855, 4864, 4865, 4868, 4871, 4873, 4875, 4878, 4881, 4883, 4885, 4886, 4887, 4888, 4890, 4893, 4896, 4899, 4901, 4904, 4907, 4910, 4912, 4914, 4915, 4916, 4917, 4919, 4922, 4925, 4928, 4930, 4932, 4935, 4937, 4939, 4948, 4949, 4952, 4955, 4957, 4960, 4963, 4965, 4968, 4969, 4971, 4972, 4974, 4976, 4979, 4979, 4979, 4979, 4979, 4979]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0025156946, -0.032307982, -0.040301867, -3.357061e-05, -0.000712005, -4.6010214e-06, -0.0036133437, -0.5006571, -0.060350448, -0.33910915, -0.41649157, -2.0696069e-05, -0.11988377, -0.0015245517, -5.2525735e-05, -1.9741461e-05, -1.7475562e-05, -3.051303e-06, -0.09310862, -0.017320974, -0.00014933258, -8.8051806e-05, -0.00029629155, -0.0004104747, -7.076466e-05, -0.0008866062, -4.4419543e-05, -1.2708151e-05, -0.13451153, -0.16480033, -0.00059283763, -0.00017556225, -0.0006762762, -0.0035211653, -0.16657148, -0.26442352, -0.1339737, -0.1551682, -1.7475562e-05, -0.2740903, -0.0017847389, -4.5135734e-05, -5.3597672e-05, -1.1873685e-05, -4.277735e-07, -0.15502536, -0.12775011, -0.0076568257, -0.0007443922, -0.002544378, -0.0032169304, -0.00063333387, -0.00083100714, -0.0001033124, -4.277735e-07, -1.6166726, -1.2781689, -0.031560004, -0.014734615, -0.015864778, -0.018490365], "top_logprobs": null, "text_offset": [4345, 4345, 4346, 4353, 4354, 4358, 4361, 4363, 4372, 4374, 4383, 4389, 4390, 4396, 4398, 4407, 4408, 4411, 4414, 4416, 4418, 4420, 4422, 4424, 4426, 4435, 4436, 4439, 4442, 4444, 4446, 4448, 4450, 4452, 4454, 4463, 4465, 4474, 4480, 4481, 4487, 4489, 4498, 4499, 4502, 4505, 4507, 4509, 4511, 4513, 4515, 4517, 4526, 4527, 4530, 4533, 4535, 4537, 4539, 4541, 4544]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0025156946, -0.032307982, -0.047287714, -4.0009756e-05, -0.00038519214, -4.0040345e-06, -0.0028910288, -0.5261666, -0.068996936, -0.29438558, -1.2617687, -0.22544093, -0.36632296, -1.8190814e-05, -0.08679813, -0.0011724066, -5.109523e-05, -0.00018295787, -2.2484204e-05, -7.8540467e-07, -0.11557185, -0.009714329, -0.00014039098, -0.00013001703, -0.00011511593, -0.00074749446, -0.0010116551, -0.0009632105, -7.338913e-05, -1.1753544e-05, -2.0171564, -0.12958917, -0.25986964, -0.015243215, -0.0029138662, -0.002618659, -0.0055899215, -0.026823865, -0.0001287076, -1.2622395e-06, -1.0588318, -0.25516343, -0.0035858273, -0.00043366966, -0.0023279008, -0.003283188, -0.05432607, -0.2572776, -0.023229353, -1.0205773, -6.746778e-06, -0.14162122, -0.00021360109, -2.7251614e-05, -1.5925843e-05, -5.912312e-06, -3.883893e-06, -0.041750252, -0.028153637, -0.0002633787, -8.876706e-05, -0.00025467362, -0.0002516953, -3.488097e-05, -0.00020656308, -1.5687427e-05, -1.1430258e-06, -0.30029488, -0.036082104, -0.019767271, -0.0012573282, -0.0035146459, -0.012253333, -0.03912172, -0.059051666, -5.8845668e-05, -0.0007126029], "top_logprobs": null, "text_offset": [4345, 4345, 4346, 4353, 4354, 4358, 4361, 4363, 4372, 4374, 4383, 4385, 4394, 4400, 4401, 4407, 4409, 4418, 4419, 4422, 4425, 4427, 4429, 4431, 4433, 4435, 4437, 4446, 4447, 4450, 4453, 4455, 4457, 4459, 4461, 4463, 4465, 4474, 4475, 4478, 4481, 4483, 4485, 4487, 4489, 4491, 4493, 4502, 4504, 4513, 4519, 4520, 4526, 4528, 4537, 4538, 4541, 4544, 4546, 4548, 4550, 4552, 4554, 4556, 4565, 4566, 4569, 4572, 4574, 4576, 4578, 4580, 4583, 4583, 4583, 4583, 4583]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_ring (transform_matrix 0.5 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "ring", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0025156946, -0.032307982, -0.046195794, -3.237946e-05, -0.0004182852, -3.7684315e-06, -0.003262916, -0.5032253, -0.061821595, -0.30488774, -0.4303648, -2.2484204e-05, -9.575048, -0.09209942, -0.00095628976, -0.0005057647, -3.941184e-05, -3.076318e-07, -1.8527291, -0.08345418, -0.3670576, -0.025120333, -0.004417659, -0.0030422178, -0.0023488724, -0.0019101406, -6.194322e-05, -0.0017654523, -3.023464e-05, -4.4818075e-06, -2.2328553, -0.22620016, -0.004584649, -0.0016465769, -0.002436405, -0.004592312, -0.0634512, -0.3524138, -0.044713482, -0.07170291, -7.6726035e-05, -1.1150167, -0.0018827912, -4.4539687e-05, -2.5941252e-05, -9.251094e-06, -6.827632e-08, -0.19734934, -0.022195492, -0.00029020815, -0.00014575632, -0.00020930769, -0.00027554267, -3.166233e-05, -0.00019845407, -7.584048e-06, -9.055464e-07, -1.2006817, -0.29390782, -0.00025920733, -0.0001614947, -0.007828498, -0.013014146, -0.039648093, -0.0432908, -5.5745302e-05, -0.00068766857, -6.2299914e-05, -0.003300172], "top_logprobs": null, "text_offset": [4345, 4345, 4346, 4353, 4354, 4358, 4361, 4363, 4372, 4374, 4383, 4389, 4390, 4394, 4396, 4405, 4406, 4409, 4412, 4414, 4415, 4416, 4418, 4420, 4422, 4424, 4426, 4435, 4436, 4439, 4442, 4444, 4446, 4448, 4450, 4452, 4454, 4463, 4465, 4474, 4480, 4481, 4487, 4489, 4498, 4499, 4502, 4505, 4507, 4509, 4511, 4513, 4515, 4517, 4526, 4527, 4530, 4533, 4535, 4537, 4539, 4541, 4544, 4544, 4544, 4544, 4544, 4544, 4544]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0025156946, -0.0323081, -0.046195794, -3.237946e-05, -0.0004182852, -4.2433903e-06, -0.0025685793, -0.50114965, -0.061767448, -1.4661611, -6.2299914e-05, -0.0001617331, -0.0016326061, -0.00878927, -0.15641163, -1.7475562e-05, -0.025384223, -7.839496e-05, -1.7236207e-05, -0.0001492143, -0.000607031, -3.3809963e-05, -3.1781543e-05, -4.721163e-06, -6.827632e-08, -0.007782362, -0.00037243115, -0.008980081, -0.00062552054, -3.678925e-05, -0.0039215293, -0.0010630885, -0.000259442, -1.9980816e-05, -0.00022385397, -0.0009509207, -0.005733607, -0.0027728556, -0.0014093436, -0.25913653, -0.0011051551, -1.855031e-05, -0.105566904, -0.00019428364, -2.6060465e-05, -1.6165199e-05, -2.8138238e-06, -0.00031501107, -0.0011414367, -0.00060810574, -0.0009533068, -0.0006588605, -0.000259442, -4.370523e-05, -0.0013376616, -9.3535404e-05, -0.0004290187, -8.173468e-05, -0.00013705408, -0.00058842317, -3.655083e-05, -0.0020388446, -9.966347e-06, -2.2159093e-06, -0.110220306, -0.038840603, -0.00034333672, -0.00036444137, -0.00064454606, -0.002697008, -0.12833138, -0.23729739, -0.65245205, -0.17172512, -1.771398e-05, -0.39480788, -0.0008666214, -7.4104384e-05, -3.357061e-05, -4.2433903e-06, -3.4089344e-06, -0.26474494, -0.032550808, -0.0005960573, -0.00015779921, -0.0022804663, -0.00060154457, -5.24084e-05, -0.0009783021, -4.3347598e-05, -1.2468796e-05, -0.39935994, -0.035467993, -0.05192643, -0.0019372554, -0.0031773457, -0.017468477, -0.040275864, -0.037051335, -2.28437e-05, -0.0004901399], "top_logprobs": null, "text_offset": [4345, 4345, 4346, 4353, 4354, 4358, 4361, 4363, 4372, 4374, 4380, 4381, 4390, 4392, 4401, 4407, 4408, 4411, 4418, 4419, 4423, 4425, 4434, 4435, 4438, 4441, 4443, 4445, 4447, 4448, 4449, 4450, 4453, 4455, 4456, 4457, 4459, 4462, 4465, 4468, 4470, 4472, 4475, 4477, 4479, 4488, 4489, 4492, 4495, 4497, 4500, 4503, 4505, 4508, 4509, 4511, 4512, 4514, 4516, 4518, 4520, 4529, 4530, 4533, 4536, 4538, 4540, 4542, 4544, 4546, 4548, 4557, 4559, 4568, 4574, 4575, 4581, 4583, 4592, 4593, 4596, 4599, 4601, 4603, 4605, 4607, 4609, 4611, 4620, 4621, 4624, 4627, 4629, 4631, 4633, 4635, 4638, 4638, 4638, 4638, 4638]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.25 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.25 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "25", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "25", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0025156946, -0.035068445, -0.044491734, -3.7148744e-05, -0.0005630759, -4.0040345e-06, -0.0031487038, -0.8948884, -1.5925843e-05, -0.0001697229, -1.0444119e-05, -0.0019400019, -0.055573534, -0.027799837, -0.6829303, -1.9741461e-05, -5.3955304e-05, -0.0010975192, -0.0044793873, -0.06329009, -1.4139594e-05, -0.013155094, -7.1481794e-05, -1.6402679e-05, -0.00012584659, -0.00024441796, -1.9741461e-05, -3.2140102e-05, -4.0040345e-06, 0, -0.005103395, -0.00016769636, -0.005299319, -0.00055329327, -1.7834122e-05, -6.74493, -0.09094397, -0.010729169, -0.0010984747, -0.35008815, -0.0049748356, -0.02172805, -0.009088042, -0.015980208, -0.4591429, -0.009836933, -2.582111e-05, -0.17417783, -0.0008382263, -2.6538237e-05, -2.6060465e-05, -5.197998e-06, -1.5214344e-05, -0.0043737167, -0.0047740038, -0.0026531422, -0.0066200215, -0.0006543287, -0.00012584659, -0.0014469496, -0.00018855974, -0.001152894, -0.0005070769, -0.0006834935, -0.00093093404, -7.469949e-05, -0.01034757, -3.6670972e-05, -4.277735e-07, -0.18044305, -0.04419764, -0.0014060009, -0.0018830296, -0.0019834193, -0.0007587086, -0.033481777, -0.38559037, -0.33536643, -4.0040345e-06, -0.00032777296, -0.0017411498, -0.0022293294, -0.016390737, -4.2433903e-06, -0.013801942, -4.4818075e-06, -9.606849e-06, -1.2468796e-05, -0.00016948354, -6.6294406e-06, -2.1649737e-05, -6.3900848e-06, -1.8841804e-07, -0.0030820363, -0.00056033314, -0.015087388, -0.0024122049, -0.00019559306, -0.16667156, -0.0009797345, -0.0001304948, -1.4139594e-05, -0.0006766329, -0.00010665305, -0.00022218504, -0.00019523638, -0.00010474478, -0.006623801, -0.00016769636, -1.7236207e-05, -0.0047405255, -3.0353855e-05, -9.72699e-06, -2.0935424e-05, -1.44972155e-05, -4.1232483e-06, -0.0006619627, -0.00020262918, -8.149626e-05, -5.586358e-05, -8.221057e-05, -4.799487e-05, -0.0005379106, -5.6460554e-05, -0.00018748498, -5.4432137e-05, -0.004857196, -0.0007823898, -4.3108244e-05, -0.0034591376, -1.6165199e-05, -1.8841804e-07, -0.7931864, -0.021522066, -0.00073341565, -0.00062683, -0.0036757395, -0.008672985, -0.25344586, -5.944078e-05, -4.573365e-05, -0.0009027144, -0.0031835025, -0.01973055, -0.026051324, -0.08652377, -1.9503042e-05, -1.2746574, -9.985534e-05, -2.9399247e-05, -1.5805701e-05, -5.197998e-06, -5.79217e-06, -0.028500933, -0.0032604043, -0.026549678, -0.0002782854, -0.00017282138, -0.00029426313, -5.562516e-05, -0.00012548709, -2.1768952e-05, -0.00015589187, -3.4089344e-06, -5.5556293e-06, -0.01602775, -0.0023847802, -0.041761253, -0.014784398, -0.20902655, -0.019735595, -0.00076079794, -0.027776795, -0.00014384899, -0.0004608624, -0.00059092935, -0.00046742076, -0.0012512419, -0.01238923, -0.00020930769, -0.0001810496, -0.00013264055, -0.000246207, -0.0001345479, -1.2112103e-05, -7.040798e-05, -4.144026e-05, -0.00010939391, -6.0276172e-05, -2.8138238e-06, -2.7251614e-05, -0.00031322293, -0.0002206344, -2.693682e-06, -2.082971, -0.00026993704, -2.2126573e-05, -2.0218295e-05, -5.460492e-07, -7.584048e-06, -0.002102992, -0.00060333364, -0.00034953654, -0.00063583726, -0.00021813008, -6.337372e-05, -0.0033383262, -9.21049e-05, -0.00037588822, -0.00010307304, -0.008921805, -0.023849046, -0.09205479], "top_logprobs": null, "text_offset": [4345, 4345, 4346, 4353, 4354, 4358, 4361, 4363, 4370, 4371, 4375, 4378, 4380, 4389, 4391, 4397, 4398, 4407, 4409, 4418, 4424, 4425, 4428, 4435, 4436, 4440, 4442, 4451, 4452, 4455, 4458, 4460, 4462, 4464, 4465, 4466, 4468, 4471, 4473, 4474, 4475, 4477, 4480, 4483, 4486, 4488, 4490, 4493, 4495, 4497, 4506, 4507, 4510, 4513, 4515, 4518, 4521, 4523, 4526, 4527, 4529, 4530, 4532, 4534, 4536, 4538, 4547, 4548, 4551, 4554, 4556, 4558, 4560, 4562, 4564, 4566, 4575, 4577, 4583, 4584, 4593, 4595, 4604, 4610, 4611, 4614, 4621, 4622, 4626, 4628, 4637, 4638, 4641, 4644, 4646, 4648, 4650, 4651, 4652, 4654, 4657, 4659, 4660, 4661, 4663, 4666, 4669, 4672, 4674, 4676, 4679, 4681, 4683, 4692, 4693, 4696, 4699, 4701, 4704, 4707, 4709, 4712, 4713, 4715, 4716, 4718, 4720, 4722, 4724, 4733, 4734, 4737, 4740, 4742, 4744, 4746, 4748, 4751, 4753, 4759, 4760, 4769, 4771, 4780, 4782, 4791, 4797, 4798, 4804, 4806, 4815, 4816, 4819, 4822, 4824, 4825, 4826, 4828, 4830, 4832, 4834, 4836, 4845, 4846, 4849, 4852, 4854, 4856, 4859, 4862, 4864, 4866, 4867, 4868, 4869, 4871, 4874, 4877, 4880, 4882, 4885, 4888, 4891, 4893, 4895, 4896, 4897, 4898, 4900, 4903, 4906, 4909, 4911, 4913, 4916, 4918, 4920, 4929, 4930, 4933, 4936, 4938, 4941, 4944, 4946, 4949, 4950, 4952, 4953, 4955, 4957, 4960, 4960]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n\n", "\n"], "token_logprobs": [-0.0025155756, -0.03298723, -0.03955433, -4.9782993e-05, -0.0006431137, -5.4364154e-06, -0.0032023983, -0.9517158, -1.9503042e-05, -0.00014289531, -5.912312e-06, -0.0017511821, -0.055623308, -0.02656039, -0.5960086, -1.6282536e-05, -8.244993e-05, -0.0009768744, -0.00314428, -0.06565822, -1.8073477e-05, -0.0127016995, -5.8130416e-05, -1.9741461e-05, -9.794894e-05, -0.00027315848, -2.1529595e-05, -3.2855354e-05, -2.9311614e-06, 0, -0.0053574457, -0.00028818252, -0.0059175417, -0.0005639112, -1.4854846e-05, -0.0021843503, -0.001225398, -0.00019821846, -1.8073477e-05, -0.00021598431, -0.00047219192, -0.004947222, -0.002231599, -0.0012678908, -0.1928408, -0.0005504303, -2.319758e-05, -0.05851865, -0.00013860193, -2.0696069e-05, -1.2588937e-05, -4.0040345e-06, -9.842577e-05, -0.00089639076, -0.00072023796, -0.00030964572, -0.00051697873, -0.00025861035, -4.430127e-05, -0.0010092692, -9.663671e-05, -0.0004236524, -7.1719274e-05, -4.430127e-05, -0.00043736608, -3.690939e-05, -0.0020419497, -4.0040345e-06, -3.529076e-06, -0.0607848, -0.0237324, -0.00017806844, -0.00014647158, -0.00020966532, -0.0008962724, -0.03040684, -0.34171265, -0.410738, -3.6482897e-06, -0.00023714808, -0.0008143039, -0.00028591757, -0.007995199, -2.3360508e-06, -9.151261e-05, -1.1430258e-06, -1.42597355e-05, -5.197998e-06, -3.559716e-05, -6.3900848e-06, -2.0696069e-05, -5.0778563e-06, -4.277735e-07, -0.00096702884, -4.5255874e-05, -0.00052091165, -0.00013073228, -4.9308033e-05, -0.0005344489, -0.00018116974, -3.9172486e-05, -1.1873685e-05, -5.169127e-05, -9.425254e-05, -0.00028889967, -0.00014408647, -0.00032288165, -0.033940867, -0.00015457776, -6.6294406e-06, -0.008252988, -2.1291178e-05, -8.296486e-06, -3.1185496e-05, -6.6294406e-06, -1.5687427e-05, -0.0008453845, -0.00012000537, -8.8171946e-05, -4.716134e-05, -7.2672e-05, -4.048565e-05, -0.0001722244, -7.005035e-05, -0.00014372978, -3.2140102e-05, -0.0025238816, -0.0006421591, -6.2420055e-05, -0.0018565757, -1.7236207e-05, -4.277735e-07, -0.45750603, -0.014561207, -0.00030404294, -0.00025932747, -0.002287815, -0.011258344, -0.59545875, -0.00013967574, -0.00051900244, -0.0014644404, -0.010982965, -0.02591087, -0.036372956, -0.08152937, -2.4510746e-05, -0.9170161, -0.0004380823, -2.5464416e-05, -2.272356e-05, -2.693682e-06, -6.827632e-08, -0.062136393, -0.0011792108, -0.008173542, -0.00021348093, -0.00017258391, -0.000151361, -2.7967804e-05, -0.0004104747, -2.3317722e-05, -0.00017759066, -2.0966954e-06, -3.529076e-06, -0.021165004, -0.002593321, -0.023710797, -0.013436571, -0.1946608, -0.006224637, -0.00011416413, -0.0004210298, -0.00011678579, -0.00013001703, -0.0011987245, -0.00031608582, -0.00042937536, -0.017274823, -0.00020501523, -6.9690854e-05, -0.00014885482, -0.00018736672, -0.00012000537, -1.1039229e-05, -4.2511267e-05, -5.598372e-05, -9.0558e-05, -6.4446605e-05, -2.0966954e-06, -2.7728449e-05, -0.00021479129, -0.00012524867, -1.022884e-06, -0.9350024, -0.00082551886, -2.6060465e-05, -2.5941252e-05, -1.6207987e-06, -1.1873685e-05, -0.0017018636, -0.00035848093, -0.00020274745, -0.00014134373, -0.0001625685, -3.4048382e-05, -0.0037605152, -0.00014217819, -0.00018378951, -4.608659e-05, -0.009363864, -4.433323, -0.3238593], "top_logprobs": null, "text_offset": [4345, 4345, 4346, 4353, 4354, 4358, 4361, 4363, 4370, 4371, 4375, 4378, 4380, 4389, 4391, 4397, 4398, 4407, 4409, 4418, 4424, 4425, 4428, 4435, 4436, 4440, 4442, 4451, 4452, 4455, 4458, 4460, 4462, 4464, 4465, 4466, 4467, 4470, 4472, 4473, 4474, 4476, 4479, 4482, 4485, 4487, 4489, 4492, 4494, 4496, 4505, 4506, 4509, 4512, 4514, 4517, 4520, 4522, 4525, 4526, 4528, 4529, 4531, 4533, 4535, 4537, 4546, 4547, 4550, 4553, 4555, 4557, 4559, 4561, 4563, 4565, 4574, 4576, 4582, 4583, 4592, 4594, 4603, 4609, 4610, 4613, 4620, 4621, 4625, 4627, 4636, 4637, 4640, 4643, 4645, 4647, 4649, 4650, 4651, 4652, 4655, 4657, 4658, 4659, 4661, 4664, 4667, 4670, 4672, 4674, 4677, 4679, 4681, 4690, 4691, 4694, 4697, 4699, 4702, 4705, 4707, 4710, 4711, 4713, 4714, 4716, 4718, 4720, 4722, 4731, 4732, 4735, 4738, 4740, 4742, 4744, 4746, 4749, 4751, 4757, 4758, 4767, 4769, 4778, 4780, 4789, 4795, 4796, 4802, 4804, 4813, 4814, 4817, 4820, 4822, 4823, 4824, 4826, 4828, 4830, 4832, 4834, 4843, 4844, 4847, 4850, 4852, 4854, 4857, 4860, 4862, 4864, 4865, 4866, 4867, 4869, 4872, 4875, 4878, 4880, 4883, 4886, 4889, 4891, 4893, 4894, 4895, 4896, 4898, 4901, 4904, 4907, 4909, 4911, 4914, 4916, 4918, 4927, 4928, 4931, 4934, 4936, 4939, 4942, 4944, 4947, 4948, 4950, 4951, 4953, 4955, 4958, 4958]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform small_circle (transform_matrix 2 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0025155756, -0.03298723, -0.03955433, -4.9782993e-05, -0.0006431137, -5.4364154e-06, -0.0032023983, -0.47118235, -0.06211337, -0.30957633, -0.3379924, -1.8668587e-05, -2.2658877, -0.0021526888, -7.815842e-05, -2.9636725e-05, -2.4510746e-05, -2.3360508e-06, -0.67417437, -0.0072616315, -0.039837573, -0.0018427793, -0.00036205718, -0.00016948354, -0.0001614947, -0.0005535326, -5.956092e-05, -0.0001835511, -2.045765e-05, -9.490449e-06, -0.16314068, -0.012313856, -0.17941248, -0.031007634, -1.3708578, -0.04110203, -0.00026493028, -0.0030459247, -0.00010212031, -0.0036464864, -0.0014692134, -0.004195092, -0.0020147148, -0.04212202, -0.00050003984, -0.0006908891, -0.0002519309, -0.0055582738, -0.00020549206, -1.2946569e-05, -6.551948e-05, -7.958892e-05, -0.0001459938, -0.00018200328, -2.0696069e-05, -6.5041706e-05, -0.0005138765, -0.00041959932, -3.1185496e-05, -0.00882799, -0.1362416, -0.83803064, -3.2616e-05, -0.97943854, -0.0017516599, -6.09933e-05, -0.00022158712, -7.1062755e-06, -1.1430258e-06, -0.31869873, -0.016723247, -0.00019905198, -0.00018128614, -0.027836977, -0.017696079, -0.04266453, -0.03230521], "top_logprobs": null, "text_offset": [4345, 4345, 4346, 4353, 4354, 4358, 4361, 4363, 4372, 4374, 4383, 4389, 4390, 4396, 4398, 4407, 4408, 4411, 4414, 4416, 4417, 4418, 4420, 4422, 4424, 4426, 4428, 4437, 4438, 4441, 4444, 4446, 4448, 4451, 4454, 4456, 4458, 4459, 4460, 4461, 4463, 4466, 4469, 4472, 4474, 4477, 4480, 4483, 4485, 4487, 4488, 4489, 4490, 4492, 4495, 4498, 4501, 4503, 4505, 4508, 4510, 4519, 4525, 4526, 4532, 4534, 4543, 4544, 4547, 4550, 4552, 4554, 4556, 4558, 4561, 4561, 4561]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0025156946, -0.03298723, -0.03955433, -4.9782993e-05, -0.0006431137, -5.4364154e-06, -0.0032023983, -0.49578127, -0.060820464, -1.5369835, -0.00010295758, -0.00015314727, -0.0017867702, -0.008860285, -0.16047254, -2.0575926e-05, -0.027235445, -7.732115e-05, -2.8445576e-05, -0.00013407106, -0.0005074364, -2.9519388e-05, -3.2973632e-05, -6.3900848e-06, 0, -0.009900319, -0.0005939105, -0.010438694, -0.0009434031, -3.3450466e-05, -0.0042012557, -0.0015062245, -0.0003108397, -2.3317722e-05, -0.00023488217, -0.00079879357, -0.0042353156, -0.0038842508, -0.0014729146, -0.29692167, -0.0009116053, -1.6282536e-05, -0.09476704, -0.00015815685, -2.8206221e-05, -2.0935424e-05, -2.5744682e-06, -0.00020179474, -0.0011611878, -0.00090671214, -0.000775592, -0.0007560831, -0.0002816242, -4.7279616e-05, -0.001352282, -9.818829e-05, -0.0004232957, -9.997455e-05, -0.00018390873, -0.0007741596, -3.7028603e-05, -0.0026300729, -8.296486e-06, -5.460492e-07, -0.13956931, -0.04320827, -0.0002661214, -0.000323718, -0.00069291756, -0.0026586398, -0.16238794, -0.23049957, -0.6460196, -0.15158223, -1.306671e-05, -0.45963588, -0.00085659855, -5.8130416e-05, -2.6893982e-05, -3.4089344e-06, -2.9399247e-05, -0.22862904, -0.034759585, -0.0005156646, -8.8171946e-05, -0.0014280274, -0.0005976088, -5.037998e-05, -0.0008782541, -3.0947078e-05, -9.966347e-06, -0.38009033, -0.039100584, -0.05075986, -0.0021267661, -0.00352948, -0.017154695, -0.037911676, -0.030185051, -2.6538237e-05, -0.00063583726], "top_logprobs": null, "text_offset": [4345, 4345, 4346, 4353, 4354, 4358, 4361, 4363, 4372, 4374, 4380, 4381, 4390, 4392, 4401, 4407, 4408, 4411, 4418, 4419, 4423, 4425, 4434, 4435, 4438, 4441, 4443, 4445, 4447, 4448, 4449, 4450, 4453, 4455, 4456, 4457, 4459, 4462, 4465, 4468, 4470, 4472, 4475, 4477, 4479, 4488, 4489, 4492, 4495, 4497, 4500, 4503, 4505, 4508, 4509, 4511, 4512, 4514, 4516, 4518, 4520, 4529, 4530, 4533, 4536, 4538, 4540, 4542, 4544, 4546, 4548, 4557, 4559, 4568, 4574, 4575, 4581, 4583, 4592, 4593, 4596, 4599, 4601, 4603, 4605, 4607, 4609, 4611, 4620, 4621, 4624, 4627, 4629, 4631, 4633, 4635, 4638, 4638, 4638, 4638, 4638]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform"], "token_logprobs": [-0.0025156946, -0.032987107, -0.043924186, -3.7148744e-05, -0.00044750448, -4.1232483e-06, -0.0033820437, -0.534814, -0.066128954, -0.31577933, -1.5093356, -0.2097551, -1.4224184, -0.23157705, -0.45719895, -0.10124902, -0.2996042, -0.08641108, -0.19600642, -0.09456209, -0.14302392, -0.08233383, -0.12252814, -0.06533092, -0.09768113, -0.053338207, -0.09349239, -0.042626962, -0.08453849, -0.044176955, -0.07835358, -0.03263055, -0.072894014, -0.03331014, -0.06299149, -0.03309381, -0.05423281, -0.031423822, -0.05509004, -0.033983603, -0.051600646, -0.028174296, -0.05551922, -0.024221228, -0.047659844, -0.027076147, -0.046868805, -0.024753066, -0.043626033, -0.026168058, -0.04082588, -0.026785234, -0.04109905, -0.027130224, -0.039350834, -0.024119746, -0.04100099, -0.025592478, -0.037878495, -0.022815095, -0.0353837, -0.019595785, -0.036023714, -0.026055362, -0.034044217, -0.021948282, -0.037630465, -0.024919938, -0.030085908, -0.028952224, -0.031203285, -0.023389138, -0.033051606, -0.01820449, -0.029692993, -0.018574886, -0.02891866, -0.018253291, -0.028575696, -0.021719338, -0.029810086, -0.019898655, -0.02608479, -0.02195413, -0.027133653, -0.012479512, -0.026093846, -0.012558761, -0.027833853, -0.014710963, -0.02417702, -0.015390772, -0.025000602, -0.013588394, -0.025556521, -0.012922906, -0.02457089, -0.015040312, -0.026411908, -0.015180155, -0.023668442, -0.013882865, -0.026336513, -0.011849201, -0.024782456, -0.015127325, -0.024335122, -0.01352423, -0.021167316, -0.011465005, -0.021129388, -0.0141092315, -0.022496589, -0.011621716, -0.025281213, -0.012712866, -0.020993399, -0.010150294, -0.021126466, -0.011417135, -0.022133455, -0.009698258, -0.02228965, -0.01355891, -0.021937922, -0.009657514, -0.020164095, -0.011195775, -0.021685354, -0.012096821, -0.020135632, -0.008606549, -0.017252324, -0.01111748, -0.018446833, -0.0096591385, -0.023329714, -0.009887257, -0.020841055, -0.0071938504, -0.018722637, -0.00792923, -0.019599797, -0.006974509, -0.021844096, -0.0061082887, -0.018498804, -0.0068627517, -0.018452236, -0.0059175417, -0.016461086, -0.19704871, -0.008420978, -0.0012000377, -0.0075819297, -0.00082122453, -0.009960037, -0.0011959799, -0.009339375, -0.0011951445, -0.011359498, -0.0013237545, -0.015459656, -0.0013994371, -0.012251102, -0.001235605, -0.013444726, -0.001390304, -0.012581396, -0.0014430091, -0.012599501, -0.0018817154, -0.012371909, -0.0019314622, -0.009730579, -0.0018402722, -0.0108543085, -0.0016746371, -0.010435742, -0.002517966, -0.009213159, -0.0018464833, -0.011081317, -0.0023760574, -0.00866601, -0.00209869, -0.008986336, -0.0024827695, -0.008657833, -0.0026805159, -0.009506945, -0.0025379248, -0.008187245, -0.0032462303, -0.008189047, -0.0021635604, -0.009241135, -0.0035553793, -0.008795645, -0.0027766807, -0.009127864, -0.0027855872, -0.00847249, -0.0023574156, -0.008191871, -0.0022338105, -0.0086459275, -0.0031229325, -0.00943101, -0.002713684, -0.008678275, -0.0025770655, -0.00885884, -0.00259069, -0.009329929, -0.0014735125, -0.0094964765, -0.0022229964, -0.008828834, -0.0019830596, -0.009370663, -0.0021219274, -0.008730282, -0.0021001252, -0.008564106, -0.0016490261, -0.00863751, -0.0017668859, -0.008373674, -0.0015941572, -0.010027106, -0.0013673238, -0.008847837, -0.0013951398, -0.008885661, -0.0015818009, -0.008506334, -0.001473273, -0.008053543, -0.0016136811, -0.008506455, -0.0019915996, -0.008724751, -0.0015815614, -0.0080313105, -0.0014923154, -0.007970143, -0.0015227598, -0.009320366, -0.001315517, -0.008159118, -0.001469571, -0.008483852, -0.0015758311, -0.008608773, -0.0013658915], "top_logprobs": null, "text_offset": [4345, 4345, 4346, 4353, 4354, 4358, 4361, 4363, 4372, 4374, 4383, 4385, 4394, 4396, 4405, 4407, 4416, 4418, 4427, 4429, 4438, 4440, 4449, 4451, 4460, 4462, 4471, 4473, 4482, 4484, 4493, 4495, 4504, 4506, 4515, 4517, 4526, 4528, 4537, 4539, 4548, 4550, 4559, 4561, 4570, 4572, 4581, 4583, 4592, 4594, 4603, 4605, 4614, 4616, 4625, 4627, 4636, 4638, 4647, 4649, 4658, 4660, 4669, 4671, 4680, 4682, 4691, 4693, 4702, 4704, 4713, 4715, 4724, 4726, 4735, 4737, 4746, 4748, 4757, 4759, 4768, 4770, 4779, 4781, 4790, 4792, 4801, 4803, 4812, 4814, 4823, 4825, 4834, 4836, 4845, 4847, 4856, 4858, 4867, 4869, 4878, 4880, 4889, 4891, 4900, 4902, 4911, 4913, 4922, 4924, 4933, 4935, 4944, 4946, 4955, 4957, 4966, 4968, 4977, 4979, 4988, 4990, 4999, 5001, 5010, 5012, 5021, 5023, 5032, 5034, 5043, 5045, 5054, 5056, 5065, 5067, 5076, 5078, 5087, 5089, 5098, 5100, 5109, 5111, 5120, 5122, 5131, 5133, 5142, 5144, 5153, 5155, 5164, 5166, 5175, 5177, 5186, 5188, 5197, 5199, 5208, 5210, 5219, 5221, 5230, 5232, 5241, 5243, 5252, 5254, 5263, 5265, 5274, 5276, 5285, 5287, 5296, 5298, 5307, 5309, 5318, 5320, 5329, 5331, 5340, 5342, 5351, 5353, 5362, 5364, 5373, 5375, 5384, 5386, 5395, 5397, 5406, 5408, 5417, 5419, 5428, 5430, 5439, 5441, 5450, 5452, 5461, 5463, 5472, 5474, 5483, 5485, 5494, 5496, 5505, 5507, 5516, 5518, 5527, 5529, 5538, 5540, 5549, 5551, 5560, 5562, 5571, 5573, 5582, 5584, 5593, 5595, 5604, 5606, 5615, 5617, 5626, 5628, 5637, 5639, 5648, 5650, 5659, 5661, 5670, 5672, 5681, 5683, 5692, 5694, 5703, 5705, 5714, 5716, 5725, 5727]}, "finish_reason": "length"}]}, {"id": "cmpl-51Lft4y6A2bM1G3RsUim7rw6hcpgt", "object": "text_completion", "created": 1651003329, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform small_circle (transform_matrix 2 0 0 0)) 4 (transform_matrix 0.5 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (repeat_transform (transform small_circle (transform_matrix 2 0 0 0)) 4 (transform_matrix 0.5 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " 4", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " 4", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.009666723, -0.08622109, -0.07571481, -6.0276172e-05, -0.0009402999, -8.984087e-05, -0.0037050543, -0.7156034, -1.1398727e-05, -0.00016459411, -4.430127e-05, -0.0024521751, -0.12966383, -0.022147896, -0.30003, -5.79217e-06, -3.6074933e-05, -0.0005332577, -6.110595e-05, -0.05517224, -4.9586424e-06, -0.0050433073, -1.4377073e-05, -9.966347e-06, -2.2365928e-05, -0.00011225586, -1.163433e-05, -2.7013197e-05, -4.4818075e-06, -1.8841804e-07, -0.0025759898, -7.20769e-05, -0.0040717367, -0.00024930926, -3.1781543e-05, -0.00080380414, -0.0004891853, -0.00017258391, -1.7953334e-05, -4.1558535e-05, -0.00018438557, -0.00087562966, -0.0005930761, -0.00037755995, -0.8828614, -0.0001314494, -1.2946569e-05, -0.02617791, -4.0963423e-05, -2.0098154e-05, -4.361666e-06, -9.055464e-07, -9.103483e-05, -0.0021761653, -0.0005210318, -0.0002491891, -0.00040200804, -6.325358e-05, -2.7728449e-05, -0.0003489405, -8.054166e-05, -0.00041518486, -6.2420055e-05, -6.396884e-05, -0.00042401004, -3.225932e-05, -0.002693781, -4.2433903e-06, -3.170517e-06, -0.14731477, -0.033153508, -0.0003201408, -0.00020453747, -0.00016960275, -0.0023251525, -0.020551827, -0.26496857, -0.79474074, -7.698572e-06, -4.0963423e-05, -0.0018123267, -0.0016499787, -4.143468, -0.0001887991, -0.6738102, -0.005768796, -0.000110942696, -0.000117858675, -1.8073477e-05, -6.6619094e-07, -1.0596594, -0.016092502, -0.0011138085, -0.00030785665, -0.0012021872, -4.084943, -0.011141529, -6.647409e-05, -0.00083989615, -4.751897e-05, -5.197998e-06, -3.0877452, -0.29119468, -0.64247334, -0.023481091, -0.0064481953, -0.0026927053, -0.87238777, -0.011952767, -7.064452e-05, -0.0014389515, -2.4510746e-05, 0, -0.9269972, -0.018793814, -0.0024455427, -0.00025240867, -0.00784975, -0.0077334675, -0.37759572, -0.0001304948, -2.8565719e-05, -0.0010274677, -0.0032020397, -0.024065403, -2.3812664, -0.00011750104, -0.0010306891, -0.002591408, -0.0015020455, -0.46618912, -9.606849e-06, -0.18493587, -0.0018848807, -2.462996e-05, -4.7399757e-05, -1.402038e-05, -4.277735e-07, -0.49571732, -0.0043611447, -6.7427754e-05, -6.146545e-05, -0.00013705408, -0.1150802, -0.00051113375, -2.0575926e-05, -2.9996223e-05, -1.0681599e-05, 0, -0.057927303, -0.00040212632, -0.018120423, -0.00038602657, -6.587617e-05, -7.350647e-05, -0.00049729616, -0.036771916, -3.953198e-05, -0.0024445865, -2.784859e-05, -7.8540467e-07, -0.8362167, -0.0062924125, -0.0028221665, -7.255186e-05, -0.00348695, -0.09022981, -0.0028527721, -0.01985482, -0.00012167429, -1.1278585e-05, -1.5225613, -0.03196041, -0.0039154827, -0.00055341335, -0.049273685, -0.021056093, -0.06568208, -0.111314505, -5.1930627e-05, -0.00036229656, -0.000106175285, -0.003491736], "top_logprobs": null, "text_offset": [4746, 4746, 4747, 4754, 4755, 4759, 4762, 4764, 4771, 4772, 4776, 4779, 4781, 4790, 4792, 4798, 4799, 4808, 4810, 4819, 4825, 4826, 4829, 4836, 4837, 4841, 4843, 4852, 4853, 4856, 4859, 4861, 4863, 4865, 4866, 4867, 4868, 4871, 4873, 4874, 4875, 4877, 4880, 4883, 4886, 4888, 4890, 4893, 4895, 4897, 4906, 4907, 4910, 4913, 4915, 4918, 4921, 4923, 4926, 4927, 4929, 4930, 4932, 4934, 4936, 4938, 4947, 4948, 4951, 4954, 4956, 4958, 4960, 4962, 4964, 4966, 4975, 4977, 4983, 4984, 4993, 4995, 5004, 5010, 5011, 5017, 5019, 5028, 5029, 5032, 5035, 5037, 5039, 5041, 5043, 5045, 5047, 5049, 5058, 5059, 5062, 5065, 5067, 5068, 5069, 5071, 5073, 5075, 5077, 5079, 5088, 5089, 5092, 5095, 5097, 5099, 5101, 5103, 5106, 5108, 5114, 5115, 5124, 5126, 5135, 5137, 5143, 5144, 5153, 5155, 5164, 5170, 5171, 5177, 5179, 5188, 5189, 5192, 5195, 5197, 5199, 5201, 5203, 5205, 5207, 5209, 5218, 5219, 5222, 5225, 5227, 5228, 5229, 5231, 5233, 5235, 5237, 5239, 5248, 5249, 5252, 5255, 5257, 5259, 5261, 5263, 5265, 5267, 5276, 5277, 5280, 5283, 5285, 5287, 5289, 5291, 5294, 5294, 5294, 5294, 5294, 5294, 5294]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.009666723, -0.086221024, -0.075714946, -6.0276172e-05, -0.0009402999, -8.984087e-05, -0.0037050543, -0.7156034, -1.1398727e-05, -0.00016459411, -4.430127e-05, -0.0024521751, -0.12966383, -0.022147896, -0.30003, -5.79217e-06, -3.6074933e-05, -0.0005332577, -6.110595e-05, -0.05517224, -4.9586424e-06, -0.0050433073, -1.4377073e-05, -9.966347e-06, -2.2365928e-05, -0.00011225586, -1.163433e-05, -2.7013197e-05, -4.4818075e-06, -1.8841804e-07, -0.0025759898, -8.7457636e-05, -0.0035632153, -0.00019082283, -3.01145e-05, -0.00064394815, -0.00026493028, -0.00019714465, -2.1768952e-05, -4.775551e-05, -0.00017735413, -0.0008642354, -0.0006116811, -0.00026922178, -0.58909565, -0.00020620546, -3.883893e-06, -0.01145958, -3.201996e-05, -1.44972155e-05, -6.9861335e-06, -1.8601542e-06, -1.8601542e-06, -0.0014158501, -0.00028102813, -0.0001010493, -0.0001536241, -7.720381e-05, -2.5464416e-05, -0.00025777495, -6.468596e-05, -0.0002389362, -3.6670972e-05, -4.6921985e-05, -0.00023655016, -3.5240468e-05, -0.00017806844, -7.8540467e-07, -2.693682e-06, -0.080651276, -0.011351602, -9.2821094e-05, -7.958892e-05, -0.00016459411, -0.0007644944, -0.015479754, -0.14815696, -0.8164433, -0.15583172, -2.2126573e-05, -0.22113404, -0.00051769393, -4.9187893e-05, -3.5477948e-05, -1.0800813e-05, -6.827632e-08, -0.16472252, -0.0044235853, -6.6949986e-05, -7.5774245e-05, -0.0023391948, -0.0003777965, -3.988961e-05, -0.0003838799, -5.0778563e-06, -7.224551e-06, -0.55013305, -0.0069051264, -0.0008390627, -7.040798e-05, -0.026323907, -0.0026236798, -0.37754598, -6.0276172e-05, -2.3435998e-05, -0.0006209878, -0.0017272371, -0.012504862, -0.04861787, -0.06704528, -6.1516675e-06, -0.54026914, -4.1200903e-05, -3.1781543e-05, -1.402038e-05, -2.5744682e-06, -9.055464e-07, -0.03548053, -0.00023309403, -0.0049556093, -0.00017270124, -0.00010021203, -5.3363005e-05, -5.2288255e-05, -0.00014587646, -2.1889093e-05, -9.198663e-05, -8.653179e-06, -2.693682e-06, -0.019060174, -0.00020096028, -0.026372867, -0.0057246736, -0.14186092, -0.014484342, -0.00010891614, -0.0018967048, -7.1958624e-05, -0.00024144053, -0.0005275911, -0.00036110257, -0.00035848093, -0.004710284, -0.0002629028, -5.3597672e-05, -6.051553e-05, -0.00047422035, -0.000110942696, -1.2588937e-05, -3.5120327e-05, -5.2885232e-05, -4.5135734e-05, -4.5613506e-05, -2.3360508e-06, -4.9902206e-05, -0.00017186676, -0.0001693634, -1.3823812e-06, -1.2611231, -0.00032705773, -2.6060465e-05, -2.5941252e-05, -3.076318e-07, -4.0009756e-05, -0.0017567351, -0.0005911678, -8.972073e-05, -0.00015374424, -0.00013633883, -3.2855354e-05, -0.001834001, -8.960433e-05, -0.00014730697, -5.6340414e-05, -0.046997674, -0.024417698, -0.10060977, -0.064881794, -5.0856816e-05, -0.0008733628, -5.4314798e-05, -0.0032018025, -0.8329778], "top_logprobs": null, "text_offset": [4746, 4746, 4747, 4754, 4755, 4759, 4762, 4764, 4771, 4772, 4776, 4779, 4781, 4790, 4792, 4798, 4799, 4808, 4810, 4819, 4825, 4826, 4829, 4836, 4837, 4841, 4843, 4852, 4853, 4856, 4859, 4861, 4863, 4865, 4866, 4867, 4868, 4871, 4873, 4874, 4875, 4877, 4880, 4883, 4886, 4888, 4890, 4893, 4895, 4897, 4906, 4907, 4910, 4913, 4915, 4918, 4921, 4923, 4926, 4927, 4929, 4930, 4932, 4934, 4936, 4938, 4947, 4948, 4951, 4954, 4956, 4958, 4960, 4962, 4964, 4966, 4975, 4977, 4986, 4992, 4993, 4999, 5001, 5010, 5011, 5014, 5017, 5019, 5021, 5023, 5025, 5027, 5029, 5038, 5039, 5042, 5045, 5047, 5049, 5051, 5053, 5056, 5058, 5064, 5065, 5074, 5076, 5085, 5087, 5096, 5102, 5103, 5109, 5111, 5120, 5121, 5124, 5127, 5129, 5130, 5131, 5133, 5135, 5137, 5139, 5141, 5150, 5151, 5154, 5157, 5159, 5161, 5164, 5167, 5169, 5171, 5172, 5173, 5174, 5176, 5179, 5182, 5185, 5187, 5190, 5193, 5196, 5198, 5200, 5201, 5202, 5203, 5205, 5208, 5211, 5214, 5216, 5218, 5221, 5223, 5225, 5234, 5235, 5238, 5241, 5243, 5246, 5249, 5251, 5254, 5255, 5257, 5258, 5260, 5262, 5265, 5265, 5265, 5265, 5265, 5265, 5265, 5265]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.009666723, -0.08622089, -0.07571481, -6.0276172e-05, -0.0009402999, -8.984087e-05, -0.0037519597, -0.64564985, -0.04966536, -0.9676947, -0.63762116, -2.6180607e-05, -0.19621795, -0.0012893165, -6.3014224e-05, -5.991855e-05, -1.4377073e-05, -1.8601542e-06, -0.19135475, -0.008082143, -9.198663e-05, -8.912656e-05, -0.0008829089, -0.0014027805, -4.9069615e-05, -0.00078286754, -3.7028603e-05, -5.467149e-05, -1.3432107, -0.05579106, -0.0006732932, -0.00016423648, -0.004442804, -0.0058880425, -0.0682245, -0.057324443, -0.31596127, -0.07786836, -1.5094201e-05, -0.07886213, -0.00035883667, -2.2484204e-05, -5.4364154e-06, -2.9041616e-05, -6.3900848e-06, -0.15694669, -0.012585499, -0.00010844024, -6.170386e-05, -0.000861609, -0.00046921265, -4.6684505e-05, -0.00017174664, -1.4377073e-05, -4.277735e-07, -0.5832431, -0.0064601325, -0.061889697, -0.0010852267, -0.00011487751, -0.00020918754, -0.0070111807, -0.022488907], "top_logprobs": null, "text_offset": [4746, 4746, 4747, 4754, 4755, 4759, 4762, 4764, 4773, 4775, 4784, 4790, 4791, 4797, 4799, 4808, 4809, 4812, 4815, 4817, 4819, 4821, 4823, 4825, 4827, 4836, 4837, 4840, 4843, 4845, 4847, 4849, 4851, 4853, 4855, 4864, 4866, 4875, 4881, 4882, 4888, 4890, 4899, 4900, 4903, 4906, 4908, 4910, 4912, 4914, 4916, 4918, 4927, 4928, 4931, 4934, 4936, 4937, 4938, 4940, 4942, 4944, 4947]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.009666723, -0.08622089, -0.07571481, -6.0276172e-05, -0.0009402999, -8.984087e-05, -0.0040920246, -0.61468667, -0.05405462, -0.49617052, -1.7119806e-05, -7.11223e-05, -0.0010345085, -0.0012400213, -0.06288212, -6.5092986e-06, -0.0060675684, -4.2511267e-05, -9.370307e-06, -3.5001114e-05, -0.00018069198, -1.3422466e-05, -2.0218295e-05, -7.3446927e-06, -3.076318e-07, -0.0026729843, -0.0001351458, -0.0036005434, -0.00024728084, -1.9503042e-05, -0.0010720395, -0.0003924676, -0.00015755986, -2.1889093e-05, -5.7177684e-05, -0.00016519109, -0.0009057576, -0.0007906236, -0.00047433955, -0.42239302, -0.00017842514, -6.5092986e-06, -0.023279315, -4.7041198e-05, -1.6282536e-05, -6.2699432e-06, -2.2159093e-06, -2.8565719e-05, -0.0009271156, -0.00016364138, -0.00012536882, -0.00020596985, -7.434374e-05, -3.0707724e-05, -0.00017759066, -7.124244e-05, -0.0002000066, -4.7041198e-05, -0.00011261161, -0.00030284992, -3.3093773e-05, -5.8725527e-05, -1.6207987e-06, -1.5006569e-06, -0.07235461, -0.008732747, -8.209043e-05, -7.9349564e-05, -0.00076556916, -0.0024655014, -0.07602597, -0.090237506, -0.43726543, -4.721163e-06, -1.0084622e-05, -0.000403677, -3.8935006e-05, -0.018290626, -1.2622395e-06, -9.490449e-06, -0.00012131666, -8.4157e-06, -4.1232483e-06, -2.4032974e-05, -9.370307e-06, -1.8668587e-05, -4.6010214e-06, -4.277735e-07, -0.0007720111, -4.430127e-05, -0.00030261147, -8.268835e-05, -1.5448071e-05, -0.00010760485, -5.3477528e-05, -5.693833e-05, -2.3675353e-05, -3.2735214e-05, -6.122609e-05, -0.00019940869, -0.00011523515, -5.3837026e-05, -0.23218231, -0.00015732239, -6.2699432e-06, -0.0067517925, -2.6538237e-05, -1.2708151e-05, -1.2828294e-05, -1.1514188e-05, -1.8907942e-05, -0.00039997965, -9.4849514e-05, -0.00013776746, -3.4762696e-05, -3.690939e-05, -4.3465872e-05, -0.00019082283, -5.109523e-05, -0.00017210613, -2.9636725e-05, -0.0021632027, -0.00022194568, -3.965026e-05, -0.00021669957, -2.5744682e-06, -4.277735e-07, -0.29249442, -0.008633844, -8.209043e-05, -0.00013264055, -0.00262117, -0.024086837, -0.05920925, -0.05788063], "top_logprobs": null, "text_offset": [4746, 4746, 4747, 4754, 4755, 4759, 4762, 4764, 4773, 4775, 4781, 4782, 4791, 4793, 4802, 4808, 4809, 4812, 4819, 4820, 4824, 4826, 4835, 4836, 4839, 4842, 4844, 4846, 4848, 4849, 4850, 4851, 4854, 4856, 4857, 4858, 4860, 4863, 4866, 4869, 4871, 4873, 4876, 4878, 4880, 4889, 4890, 4893, 4896, 4898, 4901, 4904, 4906, 4909, 4910, 4912, 4913, 4915, 4917, 4919, 4921, 4930, 4931, 4934, 4937, 4939, 4941, 4943, 4945, 4947, 4949, 4958, 4960, 4966, 4967, 4976, 4978, 4987, 4993, 4994, 4997, 5004, 5005, 5009, 5011, 5020, 5021, 5024, 5027, 5029, 5031, 5033, 5034, 5035, 5036, 5039, 5041, 5042, 5043, 5045, 5048, 5051, 5054, 5056, 5058, 5061, 5063, 5065, 5074, 5075, 5078, 5081, 5083, 5086, 5089, 5091, 5094, 5095, 5097, 5098, 5100, 5102, 5104, 5106, 5115, 5116, 5119, 5122, 5124, 5126, 5128, 5130, 5133, 5133, 5133]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.009666723, -0.086221024, -0.075715266, -5.0976956e-05, -0.0004967001, -6.9810994e-05, -0.003918355, -0.66068035, -0.059475463, -0.9916125, -0.55265576, -2.462996e-05, -0.21755773, -0.0012730233, -6.516092e-05, -3.8103353e-05, -1.2351458e-05, -1.8601542e-06, -0.1980704, -0.012076012, -0.00012548709, -8.3404535e-05, -0.0011323065, -0.0014379958, -5.264588e-05, -0.00065122644, -3.5717305e-05, -3.4167595e-05, -0.925364, -0.029055059, -0.0039482783, -0.00036706397, -0.008486799, -0.0071389196, -0.09784465, -0.06251017, -0.42126936, -0.15769249, -4.4539687e-05, -0.1610746, -0.001190132, -4.394177e-05, -9.72699e-06, -2.6893982e-05, -6.1516675e-06, -0.2635077, -0.02385393, -0.0004333111, -0.0001086796, -0.00085683604, -0.0008472927, -5.1334588e-05, -0.00026576474, -1.771398e-05, -7.8540467e-07, -0.7251646, -0.031330828, -0.121307, -0.005516798, -0.00037374342, -0.00060941797, -0.030879332, -0.024130555], "top_logprobs": null, "text_offset": [4746, 4746, 4747, 4754, 4755, 4759, 4762, 4764, 4773, 4775, 4784, 4790, 4791, 4797, 4799, 4808, 4809, 4812, 4815, 4817, 4819, 4821, 4823, 4825, 4827, 4836, 4837, 4840, 4843, 4845, 4847, 4849, 4851, 4853, 4855, 4864, 4866, 4875, 4881, 4882, 4888, 4890, 4899, 4900, 4903, 4906, 4908, 4910, 4912, 4914, 4916, 4918, 4927, 4928, 4931, 4934, 4936, 4937, 4938, 4940, 4942, 4944, 4947]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 3.2 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 3", ".", "2", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.009666723, -0.086221024, -0.08379867, -4.382537e-05, -0.0007167771, -8.471396e-05, -0.003656238, -0.6432393, -0.057613514, -1.0413202, -0.94189125, -0.35079676, -0.543855, -2.9041616e-05, -0.16910157, -0.0014862255, -4.2631407e-05, -7.326899e-05, -1.7236207e-05, 0, -0.3986818, -0.005038633, -0.0002078772, -0.00019237537, -0.00041244208, -0.0022213247, -0.0015468172, -0.0016798908, -5.7891062e-05, -4.1678675e-05, -1.6938708, -0.07801733, -0.04090567, -0.0029793256, -0.0024139977, -0.002248327, -0.0044215494, -0.07562795, -0.00011237507, -2.8138238e-06, -1.9993503, -0.15160075, -0.0016009643, -0.0015772633, -0.0040852632, -0.0039278106, -0.03387273, -0.04948679, -1.7983761, -2.319758e-05, -5.657977e-05, -0.0017788872, -0.00056963606, -0.1060122, -6.746778e-06, -0.0033031604, -5.197998e-06, -1.6045058e-05, -1.7953334e-05, -0.000113805574, -1.843017e-05, -2.141132e-05, -6.5092986e-06, -3.076318e-07, -0.004711479, -8.948419e-05, -0.0023187622, -0.00037577184, -2.6060465e-05, -0.0013582519, -0.00055937853, -0.00025991976, -2.5105857e-05, -4.5847235e-05, -0.00027113006, -0.0010641633, -0.0016264562, -0.00020155631, -0.76270074, -0.00016292612, -4.775551e-05, -0.060147423, -5.216904e-05, -1.9263687e-05, -1.5687427e-05, -1.8601542e-06, -1.0800813e-05, -0.0023394322, -0.0009503228, -0.00016733873, -0.00025574747, -9.305951e-05, -3.3689823e-05, -0.0006007101, -9.890355e-05, -0.0003280123, -4.3586017e-05, -0.011818259, -0.0006447854, -3.690939e-05, -0.00038745708, -5.5556293e-06, -1.9765537e-06, -3.710191, -1.0683566, -4.9238057, -0.05740385, -0.002635213, -0.0021663678, -0.014761046, -0.014658341], "top_logprobs": null, "text_offset": [4746, 4746, 4747, 4754, 4755, 4759, 4762, 4764, 4773, 4775, 4784, 4786, 4795, 4801, 4802, 4808, 4810, 4819, 4820, 4823, 4826, 4828, 4830, 4832, 4834, 4836, 4838, 4847, 4848, 4851, 4854, 4856, 4858, 4860, 4862, 4864, 4866, 4875, 4876, 4879, 4882, 4884, 4886, 4888, 4890, 4892, 4894, 4903, 4905, 4911, 4912, 4921, 4923, 4932, 4938, 4939, 4942, 4949, 4950, 4954, 4956, 4965, 4966, 4969, 4972, 4974, 4976, 4978, 4979, 4980, 4981, 4984, 4986, 4987, 4988, 4990, 4993, 4996, 4999, 5001, 5003, 5006, 5008, 5010, 5019, 5020, 5023, 5026, 5028, 5031, 5034, 5036, 5039, 5040, 5042, 5043, 5045, 5047, 5049, 5051, 5060, 5061, 5064, 5067, 5069, 5070, 5071, 5073, 5075, 5077, 5080]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform small_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))))", "\n", "(", "connect"], "token_logprobs": [-0.009666723, -0.086221024, -0.083798096, -4.382537e-05, -0.0006939923, -0.00010557923, -0.0039654523, -0.619182, -0.054921463, -0.5180002, -2.6538237e-05, -8.6144464e-05, -0.0011714529, -0.0015545781, -0.08538927, -6.8669196e-06, -0.006936873, -5.7532503e-05, -1.2112103e-05, -4.394177e-05, -0.00022266187, -1.2112103e-05, -1.9503042e-05, -5.0778563e-06, -6.827632e-08, -0.003934813, -8.697986e-05, -0.0014849133, -0.00025861035, -2.1051823e-05, -0.0010273485, -0.00050099444, -0.00017377506, -2.665838e-05, -4.775551e-05, -0.00027745095, -0.00092842686, -0.0005273536, -0.00029605313, -0.46072334, -0.00021336172, -6.8669196e-06, -0.02115575, -4.406191e-05, -1.8668587e-05, -7.818713e-06, -1.3823812e-06, -3.7983213e-05, -0.0006360766, -0.00010665305, -0.00012453248, -0.00022659577, -7.362661e-05, -3.0353855e-05, -0.00019547573, -7.279122e-05, -0.00020334445, -4.6206733e-05, -8.2927705e-05, -0.0004290187, -3.5357807e-05, -8.483411e-05, -3.883893e-06, -1.6207987e-06, -0.07689489, -0.008886385, -7.744129e-05, -6.6593304e-05, -0.0010268707, -0.002227179, -4.464546, -0.0018432572, -0.010590487, -0.00019690624, -0.008980081, -3.011652, -3.8577375e-05, -0.00013991416, -3.529076e-06, -0.0033447258, -0.0822805, -0.07561767, -0.53017, -6.8669196e-06, -3.5240468e-05, -0.00031358056, -4.966285e-05, -0.02254475, -2.2159093e-06, -0.0015127894, -0.0002491891, -7.3446927e-06, -4.9586424e-06, -6.325358e-05, -1.5805701e-05, -1.7475562e-05, -2.693682e-06, -3.076318e-07, -0.0011263395, -3.7266083e-05, -0.00071117055, -0.00013788574, -1.7236207e-05, -0.00047738172, -0.00027399295, -8.065993e-05, -1.5805701e-05, -3.6311474e-05, -6.778445e-05, -0.00018033247, -0.00013848272, -0.00018450571, -0.4786838, -0.00014349136, -1.2231317e-05, -0.0021473714, -2.9159892e-05, -1.9143545e-05, -7.937927e-06, -6.6619094e-07, -1.6207987e-06, -0.00057369197, -0.0003108397, -8.9960085e-05, -7.505805e-05, -4.394177e-05, -2.8087945e-05, -0.00020680243, -7.6252014e-05, -0.00023190197, -4.2631407e-05, -0.00015660525, -0.00049180974, -0.0017581686, -0.0052399384, -9.251094e-06, 0, -0.5149633, -0.0069782897, -0.0001226242, -5.3955304e-05, -0.008960836, -0.0031666432, -0.1596902, -0.49592727, -0.42067593, -0.07067415, -9.966347e-06, -0.34133464, -0.00021324158, -4.5613506e-05, -3.2140102e-05, -4.0040345e-06, -5.460492e-07, -1.4376566, -0.01322437, -0.00016829051, -9.854499e-05, -0.005274093, -0.00035359056, -4.7041198e-05, -0.0005716645, -1.0681599e-05, -3.488097e-05, -0.49928856, -0.0082891695, -0.0010049738, -9.9735196e-05, -0.05567618, -0.002073248, -0.6438139, -0.084186085, -0.34997666, -0.062573366, -1.1514188e-05, -1.43956, -0.0005168586, -6.396884e-05, -3.5240468e-05, -5.0778563e-06, -6.6619094e-07, -1.4899307, -0.02870242, -0.002677408, -0.00034035373, -0.0016557111, -0.0011390507, -6.122609e-05, -0.00026958034, -6.031526e-06, -7.8540467e-07, -0.58396155, -0.014529516, -0.023986278, -0.0008276665, -0.04703229, -0.036444478, -0.07414642, -0.054441243], "top_logprobs": null, "text_offset": [4746, 4746, 4747, 4754, 4755, 4759, 4762, 4764, 4773, 4775, 4781, 4782, 4791, 4793, 4802, 4808, 4809, 4812, 4819, 4820, 4824, 4826, 4835, 4836, 4839, 4842, 4844, 4846, 4848, 4849, 4850, 4851, 4854, 4856, 4857, 4858, 4860, 4863, 4866, 4869, 4871, 4873, 4876, 4878, 4880, 4889, 4890, 4893, 4896, 4898, 4901, 4904, 4906, 4909, 4910, 4912, 4913, 4915, 4917, 4919, 4921, 4930, 4931, 4934, 4937, 4939, 4941, 4943, 4945, 4947, 4949, 4956, 4957, 4961, 4964, 4966, 4973, 4974, 4978, 4981, 4983, 4992, 4994, 5000, 5001, 5010, 5012, 5021, 5027, 5028, 5031, 5038, 5039, 5043, 5045, 5054, 5055, 5058, 5061, 5063, 5065, 5067, 5068, 5069, 5070, 5073, 5075, 5076, 5077, 5079, 5082, 5085, 5088, 5090, 5092, 5095, 5097, 5099, 5108, 5109, 5112, 5115, 5117, 5120, 5123, 5125, 5128, 5129, 5131, 5132, 5134, 5136, 5138, 5140, 5149, 5150, 5153, 5156, 5158, 5160, 5162, 5164, 5166, 5168, 5177, 5179, 5188, 5194, 5195, 5201, 5203, 5212, 5213, 5216, 5219, 5221, 5223, 5225, 5227, 5229, 5231, 5240, 5241, 5244, 5247, 5249, 5251, 5253, 5255, 5258, 5260, 5269, 5271, 5280, 5286, 5287, 5293, 5295, 5304, 5305, 5308, 5311, 5313, 5315, 5317, 5319, 5321, 5323, 5332, 5333, 5336, 5339, 5341, 5343, 5345, 5347, 5351, 5351, 5351]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform_", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_"], "token_logprobs": [-0.009666723, -0.08622109, -0.08379867, -4.382537e-05, -0.0006939923, -0.00010557923, -0.0042619538, -0.6723944, -0.058523703, -1.0308155, -0.8981494, -0.30144444, -1.0997909, -0.48727286, -0.39010844, -0.20528238, -0.21877137, -0.18672554, -0.20127703, -0.17937389, -0.14773126, -0.14073457, -0.118281946, -0.119882695, -0.107892536, -0.10447511, -0.09801372, -0.08377749, -0.09046362, -0.07587067, -0.08102098, -0.068920046, -0.07763721, -0.05620988, -0.06979439, -0.045280475, -0.060988907, -0.04754995, -0.0618578, -0.047793508, -0.060026586, -0.04511366, -0.059724476, -0.0467264, -0.05469473, -0.03822659, -0.048658103, -0.037665125, -0.047688976, -0.033097934, -3.759294, -0.00030046387, -0.33713964, -0.036341928, -0.0057285107, -0.0033271431, -0.0012539848, -0.00013538517, -0.7388784, -0.02464383, -0.0047025583, -0.018934062, -0.1586291, -0.019850379, -0.00619003, -0.016694637, -0.00047702223, -9.222505e-05, -0.796792, -0.024155831, -0.008407032, -0.0038853285, -0.38619158, -0.009454898, -0.00089722703, -0.03240254, -7.255186e-05, -1.8841804e-07, -0.3517574, -0.0054701692, -0.0021240166, -0.0007516705, -0.005342405, -0.0022820197, -7.4104384e-05, -0.0040317588, -1.1278585e-05, -4.6010214e-06, -0.1398604, -0.008715491, -0.001400631, -8.662224e-05, -0.0017548259, -0.0013673238, -3.3450466e-05, -0.00083751103, -7.224551e-06, -5.912312e-06, -0.07168851, -0.0071689948, -0.00017306075, -6.587617e-05, -0.0008974655, -0.0016539192, -2.6538237e-05, -0.00042293806, -1.0084622e-05, -1.2622395e-06, -0.055127267, -0.004246989, -0.00010259808, -4.275062e-05, -0.0007366371, -0.0014137616, -2.1529595e-05, -0.00036277244, -5.5556293e-06, -6.1516675e-06, -0.04404969, -0.0032909026, -9.532728e-05, -3.7266083e-05, -0.00072960096, -0.0014543528, -2.665838e-05, -0.00021562482, -5.675771e-06, -1.1430258e-06, -0.041654676, -0.003527924, -8.507158e-05, -4.501652e-05, -0.000689698, -0.004337678, -3.5001114e-05, -0.00052747375, -1.0084622e-05, -8.0580685e-06, -0.07787003, -0.0044003003, -9.174727e-05, -4.072407e-05, -0.008590257, -0.0015067022, -2.558363e-05, -0.00042997237, -1.1514188e-05, -6.827632e-08, -0.037005503, -0.0023347125, -8.566857e-05, -4.1678675e-05, -0.006263501, -0.0014536356, -2.9996223e-05, -0.0005885433, -1.37819625e-05, -2.5744682e-06, -0.048615426, -0.0021658898, -7.9112084e-05, -3.762558e-05, -0.005510145, -0.0012563727, -3.9055147e-05, -0.00050290365, -1.2112103e-05, 0, -0.035476886, -0.0025271086, -7.20769e-05, -4.179789e-05, -0.0035987485, -0.0011603505, -4.3347598e-05, -0.0007464216, -1.0084622e-05, -1.022884e-06, -0.039636746, -0.002599655, -0.00011547263, -3.7863996e-05, -0.004013564, -0.0010797974, -3.7743856e-05, -0.00064299355, -1.1873685e-05, -1.7400124e-06, -0.0535718, -0.003275474, -7.4460135e-05, -3.881579e-05, -0.0047274698, -0.0010987141, -4.275062e-05, -0.00070580235, -1.0681599e-05, -1.2622395e-06, -0.04664995, -0.004009794, -6.2420055e-05, -3.7266083e-05, -0.004182521, -0.0009861783, -5.503005e-05, -0.000680869, -7.4639065e-06, -1.8601542e-06, -0.04577228, -0.0023238393, -8.137612e-05, -4.0126153e-05, -0.007104944, -0.0019873597, -4.406191e-05, -0.0010896439, -1.37819625e-05, -2.693682e-06, -0.05743782, -0.0028851714, -6.873624e-05, -3.4048382e-05, -0.00839465, -0.002773095, -4.430127e-05, -0.00089722703, -7.224551e-06, -1.8601542e-06, -0.055744175, -0.0034246847, -7.350647e-05, -4.6206733e-05, -0.009270911, -0.0033078245, -4.2153635e-05, -0.00064335304, -1.1159372e-05, -4.2433903e-06, -0.048343387, -0.0031101976, -6.647409e-05, -5.6102934e-05, -0.010815507, -0.0044360384, -4.0963423e-05, -0.00072638044, -8.653179e-06, -5.460492e-07, -0.046525497, -0.001754228, -7.6964454e-05, -6.13453e-05, -0.008933052, -0.00449621, -3.869565e-05, -0.00048465535], "top_logprobs": null, "text_offset": [4746, 4746, 4747, 4754, 4755, 4759, 4762, 4764, 4773, 4775, 4784, 4786, 4795, 4797, 4806, 4808, 4817, 4819, 4828, 4830, 4839, 4841, 4850, 4852, 4861, 4863, 4872, 4874, 4883, 4885, 4894, 4896, 4905, 4907, 4916, 4918, 4927, 4929, 4938, 4940, 4949, 4951, 4960, 4962, 4971, 4973, 4982, 4984, 4993, 4995, 5004, 5010, 5011, 5017, 5019, 5028, 5029, 5032, 5035, 5037, 5039, 5041, 5043, 5045, 5047, 5056, 5057, 5060, 5063, 5065, 5067, 5069, 5071, 5073, 5075, 5084, 5085, 5088, 5091, 5093, 5095, 5097, 5099, 5101, 5103, 5112, 5113, 5116, 5119, 5121, 5123, 5125, 5127, 5129, 5131, 5140, 5141, 5144, 5147, 5149, 5151, 5153, 5155, 5157, 5159, 5168, 5169, 5172, 5175, 5177, 5179, 5181, 5183, 5185, 5187, 5196, 5197, 5200, 5203, 5205, 5207, 5209, 5211, 5213, 5215, 5224, 5225, 5228, 5231, 5233, 5235, 5237, 5239, 5241, 5243, 5252, 5253, 5256, 5259, 5261, 5263, 5265, 5267, 5269, 5271, 5280, 5281, 5284, 5287, 5289, 5291, 5293, 5295, 5297, 5299, 5308, 5309, 5312, 5315, 5317, 5319, 5321, 5323, 5325, 5327, 5336, 5337, 5340, 5343, 5345, 5347, 5349, 5351, 5353, 5355, 5364, 5365, 5368, 5371, 5373, 5375, 5377, 5379, 5381, 5383, 5392, 5393, 5396, 5399, 5401, 5403, 5405, 5407, 5409, 5411, 5420, 5421, 5424, 5427, 5429, 5431, 5433, 5435, 5437, 5439, 5448, 5449, 5452, 5455, 5457, 5459, 5461, 5463, 5465, 5467, 5476, 5477, 5480, 5483, 5485, 5487, 5489, 5491, 5493, 5495, 5504, 5505, 5508, 5511, 5513, 5515, 5517, 5519, 5521, 5523, 5532, 5533, 5536, 5539, 5541, 5543, 5545, 5547, 5549, 5551, 5560, 5561, 5564, 5567, 5569, 5571, 5573, 5575, 5577, 5579, 5588]}, "finish_reason": "length"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.009666723, -0.08622109, -0.08379867, -4.382537e-05, -0.0006939923, -0.00010557923, -0.0038194496, -0.65136254, -0.052361485, -0.4614383, -1.9980816e-05, -7.052812e-05, -0.0011885795, -0.002252868, -0.070753545, -7.1062755e-06, -0.00453932, -3.7863996e-05, -1.6165199e-05, -3.154219e-05, -0.0002433488, -1.2351458e-05, -2.045765e-05, -4.838501e-06, -6.827632e-08, -0.0023330399, -8.3045044e-05, -0.002614237, -0.00023702794, -2.0935424e-05, -0.0007973622, -0.00036730146, -0.00015481713, -2.7013197e-05, -6.015603e-05, -0.0002556273, -0.002124137, -0.00095915364, -0.0005113694, -0.4029438, -0.0001835511, -9.72699e-06, -0.024996327, -4.8949474e-05, -1.7119806e-05, -8.653179e-06, -1.5006569e-06, -6.718934e-05, -0.0005702331, -0.00012894507, -0.00013764732, -0.00019404522, -7.505805e-05, -3.2973632e-05, -0.0002014371, -7.720381e-05, -0.00018772435, -5.0140625e-05, -0.000118333635, -0.00049383816, -4.2033495e-05, -9.151261e-05, -2.0966954e-06, -1.022884e-06, -0.078496315, -0.008871593, -7.648668e-05, -8.388231e-05, -0.0007396201, -0.0026310293, -0.058257364, -0.08843498, -0.9608145, -0.1586722, -1.4974988e-05, -0.13054879, -0.0004352194, -5.037998e-05, -1.843017e-05, -9.490449e-06, -2.8138238e-06, -0.18965617, -0.006715008, -7.469949e-05, -8.352281e-05, -0.002841834, -0.0004851331, -4.9187893e-05, -0.00023214132, -4.361666e-06, -6.8669196e-06, -0.6590346, -0.011665797, -0.00062325277, -0.00017735413, -0.0046184217, -0.0202889, -0.041192707, -0.042392742, -3.4167595e-05, -0.0008044011, -8.9960085e-05, -0.0024765558], "top_logprobs": null, "text_offset": [4746, 4746, 4747, 4754, 4755, 4759, 4762, 4764, 4773, 4775, 4781, 4782, 4791, 4793, 4802, 4808, 4809, 4812, 4819, 4820, 4824, 4826, 4835, 4836, 4839, 4842, 4844, 4846, 4848, 4849, 4850, 4851, 4854, 4856, 4857, 4858, 4860, 4863, 4866, 4869, 4871, 4873, 4876, 4878, 4880, 4889, 4890, 4893, 4896, 4898, 4901, 4904, 4906, 4909, 4910, 4912, 4913, 4915, 4917, 4919, 4921, 4930, 4931, 4934, 4937, 4939, 4941, 4943, 4945, 4947, 4949, 4958, 4960, 4969, 4975, 4976, 4982, 4984, 4993, 4994, 4997, 5000, 5002, 5004, 5006, 5008, 5010, 5012, 5021, 5022, 5025, 5028, 5030, 5032, 5034, 5036, 5039, 5039, 5039, 5039, 5039, 5039, 5039]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.009666723, -0.08622109, -0.08379835, -4.382537e-05, -0.0006939923, -0.00010557923, -0.0038194496, -0.65136254, -0.052361485, -0.4614383, -1.9980816e-05, -7.052812e-05, -0.0011885795, -0.002252868, -0.070753545, -7.1062755e-06, -0.00453932, -3.7863996e-05, -1.6165199e-05, -3.154219e-05, -0.0002433488, -1.2351458e-05, -2.045765e-05, -4.838501e-06, -6.827632e-08, -0.0023330399, -8.3045044e-05, -0.002614237, -0.00023702794, -2.0935424e-05, -0.0007973622, -0.00036730146, -0.00015481713, -2.7013197e-05, -6.015603e-05, -0.0002556273, -0.002124137, -0.0006144238, -0.0003803027, -0.43526232, -0.00020250905, -7.584048e-06, -0.026343983, -5.7177684e-05, -1.7834122e-05, -7.3446927e-06, -1.2622395e-06, -6.420819e-05, -0.0010362985, -0.00015183784, -0.000109155495, -0.00020918754, -7.815842e-05, -3.4403198e-05, -0.00022313965, -7.541475e-05, -0.00025240867, -4.5135734e-05, -0.00010998996, -0.000751311, -3.5477948e-05, -7.1719274e-05, -1.8601542e-06, -6.6619094e-07, -0.07835867, -0.01013825, -8.00667e-05, -8.7696986e-05, -0.00082217914, -0.0024555235, -3.1839802, -0.0001319253, -6.814395e-05, -0.0011687065, -0.0013527598, -0.08889839, -0.023425564, -0.06675621, -1.5805701e-05, -0.17478098, -0.00010987075, -2.6419024e-05, -1.6045058e-05, -4.6010214e-06, -1.8841804e-07, -0.32922325, -0.0001792624, -0.007850949, -0.0001283481, -0.00011308939, -0.000107127074, -4.9902206e-05, -5.8130416e-05, -2.8206221e-05, -4.871012e-05, -5.912312e-06, -8.7733215e-06, -0.083369374, -0.0012603713, -0.0055050515, -0.0017581686, -0.15432163, -0.0051157363, -7.458028e-05, -0.00032383628, -0.00014408647, -0.00012572645, -0.00033689477, -0.0002131233, -0.00035311276, -0.0042664413, -0.0002048951, -3.5240468e-05, -2.4510746e-05, -0.000114638155, -6.6593304e-05, -8.7733215e-06, -6.432833e-05, -6.718934e-05, -3.201996e-05, -4.954739e-05, -3.4089344e-06, -6.4446605e-05, -0.00015100244, -0.00065122644, -2.5744682e-06, -1.7942821, -0.00090259424, -4.5494293e-05, -2.319758e-05, -2.4543265e-06, -1.5006569e-06, -0.003857324, -0.002464784, -0.00019201681, -0.00019237537, -0.00012489199, -3.357061e-05, -0.007778339, -0.00019428364, -0.000363131, -0.00020012581, -0.017644512, -0.017568257, -0.043314766, -0.061420057, -3.4403198e-05, -0.00091566215, -8.471396e-05, -0.0026278042, -0.9971449], "top_logprobs": null, "text_offset": [4746, 4746, 4747, 4754, 4755, 4759, 4762, 4764, 4773, 4775, 4781, 4782, 4791, 4793, 4802, 4808, 4809, 4812, 4819, 4820, 4824, 4826, 4835, 4836, 4839, 4842, 4844, 4846, 4848, 4849, 4850, 4851, 4854, 4856, 4857, 4858, 4860, 4863, 4866, 4869, 4871, 4873, 4876, 4878, 4880, 4889, 4890, 4893, 4896, 4898, 4901, 4904, 4906, 4909, 4910, 4912, 4913, 4915, 4917, 4919, 4921, 4930, 4931, 4934, 4937, 4939, 4941, 4943, 4945, 4947, 4949, 4955, 4956, 4965, 4967, 4976, 4978, 4987, 4993, 4994, 5000, 5002, 5011, 5012, 5015, 5018, 5020, 5021, 5022, 5024, 5026, 5028, 5030, 5032, 5041, 5042, 5045, 5048, 5050, 5052, 5055, 5058, 5060, 5062, 5063, 5064, 5065, 5067, 5070, 5073, 5076, 5078, 5081, 5084, 5087, 5089, 5091, 5092, 5093, 5094, 5096, 5099, 5102, 5105, 5107, 5109, 5112, 5114, 5116, 5125, 5126, 5129, 5132, 5134, 5137, 5140, 5142, 5145, 5146, 5148, 5149, 5151, 5153, 5156, 5156, 5156, 5156, 5156, 5156, 5156, 5156]}, "finish_reason": "stop"}]}, {"id": "cmpl-51Lg7WH2MSUeLUn5cwm1EjwGQVJAd", "object": "text_completion", "created": 1651003343, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0071279346, -0.09060059, -0.06572295, -0.000106295425, -0.0007081875, -5.1930627e-05, -0.010227129, -0.52760446, -3.130471e-05, -0.0002789997, -7.183848e-05, -0.0027875004, -0.08600378, -0.050926305, -0.29713964, -5.675771e-06, -3.333313e-05, -0.001068221, -6.6829845e-05, -0.04367902, -2.9311614e-06, -0.006904045, -9.72699e-06, -9.966347e-06, -2.0575926e-05, -0.00021491051, -1.5805701e-05, -1.3422466e-05, -4.361666e-06, -4.277735e-07, -0.003726054, -8.662224e-05, -0.001753631, -0.00024835463, -3.237946e-05, -0.0005495959, -0.00040403462, -0.00019392508, -1.1514188e-05, -4.656436e-05, -9.270188e-05, -0.0011394074, -0.0002376249, -0.00019440286, -0.55378354, -0.00016006512, -8.296486e-06, -0.0049287127, -3.357061e-05, -1.9860674e-05, -5.675771e-06, -1.2622395e-06, -3.225932e-05, -0.0008634009, -0.00025658193, -0.00013574092, -0.00022951684, -8.2927705e-05, -2.272356e-05, -0.0005609273, -6.373136e-05, -0.00033379628, -4.406191e-05, -5.4432137e-05, -0.0009355268, -3.9292627e-05, -0.004618542, -3.7684315e-06, -1.7400124e-06, -0.17739636, -0.02630053, -0.00015100244, -0.0002121687, -0.0005668924, -0.0018652928, -0.029567989, -0.34735295, -0.35868502, -0.02696929, -5.79217e-06, -0.21016149, -7.350647e-05, -6.087316e-05, -2.8682118e-05, -4.2433903e-06, -6.827632e-08, -0.31723204, -0.020883048, -0.00011976601, -7.613187e-05, -0.0013712645, -0.0003222875, -7.1719274e-05, -0.00038578815, -8.296486e-06, -6.031526e-06, -0.7716708, -0.035560634, -0.03030368, -0.0006353595, -0.0020739632, -0.0018546645, -0.30818406, -7.684431e-05, -3.142485e-05, -0.00084813, -0.003734728, -0.008510844, -0.061013486, -0.014669288, -5.3162735e-06, -0.21631278, -5.7293146e-05, -2.6180607e-05, -9.72699e-06, -1.3823812e-06, -6.6619094e-07, -0.033690672, -0.00039795213, -0.0043740766, -0.00016519109, -0.000108559456, -6.6949986e-05, -3.2973632e-05, -3.5717305e-05, -1.7834122e-05, -4.7041198e-05, -2.3360508e-06, -2.2159093e-06, -0.009361095, -0.00042401004, -0.014988036, -0.0071803425, -0.7069679, -0.006630881, -5.693833e-05, -0.00015803763, -8.173468e-05, -0.00010665305, -0.002127242, -0.000104387145, -0.0004642021, -0.0056601134, -0.000323718, -3.333313e-05, -4.048565e-05, -0.00039819148, -6.7069195e-05, -1.5805701e-05, -3.3212986e-05, -3.4642555e-05, -4.072407e-05, -5.3837026e-05, -4.6010214e-06, -2.1051823e-05, -0.0002419183, -0.000120601406, -1.5006569e-06, -0.9725439, -0.00023690966, -1.4616429e-05, -1.2231317e-05, -9.055464e-07, -1.2468796e-05, -0.00027447072, -9.925743e-05, -9.115311e-05, -8.3996834e-05, -7.6605895e-05, -1.7953334e-05, -0.0012127497, -0.00016066022, -0.00012608219, -4.3465872e-05, -0.029577013, -0.028904613, -0.10575936, -0.072910614], "top_logprobs": null, "text_offset": [4611, 4611, 4612, 4619, 4620, 4624, 4627, 4629, 4636, 4637, 4641, 4644, 4646, 4655, 4657, 4663, 4664, 4673, 4675, 4684, 4690, 4691, 4694, 4701, 4702, 4706, 4708, 4717, 4718, 4721, 4724, 4726, 4728, 4730, 4731, 4732, 4733, 4736, 4738, 4739, 4740, 4742, 4745, 4748, 4751, 4753, 4755, 4758, 4760, 4762, 4771, 4772, 4775, 4778, 4780, 4783, 4786, 4788, 4791, 4792, 4794, 4795, 4797, 4799, 4801, 4803, 4812, 4813, 4816, 4819, 4821, 4823, 4825, 4827, 4829, 4831, 4840, 4842, 4851, 4857, 4858, 4864, 4866, 4875, 4876, 4879, 4882, 4884, 4886, 4888, 4890, 4892, 4894, 4903, 4904, 4907, 4910, 4912, 4914, 4916, 4918, 4921, 4923, 4929, 4930, 4939, 4941, 4950, 4952, 4961, 4967, 4968, 4974, 4976, 4985, 4986, 4989, 4992, 4994, 4995, 4996, 4998, 5000, 5002, 5004, 5006, 5015, 5016, 5019, 5022, 5024, 5026, 5029, 5032, 5034, 5036, 5037, 5038, 5039, 5041, 5044, 5047, 5050, 5052, 5055, 5058, 5061, 5063, 5065, 5066, 5067, 5068, 5070, 5073, 5076, 5079, 5081, 5083, 5086, 5088, 5090, 5099, 5100, 5103, 5106, 5108, 5111, 5114, 5116, 5119, 5120, 5122, 5123, 5125, 5127, 5130, 5130, 5130]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform small_circle (transform_matrix 2.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2.5 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0071279346, -0.09899823, -0.050643727, -8.7457636e-05, -0.00051327853, -4.2272848e-05, -0.011320013, -0.8909374, -0.10844203, -1.4798099, -1.0843972, -0.32928014, -0.79031277, -2.6060465e-05, -0.27332187, -0.0029126701, -0.00011106284, -0.0002588497, -4.0126153e-05, -4.277735e-07, -0.71195596, -4.315588, -0.67334235, -0.0099899, -0.0027026269, -0.0029428552, -0.002812901, -0.005540113, -0.019726718, -0.016049437, -0.00017914227, -7.24364e-05, -1.1536651, -0.13176067, -0.1563446, -0.039189596, -0.006073266, -0.0044638207, -0.016984327, -0.1445162, -0.00019463846, -3.076318e-07, -1.650701, -0.2630671, -0.014482588, -0.0030718106, -0.0064628334, -0.0072337138, -0.12950389, -0.18073308, -0.06590508, -0.60505915, -6.5092986e-06, -0.14573844, -0.0005184101, -6.3134365e-05, -1.44972155e-05, -9.370307e-06, -2.2159093e-06, -0.23192273, -0.2906705, -0.11544754, -0.0028591682, -0.00083977694, -0.0002640958, -0.00024275183, -0.0002977211, -6.7427754e-05, -0.0002512175, -1.7595703e-05, -2.2159093e-06, -0.45706066, -0.07005135, -0.06282081, -0.0034123668, -0.026574532, -0.012599622, -0.03102903, -0.049516544, -2.6773841e-05, -0.00045525676, -3.452334e-05], "top_logprobs": null, "text_offset": [4611, 4611, 4612, 4619, 4620, 4624, 4627, 4629, 4638, 4640, 4649, 4651, 4660, 4666, 4667, 4673, 4675, 4684, 4685, 4688, 4691, 4693, 4694, 4695, 4697, 4699, 4701, 4703, 4705, 4714, 4715, 4718, 4721, 4723, 4725, 4727, 4729, 4731, 4733, 4742, 4743, 4746, 4749, 4751, 4753, 4755, 4757, 4759, 4761, 4770, 4772, 4781, 4787, 4788, 4794, 4796, 4805, 4806, 4809, 4812, 4814, 4815, 4816, 4818, 4820, 4822, 4824, 4826, 4835, 4836, 4839, 4842, 4844, 4846, 4848, 4850, 4853, 4853, 4853, 4853, 4853, 4853]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 2 1 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 2 1 0 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 16 (transform_matrix 1 (/ (* 2 pi) 16) 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 1", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 1", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 16", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 16", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0071279346, -0.0889838, -0.0663539, -5.991855e-05, -0.000773205, -3.2735214e-05, -0.009198361, -0.60979295, -2.9159892e-05, -0.00025062053, -4.9902206e-05, -0.0028164878, -0.097363286, -0.05439744, -0.35314053, -3.883893e-06, -3.5240468e-05, -0.0011587427, -8.03023e-05, -0.04789492, -3.6482897e-06, -0.0069357944, -6.1516675e-06, -9.012677e-06, -2.141132e-05, -0.00013228387, -1.5448071e-05, -1.8907942e-05, -4.721163e-06, -1.8841804e-07, -0.003758242, -0.000114518014, -0.001878372, -0.000249787, -2.8682118e-05, -0.0005717847, -0.00029223657, -0.00020823294, -1.3422466e-05, -4.144026e-05, -9.103483e-05, -0.0015012103, -0.00040439412, -0.00028317483, -0.5435288, -0.00013025544, -9.130952e-06, -0.0049703433, -3.0353855e-05, -2.4390605e-05, -6.9861335e-06, -1.1430258e-06, -1.9382902e-05, -0.0006832541, -0.00038185148, -0.00013609948, -0.00024954765, -8.3404535e-05, -2.200643e-05, -0.0006059581, -6.361214e-05, -0.00037493455, -4.2272848e-05, -7.5892516e-05, -0.0009336777, -4.5374152e-05, -0.003516798, -4.838501e-06, -6.6619094e-07, -0.14714032, -0.029902633, -0.0001283481, -0.00016614476, -0.00039031997, -0.0017990109, -0.027939454, -0.32204163, -0.36545387, -4.162755, -0.18387207, -0.2181807, -2.1768952e-05, -0.7022458, -0.0045999167, -7.4460135e-05, -0.00029319117, -1.9741461e-05, -1.022884e-06, -0.8267545, -0.003824535, -0.024751538, -0.0008786136, -0.0003170395, -0.0005851435, -0.0006110841, -0.0033630247, -0.005715083, -0.003530796, -0.00022987355, -5.0260765e-05, -1.6252209, -3.7898996, -0.20146358, -0.042851284, -0.08067008, -0.0046811164, -0.0005501929, -0.0041978443, -1.9263687e-05, -7.8540467e-07, -0.8396541, -0.034263354, -0.18531905, -0.0015294439, -0.00619003, -0.007878647, -0.30695757, -0.00013252322, -2.200643e-05, -0.00093272305, -0.0011331419, -0.011557616, -0.02968814, -1.3341205, -0.019800344, -0.068109706, -6.9861335e-06, -0.37190783, -0.0005752417, -6.3014224e-05, -8.042151e-05, -6.6619094e-07, -6.6619094e-07, -0.09224589, -0.0011540889, -0.008314112, -0.0022599765, -0.0013260223, -0.00024585033, -0.00012238578, -0.0008057133, -3.8103353e-05, -0.00021550842, -9.251094e-06, -2.693682e-06, -0.09171299, -0.07716759, -0.0016298005, -0.0004595511, -0.00038113716, -0.0007792884, -3.595572e-05, -0.001357177, -1.4974988e-05, -1.022884e-06, -1.1554822, -0.5326525, -0.0836408, -0.004783587, -0.0019775657, -0.044351157, -0.0058895405, -0.2997889, -4.608659e-05, -4.6010214e-06, -0.24692707, -0.40197998, -0.49474525, -0.15354005, -0.8115529, -0.17190914, -0.054973725, -0.0137953535, -0.00073532487, -0.016865443, -0.044916574, -0.010225384, -0.01415342, -0.046452068, -0.0019941085, -0.0007631849, -0.00077475474, -0.0060902974, -0.0006642277, -2.141132e-05, -0.000111778085, -0.00012679932, -0.00020012581, -0.00048537247, -7.6726035e-05, -5.9321566e-05, -0.0010581954, -0.11338202, -0.002973166, -4.189725, -0.01468925, -4.811501e-05, -0.00027005718, -1.0561456e-05, -2.4543265e-06, -0.0058815046, -0.003364579, -0.0006108457, -0.0077061374, -0.0006852826, -0.000120719684, -0.03363076, -0.00036730146, -0.0020256434, -0.00036134195, -0.05052924, -0.023264494, -0.11030123, -0.07842024, -0.00011535529, -0.00065945653, -5.2288255e-05, -0.003989449], "top_logprobs": null, "text_offset": [4611, 4611, 4612, 4619, 4620, 4624, 4627, 4629, 4636, 4637, 4641, 4644, 4646, 4655, 4657, 4663, 4664, 4673, 4675, 4684, 4690, 4691, 4694, 4701, 4702, 4706, 4708, 4717, 4718, 4721, 4724, 4726, 4728, 4730, 4731, 4732, 4733, 4736, 4738, 4739, 4740, 4742, 4745, 4748, 4751, 4753, 4755, 4758, 4760, 4762, 4771, 4772, 4775, 4778, 4780, 4783, 4786, 4788, 4791, 4792, 4794, 4795, 4797, 4799, 4801, 4803, 4812, 4813, 4816, 4819, 4821, 4823, 4825, 4827, 4829, 4831, 4840, 4842, 4851, 4853, 4862, 4868, 4869, 4875, 4877, 4886, 4887, 4890, 4893, 4895, 4896, 4897, 4899, 4901, 4903, 4905, 4907, 4916, 4917, 4920, 4923, 4925, 4927, 4929, 4931, 4933, 4935, 4944, 4945, 4948, 4951, 4953, 4955, 4957, 4959, 4962, 4964, 4970, 4971, 4980, 4982, 4991, 4993, 5002, 5004, 5013, 5019, 5020, 5026, 5028, 5037, 5038, 5041, 5044, 5046, 5047, 5048, 5050, 5052, 5054, 5056, 5058, 5067, 5068, 5071, 5074, 5076, 5078, 5080, 5082, 5084, 5086, 5095, 5096, 5099, 5102, 5104, 5106, 5108, 5110, 5112, 5114, 5123, 5124, 5127, 5130, 5132, 5134, 5137, 5140, 5142, 5144, 5145, 5146, 5147, 5149, 5152, 5155, 5158, 5160, 5163, 5166, 5169, 5171, 5173, 5174, 5175, 5176, 5178, 5181, 5184, 5187, 5189, 5191, 5194, 5197, 5199, 5208, 5209, 5212, 5215, 5217, 5220, 5223, 5225, 5228, 5229, 5232, 5233, 5235, 5237, 5240, 5240, 5240, 5240, 5240, 5240, 5240]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0071279346, -0.08777987, -0.06518465, -6.850158e-05, -0.0003718351, -4.5967376e-05, -0.00695404, -0.5439048, -2.7133337e-05, -0.00017675622, -4.871012e-05, -0.0027540873, -0.09425316, -0.044122327, -0.3252946, -5.4364154e-06, -4.0963423e-05, -0.0008931693, -7.005035e-05, -0.050198454, -3.051303e-06, -0.00698483, -8.4157e-06, -8.5358415e-06, -3.0473995e-05, -0.00018641399, -1.4616429e-05, -1.6999666e-05, -6.8669196e-06, -5.460492e-07, -0.0029800397, -9.449002e-05, -0.0016603677, -0.00028854018, -2.1051823e-05, -0.00047493746, -0.00038602657, -0.00016662253, -1.7834122e-05, -4.430127e-05, -0.0001351458, -0.0013138462, -0.00029319117, -0.00023023302, -1.0164355, -0.00056963606, -1.8310955e-05, -0.06590966, -5.657977e-05, -1.44972155e-05, -1.2708151e-05, -1.2622395e-06, -1.8601542e-06, -0.00062671263, -0.00018009498, -0.00017878464, -0.00014945272, -8.626461e-05, -2.5344274e-05, -0.00036289258, -0.0001173809, -0.0003489405, -4.680184e-05, -2.319758e-05, -0.00027148862, -6.9810994e-05, -0.0033099188, -2.9311614e-06, -1.1430258e-06, -0.084384516, -0.017329767, -7.3745825e-05, -9.38949e-05, -0.00018545937, -0.0007784558, -0.027701668, -1.0871738, -4.4818075e-06, -1.3065393, -0.0005450669, -3.452334e-05, -0.00018462398, -1.7400124e-06, -2.8138238e-06, -0.6744562, -0.026441285, -0.00016721859, -8.376217e-05, -0.0015240738, -0.0015419222, -0.215017, -5.4194657e-05, -0.00031715777, -0.0006108457, -0.0017551836, -0.0048104194, -0.034586433, -0.012702362, -2.4543265e-06, -0.14274794, -3.965026e-05, -1.9741461e-05, -1.4736571e-05, -5.460492e-07, -3.529076e-06, -0.02300104, -0.00014992956, -0.0021814818, -0.0002561051, -7.815842e-05, -7.708367e-05, -3.2735214e-05, -4.0603925e-05, -1.5094201e-05, -7.839496e-05, -1.7400124e-06, -6.827632e-08, -0.0054790997, -8.3996834e-05, -0.004476752, -0.0020974951, -0.35811755, -0.0073099043, -4.5967376e-05, -0.00023714808, -5.7057543e-05, -0.0001097506, -0.00030010715, -8.447461e-05, -0.00023142513, -0.0031653272, -0.00042484637, -3.4762696e-05, -4.5255874e-05, -0.00038054204, -0.00018522002, -1.1159372e-05, -2.3912831e-05, -4.954739e-05, -5.169127e-05, -4.2153635e-05, -6.6619094e-07, -2.4390605e-05, -0.00019010947, -0.00010128584, -3.7684315e-06, -1.5578187, -5.8247755e-05, -2.045765e-05, -1.3306066e-05, -1.1430258e-06, -1.0561456e-05, -0.00022743117, -5.24084e-05, -9.663671e-05, -4.0843282e-05, -6.2420055e-05, -2.045765e-05, -0.0013801571, -0.00017019878, -0.000120719684, -6.4566746e-05, -0.012922906, -0.025802609, -0.10596987, -0.06783767, -0.00014802223, -0.00055508513, -6.122609e-05, -0.009310018], "top_logprobs": null, "text_offset": [4611, 4611, 4612, 4619, 4620, 4624, 4627, 4629, 4636, 4637, 4641, 4644, 4646, 4655, 4657, 4663, 4664, 4673, 4675, 4684, 4690, 4691, 4694, 4701, 4702, 4706, 4708, 4717, 4718, 4721, 4724, 4726, 4728, 4730, 4731, 4732, 4733, 4736, 4738, 4739, 4740, 4742, 4745, 4748, 4751, 4753, 4755, 4758, 4760, 4762, 4771, 4772, 4775, 4778, 4780, 4783, 4786, 4788, 4791, 4792, 4794, 4795, 4797, 4799, 4801, 4803, 4812, 4813, 4816, 4819, 4821, 4823, 4825, 4827, 4829, 4831, 4840, 4846, 4847, 4853, 4855, 4864, 4865, 4868, 4871, 4873, 4875, 4877, 4879, 4882, 4884, 4890, 4891, 4900, 4902, 4911, 4913, 4922, 4928, 4929, 4935, 4937, 4946, 4947, 4950, 4953, 4955, 4956, 4957, 4959, 4961, 4963, 4965, 4967, 4976, 4977, 4980, 4983, 4985, 4987, 4990, 4993, 4995, 4997, 4998, 4999, 5000, 5002, 5005, 5008, 5011, 5013, 5016, 5019, 5022, 5024, 5026, 5027, 5028, 5029, 5031, 5034, 5037, 5040, 5042, 5044, 5047, 5049, 5051, 5060, 5061, 5064, 5067, 5069, 5072, 5075, 5077, 5080, 5081, 5083, 5084, 5086, 5088, 5091, 5091, 5091, 5091, 5091, 5091, 5091]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 2 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.0071279346, -0.09701836, -0.07145168, -9.174727e-05, -0.0005278305, -5.4552278e-05, -0.007852152, -0.49842003, -3.7266083e-05, -0.00031143386, -8.03023e-05, -0.0024405285, -0.101454884, -0.048748847, -0.31825566, -5.675771e-06, -2.5941252e-05, -0.0012005145, -8.88872e-05, -0.0477148, -3.170517e-06, -0.008680199, -1.2946569e-05, -6.746778e-06, -3.0826937e-05, -0.00013133019, -1.4377073e-05, -1.8668587e-05, -5.4364154e-06, -6.827632e-08, -0.0044824397, -0.00016531031, -0.0016006047, -0.00025097816, -2.5344274e-05, -0.0005095821, -0.00031823252, -0.00014885482, -1.2828294e-05, -4.6325007e-05, -0.00014003337, -0.0010528873, -0.00027578016, -0.00022468844, -0.5751989, -0.00011869313, -8.176345e-06, -0.0059484807, -4.46589e-05, -2.4510746e-05, -5.675771e-06, -1.022884e-06, -1.5214344e-05, -0.0007722504, -0.00020906834, -0.00018689176, -0.0002395332, -6.754697e-05, -2.4032974e-05, -0.00040761274, -5.7177684e-05, -0.0003642048, -5.0856816e-05, -5.8725527e-05, -0.0011536111, -4.394177e-05, -0.0026801564, -3.883893e-06, -5.460492e-07, -0.1463424, -0.026288355, -0.00014575632, -0.00010665305, -0.00056927843, -0.0018891806, -0.027331611, -1.3541437, -1.0920954e-05, -1.2222563, -0.0009304562, -4.0246297e-05, -0.00032133286, -4.0040345e-06, -5.79217e-06, -0.5673106, -0.03791601, -0.00026325852, -0.00012095904, -0.0016364264, -0.0016316507, -1.5198839, -0.41392088, -0.333936, -0.0991344, -1.4736571e-05, -0.7499034, -0.00073115254, -0.00013133019, -7.100402e-05, -2.1889093e-05, -9.490449e-06, -1.0603529, -0.020407096, -0.029086906, -0.0005615252, -0.00027649727, -0.00014563711, -0.00018021514, -0.00044404552, -7.636654e-05, -0.00060953817, -1.1991961e-05, -3.529076e-06, -0.21738578, -0.0054157553, -2.311413, -0.01125955, -0.011661336, -0.01688951, -0.03987681, -0.048226535, -2.5344274e-05], "top_logprobs": null, "text_offset": [4611, 4611, 4612, 4619, 4620, 4624, 4627, 4629, 4636, 4637, 4641, 4644, 4646, 4655, 4657, 4663, 4664, 4673, 4675, 4684, 4690, 4691, 4694, 4701, 4702, 4706, 4708, 4717, 4718, 4721, 4724, 4726, 4728, 4730, 4731, 4732, 4733, 4736, 4738, 4739, 4740, 4742, 4745, 4748, 4751, 4753, 4755, 4758, 4760, 4762, 4771, 4772, 4775, 4778, 4780, 4783, 4786, 4788, 4791, 4792, 4794, 4795, 4797, 4799, 4801, 4803, 4812, 4813, 4816, 4819, 4821, 4823, 4825, 4827, 4829, 4831, 4840, 4846, 4847, 4853, 4855, 4864, 4865, 4868, 4871, 4873, 4875, 4877, 4879, 4882, 4884, 4893, 4895, 4904, 4910, 4911, 4917, 4919, 4928, 4929, 4932, 4935, 4937, 4938, 4939, 4941, 4943, 4945, 4947, 4949, 4958, 4959, 4962, 4965, 4967, 4969, 4971, 4973, 4976, 4976, 4976, 4976]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0071279346, -0.09606006, -0.058440853, -7.255186e-05, -0.00096619444, -4.394177e-05, -0.007761159, -0.88120395, -0.100621104, -0.30711073, -6.754697e-05, -9.103483e-05, -0.0016208449, -0.0026008508, -0.13355257, -6.746778e-06, -0.010296261, -5.7891062e-05, -1.2588937e-05, -3.869565e-05, -0.0004999197, -3.3450466e-05, -3.3093773e-05, -9.966347e-06, -3.076318e-07, -0.007726138, -0.00045978764, -0.0041059093, -0.00033629782, -2.7371756e-05, -0.0013582519, -0.00074761454, -0.00013431041, -2.4272329e-05, -5.3837026e-05, -0.00039055935, -0.0016711752, -0.0006630347, -0.00028830176, -0.41068217, -0.00015887116, -1.9263687e-05, -0.0216898, -0.00023535996, -3.7266083e-05, -6.746778e-06, -3.4089344e-06, -0.00023500233, -0.0008707374, -0.00073532487, -0.00023130498, -0.00028579836, -0.00010545909, -2.880226e-05, -0.0004352194, -7.314978e-05, -0.00044356775, -7.052812e-05, -9.174727e-05, -0.00089340867, -0.0001233404, -0.002083099, -8.296486e-06, -4.838501e-06, -0.22401279, -0.02902806, -0.00036932988, -0.0004614594, -0.00042830152, -0.0063935453, -0.1875635, -0.23719093, -1.087794, -3.953198e-05, -0.00029855556, -0.0037613525, -0.004625068, -0.13147464, -9.012677e-06, -0.008613883, -5.79217e-06, -1.7119806e-05, -2.1768952e-05, -0.00010581859, -2.6060465e-05, -1.8190814e-05, -5.5556293e-06, -1.2622395e-06, -0.0032179463, -0.00016042087, -0.0018215827, -0.00019845407, -4.2033495e-05, -0.00096130127, -0.000769626, -9.9616926e-05, -1.688045e-05, -4.9308033e-05, -0.000116070536, -0.0018908533, -0.0006478858, -0.0001902296, -0.36778262, -0.00043354955, -1.1159372e-05, -0.017790906, -7.4104384e-05, -6.4921565e-05, -8.864972e-05, -3.0353855e-05, -3.7505437e-05, -0.0019886738, -0.0006654207, -0.00015052655, -0.00015732239, -7.97072e-05, -4.394177e-05, -0.00036766095, -6.587617e-05, -0.00055508513, -7.136165e-05, -0.0016985802, -0.001887031, -0.0011633364, -0.0013296634, -1.9382902e-05, -1.1278585e-05, -0.82067454, -0.07485797, -0.0063152653, -0.0011807624, -0.01712062, -0.024502046, -0.061478183, -0.04130669, -5.3477528e-05, -0.00088672637, -8.018216e-05], "top_logprobs": null, "text_offset": [4611, 4611, 4612, 4619, 4620, 4624, 4627, 4629, 4638, 4640, 4646, 4647, 4656, 4658, 4667, 4673, 4674, 4677, 4684, 4685, 4689, 4691, 4700, 4701, 4704, 4707, 4709, 4711, 4713, 4714, 4715, 4716, 4719, 4721, 4722, 4723, 4725, 4728, 4731, 4734, 4736, 4738, 4741, 4743, 4745, 4754, 4755, 4758, 4761, 4763, 4766, 4769, 4771, 4774, 4775, 4777, 4778, 4780, 4782, 4784, 4786, 4795, 4796, 4799, 4802, 4804, 4806, 4808, 4810, 4812, 4814, 4823, 4825, 4831, 4832, 4841, 4843, 4852, 4858, 4859, 4862, 4869, 4870, 4874, 4876, 4885, 4886, 4889, 4892, 4894, 4896, 4898, 4899, 4900, 4901, 4904, 4906, 4907, 4908, 4910, 4913, 4916, 4919, 4921, 4923, 4926, 4928, 4930, 4939, 4940, 4943, 4946, 4948, 4951, 4954, 4956, 4959, 4960, 4962, 4963, 4965, 4967, 4969, 4971, 4980, 4981, 4984, 4987, 4989, 4991, 4993, 4995, 4998, 4998, 4998, 4998, 4998, 4998]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", "))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.0071279346, -0.10108288, -0.055587202, -8.8051806e-05, -0.00085278286, -4.966285e-05, -0.0077965395, -0.5200076, -3.7148744e-05, -0.00027959672, -4.775551e-05, -0.0029138662, -0.096106775, -0.045253094, -0.32810003, -4.838501e-06, -4.430127e-05, -0.00094137463, -6.778445e-05, -0.030969273, -2.693682e-06, -0.006807961, -6.8669196e-06, -7.4639065e-06, -2.0218295e-05, -0.00013395278, -1.2231317e-05, -1.5448071e-05, -3.883893e-06, -3.076318e-07, -0.0038612136, -9.4967785e-05, -0.0019812686, -0.00033868288, -3.249586e-05, -0.0005323031, -0.00022915828, -0.00020811372, -1.688045e-05, -4.036551e-05, -0.00013073228, -0.0015707565, -0.0003940164, -0.00039735518, -0.5419254, -0.00015255497, -9.251094e-06, -0.004633392, -4.7399757e-05, -2.1291178e-05, -6.1516675e-06, -1.1430258e-06, -5.197998e-06, -0.0008252795, -0.00026170976, -0.0001314494, -0.00023333247, -8.03023e-05, -2.3912831e-05, -0.0004636042, -5.7891062e-05, -0.00037696297, -5.4075444e-05, -8.137612e-05, -0.00088553247, -5.07376e-05, -0.0029494904, -3.4089344e-06, -1.7400124e-06, -2.4777286, -0.03692584, -0.001729626, -0.00025872953, -0.002359448, -0.0013529991, -0.051952425, -0.34589845, -0.30909085, -0.034280065, -4.6010214e-06, -0.2691509, -0.00025956213, -7.100402e-05, -3.4762696e-05, -4.4818075e-06, -1.8841804e-07, -0.33812144, -0.014179296, -0.00013037559, -8.495144e-05, -0.0042178985, -0.00026838828, -5.550595e-05, -0.00013919984, -1.163433e-05, -4.6010214e-06, -0.8381288, -0.01983822, -0.021751625, -0.00028651362, -0.005277029, -0.0024156722, -1.5679066, -0.3419928, -0.3445322, -0.10288349, -8.5358415e-06, -0.5757975, -0.0007783357, -0.00014873935, -5.312365e-05, -1.3823812e-06, 0, -0.21925944, -0.0041360743, -0.014192598, -0.0014353112, -0.00078525353, -0.00012381817, -0.00011070334, -0.00029784034, -7.100402e-05, -0.0002494275, -2.4543265e-06, -1.8601542e-06, -0.069239765, -0.0023955954, -0.12357899, -0.017234012, -1.1144493, -0.014731046, -0.00038722056, -0.00055329327, -9.878341e-05, -0.0008058335, -0.0009621376, -0.00062623486, -0.00211667, -0.009196257, -0.00021598431, -0.00019964804, -6.3492e-05, -0.0008106056, -7.8038276e-05, -1.0681599e-05, -4.430127e-05, -6.253833e-05, -6.468596e-05, -5.145473e-05, -1.0444119e-05, -2.1768952e-05, -0.00021622273, -0.011162985, -0.08690834, -1.3136269, -0.008398134, -3.01145e-05, -3.5001114e-05, -1.022884e-06, -8.7733215e-06, -0.005976901, -0.0056337966, -0.0007186854, -0.001297554, -0.00041315737, -4.048565e-05, -0.011565758, -0.00019082283, -0.00043545783, -0.00012643983, -3.656682, -0.094962016, -0.097974084, -0.06588993, -8.352281e-05, -0.00075178785, -8.459475e-05, -0.005628464], "top_logprobs": null, "text_offset": [4611, 4611, 4612, 4619, 4620, 4624, 4627, 4629, 4636, 4637, 4641, 4644, 4646, 4655, 4657, 4663, 4664, 4673, 4675, 4684, 4690, 4691, 4694, 4701, 4702, 4706, 4708, 4717, 4718, 4721, 4724, 4726, 4728, 4730, 4731, 4732, 4733, 4736, 4738, 4739, 4740, 4742, 4745, 4748, 4751, 4753, 4755, 4758, 4760, 4762, 4771, 4772, 4775, 4778, 4780, 4783, 4786, 4788, 4791, 4792, 4794, 4795, 4797, 4799, 4801, 4803, 4812, 4813, 4816, 4819, 4821, 4823, 4825, 4827, 4829, 4831, 4840, 4842, 4851, 4857, 4858, 4864, 4866, 4875, 4876, 4879, 4882, 4884, 4886, 4888, 4890, 4892, 4894, 4903, 4904, 4907, 4910, 4912, 4914, 4916, 4918, 4921, 4923, 4932, 4934, 4943, 4949, 4950, 4956, 4958, 4967, 4968, 4971, 4974, 4976, 4977, 4978, 4980, 4982, 4984, 4986, 4988, 4997, 4998, 5001, 5004, 5006, 5008, 5011, 5014, 5016, 5018, 5019, 5020, 5021, 5023, 5026, 5029, 5032, 5034, 5037, 5040, 5043, 5045, 5047, 5048, 5049, 5050, 5052, 5055, 5058, 5061, 5063, 5065, 5068, 5070, 5072, 5081, 5082, 5085, 5088, 5090, 5093, 5096, 5098, 5101, 5102, 5104, 5105, 5107, 5109, 5111, 5111, 5111, 5111, 5111, 5111, 5111]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4.25 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform small_square (transform_matrix 1 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", ".", "25", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.0071279346, -0.08310637, -0.060912885, -9.5562886e-05, -0.00055544183, -5.7177684e-05, -0.008946524, -0.5542012, -3.6670972e-05, -0.00030213463, -5.503005e-05, -0.0026444755, -0.098277055, -0.04837817, -1.399251, -0.33257353, -1.4974988e-05, -0.18863751, -0.00062862184, -7.016862e-05, -4.6206733e-05, -1.4736571e-05, -6.827632e-08, -0.22059488, -0.008115373, -0.00015720223, -0.0002745909, -0.00014420661, -0.00071594265, -0.00016340296, -0.0026311486, -2.7371756e-05, -6.6619094e-07, -0.3857537, -1.799752, -0.17982356, -0.002478708, -0.00020036235, -0.00018295787, -0.002837171, -0.0017386426, -0.057998423, -0.11771835, -0.20621894, -0.016083233, -2.9311614e-06, -0.041297372, -8.8290224e-05, -2.9399247e-05, -3.883893e-06, -1.2468796e-05, -1.9765537e-06, -0.045555294, -0.009806359, -6.7069195e-05, -6.194322e-05, -0.0006382224, -0.00026421316, -7.827482e-05, -0.00023178181, -1.4736571e-05, -6.6619094e-07, -1.6194305, -0.16412751, -0.009667085, -0.0004821529, -0.01624648, -0.003329775, -0.31004164, -0.7214878, -2.2484204e-05, -0.109803386, -0.0006425167, -5.216904e-05, -0.00017246376, -9.846204e-06, -7.8540467e-07, -0.14209084, -0.0041928166, -0.0050853016, -0.000118333635, -0.0030156127, -0.012354587, -0.044217017, -0.028610103, -4.0603925e-05, -0.00033534507, -6.909574e-05, -0.003753515, -0.88893855], "top_logprobs": null, "text_offset": [4611, 4611, 4612, 4619, 4620, 4624, 4627, 4629, 4636, 4637, 4641, 4644, 4646, 4655, 4657, 4666, 4672, 4673, 4679, 4681, 4690, 4691, 4694, 4697, 4699, 4701, 4703, 4705, 4707, 4709, 4718, 4719, 4722, 4725, 4727, 4728, 4730, 4732, 4734, 4736, 4738, 4740, 4749, 4751, 4760, 4766, 4767, 4773, 4775, 4784, 4785, 4788, 4791, 4793, 4795, 4797, 4799, 4801, 4803, 4812, 4813, 4816, 4819, 4821, 4823, 4825, 4827, 4830, 4832, 4841, 4847, 4848, 4854, 4856, 4865, 4866, 4869, 4872, 4874, 4876, 4878, 4880, 4883, 4883, 4883, 4883, 4883, 4883, 4883, 4883]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes"], "token_logprobs": [-0.0071279346, -0.10147006, -0.057067767, -8.471396e-05, -0.0005579471, -3.4287736e-05, -0.008379504, -0.9053194, -0.09945339, -1.4794316, -0.6374931, -3.2140102e-05, -0.21766102, -0.00161177, -9.21049e-05, -0.00031978224, -2.8206221e-05, -1.8841804e-07, -0.35924917, -0.013003397, -0.00028472362, -0.0005087468, -0.00027780765, -0.0010447716, -0.0001678165, -0.0016597718, -2.0218295e-05, -2.693682e-06, -0.54624915, -0.23832577, -0.0009513975, -0.00033677462, -0.0014176422, -0.0063799275, -0.1995431, -0.20562078, -0.19681038, -0.034916285, -5.197998e-06, -0.11752748, -0.0004009333, -5.5385808e-05, -1.0204763e-05, -2.1171965e-05, -5.3162735e-06, -0.09328946, -0.0123978, -0.00012214643, -0.00010128584, -0.00016066022, -0.00053552364, -6.6829845e-05, -0.0005991576, -1.7475562e-05, -5.460492e-07, -0.86590934, -0.053867463, -0.0015638313, -0.0003253869, -0.005363979, -0.015036439, -0.048787523, -0.044153035, -7.839496e-05, -0.0005688007, -6.031526e-06], "top_logprobs": null, "text_offset": [4611, 4611, 4612, 4619, 4620, 4624, 4627, 4629, 4638, 4640, 4649, 4655, 4656, 4662, 4664, 4673, 4674, 4677, 4680, 4682, 4684, 4686, 4688, 4690, 4692, 4701, 4702, 4705, 4708, 4710, 4712, 4714, 4716, 4718, 4720, 4729, 4731, 4740, 4746, 4747, 4753, 4755, 4764, 4765, 4768, 4771, 4773, 4775, 4777, 4779, 4781, 4783, 4792, 4793, 4796, 4799, 4801, 4803, 4805, 4807, 4810, 4810, 4810, 4810, 4810, 4810]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.0071279346, -0.08944928, -0.052157182, -7.541475e-05, -0.0005704706, -4.179789e-05, -0.006109128, -0.5739258, -3.2973632e-05, -0.00021014028, -5.7652644e-05, -0.0026776474, -0.101546586, -0.0498924, -0.33483294, -5.3162735e-06, -3.3212986e-05, -0.000941016, -7.684431e-05, -0.04947758, -2.5744682e-06, -0.008691141, -8.892534e-06, -8.7733215e-06, -2.8565719e-05, -0.00012286357, -1.6165199e-05, -1.9621319e-05, -6.5092986e-06, -6.6619094e-07, -0.0038779688, -0.00022766957, -0.0014255212, -0.0002644525, -2.8206221e-05, -0.00059546024, -0.0003659939, -0.00025050133, -1.2351458e-05, -4.1678675e-05, -0.00013443055, -0.0011969345, -0.00038244936, -0.0002539584, -0.5472695, -0.00011571198, -9.251094e-06, -0.0038423657, -5.312365e-05, -1.843017e-05, -4.9586424e-06, -2.0966954e-06, -1.6165199e-05, -0.0007661643, -0.00022373382, -0.00018378951, -0.00012787033, -7.8752586e-05, -2.1051823e-05, -0.000464082, -6.158372e-05, -0.00033158858, -4.573365e-05, -7.779892e-05, -0.00059617736, -5.2885232e-05, -0.0037933006, -3.051303e-06, -4.277735e-07, -0.17114863, -0.023362475, -0.0001779483, -9.413332e-05, -0.00045215452, -0.0021053809, -0.032156426, -0.3110408, -0.3564874, -0.023917843, -4.6010214e-06, -0.17347734, -0.00013562171, -5.4075444e-05, -2.2245786e-05, -4.361666e-06, -1.8841804e-07, -0.263899, -0.03057134, -0.00013848272, -7.529741e-05, -0.0024050954, -0.00025646458, -6.2420055e-05, -0.00041530497, -7.584048e-06, -6.746778e-06, -0.77464384, -0.031090822, -0.024485188, -0.00068432797, -0.0018915695, -0.0020386053, -0.3130921, -6.6949986e-05, -4.0843282e-05, -0.000699718, -0.0029417786, -0.007659646, -0.05032011, -0.01690812, -5.5556293e-06, -0.23175086, -3.142485e-05, -2.4750101e-05, -1.4139594e-05, -1.022884e-06, -9.055464e-07, -0.027578749, -0.00033570456, -0.003732574, -0.00034392995, -0.000118453776, -8.209043e-05, -3.4762696e-05, -3.5477948e-05, -2.0098154e-05, -5.4432137e-05, -1.022884e-06, -1.3823812e-06, -0.009057067, -0.00029950924, -0.01636717, -0.004676567, -0.7387467, -0.011859934, -9.878341e-05, -0.00076556916, -6.528106e-05, -0.00018474413, -0.0015063436, -0.00023404865, -0.0007414092, -0.0087412875, -0.00052973966, -5.7770918e-05, -7.3745825e-05, -0.0010620138, -0.00021634194, -1.2708151e-05, -7.076466e-05, -4.9427246e-05, -5.169127e-05, -4.5494293e-05, -2.5744682e-06, -2.2958224e-05, -0.00042830152, -0.00014802223, -2.693682e-06, -1.204625, -0.00019452299, -1.8668587e-05, -1.37819625e-05, -5.460492e-07, -2.2245786e-05, -0.0002482345, -7.8038276e-05, -8.7696986e-05, -5.467149e-05, -8.900641e-05, -1.6282536e-05, -0.0014044513, -0.00022301951, -0.0001486192, -5.264588e-05, -0.019002462, -0.02568121, -0.09577521, -0.069090694], "top_logprobs": null, "text_offset": [4611, 4611, 4612, 4619, 4620, 4624, 4627, 4629, 4636, 4637, 4641, 4644, 4646, 4655, 4657, 4663, 4664, 4673, 4675, 4684, 4690, 4691, 4694, 4701, 4702, 4706, 4708, 4717, 4718, 4721, 4724, 4726, 4728, 4730, 4731, 4732, 4733, 4736, 4738, 4739, 4740, 4742, 4745, 4748, 4751, 4753, 4755, 4758, 4760, 4762, 4771, 4772, 4775, 4778, 4780, 4783, 4786, 4788, 4791, 4792, 4794, 4795, 4797, 4799, 4801, 4803, 4812, 4813, 4816, 4819, 4821, 4823, 4825, 4827, 4829, 4831, 4840, 4842, 4851, 4857, 4858, 4864, 4866, 4875, 4876, 4879, 4882, 4884, 4886, 4888, 4890, 4892, 4894, 4903, 4904, 4907, 4910, 4912, 4914, 4916, 4918, 4921, 4923, 4929, 4930, 4939, 4941, 4950, 4952, 4961, 4967, 4968, 4974, 4976, 4985, 4986, 4989, 4992, 4994, 4995, 4996, 4998, 5000, 5002, 5004, 5006, 5015, 5016, 5019, 5022, 5024, 5026, 5029, 5032, 5034, 5036, 5037, 5038, 5039, 5041, 5044, 5047, 5050, 5052, 5055, 5058, 5061, 5063, 5065, 5066, 5067, 5068, 5070, 5073, 5076, 5079, 5081, 5083, 5086, 5088, 5090, 5099, 5100, 5103, 5106, 5108, 5111, 5114, 5116, 5119, 5120, 5122, 5123, 5125, 5127, 5130, 5130, 5130]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LgHdzWklbCtIr4SGmkRp1TKlRWS", "object": "text_completion", "created": 1651003353, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0056995563, -0.101374, -0.05010695, -0.0001589913, -0.00064394815, -5.037998e-05, -0.01564242, -0.83591026, -1.6045058e-05, -0.00020131696, -9.806815e-05, -0.0030517245, -0.07625044, -0.038239412, -0.63645715, -6.1516675e-06, -2.9519388e-05, -0.0007195207, -8.376217e-05, -0.039054967, -6.3900848e-06, -0.009565078, -1.4377073e-05, -1.2946569e-05, -5.157113e-05, -0.0003438117, -2.0575926e-05, -1.7595703e-05, -4.6010214e-06, 0, -0.0013839774, -9.24644e-05, -0.0018846422, -0.00030654538, -1.9503042e-05, -0.0003677792, -0.0005407735, -9.329886e-05, -1.8073477e-05, -4.775551e-05, -0.00012119652, -0.0005947469, -0.000425204, -0.00021896455, -0.5076489, -0.00014647158, -2.28437e-05, -0.036019325, -2.4750101e-05, -1.688045e-05, -1.2946569e-05, -2.693682e-06, -5.7770918e-05, -0.0004256799, -0.00017854528, -6.5041706e-05, -0.00020453747, -0.00012596205, -2.8087945e-05, -0.00017651686, -6.38515e-05, -0.00027911988, -3.5717305e-05, -2.6298881e-05, -0.00015290885, -4.775551e-05, -0.0056131794, -4.838501e-06, -5.197998e-06, -0.0765722, -0.00050540705, -0.0001707939, -8.2807564e-05, -5.216904e-05, -0.0010467983, -0.012374863, -0.09090976, -0.16655517, -0.023572382, -1.1039229e-05, -0.13172545, -0.00012465262, -1.3185924e-05, -1.855031e-05, -3.6482897e-06, -3.4089344e-06, -0.0512419, -7.9946556e-05, -5.598372e-05, -6.373136e-05, -0.00043772557, -0.00016531031, -1.1514188e-05, -8.876706e-05, -1.5006569e-06, -3.076318e-07, -0.038638867, -0.0005733325, -0.009549612, -9.949678e-05, -0.0008670992, -0.0015215657, -0.1258155, -8.1019425e-05, -2.3675353e-05, -0.0020080258, -0.0043280404, -0.010252239, -0.026462033, -0.04501128, -5.0260765e-05, -0.44065598, -0.00042746708, -1.4854846e-05, -1.7356348e-05, -1.022884e-06, -5.460492e-07, -0.008081784, -8.3045044e-05, -0.0013394516, -0.0001011657, -7.982734e-05, -8.161453e-05, -2.3435998e-05, -6.146545e-05, -1.3661821e-05, -5.7057543e-05, -1.3823812e-06, -4.0040345e-06, -0.0053241295, -0.0002022697, -0.016848352, -0.0036033555, -0.97577685, -0.026493857, -0.00012858746, -0.0007261411, -8.364295e-05, -0.00039687738, -0.002618659, -0.00052162877, -0.00078167446, -0.014929711, -0.00019964804, -0.00010176362, -6.194322e-05, -0.0012717111, -0.00019678609, -9.606849e-06, -4.7279616e-05, -4.1558535e-05, -8.6025255e-05, -8.388231e-05, -2.3360508e-06, -3.8577375e-05, -0.00045108353, -0.00015636964, -4.838501e-06, -1.45048, -6.015603e-05, -2.033751e-05, -7.4639065e-06, -1.9143545e-05, -2.5225998e-05, -0.0005447074, -0.00031894777, -0.00011690406, -4.4181128e-05, -0.00012489199, -2.6060465e-05, -0.0009295016, -0.00011082348, -0.00017460952, -0.00016244836, -0.008311405, -0.023953008, -0.11370894], "top_logprobs": null, "text_offset": [4896, 4896, 4897, 4904, 4905, 4909, 4912, 4914, 4921, 4922, 4926, 4929, 4931, 4940, 4942, 4948, 4949, 4958, 4960, 4969, 4975, 4976, 4979, 4986, 4987, 4991, 4993, 5002, 5003, 5006, 5009, 5011, 5013, 5015, 5016, 5017, 5018, 5021, 5023, 5024, 5025, 5027, 5030, 5033, 5036, 5038, 5040, 5043, 5045, 5047, 5056, 5057, 5060, 5063, 5065, 5068, 5071, 5073, 5076, 5077, 5079, 5080, 5082, 5084, 5086, 5088, 5097, 5098, 5101, 5104, 5106, 5108, 5110, 5112, 5114, 5116, 5125, 5127, 5136, 5142, 5143, 5149, 5151, 5160, 5161, 5164, 5167, 5169, 5171, 5173, 5175, 5177, 5179, 5188, 5189, 5192, 5195, 5197, 5199, 5201, 5203, 5206, 5208, 5214, 5215, 5224, 5226, 5235, 5237, 5246, 5252, 5253, 5259, 5261, 5270, 5271, 5274, 5277, 5279, 5280, 5281, 5283, 5285, 5287, 5289, 5291, 5300, 5301, 5304, 5307, 5309, 5311, 5314, 5317, 5319, 5321, 5322, 5323, 5324, 5326, 5329, 5332, 5335, 5337, 5340, 5343, 5346, 5348, 5350, 5351, 5352, 5353, 5355, 5358, 5361, 5364, 5366, 5368, 5371, 5373, 5375, 5384, 5385, 5388, 5391, 5393, 5396, 5399, 5401, 5404, 5405, 5407, 5408, 5410, 5412, 5415, 5415]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0056995563, -0.0932152, -0.04866868, -0.00014492373, -0.0007326985, -5.944078e-05, -0.015282614, -0.8239736, -1.7834122e-05, -0.0002974855, -0.00012357882, -0.0024610793, -0.07585826, -0.038914222, -0.7580251, -0.12423455, -2.1889093e-05, -0.097460724, -8.5549356e-05, -2.5941252e-05, -1.37819625e-05, -5.197998e-06, 0, -0.036945075, -0.00016089863, -9.38949e-05, -5.4194657e-05, -7.1719274e-05, -0.00023798255, -4.5613506e-05, -0.0005641506, -1.5006569e-06, -5.3162735e-06, -0.06596468, -0.0002351206, -6.885639e-05, -2.8087945e-05, -4.763911e-05, -0.00187037, -0.013218873, -0.05404072, -0.16524236, -8.7733215e-06, -2.200643e-05, -0.0018823134, -0.001155999, -0.05181098, -9.490449e-06, -0.008379384, -0.00022719182, -1.855031e-05, -1.2468796e-05, -0.0001783078, -9.251094e-06, -1.6165199e-05, -5.79217e-06, -1.8841804e-07, -0.00104143, -6.206056e-05, -0.004285896, -0.00025896798, -0.00011237507, -0.00036217732, -0.00030713953, -0.00012214643, -1.676031e-05, -4.0603925e-05, -0.00010987075, -0.0008044011, -0.00014372978, -0.0003307532, -0.20078139, -8.078007e-05, -2.033751e-05, -0.0058459546, -2.0815281e-05, -1.7119806e-05, -1.6642034e-05, -3.249586e-05, -1.3306066e-05, -0.000939227, -0.00045191802, -7.97072e-05, -0.00014372978, -7.159913e-05, -2.2126573e-05, -0.00034858286, -8.1256905e-05, -0.000295933, -7.028876e-05, -0.0014912398, -0.00031274796, -6.0753944e-05, -0.00073031615, -1.6521892e-05, -4.0040345e-06, -0.80253637, -0.0017346422, -0.0011309934, -0.00032991965, -0.0010374935, -0.001544191, -0.15242292, -9.7471166e-05, -0.0010079559, -0.0051672, -0.008475134, -0.02520554, -0.048742022, -0.06252673, -4.4419543e-05, -0.5277447, -0.00054089085, -4.501652e-05, -2.7013197e-05, -1.4616429e-05, -1.2622395e-06, -0.08225812, -0.00029199722, -0.0041281166, -0.00012799047, -0.00013705408, -8.8410365e-05, -5.4432137e-05, -5.0500123e-05, -1.8073477e-05, -3.8577375e-05, -3.051303e-06, 0, -0.0064190403, -0.00012036205, -0.01820971, -0.0034696066, -0.4685042, -0.00526211, -6.718934e-05, -0.00013311833, -7.899194e-05, -0.00018140629, -0.0013706664, -0.0001287076, -0.00028281534, -0.0030245215, -0.000102479804, -3.3809963e-05, -3.488097e-05, -0.0004049883, -6.551948e-05, -6.031526e-06, -1.6165199e-05, -4.9308033e-05, -4.5967376e-05, -6.337372e-05, -1.022884e-06, -2.8445576e-05, -0.00012119652, -9.234426e-05, -5.0778563e-06, -0.90294594, -7.982734e-05, -2.0218295e-05, -3.051303e-06, -5.7057543e-05, -5.912312e-06, -0.0005454245, -0.00014659172, -9.24644e-05, -6.9810994e-05, -0.00010927377, -1.4974988e-05, -0.0023084267, -7.6605895e-05, -0.00014349136, -7.124244e-05, -0.00862807, -0.02687236, -0.09616617], "top_logprobs": null, "text_offset": [4896, 4896, 4897, 4904, 4905, 4909, 4912, 4914, 4921, 4922, 4926, 4929, 4931, 4940, 4942, 4951, 4957, 4958, 4964, 4966, 4975, 4976, 4979, 4982, 4984, 4986, 4988, 4990, 4992, 4994, 5003, 5004, 5007, 5010, 5012, 5014, 5016, 5018, 5020, 5022, 5031, 5033, 5039, 5040, 5049, 5051, 5060, 5066, 5067, 5070, 5077, 5078, 5082, 5084, 5093, 5094, 5097, 5100, 5102, 5104, 5106, 5107, 5108, 5109, 5112, 5114, 5115, 5116, 5118, 5121, 5124, 5127, 5129, 5131, 5134, 5136, 5138, 5147, 5148, 5151, 5154, 5156, 5159, 5162, 5164, 5167, 5168, 5170, 5171, 5173, 5175, 5177, 5179, 5188, 5189, 5192, 5195, 5197, 5199, 5201, 5203, 5206, 5208, 5214, 5215, 5224, 5226, 5235, 5237, 5246, 5252, 5253, 5259, 5261, 5270, 5271, 5274, 5277, 5279, 5280, 5281, 5283, 5285, 5287, 5289, 5291, 5300, 5301, 5304, 5307, 5309, 5311, 5314, 5317, 5319, 5321, 5322, 5323, 5324, 5326, 5329, 5332, 5335, 5337, 5340, 5343, 5346, 5348, 5350, 5351, 5352, 5353, 5355, 5358, 5361, 5364, 5366, 5368, 5371, 5373, 5375, 5384, 5385, 5388, 5391, 5393, 5396, 5399, 5401, 5404, 5405, 5407, 5408, 5410, 5412, 5415, 5415]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0056995563, -0.10088085, -0.051486865, -0.00018307802, -0.0010852267, -4.2511267e-05, -0.017191501, -0.8916739, -2.141132e-05, -0.00035311276, -9.5442745e-05, -0.0034873085, -0.06343659, -0.035110917, -0.59937805, -7.3446927e-06, -4.501652e-05, -0.00066637533, -8.3404535e-05, -0.044882845, -7.3446927e-06, -0.01092957, -1.1398727e-05, -1.0444119e-05, -3.8577375e-05, -0.00022903908, -1.3185924e-05, -2.880226e-05, -3.883893e-06, 0, -0.0012001578, -8.268835e-05, -0.0027603628, -0.00027995434, -2.3795494e-05, -0.00042556066, -0.0007154658, -0.00011618975, -1.9028084e-05, -4.179789e-05, -0.00013884035, -0.00061979383, -0.000494912, -0.00031691935, -0.4328861, -0.000120601406, -2.7251614e-05, -0.041065264, -2.6538237e-05, -1.7595703e-05, -1.2588937e-05, -1.7400124e-06, -3.7028603e-05, -0.00045823885, -0.0002251634, -8.721922e-05, -0.00020274745, -0.00011201744, -2.272356e-05, -0.00028746822, -7.720381e-05, -0.00025443616, -5.24084e-05, -2.9756868e-05, -0.00019821846, -4.0126153e-05, -0.004996342, -2.5744682e-06, -2.9311614e-06, -0.06950017, -0.0004893054, -0.00014396913, -7.469949e-05, -6.826223e-05, -0.0010132086, -0.012114863, -0.074041724, -0.16203049, -0.02460846, -1.1278585e-05, -0.123037085, -9.925743e-05, -1.7356348e-05, -2.0696069e-05, -2.8138238e-06, -4.277735e-07, -0.05064009, -9.9735196e-05, -6.6949986e-05, -5.7652644e-05, -0.0004940775, -0.00012095904, -1.3900239e-05, -9.139247e-05, -1.2622395e-06, -2.9311614e-06, -0.038507286, -0.00042734694, -0.009046602, -0.00010557923, -0.0009246085, -0.0013672047, -0.11868617, -8.244993e-05, -4.1320116e-05, -0.0015459819, -0.0019967377, -0.0109849535, -0.02518396, -0.045502145, -3.7743856e-05, -0.4279663, -0.00035203897, -1.676031e-05, -2.1889093e-05, -5.460492e-07, -4.277735e-07, -0.0074405633, -8.185389e-05, -0.0016889083, -9.0558e-05, -9.663671e-05, -0.00010355082, -3.452334e-05, -4.871012e-05, -1.7834122e-05, -5.7413286e-05, -1.022884e-06, -4.6010214e-06, -0.0047250157, -0.0001614947, -0.012285857, -0.002951763, -0.4441852, -0.0050464817, -6.289782e-05, -0.00012810968, -6.802381e-05, -0.00020096028, -0.00092329714, -6.6949986e-05, -0.0005275911, -0.00307534, -0.00028472362, -4.29881e-05, -6.325358e-05, -0.0005605715, -6.635395e-05, -9.72699e-06, -1.5448071e-05, -3.965026e-05, -8.054166e-05, -7.028876e-05, -5.460492e-07, -4.871012e-05, -0.00010510146, -8.2927705e-05, -4.361666e-06, -1.2462876, -5.9085025e-05, -1.7834122e-05, -2.272356e-05, -7.8540467e-07, -1.5567284e-05, -0.0010603449, -0.00071534567, -9.21049e-05, -9.0437854e-05, -0.00012810968, -1.9382902e-05, -0.0024386165, -7.827482e-05, -0.00017914227, -0.00014742525, -0.038089678, -0.023665998, -0.10856673], "top_logprobs": null, "text_offset": [4896, 4896, 4897, 4904, 4905, 4909, 4912, 4914, 4921, 4922, 4926, 4929, 4931, 4940, 4942, 4948, 4949, 4958, 4960, 4969, 4975, 4976, 4979, 4986, 4987, 4991, 4993, 5002, 5003, 5006, 5009, 5011, 5013, 5015, 5016, 5017, 5018, 5021, 5023, 5024, 5025, 5027, 5030, 5033, 5036, 5038, 5040, 5043, 5045, 5047, 5056, 5057, 5060, 5063, 5065, 5068, 5071, 5073, 5076, 5077, 5079, 5080, 5082, 5084, 5086, 5088, 5097, 5098, 5101, 5104, 5106, 5108, 5110, 5112, 5114, 5116, 5125, 5127, 5136, 5142, 5143, 5149, 5151, 5160, 5161, 5164, 5167, 5169, 5171, 5173, 5175, 5177, 5179, 5188, 5189, 5192, 5195, 5197, 5199, 5201, 5203, 5206, 5208, 5214, 5215, 5224, 5226, 5235, 5237, 5246, 5252, 5253, 5259, 5261, 5270, 5271, 5274, 5277, 5279, 5280, 5281, 5283, 5285, 5287, 5289, 5291, 5300, 5301, 5304, 5307, 5309, 5311, 5314, 5317, 5319, 5321, 5322, 5323, 5324, 5326, 5329, 5332, 5335, 5337, 5340, 5343, 5346, 5348, 5350, 5351, 5352, 5353, 5355, 5358, 5361, 5364, 5366, 5368, 5371, 5373, 5375, 5384, 5385, 5388, 5391, 5393, 5396, 5399, 5401, 5404, 5405, 5407, 5408, 5410, 5412, 5415, 5415]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0056995563, -0.10025732, -0.050713204, -0.00012739444, -0.00084407313, -4.501652e-05, -0.018816164, -0.85265505, -1.7236207e-05, -0.00019726387, -8.8290224e-05, -0.0036725076, -0.07558367, -0.039086387, -0.78892815, -0.11650606, -1.44972155e-05, -0.101286404, -0.00014301545, -2.4272329e-05, -1.44972155e-05, -4.838501e-06, 0, -0.039304215, -0.00014969209, -7.9112084e-05, -5.693833e-05, -7.219704e-05, -0.00030785665, -2.987608e-05, -0.00039676193, -1.022884e-06, -2.3360508e-06, -0.05316897, -0.00015112259, -4.859278e-05, -4.430127e-05, -5.944078e-05, -0.0025259128, -0.013272626, -0.06029859, -0.14264861, -6.746778e-06, -1.676031e-05, -0.0014993001, -0.0016302774, -0.051420473, -7.1062755e-06, -0.00984181, -0.00021026042, -1.9621319e-05, -1.402038e-05, -0.00014003337, -9.490449e-06, -1.42597355e-05, -4.1232483e-06, -6.827632e-08, -0.00091744936, -5.503005e-05, -0.0010872569, -0.00023678952, -0.000111778085, -0.00024263356, -0.00025431695, -0.000110467736, -1.1278585e-05, -3.7266083e-05, -7.56541e-05, -0.00096738845, -0.00018724658, -0.00030570905, -0.18086036, -7.529741e-05, -1.6165199e-05, -0.0058593256, -2.5225998e-05, -1.3661821e-05, -1.7236207e-05, -4.048565e-05, -8.176345e-06, -0.00076497206, -0.000681465, -6.2420055e-05, -0.0001319253, -8.3045044e-05, -1.7834122e-05, -0.00033987593, -5.0976956e-05, -0.00033641793, -7.326899e-05, -0.002159617, -0.0004197157, -6.4566746e-05, -0.0011018135, -1.8190814e-05, -8.5358415e-06, -3.1183212, -0.0025669646, -0.0014110142, -0.000272799, -0.009894661, -0.0038712067, -0.25243473, -0.00012787033, -0.0010975192, -0.0021737756, -0.006935915, -0.01555627, -0.03409941, -0.04229406, -2.5464416e-05, -0.42240882, -0.00037028352, -2.0696069e-05, -3.3689823e-05, -4.9586424e-06, -1.8841804e-07, -0.015184633, -0.00016662253, -0.0016088443, -0.00013562171, -0.00012620141, -9.592052e-05, -3.2140102e-05, -7.529741e-05, -1.7953334e-05, -6.420819e-05, -3.170517e-06, -1.9765537e-06, -0.005162108, -0.0002048951, -0.013529848, -0.0022249084, -0.2642288, -0.007333682, -6.0633804e-05, -0.00012274434, -6.194322e-05, -0.00015434122, -0.0011956223, -0.00039008248, -0.0005639112, -0.0029650938, -0.00012036205, -3.965026e-05, -6.5041706e-05, -0.0003645615, -6.09933e-05, -1.1398727e-05, -1.9621319e-05, -3.655083e-05, -7.541475e-05, -4.7279616e-05, -1.7400124e-06, -3.1781543e-05, -0.0001536241, -7.338913e-05, -1.37819625e-05, -1.145444, -7.899194e-05, -1.4736571e-05, -2.5464416e-05, -1.3823812e-06, -3.529076e-06, -0.0016086057, -0.0010055718, -5.896488e-05, -0.00010581859, -0.00013252322, -1.6045058e-05, -0.0029972575, -9.866513e-05, -0.0001617331, -0.0001390797, -0.02686054, -0.024252066, -0.11012614], "top_logprobs": null, "text_offset": [4896, 4896, 4897, 4904, 4905, 4909, 4912, 4914, 4921, 4922, 4926, 4929, 4931, 4940, 4942, 4951, 4957, 4958, 4964, 4966, 4975, 4976, 4979, 4982, 4984, 4986, 4988, 4990, 4992, 4994, 5003, 5004, 5007, 5010, 5012, 5014, 5016, 5018, 5020, 5022, 5031, 5033, 5039, 5040, 5049, 5051, 5060, 5066, 5067, 5070, 5077, 5078, 5082, 5084, 5093, 5094, 5097, 5100, 5102, 5104, 5106, 5107, 5108, 5109, 5112, 5114, 5115, 5116, 5118, 5121, 5124, 5127, 5129, 5131, 5134, 5136, 5138, 5147, 5148, 5151, 5154, 5156, 5159, 5162, 5164, 5167, 5168, 5170, 5171, 5173, 5175, 5177, 5179, 5188, 5189, 5192, 5195, 5197, 5199, 5201, 5203, 5206, 5208, 5214, 5215, 5224, 5226, 5235, 5237, 5246, 5252, 5253, 5259, 5261, 5270, 5271, 5274, 5277, 5279, 5280, 5281, 5283, 5285, 5287, 5289, 5291, 5300, 5301, 5304, 5307, 5309, 5311, 5314, 5317, 5319, 5321, 5322, 5323, 5324, 5326, 5329, 5332, 5335, 5337, 5340, 5343, 5346, 5348, 5350, 5351, 5352, 5353, 5355, 5358, 5361, 5364, 5366, 5368, 5371, 5373, 5375, 5384, 5385, 5388, 5391, 5393, 5396, 5399, 5401, 5404, 5405, 5407, 5408, 5410, 5412, 5415, 5415]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0056995563, -0.09526671, -0.05439234, -0.00014706762, -0.000826832, -4.9069615e-05, -0.019341981, -0.64339197, -0.122637704, -0.20396997, -0.17711513, -2.0098154e-05, -0.15722574, -0.0003686146, -3.8217877e-05, -2.558363e-05, -1.0444119e-05, -1.022884e-06, -0.06847353, -0.00037612757, -8.3045044e-05, -9.115311e-05, -0.00016304628, -0.00054459006, -7.124244e-05, -0.00031835173, -5.675771e-06, -1.5094201e-05, -0.097650826, -0.0002620674, -6.778445e-05, -5.657977e-05, -0.00013705408, -0.009031924, -0.123630784, -0.2857764, -0.8217436, -0.00017055642, -0.000106295425, -0.0068160035, -0.00405869, -0.3042552, -2.4986643e-05, -0.051527407, -1.0444119e-05, -3.7743856e-05, -8.185389e-05, -0.00044631332, -2.2245786e-05, -3.9172486e-05, -1.5006569e-06, -1.8841804e-07, -0.004247467, -8.9960085e-05, -0.0029708948, -0.00042424936, -4.0009756e-05, -0.001004496, -0.0010675049, -0.00016459411, -1.1873685e-05, -6.289782e-05, -0.00023857858, -0.002039559, -0.0010565255, -0.0006261147, -0.2718286, -0.00011583212, -1.8310955e-05, -0.049273245, -8.376217e-05, -2.8087945e-05, -1.6521892e-05, -6.5092986e-06, -0.00019320888, -0.0016960731, -0.00088434125, -0.00010545909, -0.000113566224, -9.4849514e-05, -2.7728449e-05, -0.0005057647, -6.110595e-05, -0.00033510666, -5.4552278e-05, -0.020125112, -0.00215472, -7.005035e-05, -0.000389723, -1.5327929e-05, -6.746778e-06, -0.64064735, -0.0019361798, -0.00047398286, -0.00022671591, -0.0053353934, -0.017263118], "top_logprobs": null, "text_offset": [4896, 4896, 4897, 4904, 4905, 4909, 4912, 4914, 4923, 4925, 4934, 4940, 4941, 4947, 4949, 4958, 4959, 4962, 4965, 4967, 4969, 4971, 4973, 4975, 4977, 4986, 4987, 4990, 4993, 4995, 4997, 4999, 5001, 5003, 5005, 5014, 5016, 5022, 5023, 5032, 5034, 5043, 5049, 5050, 5053, 5060, 5061, 5065, 5067, 5076, 5077, 5080, 5083, 5085, 5087, 5089, 5090, 5091, 5092, 5095, 5097, 5098, 5099, 5101, 5104, 5107, 5110, 5112, 5114, 5117, 5119, 5121, 5130, 5131, 5134, 5137, 5139, 5142, 5145, 5147, 5150, 5151, 5153, 5154, 5156, 5158, 5160, 5162, 5171, 5172, 5175, 5178, 5180, 5182, 5184, 5186, 5189]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0056995563, -0.095682465, -0.04948873, -0.0001779483, -0.00046718423, -4.6206733e-05, -0.020066913, -0.63622934, -0.12283892, -0.20144747, -0.1820782, -1.9860674e-05, -0.16169503, -0.0004854926, -4.144026e-05, -3.0947078e-05, -1.1753544e-05, -9.055464e-07, -0.072714716, -0.00086471223, -7.958892e-05, -0.00011905076, -0.0002545563, -0.0005530567, -8.03023e-05, -0.0009972168, -1.1278585e-05, -3.488097e-05, -0.09926005, -0.00035013165, -0.00016805116, -4.9782993e-05, -0.00014229833, -0.009007447, -0.12791525, -0.28447637, -0.69313633, -0.22649121, -4.6921985e-05, -0.75982875, -0.002370023, -0.0006717416, -0.00015231561, -2.5744682e-06, -7.8540467e-07, -1.8521973, -0.07281125, -0.153251, -0.0035082442, -0.0598671, -0.0010790813, -7.541475e-05, -0.0007264987, -1.6521892e-05, 0, -0.6274265, -0.040219028, -0.19939373, -0.0022676217, -0.016731732, -0.01595992, -0.044705253, -0.02748795, -6.432833e-05, -0.00051971956], "top_logprobs": null, "text_offset": [4896, 4896, 4897, 4904, 4905, 4909, 4912, 4914, 4923, 4925, 4934, 4940, 4941, 4947, 4949, 4958, 4959, 4962, 4965, 4967, 4969, 4971, 4973, 4975, 4977, 4986, 4987, 4990, 4993, 4995, 4997, 4999, 5001, 5003, 5005, 5014, 5016, 5025, 5031, 5032, 5038, 5040, 5049, 5050, 5053, 5056, 5058, 5060, 5062, 5064, 5066, 5068, 5077, 5078, 5081, 5084, 5086, 5088, 5090, 5092, 5095, 5095, 5095, 5095, 5095]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.0056995563, -0.09878662, -0.049560443, -0.00014134373, -0.0005772701, -6.206056e-05, -0.016758215, -0.60686713, -0.124705166, -0.18677333, -0.1483947, -1.8310955e-05, -0.13980009, -0.00042198348, -3.357061e-05, -2.3795494e-05, -1.2708151e-05, -1.022884e-06, -0.06900881, -0.00047624783, -8.662224e-05, -0.00010367096, -0.00028925636, -0.00051017915, -8.065993e-05, -0.000812037, -9.966347e-06, -1.44972155e-05, -0.08251409, -0.00027911988, -0.00013121005, -6.599631e-05, -7.768064e-05, -0.008883798, -0.14412625, -0.27387393, -0.65809035, -0.15853983, -5.07376e-05, -0.7880269, -0.0019701007, -0.00011630989, -0.00013490739, -3.7684315e-06, -5.460492e-07, -1.0810528, -0.018178448, -0.037656028, -0.0020263596, -0.0021250935, -0.00057059067, -8.7337496e-05, -0.00057607895, -1.8073477e-05, -1.8841804e-07, -0.7086823, -0.007237976, -0.08771005, -0.0018117288, -0.014209646, -0.014550019, -0.039144035, -0.020589067, -4.859278e-05, -0.0006323192], "top_logprobs": null, "text_offset": [4896, 4896, 4897, 4904, 4905, 4909, 4912, 4914, 4923, 4925, 4934, 4940, 4941, 4947, 4949, 4958, 4959, 4962, 4965, 4967, 4969, 4971, 4973, 4975, 4977, 4986, 4987, 4990, 4993, 4995, 4997, 4999, 5001, 5003, 5005, 5014, 5016, 5025, 5031, 5032, 5038, 5040, 5049, 5050, 5053, 5056, 5058, 5060, 5062, 5064, 5066, 5068, 5077, 5078, 5081, 5084, 5086, 5088, 5090, 5092, 5095, 5095, 5095, 5095, 5095]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))))", "))", "\n", "(", "connect"], "token_logprobs": [-0.0056995563, -0.104890086, -0.055417467, -0.0001536241, -0.0005584239, -5.669991e-05, -0.020944461, -0.6251393, -0.10784759, -0.18347773, -0.18766207, -1.855031e-05, -0.14818723, -0.0004197157, -4.8949474e-05, -3.201996e-05, -1.163433e-05, -1.022884e-06, -0.063419126, -0.00031751726, -9.771052e-05, -0.0001319253, -0.00020119963, -0.0006152611, -6.850158e-05, -0.00027148862, -3.7684315e-06, -2.7251614e-05, -0.09292494, -0.00024597047, -5.312365e-05, -5.3716885e-05, -0.00010605607, -0.0073826755, -0.120336644, -0.282352, -0.6252792, -0.17965904, -4.6325007e-05, -0.6091389, -0.0015682494, -0.00010092916, -5.8247755e-05, -1.2622395e-06, -2.8138238e-06, -0.7511252, -0.000750118, -0.0075440933, -0.00042615767, -0.00056987547, -0.00012977766, -0.00052281993, -0.00044977036, -5.169127e-05, -0.0002376249, -1.2588937e-05, -1.5006569e-06, -0.3001609, -0.002329693, -0.21215191, -0.030575886, -0.29925007, -0.01918284, -0.00035824155, -0.0004077329, -0.000111778085, -0.002356938, -0.0009125599, -0.0024443525, -0.0015342206, -0.01218666, -5.0976956e-05, -0.0002844852, -0.00014432582, -0.0007600818, -7.1958624e-05, -3.4089344e-06, -7.5774245e-05, -4.966285e-05, -8.00667e-05, -5.5149267e-05, -1.0920954e-05, -4.680184e-05, -0.00016125533, -1.2388693, -0.0043307943, -0.027575625, -0.076729156, -0.040415745], "top_logprobs": null, "text_offset": [4896, 4896, 4897, 4904, 4905, 4909, 4912, 4914, 4923, 4925, 4934, 4940, 4941, 4947, 4949, 4958, 4959, 4962, 4965, 4967, 4969, 4971, 4973, 4975, 4977, 4986, 4987, 4990, 4993, 4995, 4997, 4999, 5001, 5003, 5005, 5014, 5016, 5025, 5031, 5032, 5038, 5040, 5049, 5050, 5053, 5056, 5058, 5059, 5060, 5062, 5064, 5066, 5068, 5070, 5079, 5080, 5083, 5086, 5088, 5090, 5093, 5096, 5098, 5100, 5101, 5102, 5103, 5105, 5108, 5111, 5114, 5116, 5119, 5122, 5125, 5127, 5129, 5130, 5131, 5132, 5134, 5137, 5140, 5143, 5145, 5149, 5151, 5151, 5151]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 8))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (repeat_transform (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))) 4 (transform_matrix 1 (/ (* 2 pi) 4) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 8", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 4", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 4", ")", " 0", " 0", ")))", "\n", "("], "token_logprobs": [-0.0056995563, -0.09323823, -0.052605715, -0.00010414779, -0.0007239953, -5.586358e-05, -0.014516695, -0.8254518, -1.9263687e-05, -0.00021192935, -6.206056e-05, -0.0035403064, -0.07077465, -0.034254164, -0.64279944, -5.79217e-06, -3.0353855e-05, -0.0006040489, -9.7234624e-05, -0.038035996, -6.031526e-06, -0.009512182, -1.5448071e-05, -1.2112103e-05, -4.489638e-05, -0.0001486192, -1.5214344e-05, -1.5925843e-05, -3.4089344e-06, 0, -0.0017858146, -0.00010402765, -0.0027435087, -0.00021789165, -2.3078366e-05, -0.00040832703, -0.0005441123, -9.771052e-05, -1.7834122e-05, -7.744129e-05, -0.00016101786, -0.0005797763, -0.0005400564, -0.00036944906, -0.4716908, -0.00013764732, -1.855031e-05, -0.046691798, -2.2245786e-05, -1.8190814e-05, -1.0800813e-05, -2.2159093e-06, -2.9399247e-05, -0.00042043283, -0.00014444596, -8.8410365e-05, -0.00014360964, -0.00014837986, -2.4510746e-05, -0.00018236089, -8.1256905e-05, -0.00027840555, -6.9810994e-05, -2.3317722e-05, -0.00010808168, -3.941184e-05, -0.003572608, -3.529076e-06, -3.6482897e-06, -0.086096026, -0.0006863573, -0.00014003337, -0.00015183784, -5.4552278e-05, -0.0011139287, -0.011869041, -0.086570114, -0.15341476, -0.021158185, -9.490449e-06, -0.14747348, -0.00017604003, -1.5925843e-05, -2.1051823e-05, -5.0778563e-06, -8.176345e-06, -0.052481517, -0.00010665305, -7.6252014e-05, -5.5385808e-05, -0.0005352843, -8.948419e-05, -1.7119806e-05, -7.350647e-05, -1.3823812e-06, -5.460492e-07, -0.044588953, -0.00025467362, -0.011454998, -0.0001526695, -0.0002961714, -0.00156001, -0.13233018, -5.2288255e-05, -3.357061e-05, -0.002338596, -0.002951883, -0.008898651, -0.029154962, -0.044971872, -4.489638e-05, -0.41866904, -0.0003917514, -1.5448071e-05, -2.0815281e-05, -5.460492e-07, -7.8540467e-07, -0.0086489925, -0.00010414779, -0.0014874195, -0.000113328744, -0.00010235966, -0.00010092916, -3.595572e-05, -5.1810483e-05, -1.5925843e-05, -5.8725527e-05, -1.2622395e-06, -3.2906587e-06, -0.005590401, -0.00021610259, -0.01577994, -0.00382262, -0.4460628, -0.005663529, -6.790459e-05, -9.437268e-05, -7.219704e-05, -0.000249787, -0.00083148497, -6.48061e-05, -0.0007847767, -0.0035007668, -0.0002866319, -5.20489e-05, -8.960433e-05, -0.00066685217, -0.00010140506, -1.1039229e-05, -1.5214344e-05, -4.1918032e-05, -5.8367896e-05, -0.00013025544, -9.055464e-07, -5.037998e-05, -0.00013061494, -6.563869e-05, -7.698572e-06, -1.4876963, -4.1678675e-05, -2.0098154e-05, -1.8073477e-05, -1.0681599e-05, -2.200643e-05, -0.0014137616, -0.00034154486, -0.00016376152, -7.768064e-05, -0.000115950395, -2.4390605e-05, -0.001002707, -7.2672e-05, -0.00014778474, -0.0001390797, -0.01977092, -0.023952764, -0.11654068], "top_logprobs": null, "text_offset": [4896, 4896, 4897, 4904, 4905, 4909, 4912, 4914, 4921, 4922, 4926, 4929, 4931, 4940, 4942, 4948, 4949, 4958, 4960, 4969, 4975, 4976, 4979, 4986, 4987, 4991, 4993, 5002, 5003, 5006, 5009, 5011, 5013, 5015, 5016, 5017, 5018, 5021, 5023, 5024, 5025, 5027, 5030, 5033, 5036, 5038, 5040, 5043, 5045, 5047, 5056, 5057, 5060, 5063, 5065, 5068, 5071, 5073, 5076, 5077, 5079, 5080, 5082, 5084, 5086, 5088, 5097, 5098, 5101, 5104, 5106, 5108, 5110, 5112, 5114, 5116, 5125, 5127, 5136, 5142, 5143, 5149, 5151, 5160, 5161, 5164, 5167, 5169, 5171, 5173, 5175, 5177, 5179, 5188, 5189, 5192, 5195, 5197, 5199, 5201, 5203, 5206, 5208, 5214, 5215, 5224, 5226, 5235, 5237, 5246, 5252, 5253, 5259, 5261, 5270, 5271, 5274, 5277, 5279, 5280, 5281, 5283, 5285, 5287, 5289, 5291, 5300, 5301, 5304, 5307, 5309, 5311, 5314, 5317, 5319, 5321, 5322, 5323, 5324, 5326, 5329, 5332, 5335, 5337, 5340, 5343, 5346, 5348, 5350, 5351, 5352, 5353, 5355, 5358, 5361, 5364, 5366, 5368, 5371, 5373, 5375, 5384, 5385, 5388, 5391, 5393, 5396, 5399, 5401, 5404, 5405, 5407, 5408, 5410, 5412, 5415, 5415]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0)))", "index": 9, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n"], "token_logprobs": [-0.0056995563, -0.10529337, -0.05468246, -0.00014671094, -0.00094745896, -4.370523e-05, -0.022299463, -0.5928995, -0.108140156, -0.1784496, -0.15899071, -1.4616429e-05, -2.0725615, -0.0014379958, -7.040798e-05, -6.909574e-05, -2.9280032e-05, -2.693682e-06, -0.9028826, -0.007382015, -0.00039270602, -0.00017007865, -0.0013375415, -0.0010959667, -8.2807564e-05, -0.0018656524, -2.9756868e-05, -1.5327929e-05, -0.6047108, -0.0028023235, -0.0011089144, -0.00010987075, -0.00074761454, -0.009017852, -0.124879465, -1.192646, -3.6074933e-05, -0.16987696, -0.002220249, -5.7770918e-05, -0.0003496548, -4.721163e-06, -2.0966954e-06, -1.3876692, -0.013424369, -0.036763504, -0.00027208467, -0.015548884, -0.01830574], "top_logprobs": null, "text_offset": [4896, 4896, 4897, 4904, 4905, 4909, 4912, 4914, 4923, 4925, 4934, 4940, 4941, 4947, 4949, 4958, 4959, 4962, 4965, 4967, 4969, 4971, 4973, 4975, 4977, 4986, 4987, 4990, 4993, 4995, 4997, 4999, 5001, 5003, 5005, 5014, 5020, 5021, 5027, 5029, 5038, 5039, 5042, 5045, 5047, 5049, 5051, 5053, 5056]}, "finish_reason": "stop"}]}, {"id": "cmpl-51LgTpWZZ7f2UGH4u42ui2sEJ2qIa", "object": "text_completion", "created": 1651003365, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 0, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.003062305, -0.053938046, -0.055670757, -5.503005e-05, -0.00074630143, -8.721922e-05, -0.013646036, -0.75701654, -2.200643e-05, -0.00014885482, -1.7475562e-05, -0.0073703676, -0.11382936, -0.021391744, -0.81014067, -1.5805701e-05, -6.885639e-05, -0.0013689947, -0.00012191365, -0.05660816, -7.698572e-06, -0.012925141, -8.5358415e-06, -1.2351458e-05, -0.000110467736, -0.00017854528, -2.7728449e-05, -2.0575926e-05, -3.170517e-06, 0, -0.0037505236, -0.00034738888, -0.006007482, -0.00035418657, -2.0696069e-05, -0.0020472042, -0.00076520955, -0.00039914515, -2.987608e-05, -7.505805e-05, -0.000159348, -0.0018800428, -0.001114642, -0.0002386978, -0.087397896, -0.0002060853, -1.3900239e-05, -0.0686236, -4.8949474e-05, -1.676031e-05, -5.0778563e-06, -5.460492e-07, -1.44972155e-05, -0.00046432132, -0.0004503664, -0.00010319318, -0.00029557722, -9.65175e-05, -3.559716e-05, -0.00050516764, -9.270188e-05, -0.00041578274, -4.5847235e-05, -4.370523e-05, -0.00047702223, -7.159913e-05, -0.0039573135, -1.5687427e-05, -5.460492e-07, -0.30599886, -0.052189272, -7.159913e-05, -7.8752586e-05, -0.00012679932, -0.0016578606, -0.028853877, -0.18426976, -0.749715, -0.061065633, -1.6282536e-05, -1.5521249, -0.000566058, -4.9308033e-05, -1.0920954e-05, -5.0778563e-06, -3.051303e-06, -0.79515177, -0.013360637, -0.00027220484, -0.00010295758, -1.0617359, -0.0008482474, -7.314978e-05, -0.0016512919, -1.9143545e-05, -6.8669196e-06, -0.44242105, -0.044613633, -0.047003735, -0.0018656524, -0.006573583, -0.026795886, -0.676386, -0.22504881, -0.51707435, -1.9421734, -0.38285488, -0.39776382, -8.0580685e-06, -0.9364629, -0.002235363, -9.4729374e-05, -0.00027005718, -1.7400124e-06, -6.827632e-08, -1.5507661, -0.025648799, -0.0022708478, -0.0003042804, -0.0009473416, -0.0021903221, -0.0015614424, -0.0013623096, -0.000116070536, -1.8601542e-06, -0.5665093, -0.04172993, -0.08757791, -0.00937716, -0.0020894322, -0.0039633573, -0.008746579, -0.021343397, -0.0003924676, -1.4139594e-05, -1.4927967, -0.06933802, -0.052366823, -0.0059044696, -0.3972806, -0.0205525, -0.07268465, -0.04432287, -2.8326363e-05], "top_logprobs": null, "text_offset": [3932, 3932, 3933, 3940, 3941, 3945, 3948, 3950, 3957, 3958, 3962, 3965, 3967, 3976, 3978, 3984, 3985, 3994, 3996, 4005, 4011, 4012, 4015, 4022, 4023, 4027, 4029, 4038, 4039, 4042, 4045, 4047, 4049, 4051, 4052, 4053, 4054, 4057, 4059, 4060, 4061, 4063, 4066, 4069, 4072, 4074, 4076, 4079, 4081, 4083, 4092, 4093, 4096, 4099, 4101, 4104, 4107, 4109, 4112, 4113, 4115, 4116, 4118, 4120, 4122, 4124, 4133, 4134, 4137, 4140, 4142, 4144, 4146, 4148, 4150, 4152, 4161, 4163, 4172, 4178, 4179, 4185, 4187, 4196, 4197, 4200, 4203, 4205, 4207, 4209, 4211, 4213, 4215, 4224, 4225, 4228, 4231, 4233, 4235, 4237, 4239, 4242, 4244, 4253, 4255, 4264, 4266, 4275, 4281, 4282, 4288, 4290, 4299, 4300, 4303, 4306, 4308, 4310, 4312, 4314, 4316, 4318, 4327, 4328, 4331, 4334, 4336, 4338, 4340, 4342, 4344, 4346, 4355, 4356, 4359, 4362, 4364, 4366, 4368, 4370, 4373, 4373, 4373, 4373]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 1 0 0 0))) (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 2 1.5) (cos (/ pi 4))) (* (* 2 1.5) (sin (/ pi 4))))))", "index": 1, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 2", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", "))))", "\n", "(", "connect", "_", "stro", "kes", " ("], "token_logprobs": [-0.003062305, -0.053938046, -0.055670757, -5.503005e-05, -0.00074630143, -8.721922e-05, -0.013646036, -0.69236124, -0.050383173, -1.1062872, -0.0002463262, -5.3363005e-05, -0.0057921777, -0.005655377, -0.16425435, -1.6165199e-05, -0.038873512, -3.333313e-05, -2.1529595e-05, -0.00014384899, -0.0012738606, -5.109523e-05, -1.7236207e-05, -3.4089344e-06, -1.3823812e-06, -0.008328054, -0.0010216809, -0.01201864, -0.0008513505, -4.036551e-05, -0.0036464864, -0.0013084752, -0.00068599783, -3.7266083e-05, -0.00016495361, -0.00040522762, -0.00327356, -0.0027236647, -0.0019235783, -0.14284728, -0.0006595767, -2.9636725e-05, -0.11322675, -9.687513e-05, -4.46589e-05, -1.2231317e-05, -4.2433903e-06, -2.1171965e-05, -0.001050857, -0.0004236524, -0.00020346364, -0.0006143074, -0.0001118973, -4.29881e-05, -0.0005526991, -0.00012238578, -0.0006518225, -6.48061e-05, -9.890355e-05, -0.002203999, -0.000113566224, -0.0048665395, -2.7611111e-05, -6.6619094e-07, -0.6159184, -0.06692833, -0.0008667416, -0.00043450415, -0.0018737144, -0.019524973, -0.1687645, -0.32950214, -1.0775374, -7.11223e-05, -0.0006506285, -0.00698021, -0.0062549845, -0.078727596, -1.402038e-05, -0.037354782, -8.653179e-06, -1.163433e-05, -6.48061e-05, -0.00032777296, -1.6521892e-05, -1.1278585e-05, -1.5006569e-06, -1.022884e-06, -0.002294985, -0.0002562252, -0.0016841898, -0.0001810496, -6.0633804e-05, -0.0016443083, -0.0007483289, -0.00012143587, -1.3185924e-05, -7.434374e-05, -0.00011308939, -0.0009108892, -0.0005552024, -0.00065373076, -0.11077055, -0.00038292623, -1.3542607e-05, -0.032136668, -7.20769e-05, -2.5464416e-05, -1.1514188e-05, -6.599631e-05, -1.0444119e-05, -0.00083315483, -0.0004164971, -0.00015648511, -7.338913e-05, -8.709908e-05, -6.7307614e-05, -0.00035836172, -8.018216e-05, -0.00037290892, -5.0022347e-05, -0.006022175, -0.0018519762, -0.001224205, -0.00057130784, -4.361666e-06, -2.5744682e-06, -0.42812407, -0.05364286, -0.0078099356, -0.0006307676, -0.015961254, -3.0355127, -1.2115345, -0.28932393, -0.37542453, -0.16571021, -1.1514188e-05, -0.5254877, -0.001488851, -0.00012548709, -5.2525735e-05, -9.966347e-06, -7.584048e-06, -1.0692075, -0.013200512, -0.040526036, -0.0018627866, -0.0006701928, -0.00034357232, -0.00015088324, -0.0007648529, -0.000103910315, -0.00037922888, -1.2828294e-05, -3.529076e-06, -0.13185377, -0.0069961753, -0.066792846, -0.020146336, -2.0408947, -0.034133025, -0.0026462693, -0.0042398646, -0.00025694142, -0.0017304632, -0.0017209097, -0.0009412545, -0.0029870374, -0.0310096, -0.00042222187, -0.00038375973, -0.00045454057, -0.0051742103, -0.00022194568, -3.2855354e-05, -0.00040952102, -0.00012989782, -9.818829e-05, -7.6605895e-05, -6.1516675e-06, -3.7266083e-05, -0.00023047146, -0.012988604, -1.9837145, -0.04646037, -0.091052264, -0.06799997, -3.2140102e-05, -0.00092520635, -0.0001902296, -0.015220095], "top_logprobs": null, "text_offset": [3932, 3932, 3933, 3940, 3941, 3945, 3948, 3950, 3959, 3961, 3967, 3968, 3977, 3979, 3988, 3994, 3995, 3998, 4005, 4006, 4010, 4012, 4021, 4022, 4025, 4028, 4030, 4032, 4034, 4035, 4036, 4037, 4040, 4042, 4043, 4044, 4046, 4049, 4052, 4055, 4057, 4059, 4062, 4064, 4066, 4075, 4076, 4079, 4082, 4084, 4087, 4090, 4092, 4095, 4096, 4098, 4099, 4101, 4103, 4105, 4107, 4116, 4117, 4120, 4123, 4125, 4127, 4129, 4131, 4133, 4135, 4144, 4146, 4152, 4153, 4162, 4164, 4173, 4179, 4180, 4183, 4190, 4191, 4195, 4197, 4206, 4207, 4210, 4213, 4215, 4217, 4219, 4220, 4221, 4222, 4225, 4227, 4228, 4229, 4231, 4234, 4237, 4240, 4242, 4244, 4247, 4249, 4251, 4260, 4261, 4264, 4267, 4269, 4272, 4275, 4277, 4280, 4281, 4283, 4284, 4286, 4288, 4290, 4292, 4301, 4302, 4305, 4308, 4310, 4312, 4314, 4316, 4319, 4321, 4330, 4332, 4341, 4347, 4348, 4354, 4356, 4365, 4366, 4369, 4372, 4374, 4375, 4376, 4378, 4380, 4382, 4384, 4386, 4395, 4396, 4399, 4402, 4404, 4406, 4409, 4412, 4414, 4416, 4417, 4418, 4419, 4421, 4424, 4427, 4430, 4432, 4435, 4438, 4441, 4443, 4445, 4446, 4447, 4448, 4450, 4453, 4456, 4459, 4461, 4463, 4467, 4467, 4467, 4467, 4467, 4467, 4467]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 3 0 0 0)) (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)))", "index": 2, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 3", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", ")))", "\n", "(", "connect"], "token_logprobs": [-0.003062305, -0.053938046, -0.055670757, -5.503005e-05, -0.00074630143, -8.721922e-05, -0.013646036, -0.69236124, -0.050383233, -1.1870406, -0.0002704148, -6.170386e-05, -0.0055527007, -0.0056734807, -0.14963716, -1.6045058e-05, -0.035725802, -3.4403198e-05, -3.357061e-05, -0.00016805116, -0.0012733829, -6.087316e-05, -1.676031e-05, -3.4089344e-06, -7.8540467e-07, -0.0075697387, -0.00072638044, -0.015802952, -0.0010901208, -4.430127e-05, -0.0040800557, -0.0012312467, -0.0003731464, -3.7028603e-05, -0.00018140629, -0.00051399565, -0.0028591682, -0.0035229605, -0.0009676259, -0.14094962, -0.00080642954, -2.784859e-05, -0.13106346, -0.00021979994, -3.655083e-05, -1.0800813e-05, -6.1516675e-06, -1.9382902e-05, -0.0012107797, -0.00046563262, -0.0001884396, -0.00068862323, -0.00013538517, -4.3347598e-05, -0.00071808934, -0.00014241754, -0.000672576, -5.300351e-05, -9.9142904e-05, -0.0019489004, -0.00096947496, -0.004817786, -3.2735214e-05, -4.277735e-07, -3.6381545, -0.2847169, -0.0064565935, -0.0015013283, -0.0090107545, -0.01407985, -0.13393573, -0.30729783, -0.35890466, -0.11483546, -2.6180607e-05, -1.1245733, -0.0013983622, -6.551948e-05, -1.2708151e-05, -5.912312e-06, -1.3823812e-06, -0.81986904, -0.026979817, -0.06693783, -0.002965932, -0.0007338925, -0.00015004877, -0.00029211643, -0.0005818038, -7.6726035e-05, -0.00041578274, -1.1278585e-05, -7.3446927e-06, -0.14582326, -0.013122603, -0.4797986, -0.107627995, -0.57676834, -0.10342661, -0.0058754534, -0.006040044, -0.00022325605, -0.008916633, -0.006500268, -0.0073948666, -0.0024946614, -0.035530493, -0.0005673702, -0.00082134467, -0.00013621869, -0.0018674433, -0.00047702223, -2.3795494e-05, -0.00014957195, -0.00012381817, -0.00014039098, -0.0001345479, -2.272356e-05, -3.643162e-05, -0.00030082333, -0.05389445, -1.0115173, -1.2119966, -0.45699808, -1.1839062, -0.46717057, -0.14913642, -1.7119806e-05, -0.5553274, -0.0014407423, -5.9201422e-05, -5.216904e-05, -4.277735e-07, -5.79217e-06, -0.8719745, -0.030256249, -0.0005829959, -0.00012500932, -0.0002824577, -0.0011623808, -4.9782993e-05, -0.0012420497, -9.72699e-06, -6.827632e-08, -1.6615063, -0.26183915, -0.0038777292, -0.00040427395, -0.02745695, -0.018876962, -0.055806946, -0.032483324], "top_logprobs": null, "text_offset": [3932, 3932, 3933, 3940, 3941, 3945, 3948, 3950, 3959, 3961, 3967, 3968, 3977, 3979, 3988, 3994, 3995, 3998, 4005, 4006, 4010, 4012, 4021, 4022, 4025, 4028, 4030, 4032, 4034, 4035, 4036, 4037, 4040, 4042, 4043, 4044, 4046, 4049, 4052, 4055, 4057, 4059, 4062, 4064, 4066, 4075, 4076, 4079, 4082, 4084, 4087, 4090, 4092, 4095, 4096, 4098, 4099, 4101, 4103, 4105, 4107, 4116, 4117, 4120, 4123, 4125, 4127, 4129, 4131, 4133, 4135, 4144, 4146, 4155, 4161, 4162, 4168, 4170, 4179, 4180, 4183, 4186, 4188, 4189, 4190, 4192, 4194, 4196, 4198, 4200, 4209, 4210, 4213, 4216, 4218, 4220, 4223, 4226, 4228, 4230, 4231, 4232, 4233, 4235, 4238, 4241, 4244, 4246, 4249, 4252, 4255, 4257, 4259, 4260, 4261, 4262, 4264, 4267, 4270, 4273, 4275, 4277, 4280, 4282, 4291, 4293, 4302, 4308, 4309, 4315, 4317, 4326, 4327, 4330, 4333, 4335, 4337, 4339, 4341, 4343, 4345, 4354, 4355, 4358, 4361, 4363, 4365, 4367, 4369, 4372, 4372, 4372]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 3, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.003062305, -0.053938355, -0.055670887, -6.599631e-05, -0.00051793334, -8.3045044e-05, -0.013472454, -0.698755, -0.048668556, -0.43409017, -0.2441627, -2.0815281e-05, -0.09642882, -0.0007338925, -6.0038692e-05, -2.3675353e-05, -1.022884e-06, -9.490449e-06, -0.14429088, -0.010076895, -0.00018057182, -9.270188e-05, -0.00023714808, -0.00110635, -7.815842e-05, -0.00044094422, -3.3928238e-05, -9.606849e-06, -0.75294095, -0.10764187, -0.002791265, -0.00039413653, -0.00073317625, -0.008855173, -0.25741556, -0.3501556, -0.5299719, -0.14041482, -1.6521892e-05, -0.27562523, -0.0012589399, -5.0976956e-05, -1.5448071e-05, -5.3597672e-05, -2.693682e-06, -0.16628751, -0.03015194, -0.0005151868, -7.6252014e-05, -0.0006565927, -0.0009272348, -8.88872e-05, -0.00028675204, -8.0580685e-06, -1.3823812e-06, -0.75114805, -0.075930856, -0.023200806, -0.00030749902, -0.005756206, -0.021271303, -0.051852982, -0.04659344, -0.00011297111], "top_logprobs": null, "text_offset": [3932, 3932, 3933, 3940, 3941, 3945, 3948, 3950, 3959, 3961, 3970, 3976, 3977, 3983, 3985, 3994, 3995, 3998, 4001, 4003, 4005, 4007, 4009, 4011, 4013, 4022, 4023, 4026, 4029, 4031, 4033, 4035, 4037, 4039, 4041, 4050, 4052, 4061, 4067, 4068, 4074, 4076, 4085, 4086, 4089, 4092, 4094, 4096, 4098, 4100, 4102, 4104, 4113, 4114, 4117, 4120, 4122, 4124, 4126, 4128, 4131, 4131, 4131, 4131]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_circle (transform_matrix 1 0 0 0)))", "index": 4, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "connect"], "token_logprobs": [-0.003062305, -0.053938355, -0.055670887, -4.6206733e-05, -0.00060381147, -8.0899285e-05, -0.012433946, -0.68608975, -0.056192227, -0.47181043, -0.23063505, -2.0575926e-05, -0.11189663, -0.0007839423, -6.89756e-05, -2.4272329e-05, -1.7400124e-06, -1.2708151e-05, -0.1426475, -0.0128686875, -0.0002085915, -0.000106295425, -0.00019070739, -0.00085194845, -7.4460135e-05, -0.00058048975, -2.4032974e-05, -1.2351458e-05, -0.77866524, -0.13938546, -0.0030664313, -0.00017282138, -0.00070985645, -0.008931127, -0.30428466, -1.4688083, -5.8247755e-05, -1.5407327, -0.012088803, -0.0007242328, -0.0029647353, -6.9861335e-06, -6.6619094e-07, -0.946572, -0.079427905, -0.042090625, -0.0012702787, -0.014025085, -0.021387298, -0.063779786, -0.0642021, -9.604066e-05, -0.0012724282, -3.583558e-05, -0.034808893, -0.88290346], "top_logprobs": null, "text_offset": [3932, 3932, 3933, 3940, 3941, 3945, 3948, 3950, 3959, 3961, 3970, 3976, 3977, 3983, 3985, 3994, 3995, 3998, 4001, 4003, 4005, 4007, 4009, 4011, 4013, 4022, 4023, 4026, 4029, 4031, 4033, 4035, 4037, 4039, 4041, 4050, 4056, 4057, 4063, 4065, 4074, 4075, 4078, 4081, 4083, 4085, 4087, 4089, 4092, 4092, 4092, 4092, 4092, 4092, 4092, 4092]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 4 0 0 0)) (transform_matrix 2 0 0 0)) (transform small_square (transform_matrix 1 0 0 0)))", "index": 5, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro", "kes", " (", "transform"], "token_logprobs": [-0.003062305, -0.05610951, -0.055320133, -4.3227457e-05, -0.0009899978, -6.635395e-05, -0.012616342, -0.65813893, -0.04993006, -0.4833357, -0.26342982, -2.0696069e-05, -0.1121229, -0.00085743394, -5.2765092e-05, -2.1051823e-05, -1.2622395e-06, -1.0444119e-05, -3.0209568, -0.16721904, -0.00052115106, -0.00039974027, -0.00042889945, -0.0016987002, -0.000116070536, -0.0032842646, -2.3078366e-05, -8.653179e-06, -0.8161691, -0.032700017, -0.0075177304, -0.00021228698, -0.0015176262, -0.008935277, -0.12806691, -0.9534364, -2.7251614e-05, -0.15773597, -0.0015499233, -3.3689823e-05, -5.1215375e-05, -6.746778e-06, -6.746778e-06, -0.42567292, -0.010970851, -0.0043152287, -0.00017496901, -0.0032444957, -0.017271183, -0.058844797, -0.04841064, -0.00011523515, -0.0007182085, -4.6445148e-05, -0.015250236, -0.63601476], "top_logprobs": null, "text_offset": [3932, 3932, 3933, 3940, 3941, 3945, 3948, 3950, 3959, 3961, 3970, 3976, 3977, 3983, 3985, 3994, 3995, 3998, 4001, 4003, 4005, 4007, 4009, 4011, 4013, 4022, 4023, 4026, 4029, 4031, 4033, 4035, 4037, 4039, 4041, 4050, 4056, 4057, 4063, 4065, 4074, 4075, 4078, 4081, 4083, 4085, 4087, 4089, 4092, 4092, 4092, 4092, 4092, 4092, 4092, 4092]}, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform small_square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 2 (transform_matrix 1 (/ (* 2 pi) 2) 0 0)) (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 4 0 0 0)) (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.5 (/ 0.5 (tan (/ pi 6))))) 6 (transform_matrix 1 (/ (* 2 pi) 6) 0 0)) (transform_matrix 2 0 0 0))) (connect_strokes (connect_strokes (transform (repeat_transform (transform short_horizontal_line (transform_matrix 1 0 -0.", "index": 6, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 2", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 2", ")", " 0", " 0", "))", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", ".", "5", " (/", " 0", ".", "5", " (", "tan", " (/", " pi", " 6", "))", ")))", " 6", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 6", ")", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", ")))", " (", "connect", "_", "stro", "kes", " (", "connect", "_", "stro", "kes", " (", "transform", " (", "repeat", "_", "transform", " (", "transform", " short", "_", "hor", "izontal", "_", "line", " (", "transform", "_", "mat", "rix", " 1", " 0", " -", "0", "."], "token_logprobs": [-0.003062305, -0.05575306, -0.05779082, -4.489638e-05, -0.0011076012, -8.721922e-05, -0.016845865, -0.76969993, -2.141132e-05, -0.00022683514, -2.3556138e-05, -0.0051122024, -2.3122556, -6.337372e-05, -0.00021157267, -2.1171965e-05, -0.010011272, -1.7387961, -0.00012739444, -0.00028102813, -1.6642034e-05, -0.020214211, -0.33554283, -0.05590918, -0.6619039, -0.2287047, -3.0947078e-05, -2.555695, -0.0041336226, -6.38515e-05, -0.000101643476, -1.5925843e-05, -6.827632e-08, -1.2240602, -0.042491373, -0.1168908, -0.0056573558, -0.0034453808, -0.00066053035, -0.00085755315, -0.0020388446, -0.0025690568, -0.0032373217, -2.5344274e-05, -5.79217e-06, -0.2750008, -0.021783117, -0.589139, -0.096001014, -0.7536767, -0.16659804, -0.0153685585, -0.0098202, -0.0005982039, -0.02037814, -0.018874656, -0.026997577, -0.010540973, -0.10145791, -0.0018569333, -0.0022247883, -0.0012719505, -0.0063043507, -0.00060774625, -6.0753944e-05, -9.2941234e-05, -0.00010665305, -0.00029020815, -0.00022951684, -0.00016638411, -9.0080226e-05, -0.0012007538, -0.0023239567, -1.1278585e-05, -1.8678076, -0.0050803884, -6.206056e-05, -0.00018915485, -5.4364154e-06, -7.8540467e-07, -0.0112362215, -0.011841782, -0.002658163, -0.012300821, -0.00028555995, -0.00011273176, -0.016169308, -0.00023071081, -0.0022717444, -0.0003634877, -0.0010120138, -0.0065945825, -2.3260875, -0.0008928117, -0.004408618, -0.00037135737, -0.01604871, -0.13744174, -0.04257496, -1.1107008, -0.00029307103, -0.0003998604, -0.004558781, -0.0020990497, -0.06363031, -1.7236207e-05, -0.022644978, -1.2231317e-05, -2.784859e-05, -7.958892e-05, -0.0012134659, -4.0843282e-05, -1.6521892e-05, -3.170517e-06, -1.022884e-06, -0.005489889, -0.0003540674, -0.009015989, -0.0007605586, -3.452334e-05, -0.0027081852, -0.0016632335, -0.00014015351, -2.6893982e-05, -0.00018486334, -0.00042675465, -0.0034056092, -0.0022954622, -0.0009833145, -0.14709875, -0.0011015751, -3.0826937e-05, -0.11270723, -0.0001850999, -2.6773841e-05, -7.818713e-06, -2.5744682e-06, -6.827632e-08, -0.0005319464, -0.000297126, -9.139247e-05, -0.00041315737, -9.24644e-05, -4.811501e-05, -0.00073926337, -0.00010188283, -0.0005070769, -4.9308033e-05, -0.0009633306, -0.0020612418, -0.003764225, -0.021439303, -5.197998e-06, -6.827632e-08, -0.85351104, -0.07612045, -0.0004170931, -0.00016280691, -0.033879455, -0.003146791, -0.067966215, -0.19191341, -1.331413, -1.2708151e-05, -0.0006599343, -0.0017567351, -5.6818186e-05, -0.01824813, -4.0040345e-06, -0.00026493028, -1.7400124e-06, -9.130952e-06, -1.6165199e-05, -0.0001296622, -1.4377073e-05, -1.2468796e-05, -5.460492e-07, -3.076318e-07, -0.0013065651, -0.000109035354, -0.00074546697, -0.0001390797, -4.2870764e-05, -0.0004857301, -0.00029950924, -0.00010772499, -8.653179e-06, -3.4642555e-05, -8.697986e-05, -0.00041423022, -0.00017806844, -0.00030535142, -0.11210916, -0.00054900267, -1.0444119e-05, -0.016202262, -2.6538237e-05, -1.3900239e-05, -6.031526e-06, -0.00014814144, -1.1278585e-05, -0.0008390627, -0.00018939328, -8.435633e-05, -9.508793e-05, -9.0795475e-05, -8.447461e-05, -0.00021610259, -8.709908e-05, -0.0002113333, -4.2153635e-05, -0.023748452, -0.0007785713, -2.7967804e-05, -0.000108796, -1.9765537e-06, -4.2433903e-06, -2.0426185, -0.007694305, -0.00014456424, -0.00015004877, -1.6405597, -0.016530283, -1.0257584, -4.751897e-05, -0.0006680452, -0.0002934296, -0.0018939563, -1.6930188, -2.8206221e-05, -0.00035979127, -7.493791e-05, -0.00218829, -0.09441763, -0.014400225, -0.4391908, -9.606849e-06, -6.4566746e-05, -0.00095175515, -7.9112084e-05, -0.005576435, -2.2159093e-06, -0.001601322, -5.197998e-06, -2.8138238e-06, -6.6294406e-06, -5.3242864e-05, -1.0084622e-05, -1.3422466e-05, -1.1430258e-06, -6.827632e-08, -0.00065337407, -2.7371756e-05, -0.00059653405, -0.00012357882, -1.9028084e-05], "top_logprobs": null, "text_offset": [3932, 3932, 3933, 3940, 3941, 3945, 3948, 3950, 3957, 3958, 3962, 3965, 3967, 3974, 3975, 3979, 3982, 3984, 3991, 3992, 3996, 3999, 4001, 4010, 4012, 4021, 4027, 4028, 4034, 4036, 4045, 4046, 4049, 4052, 4054, 4055, 4056, 4058, 4060, 4062, 4064, 4066, 4075, 4076, 4079, 4082, 4084, 4086, 4089, 4092, 4094, 4096, 4097, 4098, 4099, 4101, 4104, 4107, 4110, 4112, 4115, 4118, 4121, 4123, 4125, 4126, 4127, 4128, 4130, 4133, 4136, 4139, 4141, 4143, 4146, 4148, 4150, 4159, 4160, 4163, 4166, 4168, 4171, 4174, 4176, 4179, 4180, 4182, 4183, 4185, 4187, 4189, 4191, 4198, 4199, 4203, 4206, 4208, 4217, 4219, 4225, 4226, 4235, 4237, 4246, 4252, 4253, 4256, 4263, 4264, 4268, 4270, 4279, 4280, 4283, 4286, 4288, 4290, 4292, 4293, 4294, 4295, 4298, 4300, 4301, 4302, 4304, 4307, 4310, 4313, 4315, 4317, 4320, 4322, 4324, 4333, 4334, 4337, 4340, 4342, 4345, 4348, 4350, 4353, 4354, 4356, 4357, 4359, 4361, 4363, 4365, 4374, 4375, 4378, 4381, 4383, 4385, 4387, 4389, 4391, 4393, 4402, 4404, 4410, 4411, 4420, 4422, 4431, 4437, 4438, 4441, 4448, 4449, 4453, 4455, 4464, 4465, 4468, 4471, 4473, 4475, 4477, 4478, 4479, 4480, 4483, 4485, 4486, 4487, 4489, 4492, 4495, 4498, 4500, 4502, 4505, 4507, 4509, 4518, 4519, 4522, 4525, 4527, 4530, 4533, 4535, 4538, 4539, 4541, 4542, 4544, 4546, 4548, 4550, 4559, 4560, 4563, 4566, 4568, 4570, 4572, 4574, 4577, 4579, 4586, 4587, 4591, 4594, 4596, 4603, 4604, 4608, 4611, 4613, 4622, 4624, 4630, 4631, 4640, 4642, 4651, 4657, 4658, 4661, 4668, 4669, 4673, 4675, 4684, 4685, 4688, 4691, 4693, 4695, 4697, 4698]}, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform small_square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 7, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "square", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", "))", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " 0", " 0", ")))", "\n", "(", "connect", "_"], "token_logprobs": [-0.003062305, -0.05575306, -0.058592655, -4.275062e-05, -0.00063619675, -8.5549356e-05, -0.017073387, -0.6567375, -0.05575665, -0.46440074, -0.25018644, -2.5464416e-05, -2.4276507, -0.003200246, -0.00015946814, -8.3284394e-05, -2.200643e-05, -8.296486e-06, -1.3093411, -0.02782086, -0.0019650818, -0.00035442502, -0.0014323255, -0.0014809737, -7.982734e-05, -0.0024718363, -2.1171965e-05, -2.6180607e-05, -1.3771691, -0.08009288, -0.14105627, -0.0059116045, -0.013735046, -0.011748841, -0.18942161, -0.47466817, -0.3342745, -0.12798156, -2.7611111e-05, -0.5991755, -0.0011824332, -7.8514175e-05, -1.855031e-05, -1.3542607e-05, -3.2906587e-06, -0.49561307, -0.031202115, -0.0027164933, -0.0001539836, -0.00051888794, -0.0005553226, -9.401318e-05, -0.0002541968, -8.653179e-06, -1.8841804e-07, -0.55316454, -0.03636331, -0.028410789, -0.0004006939, -0.008557853, -0.017807167, -0.0491854, -0.0407181, -6.909574e-05], "top_logprobs": null, "text_offset": [3932, 3932, 3933, 3940, 3941, 3945, 3948, 3950, 3959, 3961, 3970, 3976, 3977, 3983, 3985, 3994, 3995, 3998, 4001, 4003, 4005, 4007, 4009, 4011, 4013, 4022, 4023, 4026, 4029, 4031, 4033, 4035, 4037, 4039, 4041, 4050, 4052, 4061, 4067, 4068, 4074, 4076, 4085, 4086, 4089, 4092, 4094, 4096, 4098, 4100, 4102, 4104, 4113, 4114, 4117, 4120, 4122, 4124, 4126, 4128, 4131, 4131, 4131, 4131]}, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform small_circle (transform_matrix 2 0 0 0)) (transform_matrix 4 0 0 0)) (repeat_transform (transform (transform small_circle (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 (* (* 1 1.5) (cos (/ pi 4))) (* (* 1 1.5) (sin (/ pi 4))))) 8 (transform_matrix 1 (/ (* 2 pi) 8) 0 0)))", "index": 8, "logprobs": {"tokens": ["\n", "(", "connect", "_", "stro", "kes", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 2", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 4", " 0", " 0", " 0", "))", " (", "repeat", "_", "transform", " (", "transform", " (", "transform", " small", "_", "circle", " (", "transform", "_", "mat", "rix", " 0", ".", "5", " 0", " 0", " 0", "))", " (", "transform", "_", "mat", "rix", " 1", " 0", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "cos", " (/", " pi", " 4", ")))", " (*", " (*", " 1", " 1", ".", "5", ")", " (", "sin", " (/", " pi", " 4", "))", ")))", " 8", " (", "transform", "_", "mat", "rix", " 1", " (/", " (*", " 2", " pi", ")", " 8", ")", " 0", " 0", ")))", "\n", "(", "connect", "_", "stro"], "token_logprobs": [-0.003062305, -0.05575306, -0.058592655, -4.859278e-05, -0.0006506285, -8.566857e-05, -0.013287063, -0.6992411, -0.05582251, -0.46443442, -0.25739944, -1.8310955e-05, -0.12923369, -0.0008734811, -6.0633804e-05, -2.9996223e-05, -1.3823812e-06, -9.966347e-06, -0.13475437, -0.010649825, -0.00018033247, -0.00010176362, -0.00015720223, -0.0009204334, -5.598372e-05, -0.00066935836, -3.3809963e-05, -1.2231317e-05, -1.1154962, -0.09987115, -0.00021049884, -7.5774245e-05, -0.00079002563, -0.00621816, -2.083974, -0.0006795559, -0.00066434784, -0.004073173, -0.0113956705, -0.12208007, -0.027409289, -0.05897807, -1.1159372e-05, -0.38063407, -0.00029784034, -3.249586e-05, -1.2112103e-05, -2.3435998e-05, -1.3823812e-06, -0.119571626, -0.0013808743, -0.020554932, -0.00038662262, -0.00013740796, -0.00012512946, -0.00010784233, -0.00013621869, -5.9321566e-05, -8.149626e-05, -1.0681599e-05, -4.361666e-06, -0.011751676, -0.0035674025, -0.004105253, -0.0072940527, -0.095497966, -0.018551264, -0.00011213572, -0.0020298231, -0.00013896049, -0.00040749353, -0.0007671188, -0.0039916015, -0.00048251054, -0.020674068, -0.00096046674, -0.00010951312, -0.00014551697, -0.00030869205, -0.000604766, -9.966347e-06, -6.3134365e-05, -0.00010760485, -0.00010557923, -8.7337496e-05, -6.6294406e-06, -2.2365928e-05, -0.00023082721, -0.00013216372, -1.9765537e-06, -2.1041062, -0.00034488458, -4.406191e-05, -8.4157e-06, -8.296486e-06, -1.2622395e-06, -0.0021478499, -0.0007801238, -0.00025777495, -0.00026779127, -0.00016650239, -5.312365e-05, -0.0019329555, -0.00021085552, -0.0003605084, -8.1256905e-05, -0.032959446, -0.024577426, -0.0719448, -0.06747134, -0.00013788574, -0.00031179338], "top_logprobs": null, "text_offset": [3932, 3932, 3933, 3940, 3941, 3945, 3948, 3950, 3959, 3961, 3970, 3976, 3977, 3983, 3985, 3994, 3995, 3998, 4001, 4003, 4005, 4007, 4009, 4011, 4013, 4022, 4023, 4026, 4029, 4031, 4033, 4035, 4037, 4039, 4041, 4047, 4048, 4057, 4059, 4068, 4070, 4079, 4085, 4086, 4092, 4094, 4103, 4104, 4107, 4110, 4112, 4113, 4114, 4116, 4118, 4120, 4122, 4124, 4133, 4134, 4137, 4140, 4142, 4144, 4147, 4150, 4152, 4154, 4155, 4156, 4157, 4159, 4162, 4165, 4168, 4170, 4173, 4176, 4179, 4181, 4183, 4184, 4185, 4186, 4188, 4191, 4194, 4197, 4199, 4201, 4204, 4206, 4208, 4217, 4218, 4221, 4224, 4226, 4229, 4232, 4234, 4237, 4238, 4240, 4241, 4243, 4245, 4248, 4248, 4248, 4248, 4248]}, "finish_reason": "stop"}, {"text": "\"\"\"", "index": 9, "logprobs": {"tokens": ["\n", "\"\"\"", "\n", "\n", "class", " Four", "Square", ":"], "token_logprobs": [-0.003062305, -4.160363, -0.43827623, -0.37502292, -3.5224328, -8.490957, -2.8815048, -1.8296473], "top_logprobs": null, "text_offset": [3932, 3932, 3935, 3935, 3935, 3935, 3935, 3935]}, "finish_reason": "stop"}]}]}