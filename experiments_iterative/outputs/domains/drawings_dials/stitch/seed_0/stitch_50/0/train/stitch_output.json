{
  "cmd": "target/release/compress /Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch/seed_0/stitch_50/0/train/stitch_frontiers.json --out=/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch/seed_0/stitch_50/0/train/stitch_output.json --max-arity=2 --iterations=10 --fmt=dreamcoder",
  "args": {
    "file": "/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch/seed_0/stitch_50/0/train/stitch_frontiers.json",
    "out": "/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch/seed_0/stitch_50/0/train/stitch_output.json",
    "iterations": 10,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "step": {
      "max_arity": 2,
      "threads": 1,
      "inv_candidates": 1,
      "hole_choice": "MinCost",
      "no_top_lambda": false,
      "track": null,
      "verbose_worklist": false,
      "verbose_best": false,
      "break_early_assignment": false,
      "fifo_worklist": false,
      "ascending_worklist": false,
      "lossy_candidates": false,
      "no_cache": false,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_stats": false,
      "no_other_util": false,
      "no_ctx_thread": false,
      "eta_long": false
    }
  },
  "original_cost": 533432,
  "original": [
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
  ],
  "invs": [
    {
      "body": "(T (repeat (repeat (C #0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi #1) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi #1)))) (* 1 (* 0.5 (sin (/ pi #1))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
      "dreamcoder": "#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))))",
      "arity": 2,
      "name": "fn_0",
      "rewritten": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)"
      ],
      "utility": 173867,
      "expected_cost": 347592,
      "final_cost": 347592,
      "multiplier": 1.534649819328408,
      "multiplier_wrt_orig": 1.534649819328408,
      "num_uses": 23,
      "uses": [
        {
          "fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2": "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4": "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2": "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4": "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2": "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4": "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        }
      ]
    },
    {
      "body": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M #1 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) #0)))",
      "dreamcoder": "#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1)))))",
      "arity": 2,
      "name": "fn_1",
      "rewritten": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)"
      ],
      "utility": 71355,
      "expected_cost": 272448,
      "final_cost": 272448,
      "multiplier": 1.2758104298801973,
      "multiplier_wrt_orig": 1.9579222457129435,
      "num_uses": 31,
      "uses": [
        {
          "fn_1 0 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_1 1 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))"
        },
        {
          "fn_1 2 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))"
        },
        {
          "fn_1 0 (- (* 1 2) 0)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_1 1 (- (* 1 2) 1)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))"
        },
        {
          "fn_1 2 (- (* 1 2) 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))"
        }
      ]
    },
    {
      "body": "(T (repeat (repeat (C #0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
      "dreamcoder": "#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))",
      "arity": 1,
      "name": "fn_2",
      "rewritten": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(fn_2 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(fn_2 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(fn_2 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_0 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)"
      ],
      "utility": 61206,
      "expected_cost": 198819,
      "final_cost": 198819,
      "multiplier": 1.370331809334118,
      "multiplier_wrt_orig": 2.683003133503337,
      "num_uses": 9,
      "uses": [
        {
          "fn_2 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0)))": "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_2 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0)))": "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0))": "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        }
      ]
    },
    {
      "body": "(C (T c (M (+ #1 (* 0 0.5)) 0 0 0)) (T #0 (M (+ #1 (* 1 0.5)) 0 0 0)))",
      "dreamcoder": "#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0)))))",
      "arity": 2,
      "name": "fn_3",
      "rewritten": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(T (repeat (repeat (C (fn_3 r 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (fn_3 c 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(T (repeat (repeat (C (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)"
      ],
      "utility": 43427,
      "expected_cost": 152359,
      "final_cost": 152359,
      "multiplier": 1.3049376800845371,
      "multiplier_wrt_orig": 3.5011518846933884,
      "num_uses": 23,
      "uses": [
        {
          "fn_3 c 1": "(C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0)))"
        },
        {
          "fn_3 r 1": "(C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0)))"
        },
        {
          "fn_3 c 2": "(C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0)))"
        },
        {
          "fn_3 r 2": "(C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0)))"
        }
      ]
    },
    {
      "body": "(C (C #1 (T (T #0 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T #0 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
      "dreamcoder": "#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))))",
      "arity": 2,
      "name": "fn_4",
      "rewritten": [
        "(fn_4 c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))))",
        "(fn_4 r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2)))",
        "(fn_4 c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))))",
        "(fn_4 r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))))",
        "(fn_4 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2)))",
        "(fn_4 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))))",
        "(fn_4 r (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2)))",
        "(fn_4 c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))))",
        "(fn_4 r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2)))",
        "(fn_4 c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))))",
        "(fn_4 r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(T (repeat (repeat (C (fn_3 r 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (fn_3 c 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(T (repeat (repeat (C (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)"
      ],
      "utility": 38377,
      "expected_cost": 107919,
      "final_cost": 107919,
      "multiplier": 1.41179032422465,
      "multiplier_wrt_orig": 4.942892354451024,
      "num_uses": 11,
      "uses": [
        {
          "fn_4 c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2)))": "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_4 r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2)))": "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_4 c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2)))": "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_4 r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2)))": "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_4 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2)))": "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_4 r (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2)))": "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (fn_1 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_4 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1)))": "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (fn_1 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_4 c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2)))": "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_4 r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2)))": "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_4 c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0)))": "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_4 r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0)))": "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        }
      ]
    },
    {
      "body": "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 #0))",
      "dreamcoder": "#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0)))",
      "arity": 1,
      "name": "fn_5",
      "rewritten": [
        "(fn_4 c (fn_5 (- (* 1 2) 0)))",
        "(fn_4 r (fn_5 (- (* 1 2) 0)))",
        "(fn_5 (* 1 2))",
        "(fn_4 c (fn_5 (* 1 2)))",
        "(fn_4 r (fn_5 (* 1 2)))",
        "(fn_4 c (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))))",
        "(C (fn_5 (* 1 2)) (fn_1 1 (* 1 2)))",
        "(fn_4 c (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))))",
        "(fn_4 r (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))))",
        "(C (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2)))",
        "(fn_4 c (C (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))))",
        "(fn_4 r (C (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))))",
        "(C (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2)))",
        "(fn_4 c (C (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))))",
        "(fn_4 r (C (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(T (repeat (repeat (C (fn_3 r 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (fn_3 c 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(T (repeat (repeat (C (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)"
      ],
      "utility": 33936,
      "expected_cost": 70044,
      "final_cost": 70044,
      "multiplier": 1.5407315401747472,
      "multiplier_wrt_orig": 7.615670150191308,
      "num_uses": 15,
      "uses": [
        {
          "fn_5 (* 1 2)": "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (* 1 2)))"
        },
        {
          "fn_5 (- (* 1 2) 0)": "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_1 0 (- (* 1 2) 0)))"
        }
      ]
    },
    {
      "body": "(T (repeat (repeat (C #0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 #1 0 0)) (M 1 0 (* 1 (* 0.5 (cos #1))) (* 1 (* 0.5 (sin #1)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))",
      "dreamcoder": "#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))))",
      "arity": 2,
      "name": "fn_6",
      "rewritten": [
        "(fn_4 c (fn_5 (- (* 1 2) 0)))",
        "(fn_4 r (fn_5 (- (* 1 2) 0)))",
        "(fn_5 (* 1 2))",
        "(fn_4 c (fn_5 (* 1 2)))",
        "(fn_4 r (fn_5 (* 1 2)))",
        "(fn_4 c (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))))",
        "(C (fn_5 (* 1 2)) (fn_1 1 (* 1 2)))",
        "(fn_4 c (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))))",
        "(fn_4 r (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))))",
        "(C (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2)))",
        "(fn_4 c (C (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))))",
        "(fn_4 r (C (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))))",
        "(C (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2)))",
        "(fn_4 c (C (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))))",
        "(fn_4 r (C (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_6 (fn_3 r 1) (/ pi 2))",
        "(fn_6 (fn_3 c 1) (/ pi 2))",
        "(fn_6 (repeat c 1 (M (+ 1 0.5) 0 0 0)) (/ pi 4))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) (/ pi 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) (/ pi 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) (/ pi 4))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)"
      ],
      "utility": 12570,
      "expected_cost": 46410,
      "final_cost": 46410,
      "multiplier": 1.5092436974789916,
      "multiplier_wrt_orig": 11.493902176255117,
      "num_uses": 3,
      "uses": [
        {
          "fn_6 (fn_3 c 1) (/ pi 2)": "(T (repeat (repeat (C (fn_3 c 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))"
        },
        {
          "fn_6 (fn_3 r 1) (/ pi 2)": "(T (repeat (repeat (C (fn_3 r 1) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))"
        },
        {
          "fn_6 (repeat c 1 (M (+ 1 0.5) 0 0 0)) (/ pi 4)": "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))"
        }
      ]
    },
    {
      "body": "(repeat c 1 (M (+ #0 0.5) 0 0 0))",
      "dreamcoder": "#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0)))",
      "arity": 1,
      "name": "fn_7",
      "rewritten": [
        "(fn_4 c (fn_5 (- (* 1 2) 0)))",
        "(fn_4 r (fn_5 (- (* 1 2) 0)))",
        "(fn_5 (* 1 2))",
        "(fn_4 c (fn_5 (* 1 2)))",
        "(fn_4 r (fn_5 (* 1 2)))",
        "(fn_4 c (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))))",
        "(C (fn_5 (* 1 2)) (fn_1 1 (* 1 2)))",
        "(fn_4 c (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))))",
        "(fn_4 r (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))))",
        "(C (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2)))",
        "(fn_4 c (C (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))))",
        "(fn_4 r (C (C (fn_5 (- (* 1 2) 0)) (fn_1 1 (- (* 1 2) 1))) (fn_1 2 (- (* 1 2) 2))))",
        "(C (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2)))",
        "(fn_4 c (C (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))))",
        "(fn_4 r (C (C (fn_5 (* 1 2)) (fn_1 1 (* 1 2))) (fn_1 2 (* 1 2))))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (fn_7 2))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (fn_7 2))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_6 (fn_3 r 1) (/ pi 2))",
        "(fn_6 (fn_3 c 1) (/ pi 2))",
        "(fn_6 (fn_7 1) (/ pi 4))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (fn_7 2))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) (/ pi 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) (/ pi 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) (/ pi 4))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)"
      ],
      "utility": 8333,
      "expected_cost": 36714,
      "final_cost": 36714,
      "multiplier": 1.264095440431443,
      "multiplier_wrt_orig": 14.529389333769135,
      "num_uses": 12,
      "uses": [
        {
          "fn_7 1": "(repeat c 1 (M (+ 1 0.5) 0 0 0))"
        },
        {
          "fn_7 2": "(repeat c 1 (M (+ 2 0.5) 0 0 0))"
        }
      ]
    },
    {
      "body": "(* 1 2)",
      "dreamcoder": "#(* 1 2)",
      "arity": 0,
      "name": "fn_8",
      "rewritten": [
        "(fn_4 c (fn_5 (- fn_8 0)))",
        "(fn_4 r (fn_5 (- fn_8 0)))",
        "(fn_5 fn_8)",
        "(fn_4 c (fn_5 fn_8))",
        "(fn_4 r (fn_5 fn_8))",
        "(fn_4 c (C (fn_5 (- fn_8 0)) (fn_1 1 (- fn_8 1))))",
        "(C (fn_5 fn_8) (fn_1 1 fn_8))",
        "(fn_4 c (C (fn_5 fn_8) (fn_1 1 fn_8)))",
        "(fn_4 r (C (fn_5 fn_8) (fn_1 1 fn_8)))",
        "(C (C (fn_5 (- fn_8 0)) (fn_1 1 (- fn_8 1))) (fn_1 2 (- fn_8 2)))",
        "(fn_4 c (C (C (fn_5 (- fn_8 0)) (fn_1 1 (- fn_8 1))) (fn_1 2 (- fn_8 2))))",
        "(fn_4 r (C (C (fn_5 (- fn_8 0)) (fn_1 1 (- fn_8 1))) (fn_1 2 (- fn_8 2))))",
        "(C (C (fn_5 fn_8) (fn_1 1 fn_8)) (fn_1 2 fn_8))",
        "(fn_4 c (C (C (fn_5 fn_8) (fn_1 1 fn_8)) (fn_1 2 fn_8)))",
        "(fn_4 r (C (C (fn_5 fn_8) (fn_1 1 fn_8)) (fn_1 2 fn_8)))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (fn_7 2))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (fn_7 2))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_6 (fn_3 r 1) (/ pi 2))",
        "(fn_6 (fn_3 c 1) (/ pi 2))",
        "(fn_6 (fn_7 1) (/ pi 4))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_0 (fn_3 r 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)",
        "(fn_2 (fn_7 2))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_0 (fn_3 c 1) 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_0 (fn_3 r 1) 4)",
        "(fn_0 (fn_3 c 1) 4)"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) (/ pi 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) (/ pi 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) (/ pi 4))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) 4)"
      ],
      "utility": 5809,
      "expected_cost": 30452,
      "final_cost": 30452,
      "multiplier": 1.2056350978589254,
      "multiplier_wrt_orig": 17.51714173124918,
      "num_uses": 31,
      "uses": [
        {
          "fn_8 ": "(* 1 2)"
        }
      ]
    },
    {
      "body": "(fn_0 (fn_3 #0 1))",
      "dreamcoder": "#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1)))",
      "arity": 1,
      "name": "fn_9",
      "rewritten": [
        "(fn_4 c (fn_5 (- fn_8 0)))",
        "(fn_4 r (fn_5 (- fn_8 0)))",
        "(fn_5 fn_8)",
        "(fn_4 c (fn_5 fn_8))",
        "(fn_4 r (fn_5 fn_8))",
        "(fn_4 c (C (fn_5 (- fn_8 0)) (fn_1 1 (- fn_8 1))))",
        "(C (fn_5 fn_8) (fn_1 1 fn_8))",
        "(fn_4 c (C (fn_5 fn_8) (fn_1 1 fn_8)))",
        "(fn_4 r (C (fn_5 fn_8) (fn_1 1 fn_8)))",
        "(C (C (fn_5 (- fn_8 0)) (fn_1 1 (- fn_8 1))) (fn_1 2 (- fn_8 2)))",
        "(fn_4 c (C (C (fn_5 (- fn_8 0)) (fn_1 1 (- fn_8 1))) (fn_1 2 (- fn_8 2))))",
        "(fn_4 r (C (C (fn_5 (- fn_8 0)) (fn_1 1 (- fn_8 1))) (fn_1 2 (- fn_8 2))))",
        "(C (C (fn_5 fn_8) (fn_1 1 fn_8)) (fn_1 2 fn_8))",
        "(fn_4 c (C (C (fn_5 fn_8) (fn_1 1 fn_8)) (fn_1 2 fn_8)))",
        "(fn_4 r (C (C (fn_5 fn_8) (fn_1 1 fn_8)) (fn_1 2 fn_8)))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_9 r 2)",
        "(fn_9 c 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_9 r 4)",
        "(fn_9 c 4)",
        "(fn_2 (fn_7 2))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_9 r 2)",
        "(fn_9 c 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_9 r 4)",
        "(fn_9 c 4)",
        "(fn_2 (fn_7 2))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_6 (fn_3 r 1) (/ pi 2))",
        "(fn_6 (fn_3 c 1) (/ pi 2))",
        "(fn_6 (fn_7 1) (/ pi 4))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_9 r 2)",
        "(fn_9 c 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_9 r 4)",
        "(fn_9 c 4)",
        "(fn_2 (fn_7 2))",
        "(fn_2 (fn_3 r 2))",
        "(fn_2 (fn_3 c 2))",
        "(fn_0 (fn_7 1) 2)",
        "(fn_9 c 2)",
        "(fn_0 (fn_7 1) 4)",
        "(fn_9 r 4)",
        "(fn_9 c 4)"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) r 2)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) c 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) r 4)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) c 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) r 2)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) c 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) r 4)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) c 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 1) (/ pi 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 1) (/ pi 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 $0 0 0)) (M 1 0 (* 1 (* 0.5 (cos $0))) (* 1 (* 0.5 (sin $0)))))) 1 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) (/ pi 4))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) r 2)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) c 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) r 4)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) c 4)",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) r 2))",
        "(#(lambda (T (repeat (repeat (C $0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) c 2))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 2)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) c 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (repeat c 1 (M (+ $0 0.5) 0 0 0))) 1) 4)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) r 4)",
        "(#(lambda (#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (T c (M (+ $0 (* 0 0.5)) 0 0 0)) (T $1 (M (+ $0 (* 1 0.5)) 0 0 0))))) $0 1))) c 4)"
      ],
      "utility": 2576,
      "expected_cost": 27422,
      "final_cost": 27422,
      "multiplier": 1.1104952228137992,
      "multiplier_wrt_orig": 19.452702209904455,
      "num_uses": 15,
      "uses": [
        {
          "fn_9 c": "(fn_0 (fn_3 c 1))"
        },
        {
          "fn_9 r": "(fn_0 (fn_3 r 1))"
        }
      ]
    }
  ]
}