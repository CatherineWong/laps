{
  "cmd": "target/release/compress /Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_25/0/train/stitch_frontiers.json --out=/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_25/0/train/stitch_output.json --max-arity=2 --iterations=10 --fmt=dreamcoder",
  "args": {
    "file": "/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_25/0/train/stitch_frontiers.json",
    "out": "/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_25/0/train/stitch_output.json",
    "iterations": 10,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "step": {
      "max_arity": 2,
      "threads": 1,
      "inv_candidates": 1,
      "hole_choice": "MinCost",
      "no_top_lambda": false,
      "track": null,
      "verbose_worklist": false,
      "verbose_best": false,
      "break_early_assignment": false,
      "fifo_worklist": false,
      "ascending_worklist": false,
      "lossy_candidates": false,
      "no_cache": false,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_stats": false,
      "no_other_util": false,
      "no_ctx_thread": false,
      "eta_long": false
    }
  },
  "original_cost": 362048,
  "original": [
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(T (repeat (repeat (C (repeat r 1 (M (+ 1 1) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
    "(M 1 0 0 1)",
    "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
    "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (C (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
  ],
  "invs": [
    {
      "body": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M #1 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) #0)))",
      "dreamcoder": "#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1)))))",
      "arity": 2,
      "name": "fn_0",
      "rewritten": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat r 1 (M (+ 1 1) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(M 1 0 0 1)",
        "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (fn_0 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (fn_0 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat r 1 (M (+ 1 1) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(M 1 0 0 1)",
        "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "utility": 93171,
      "expected_cost": 265088,
      "final_cost": 265088,
      "multiplier": 1.365765330758088,
      "multiplier_wrt_orig": 1.365765330758088,
      "num_uses": 40,
      "uses": [
        {
          "fn_0 0 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_0 1 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))"
        },
        {
          "fn_0 2 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))"
        },
        {
          "fn_0 0 (- (* 1 2) 0)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_0 1 (- (* 1 2) 1)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))"
        },
        {
          "fn_0 2 (- (* 1 2) 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))"
        }
      ]
    },
    {
      "body": "(C (C #1 (T (T #0 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T #0 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
      "dreamcoder": "#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))))",
      "arity": 2,
      "name": "fn_1",
      "rewritten": [
        "(fn_1 c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))))",
        "(fn_1 r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))",
        "(fn_1 c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))))",
        "(fn_1 r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))))",
        "(fn_1 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(fn_1 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))))",
        "(fn_1 r (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(fn_1 c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(fn_1 r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(fn_1 c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(fn_1 r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat r 1 (M (+ 1 1) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(M 1 0 0 1)",
        "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(fn_1 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (fn_0 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (fn_0 0 (* 1 2)))",
        "(fn_1 c (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))))",
        "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (repeat r 1 (M (+ 1 1) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(M 1 0 0 1)",
        "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "utility": 46457,
      "expected_cost": 212568,
      "final_cost": 212568,
      "multiplier": 1.2470738775356591,
      "multiplier_wrt_orig": 1.7032102668322608,
      "num_uses": 13,
      "uses": [
        {
          "fn_1 c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))": "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))": "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))": "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))": "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))": "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 r (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))": "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))": "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))": "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))": "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0)))": "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0)))": "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 c (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))": "(C (C (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        }
      ]
    },
    {
      "body": "(T (repeat (repeat (C #0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi #1) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi #1)))) (* 1 (* 0.5 (sin (/ pi #1))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
      "dreamcoder": "#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))))",
      "arity": 2,
      "name": "fn_2",
      "rewritten": [
        "(fn_1 c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))))",
        "(fn_1 r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))",
        "(fn_1 c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))))",
        "(fn_1 r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))))",
        "(fn_1 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(fn_1 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))))",
        "(fn_1 r (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(fn_1 c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(fn_1 r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(fn_1 c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(fn_1 r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(T (repeat (repeat (C (repeat r 1 (M (+ 1 1) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(M 1 0 0 1)",
        "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(fn_1 c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (fn_0 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (fn_0 0 (* 1 2)))",
        "(fn_1 c (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))))",
        "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(T (repeat (repeat (C (repeat r 1 (M (+ 1 1) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(M 1 0 0 1)",
        "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "utility": 44587,
      "expected_cost": 156008,
      "final_cost": 156008,
      "multiplier": 1.3625455104866417,
      "multiplier_wrt_orig": 2.320701502487052,
      "num_uses": 7,
      "uses": [
        {
          "fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2": "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4": "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2": "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4": "(T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2": "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4": "(T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        }
      ]
    },
    {
      "body": "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 #0))",
      "dreamcoder": "#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0)))",
      "arity": 1,
      "name": "fn_3",
      "rewritten": [
        "(fn_1 c (fn_3 (- (* 1 2) 0)))",
        "(fn_1 r (fn_3 (- (* 1 2) 0)))",
        "(fn_3 (* 1 2))",
        "(fn_1 c (fn_3 (* 1 2)))",
        "(fn_1 r (fn_3 (* 1 2)))",
        "(fn_1 c (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))))",
        "(C (fn_3 (* 1 2)) (fn_0 1 (* 1 2)))",
        "(fn_1 c (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))))",
        "(fn_1 r (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))))",
        "(C (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(fn_1 c (C (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(fn_1 r (C (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(C (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(fn_1 c (C (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(fn_1 r (C (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(T (repeat (repeat (C (repeat r 1 (M (+ 1 1) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(M 1 0 0 1)",
        "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(fn_1 c (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1)))",
        "(C (fn_3 (* 1 2)) (fn_0 1 (* 1 2)))",
        "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (fn_0 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (fn_0 0 (* 1 2)))",
        "(fn_1 c (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))))",
        "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(T (repeat (repeat (C (repeat r 1 (M (+ 1 1) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
        "(M 1 0 0 1)",
        "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "utility": 41511,
      "expected_cost": 110558,
      "final_cost": 110558,
      "multiplier": 1.411096438068706,
      "multiplier_wrt_orig": 3.274733623980173,
      "num_uses": 18,
      "uses": [
        {
          "fn_3 (* 1 2)": "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))"
        },
        {
          "fn_3 (- (* 1 2) 0)": "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0)))"
        }
      ]
    },
    {
      "body": "(T (repeat (repeat (C #0 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* #1 (* 0.5 (cos (/ pi 4)))) (* #1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))",
      "dreamcoder": "#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))))",
      "arity": 2,
      "name": "fn_4",
      "rewritten": [
        "(fn_1 c (fn_3 (- (* 1 2) 0)))",
        "(fn_1 r (fn_3 (- (* 1 2) 0)))",
        "(fn_3 (* 1 2))",
        "(fn_1 c (fn_3 (* 1 2)))",
        "(fn_1 r (fn_3 (* 1 2)))",
        "(fn_1 c (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))))",
        "(C (fn_3 (* 1 2)) (fn_0 1 (* 1 2)))",
        "(fn_1 c (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))))",
        "(fn_1 r (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))))",
        "(C (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(fn_1 c (C (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(fn_1 r (C (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(C (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(fn_1 c (C (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(fn_1 r (C (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_2 (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(fn_4 (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(fn_4 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_4 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_4 (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(fn_1 c (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1)))",
        "(C (fn_3 (* 1 2)) (fn_0 1 (* 1 2)))",
        "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (fn_0 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (fn_0 0 (* 1 2)))",
        "(fn_1 c (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))))",
        "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (T (T (T (T r (M 2 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (T r (M 3 0 0 0)) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(T (repeat (repeat (T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "utility": 20197,
      "expected_cost": 78238,
      "final_cost": 78238,
      "multiplier": 1.4130984943377898,
      "multiplier_wrt_orig": 4.627521153403717,
      "num_uses": 4,
      "uses": [
        {
          "fn_4 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) 2": "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T c (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_4 (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) 2": "(T (repeat (repeat (C (C (T c (M (+ 2 (* 0 0.5)) 0 0 0)) (T r (M (+ 2 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_4 (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2": "(T (repeat (repeat (C (repeat c 1 (M (+ 2 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        },
        {
          "fn_4 (repeat r 1 (M (+ 1 1) 0 0 0)) 1": "(T (repeat (repeat (C (repeat r 1 (M (+ 1 1) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"
        }
      ]
    },
    {
      "body": "(T #1 (M #0 0 0 0))",
      "dreamcoder": "#(lambda (lambda (T $0 (M $1 0 0 0))))",
      "arity": 2,
      "name": "fn_5",
      "rewritten": [
        "(fn_1 c (fn_3 (- (* 1 2) 0)))",
        "(fn_1 r (fn_3 (- (* 1 2) 0)))",
        "(fn_3 (* 1 2))",
        "(fn_1 c (fn_3 (* 1 2)))",
        "(fn_1 r (fn_3 (* 1 2)))",
        "(fn_1 c (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))))",
        "(C (fn_3 (* 1 2)) (fn_0 1 (* 1 2)))",
        "(fn_1 c (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))))",
        "(fn_1 r (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))))",
        "(C (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(fn_1 c (C (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(fn_1 r (C (C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(C (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(fn_1 c (C (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(fn_1 r (C (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_2 (C (fn_5 (+ 1 (* 0 0.5)) c) (fn_5 (+ 1 (* 1 0.5)) r)) 2)",
        "(fn_2 (C (fn_5 (+ 1 (* 0 0.5)) c) (fn_5 (+ 1 (* 1 0.5)) c)) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_2 (C (fn_5 (+ 1 (* 0 0.5)) c) (fn_5 (+ 1 (* 1 0.5)) r)) 4)",
        "(fn_2 (C (fn_5 (+ 1 (* 0 0.5)) c) (fn_5 (+ 1 (* 1 0.5)) c)) 4)",
        "(fn_4 (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(fn_4 (C (fn_5 (+ 2 (* 0 0.5)) c) (fn_5 (+ 2 (* 1 0.5)) r)) 2)",
        "(fn_4 (C (fn_5 (+ 2 (* 0 0.5)) c) (fn_5 (+ 2 (* 1 0.5)) c)) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_4 (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (fn_5 1 (fn_5 1 (fn_5 1 (T c (M 1 0 0.5 (- 1 0)))))) (fn_5 1 (fn_5 1 (T c (M 1 0 0.5 (- 1 0)))))))",
        "(fn_1 c (C (fn_3 (* 1 2)) (fn_0 1 (* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (fn_5 1 (fn_5 1 (fn_5 1 c))) (fn_5 1 (fn_5 1 (fn_5 1 c)))))",
        "(C (fn_3 (- (* 1 2) 0)) (fn_0 1 (- (* 1 2) 1)))",
        "(C (fn_3 (* 1 2)) (fn_0 1 (* 1 2)))",
        "(C (T (T (T (fn_5 2 r) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (fn_5 3 r) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (fn_0 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (fn_0 0 (* 1 2)))",
        "(fn_1 c (C (fn_5 1 (fn_5 1 (T l (M 3 0 0 (+ 0 2))))) (fn_0 0 (* 1 2))))",
        "(T (repeat (repeat (fn_5 1 (fn_5 1 (T c (M 1 0 (- 0 0.5) 0)))) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 1 0.5)) r)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 1 0.5)) c)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 1 0.5)) r)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 1 0.5)) c)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 2 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 2 (* 1 0.5)) r)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 2 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 2 (* 1 0.5)) c)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 0.5 (- 1 0)))))) (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 0.5 (- 1 0)))))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 c))) (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 c)))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- (* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (T (T (T (#(lambda (lambda (T $0 (M $1 0 0 0)))) 2 r) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (#(lambda (lambda (T $0 (M $1 0 0 0)))) 3 r) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T l (M 3 0 0 (+ 0 2))))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(T (repeat (repeat (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 (- 0 0.5) 0)))) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "utility": 10957,
      "expected_cost": 66522,
      "final_cost": 66522,
      "multiplier": 1.1761221851417576,
      "multiplier_wrt_orig": 5.442530290730886,
      "num_uses": 29,
      "uses": [
        {
          "fn_5 1 (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))": "(T (T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_5 1 (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0))": "(T (T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_5 1 (T (T c (M 1 0 0 0)) (M 1 0 0 0))": "(T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_5 1 (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0))": "(T (T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_5 1 (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0))": "(T (T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_5 1 (T c (M 1 0 (- 0 0.5) 0))": "(T (T c (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0))"
        },
        {
          "fn_5 1 (T c (M 1 0 0 0))": "(T (T c (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_5 1 (T c (M 1 0 0.5 (- 1 0)))": "(T (T c (M 1 0 0.5 (- 1 0))) (M 1 0 0 0))"
        },
        {
          "fn_5 1 (T l (M 3 0 0 (+ 0 2)))": "(T (T l (M 3 0 0 (+ 0 2))) (M 1 0 0 0))"
        },
        {
          "fn_5 (+ 1 (* 0 0.5)) c": "(T c (M (+ 1 (* 0 0.5)) 0 0 0))"
        },
        {
          "fn_5 (+ 1 (* 1 0.5)) c": "(T c (M (+ 1 (* 1 0.5)) 0 0 0))"
        },
        {
          "fn_5 (+ 2 (* 0 0.5)) c": "(T c (M (+ 2 (* 0 0.5)) 0 0 0))"
        },
        {
          "fn_5 (+ 2 (* 1 0.5)) c": "(T c (M (+ 2 (* 1 0.5)) 0 0 0))"
        },
        {
          "fn_5 1 c": "(T c (M 1 0 0 0))"
        },
        {
          "fn_5 (+ 1 (* 1 0.5)) r": "(T r (M (+ 1 (* 1 0.5)) 0 0 0))"
        },
        {
          "fn_5 (+ 2 (* 1 0.5)) r": "(T r (M (+ 2 (* 1 0.5)) 0 0 0))"
        },
        {
          "fn_5 2 r": "(T r (M 2 0 0 0))"
        },
        {
          "fn_5 3 r": "(T r (M 3 0 0 0))"
        }
      ]
    },
    {
      "body": "(* 1 2)",
      "dreamcoder": "#(* 1 2)",
      "arity": 0,
      "name": "fn_6",
      "rewritten": [
        "(fn_1 c (fn_3 (- fn_6 0)))",
        "(fn_1 r (fn_3 (- fn_6 0)))",
        "(fn_3 fn_6)",
        "(fn_1 c (fn_3 fn_6))",
        "(fn_1 r (fn_3 fn_6))",
        "(fn_1 c (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))))",
        "(C (fn_3 fn_6) (fn_0 1 fn_6))",
        "(fn_1 c (C (fn_3 fn_6) (fn_0 1 fn_6)))",
        "(fn_1 r (C (fn_3 fn_6) (fn_0 1 fn_6)))",
        "(C (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))) (fn_0 2 (- fn_6 2)))",
        "(fn_1 c (C (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))) (fn_0 2 (- fn_6 2))))",
        "(fn_1 r (C (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))) (fn_0 2 (- fn_6 2))))",
        "(C (C (fn_3 fn_6) (fn_0 1 fn_6)) (fn_0 2 fn_6))",
        "(fn_1 c (C (C (fn_3 fn_6) (fn_0 1 fn_6)) (fn_0 2 fn_6)))",
        "(fn_1 r (C (C (fn_3 fn_6) (fn_0 1 fn_6)) (fn_0 2 fn_6)))",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_2 (C (fn_5 (+ 1 (* 0 0.5)) c) (fn_5 (+ 1 (* 1 0.5)) r)) 2)",
        "(fn_2 (C (fn_5 (+ 1 (* 0 0.5)) c) (fn_5 (+ 1 (* 1 0.5)) c)) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_2 (C (fn_5 (+ 1 (* 0 0.5)) c) (fn_5 (+ 1 (* 1 0.5)) r)) 4)",
        "(fn_2 (C (fn_5 (+ 1 (* 0 0.5)) c) (fn_5 (+ 1 (* 1 0.5)) c)) 4)",
        "(fn_4 (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(fn_4 (C (fn_5 (+ 2 (* 0 0.5)) c) (fn_5 (+ 2 (* 1 0.5)) r)) 2)",
        "(fn_4 (C (fn_5 (+ 2 (* 0 0.5)) c) (fn_5 (+ 2 (* 1 0.5)) c)) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_4 (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (fn_5 1 (fn_5 1 (fn_5 1 (T c (M 1 0 0.5 (- 1 0)))))) (fn_5 1 (fn_5 1 (T c (M 1 0 0.5 (- 1 0)))))))",
        "(fn_1 c (C (fn_3 fn_6) (fn_0 1 fn_6)))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (fn_5 1 (fn_5 1 (fn_5 1 c))) (fn_5 1 (fn_5 1 (fn_5 1 c)))))",
        "(C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1)))",
        "(C (fn_3 fn_6) (fn_0 1 fn_6))",
        "(C (T (T (T (fn_5 2 r) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (fn_5 3 r) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (fn_0 0 fn_6)) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (fn_0 0 fn_6))",
        "(fn_1 c (C (fn_5 1 (fn_5 1 (T l (M 3 0 0 (+ 0 2))))) (fn_0 0 fn_6)))",
        "(T (repeat (repeat (fn_5 1 (fn_5 1 (T c (M 1 0 (- 0 0.5) 0)))) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 1 0.5)) r)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 1 0.5)) c)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 1 0.5)) r)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 1 (* 1 0.5)) c)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 2 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 2 (* 1 0.5)) r)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 2 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ 2 (* 1 0.5)) c)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 0.5 (- 1 0)))))) (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 0.5 (- 1 0)))))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 c))) (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 c)))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1)))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(C (T (T (T (#(lambda (lambda (T $0 (M $1 0 0 0)))) 2 r) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (#(lambda (lambda (T $0 (M $1 0 0 0)))) 3 r) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T l (M 3 0 0 (+ 0 2))))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))))",
        "(T (repeat (repeat (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 (- 0 0.5) 0)))) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "utility": 7627,
      "expected_cost": 58442,
      "final_cost": 58442,
      "multiplier": 1.1382567331713493,
      "multiplier_wrt_orig": 6.194996748913453,
      "num_uses": 40,
      "uses": [
        {
          "fn_6 ": "(* 1 2)"
        }
      ]
    },
    {
      "body": "(C (fn_5 (+ #1 (* 0 0.5)) c) (fn_5 (+ #1 (* 1 0.5)) #0))",
      "dreamcoder": "#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1))))",
      "arity": 2,
      "name": "fn_7",
      "rewritten": [
        "(fn_1 c (fn_3 (- fn_6 0)))",
        "(fn_1 r (fn_3 (- fn_6 0)))",
        "(fn_3 fn_6)",
        "(fn_1 c (fn_3 fn_6))",
        "(fn_1 r (fn_3 fn_6))",
        "(fn_1 c (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))))",
        "(C (fn_3 fn_6) (fn_0 1 fn_6))",
        "(fn_1 c (C (fn_3 fn_6) (fn_0 1 fn_6)))",
        "(fn_1 r (C (fn_3 fn_6) (fn_0 1 fn_6)))",
        "(C (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))) (fn_0 2 (- fn_6 2)))",
        "(fn_1 c (C (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))) (fn_0 2 (- fn_6 2))))",
        "(fn_1 r (C (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))) (fn_0 2 (- fn_6 2))))",
        "(C (C (fn_3 fn_6) (fn_0 1 fn_6)) (fn_0 2 fn_6))",
        "(fn_1 c (C (C (fn_3 fn_6) (fn_0 1 fn_6)) (fn_0 2 fn_6)))",
        "(fn_1 r (C (C (fn_3 fn_6) (fn_0 1 fn_6)) (fn_0 2 fn_6)))",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_2 (fn_7 r 1) 2)",
        "(fn_2 (fn_7 c 1) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_2 (fn_7 r 1) 4)",
        "(fn_2 (fn_7 c 1) 4)",
        "(fn_4 (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(fn_4 (fn_7 r 2) 2)",
        "(fn_4 (fn_7 c 2) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_4 (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (fn_5 1 (fn_5 1 (fn_5 1 (T c (M 1 0 0.5 (- 1 0)))))) (fn_5 1 (fn_5 1 (T c (M 1 0 0.5 (- 1 0)))))))",
        "(fn_1 c (C (fn_3 fn_6) (fn_0 1 fn_6)))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (fn_5 1 (fn_5 1 (fn_5 1 c))) (fn_5 1 (fn_5 1 (fn_5 1 c)))))",
        "(C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1)))",
        "(C (fn_3 fn_6) (fn_0 1 fn_6))",
        "(C (T (T (T (fn_5 2 r) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (fn_5 3 r) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (fn_0 0 fn_6)) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (fn_0 0 fn_6))",
        "(fn_1 c (C (fn_5 1 (fn_5 1 (T l (M 3 0 0 (+ 0 2))))) (fn_0 0 fn_6)))",
        "(T (repeat (repeat (fn_5 1 (fn_5 1 (T c (M 1 0 (- 0 0.5) 0)))) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) c 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) r 2) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) c 2) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 0.5 (- 1 0)))))) (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 0.5 (- 1 0)))))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(C (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 c))) (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 c)))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1)))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(C (T (T (T (#(lambda (lambda (T $0 (M $1 0 0 0)))) 2 r) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (#(lambda (lambda (T $0 (M $1 0 0 0)))) 3 r) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T l (M 3 0 0 (+ 0 2))))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))))",
        "(T (repeat (repeat (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 (- 0 0.5) 0)))) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "utility": 5451,
      "expected_cost": 51170,
      "final_cost": 51170,
      "multiplier": 1.1421145202266954,
      "multiplier_wrt_orig": 7.075395739691225,
      "num_uses": 6,
      "uses": [
        {
          "fn_7 c 1": "(C (fn_5 (+ 1 (* 0 0.5)) c) (fn_5 (+ 1 (* 1 0.5)) c))"
        },
        {
          "fn_7 r 1": "(C (fn_5 (+ 1 (* 0 0.5)) c) (fn_5 (+ 1 (* 1 0.5)) r))"
        },
        {
          "fn_7 c 2": "(C (fn_5 (+ 2 (* 0 0.5)) c) (fn_5 (+ 2 (* 1 0.5)) c))"
        },
        {
          "fn_7 r 2": "(C (fn_5 (+ 2 (* 0 0.5)) c) (fn_5 (+ 2 (* 1 0.5)) r))"
        }
      ]
    },
    {
      "body": "(T (T #0 (M 1 0 #1 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
      "dreamcoder": "#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))",
      "arity": 2,
      "name": "fn_8",
      "rewritten": [
        "(fn_1 c (fn_3 (- fn_6 0)))",
        "(fn_1 r (fn_3 (- fn_6 0)))",
        "(fn_3 fn_6)",
        "(fn_1 c (fn_3 fn_6))",
        "(fn_1 r (fn_3 fn_6))",
        "(fn_1 c (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))))",
        "(C (fn_3 fn_6) (fn_0 1 fn_6))",
        "(fn_1 c (C (fn_3 fn_6) (fn_0 1 fn_6)))",
        "(fn_1 r (C (fn_3 fn_6) (fn_0 1 fn_6)))",
        "(C (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))) (fn_0 2 (- fn_6 2)))",
        "(fn_1 c (C (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))) (fn_0 2 (- fn_6 2))))",
        "(fn_1 r (C (C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1))) (fn_0 2 (- fn_6 2))))",
        "(C (C (fn_3 fn_6) (fn_0 1 fn_6)) (fn_0 2 fn_6))",
        "(fn_1 c (C (C (fn_3 fn_6) (fn_0 1 fn_6)) (fn_0 2 fn_6)))",
        "(fn_1 r (C (C (fn_3 fn_6) (fn_0 1 fn_6)) (fn_0 2 fn_6)))",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_2 (fn_7 r 1) 2)",
        "(fn_2 (fn_7 c 1) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_2 (fn_7 r 1) 4)",
        "(fn_2 (fn_7 c 1) 4)",
        "(fn_4 (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(fn_4 (fn_7 r 2) 2)",
        "(fn_4 (fn_7 c 2) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_4 (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (fn_5 1 (fn_5 1 (fn_5 1 (T c (M 1 0 0.5 (- 1 0)))))) (fn_5 1 (fn_5 1 (T c (M 1 0 0.5 (- 1 0)))))))",
        "(fn_1 c (C (fn_3 fn_6) (fn_0 1 fn_6)))",
        "(C (fn_8 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0) (fn_8 (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (fn_5 1 (fn_5 1 (fn_5 1 c))) (fn_5 1 (fn_5 1 (fn_5 1 c)))))",
        "(C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1)))",
        "(C (fn_3 fn_6) (fn_0 1 fn_6))",
        "(C (T (T (T (fn_5 2 r) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (fn_5 3 r) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (fn_0 0 fn_6)) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (fn_0 0 fn_6))",
        "(fn_1 c (C (fn_5 1 (fn_5 1 (T l (M 3 0 0 (+ 0 2))))) (fn_0 0 fn_6)))",
        "(T (repeat (repeat (fn_5 1 (fn_5 1 (T c (M 1 0 (- 0 0.5) 0)))) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) c 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) r 2) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) c 2) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 0.5 (- 1 0)))))) (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 0.5 (- 1 0)))))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 c))) (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 c)))))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1)))",
        "(C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(C (T (T (T (#(lambda (lambda (T $0 (M $1 0 0 0)))) 2 r) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (#(lambda (lambda (T $0 (M $1 0 0 0)))) 3 r) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T l (M 3 0 0 (+ 0 2))))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))))",
        "(T (repeat (repeat (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 (- 0 0.5) 0)))) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "utility": 3382,
      "expected_cost": 45514,
      "final_cost": 48342,
      "multiplier": 1.0584998551983782,
      "multiplier_wrt_orig": 7.489305365934384,
      "num_uses": 4,
      "uses": [
        {
          "fn_8 (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) 0": "(T (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_8 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0": "(T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_8 c (+ 0.5 1)": "(T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_8 c (- 0 (+ 0.5 1))": "(T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        }
      ]
    },
    {
      "body": "(C (fn_3 #1) (fn_0 1 #0))",
      "dreamcoder": "#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1))))",
      "arity": 2,
      "name": "fn_9",
      "rewritten": [
        "(fn_1 c (fn_3 (- fn_6 0)))",
        "(fn_1 r (fn_3 (- fn_6 0)))",
        "(fn_3 fn_6)",
        "(fn_1 c (fn_3 fn_6))",
        "(fn_1 r (fn_3 fn_6))",
        "(fn_1 c (fn_9 (- fn_6 1) (- fn_6 0)))",
        "(fn_9 fn_6 fn_6)",
        "(fn_1 c (fn_9 fn_6 fn_6))",
        "(fn_1 r (fn_9 fn_6 fn_6))",
        "(C (fn_9 (- fn_6 1) (- fn_6 0)) (fn_0 2 (- fn_6 2)))",
        "(fn_1 c (C (fn_9 (- fn_6 1) (- fn_6 0)) (fn_0 2 (- fn_6 2))))",
        "(fn_1 r (C (fn_9 (- fn_6 1) (- fn_6 0)) (fn_0 2 (- fn_6 2))))",
        "(C (fn_9 fn_6 fn_6) (fn_0 2 fn_6))",
        "(fn_1 c (C (fn_9 fn_6 fn_6) (fn_0 2 fn_6)))",
        "(fn_1 r (C (fn_9 fn_6 fn_6) (fn_0 2 fn_6)))",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_2 (fn_7 r 1) 2)",
        "(fn_2 (fn_7 c 1) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(fn_2 (fn_7 r 1) 4)",
        "(fn_2 (fn_7 c 1) 4)",
        "(fn_4 (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(fn_4 (fn_7 r 2) 2)",
        "(fn_4 (fn_7 c 2) 2)",
        "(fn_2 (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(fn_4 (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (fn_5 1 (fn_5 1 (fn_5 1 (T c (M 1 0 0.5 (- 1 0)))))) (fn_5 1 (fn_5 1 (T c (M 1 0 0.5 (- 1 0)))))))",
        "(fn_1 c (fn_9 fn_6 fn_6))",
        "(C (fn_8 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0) (fn_8 (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (fn_5 1 (fn_5 1 (fn_5 1 c))) (fn_5 1 (fn_5 1 (fn_5 1 c)))))",
        "(fn_9 (- fn_6 1) (- fn_6 0))",
        "(fn_9 fn_6 fn_6)",
        "(C (T (T (T (fn_5 2 r) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (fn_5 3 r) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (fn_0 0 fn_6)) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (fn_0 0 fn_6))",
        "(fn_1 c (C (fn_5 1 (fn_5 1 (T l (M 3 0 0 (+ 0 2))))) (fn_0 0 fn_6)))",
        "(T (repeat (repeat (fn_5 1 (fn_5 1 (T c (M 1 0 (- 0 0.5) 0)))) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) (- #(* 1 2) 0)))",
        "(#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0)))",
        "(#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(C (#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2))))",
        "(C (#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (C (#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 #(* 1 2))))",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) r 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) c 1) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) r 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) c 1) 4)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 2 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) r 2) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (#(lambda (lambda (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 0 0.5)) c) (#(lambda (lambda (T $0 (M $1 0 0 0)))) (+ $0 (* 1 0.5)) $1)))) c 2) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi $0) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi $0)))) (* 1 (* 0.5 (sin (/ pi $0))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat c 1 (M (+ 1 0.5) 0 0 0)) 2)",
        "(#(lambda (lambda (T (repeat (repeat (C $1 (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 2 (/ pi 4) 0 0)) (M 1 0 (* $0 (* 0.5 (cos (/ pi 4)))) (* $0 (* 0.5 (sin (/ pi 4))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))))) (repeat r 1 (M (+ 1 1) 0 0 0)) 1)",
        "(M 1 0 0 1)",
        "(C (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 0.5 (- 1 0)))))) (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 0.5 (- 1 0)))))))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 c))) (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 c)))))",
        "(#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0))",
        "(#(lambda (lambda (C (#(lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 $0))) $0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2))",
        "(C (T (T (T (#(lambda (lambda (T $0 (M $1 0 0 0)))) 2 r) (M 0 0 1 0)) (M 0 0 1 (* 0.25 0.5))) (M 1 0 0 (* 0.5 0))) (T (T (#(lambda (lambda (T $0 (M $1 0 0 0)))) 3 r) (M 0 0 1 0)) (M 0 0 1 (* 0.5 0))))",
        "(C (T (repeat (repeat (C (repeat r 1 (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))) 1 (M 1 0 (+ 0.5 1) 0)) 1 (M 1 0 0 (+ 0.5 1))) (M 1 0 (- 0 0.5) (- 0 0.5))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (C (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T l (M 3 0 0 (+ 0 2))))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))))",
        "(T (repeat (repeat (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (#(lambda (lambda (T $0 (M $1 0 0 0)))) 1 (T c (M 1 0 (- 0 0.5) 0)))) 1 (M 1 0 0 0)) 1 (M 1 0 0 0)) (M 1 0 0 (- (* 0.5 2) 0)))"
      ],
      "utility": 3332,
      "expected_cost": 44403,
      "final_cost": 44403,
      "multiplier": 1.0887102222822782,
      "multiplier_wrt_orig": 8.153683309686283,
      "num_uses": 13,
      "uses": [
        {
          "fn_9 (- fn_6 1) (- fn_6 0)": "(C (fn_3 (- fn_6 0)) (fn_0 1 (- fn_6 1)))"
        },
        {
          "fn_9 fn_6 fn_6": "(C (fn_3 fn_6) (fn_0 1 fn_6))"
        }
      ]
    }
  ]
}