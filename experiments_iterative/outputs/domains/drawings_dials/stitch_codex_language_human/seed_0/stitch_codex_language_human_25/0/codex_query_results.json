{"curr_prompt_idx": 9, "max_num_prompts": 10, "programs_valid": ["(transform_matrix 1 0 0 1)", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform square 1 (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) 1 (transform_matrix 1 0 (+ 0.5 1) 0)) 1 (transform_matrix 1 0 0 (+ 0.5 1))) (transform_matrix 1 0 (- 0 0.5) (- 0 0.5))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "(connect_strokes (transform (transform (transform (transform square (transform_matrix 2 0 0 0)) (transform_matrix 0 0 1 0)) (transform_matrix 0 0 1 (* 0.25 0.5))) (transform_matrix 1 0 0 (* 0.5 0))) (transform (transform (transform square (transform_matrix 3 0 0 0)) (transform_matrix 0 0 1 0)) (transform_matrix 0 0 1 (* 0.5 0))))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 0 0 (+ 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform square 1 (transform_matrix (+ 1 1) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))", "(connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "(transform (repeat_transform (repeat_transform (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) 1 (transform_matrix 1 0 0 0)) 1 (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* 0.5 2) 0)))", "(connect_strokes (connect_strokes (transform (transform (transform (transform circle (transform_matrix 1 0 0.5 (- 1 0))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0.5 (- 1 0))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))"], "programs_invalid": ["(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform rectangle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform rectangle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform circle (transform_matrix", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 3 (+ 0 (/ 1 2)) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 3 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 3 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 3 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix", "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))))", "(transform (transform (transform (transform (transform (transform (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (repeat_transform square 1 (transform_matrix 0 0 0 0)) (transform_matrix 1 0 (+ 1 1) 0))) (transform_matrix 1 0 0 (+ 1 1))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))", "(transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (transform rectangle (transform_matrix (* (* 0.5 (+ 1 1)) 1) 0 0 0)) 2) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix (* (* 0.5 (+ 1 1)) 1) 0 0 0)) (transform_matrix 1 0 (+ 1 0.5) 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (+ 1 0.5))) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (+ 1 0.5", "(transform (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) (* 0.5 1))) (transform_matrix 0 0 1 0)) (transform_matrix 0 0 (- 1 1) 0)) (transform_matrix 0 0 (* 1 1) 0))", "(transform (transform (transform rectangle (transform_matrix (* 2 1) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 (- 0 1)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1)))", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform square 1 (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (/ pi 2) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 2)))) (* 2 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 1 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 1 0.5))) (transform_matrix 1 0 (- 0 (* 0.25 (* (- 1 1) (+ 2 0.5)))) (+ 0 (* 0.25 (* (- 1 1) (+ 2 0.5))))))", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 0 0))) (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 0 0))) (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 0.5)) (transform_matrix 0 0 0.5 0)) (transform_matrix 0 0.5 0 0))) (transform (transform (transform square (transform_matrix 1 0 (+ 0 0.5) 0.5)) (transform_matrix 0 0 1 0)) (transform_matrix 0 1 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (+ 0 0) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0 0) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform rectangle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform line (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))) (transform (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 (- (* 0.5 1) 0))) (transform_matrix (* (* 2 1) 0.5)", "(transform (transform (transform (transform (transform_matrix 2 0 0 0) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0))", "(connect_strokes (repeat_transform (repeat_transform (connect_strokes (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (transform (transform (transform (transform (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (/ 1 2)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform square (transform_matrix (- (/ 1 2)) 0 (- 0 (/ 1 2)) (* 0.5 1))) (transform (transform rectangle (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform rectangle (transform_matrix (/ 1 2) 0 0 (* 0.5 1))) (transform_matrix (/ 1 2) 0 0 (* 0.5 1)))) (transform (connect_strokes (connect_strokes (transform (transform (transform (transform (connect_strokes (connect_strokes (transform rectangle (transform_matrix 1 0 (* 0.5 1) (* 0.5 1))) (transform (transform dial (transform_matrix 3 (/ pi 2) 0 (- 0 (/ 1 2)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform rectangle (transform_matrix 1 0 (* 0.", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 1) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 (+ 0.5 1) 0)) (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 (+ 0.5 1) 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix", "(transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 2 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 0 (+ 2 0.5))))", "(connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 0) 0.5))) (transform_matrix 1 0 (+ 0 1) 0.5))) (transform (transform (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 (+ 1 0))) (transform_matrix 1 0 0 (- (* 0.5 1) 2)))) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (-", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 0.5) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 1 1)) 1)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform letter_f (transform_matrix 1 0 (- 0 (+ 1 1)) 1)) (transform", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4", "(connect_strokes (connect_strokes (connect_strokes (transform (transform circle (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform circle (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 (- 1 1))))", "(transform (repeat_transform (repeat_transform (connect_strokes (transform square (transform_matrix 2 0 1 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))", "(connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2)))))))", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 0 0 (- 0 1) 0)) (transform_matrix 0 0 0 (- (/ 1 2) 1))) (transform_matrix 0 0 0 0)) (transform (transform (transform line (transform_matrix 0 0 (- 0 1) 0)) (transform_matrix 0 0 0 (- (/ 1 2) 1))) (transform_matrix 0 0 0 0)) (transform (transform (transform line (transform_matrix 0 0 (- 0 1) 0)) (transform_matrix 0 0 0 (- (/ 1 2) 1))) (transform_matrix 0 0 0 0))) (transform (transform (transform_matrix 0 0 (- 0 1) 0) (transform_matrix (/ 1 2) 0 0 0)) (transform (transform (transform_matrix 0 0 (- 0 1) 0) (transform_matrix (/ 1 2) 0 0 0)) (transform_matrix (/ 1 2) 0 0 0)) (transform (transform (transform_matrix 0 0 (- 0 1) 0) (transform_matrix (/ 1 2) 0 0 0)) (transform_matrix (/ 1", "(connect_strokes (transform (connect_strokes (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform square (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform (transform (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0)) (transform_matrix (* 0.5 1) 0 0 0))) (transform (transform (transform square (transform_matrix (+ 2 (* 2 0.5)) 0 0 0)) (transform_matrix (* 0.5 1) 0 0 0))) (transform (transform square (transform_matrix (+ 2 (* 3 0.5)) 0 0 0)) (transform_matrix (* 0.5 1) 0 0 0)))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (* 2 0.5))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform", "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform rectangle (transform_matrix (transform_matrix 1 0 0 0) 1 (- 0 0.5) 0)) (transform_matrix (transform_matrix 1 0 0 0) 1 (- 0 0.5) 0)) (transform_matrix (transform_matrix 1 0 0 0) 1 (- 0 0.5) 0)) (transform (transform (transform (transform (transform (transform (transform (transform_matrix 1 0 0 0) 0 0 0) (transform_matrix (transform_matrix 0 0 1 0) 0 0 0)) (transform_matrix (transform_matrix 0 0 1 0) 1 0 0)) (transform_matrix (transform_matrix 0 0 1 0) 1 0 0)) (transform_matrix (transform_matrix 0 0 1 0) 1 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 0 (- (* (* 0.5 1)", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform rectangle (transform_matrix (+ 1 1) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.25) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (- 0 0.5) 0)) 1 (transform_matrix 1 0 0 (- 0 0.5))) 1 (transform_matrix 1 0 0 (/ 0.5 2))) (transform_matrix 1 0 (- 0 (/ 0.5 2)) (- 0 (/ 0.5 2))))", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform rectangle 1 (transform_matrix 1 1 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 0 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 0 0.5))) (transform_matrix 1 0 (- 0 (* 1.5 (cos (/ pi 4)))) (- 0 (* 1.5 (sin (/ pi 4))))))", "(connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 0 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform f (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform (repeat_transform rectangle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 0.5)))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))", "(transform (transform (transform (transform (transform (transform_matrix 1 0 (- 0 (/ 5 2)) 1)) (transform_matrix 1 0 0 (- (/ 5 2) 1))) (transform_matrix (- (/ 5 2) 1) 0 0 1)) (transform_matrix 1 0 0 (- 1 2))) (transform_matrix 1 0 0 (- 1 2)))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rect (transform_matrix 2 0 0 (- 0 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform_mat", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1", "(transform (connect_strokes (connect_strokes (connect_strokes rectangle (transform_matrix 0 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (+ 0.5 0.5))) (transform_matrix 1 0 0 (- 0.5 0.5)))) (transform_matrix 1 0 0 (+ 0.5 0.5))) (transform_matrix 1 0 0 0))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- 0 1))) (transform_matrix 1 0 0 (- 0 0.5))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 2 1 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* 0.5 2) 0))) (transform (transform circle (transform_matrix 1 0 (- 0 0.25) 0)) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.25 0) 0)) (transform_matrix 1 0 0 (* 0.5 1))))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 1 0.5)) (* 0.5 2))) (transform_matrix 1 0 0 (* 0.5 2))) (transform_matrix 1 0 0 (* 0.5 2))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 0.5) 0))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (*", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 120 0 0 0)) (transform_matrix 1 0 0 (* 1 1))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 2 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (+ 0 0.25) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 2 0 0 (- 0.25 0)))) (connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 (* 1 0.25))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.25) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 2 0 0 0))) (transform (transform (transform circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 (* 1 0.25)))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform rectangle (transform_matrix (* 1 2) 1 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (/ 2 1)))) (transform_matrix 1 0 0 (- (/ 1 0.5) (/ 1 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (/ 1 0.5) 0))) (transform_matrix 1 0 0 (- (/ 1 0.5) 0))) (transform_matrix 1 0 0 (- (/ 1 0.5) 0))) (transform_matrix 1 0 0 (- (/ 1 0.5) (- (/ 0.5 1) 0))))", "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2", "(transform (connect_strokes (transform (transform (transform (connect_strokes (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0))) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix (/ 1 2) 0 0 0)) (transform_matrix 1 0 0 0))", "(connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 0 (- (* 1 0.5) 0)) (transform_matrix 1 0 0 0))) (transform_matrix 1 0 0 (- (* 0.5 1) 0))))", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform square (transform_matrix 1 0 0 0)) (transform circle (transform_matrix 1 0 (- 0 0.5) 0))) (transform (transform (transform line (transform_matrix 1 0 (+ 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (*", "(connect_strokes (connect_strokes (transform (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4)))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 0.5 (* 0.5 (cos (/ pi 4)))) (* 0.5 (* 0.5 (sin (/ pi 4)))))) (transform (transform (transform circle (transform_matrix 1 0 (+ 2 0.5) (* 0.5 1))) (transform_matrix 1 0", "(connect_strokes (connect_strokes (connect_strokes (transform (transform rectangle (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))))", "(transform (transform (transform (transform (transform (transform (connect_strokes (connect_strokes (transform square (transform_matrix 1 0 0 0)) (transform square (transform_matrix 1 0 0 0))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 1) 0)))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 1) 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 1) 2)))) (transform (transform square (transform_matrix 1 0 0 (- (* (+ 1 1) 0.5) 2))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform (transform (transform (transform", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (-", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform rectangle 1 (transform_matrix 1 0 0 0)) (transform circle (transform_matrix 1 0 0 (* 0.5 1)))) 1 (transform_matrix 1 0 0 2)) 1 (transform_matrix 1 0 0 2)) (transform_matrix 1 0 0 (- 0 2)))", "(transform (transform (transform (transform (transform rectangle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform_matrix 0 0.5 0 0)) (transform_matrix 0 0 0.5)) (transform_matrix 0 0 0.5) ", "(transform (connect_strokes (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (connect_strokes (repeat_transform circle 0.3 (transform_matrix 1 0 1 0)) (repeat_transform circle 0.3 (transform_matrix 1 0 (- 1 1) 0))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform_matrix 1 0 0 0))", "(connect_strokes (connect_strokes (transform (transform rectangle (transform_matrix (+ 1 1) 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform f (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 0 0 (+ 1 1) 0)) (transform_matrix 1 0 0 0))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_mat", "(transform (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 4 0.5)))) (* 0.5 (* (- 1 1) (+ 4 0.5))))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 4 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 4 0.5))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 4 0.5)))) (- 0 (* 0.5", "(connect_strokes (transform (transform (transform_matrix 0 0 (- 0 0) 0) (transform_matrix 0 0 (+ 0 1) 0)) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2)))))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 (- (+ 0.5 1) 0))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 (- (+ 0.5 1) 0))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 (- (+ 0.5 1) 0))) (transform_matrix 1 0 0 0))", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform rectangle (transform_matrix (+ 1 (* 2 0.5)) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 1))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))", "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform (transform_matrix (transform_matrix (* (* -1 1) 0.5) 0 0 1) 0 0 0) (transform_matrix (transform_matrix (* (* -1 1) 0.5) 0 1 0) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_", "(transform (transform (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 0.5))) (transform square (transform_matrix 1 0 0 (* 0.5 0.5)))) (transform (transform (transform_matrix 2 0 0 0) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 0))) (transform (transform (transform_matrix 2 0 0 0) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (+ 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (+ 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform square (transform_matrix 1 0 (- 0 0.25) (* 0.", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform square 1 (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 (- 0 (/ 1 1)) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 1) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 0 1) 0)) (transform_matrix 1 0 (- 0 (/ 1 1)) 0))", "(transform (transform (transform (transform (transform (transform (transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (transform rectangle (transform_matrix 0 0 0 0)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0))", "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 5 (/ 12 1) (/ 6 1) 0 0)) (transform_matrix 1 0 0 (- (* (* (/ 12 2) 6) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 (/ 12 3)) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* (/ 12 2) 1 (* 0.5 (cos (/ pi 2)))) (* (/ 12 2) 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform circle (transform_matrix 1 0 0 (/ (/ 12 1) 6) 0)) (transform_matrix 1 0 0 (- (* (/ 12 2) 1) (* 1 (* 0.5 (/ (/ 12 2) 6))))))) (transform (transform (transform line (transform_matrix 1 0 0 (/ (/ 12 1) 2) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* (/ 12 2) 1 (*", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform circle (transform_matrix 1 0 (- 0 3) 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 0 (- (* (- 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 0 (- (* (- 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 0 (- (* (- 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 0 (- (* (- 0.5 1) 2) 0", "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 1 0)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform circle (transform_matrix 1 0 (+ 0 (+ 1 0)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (transform (transform (transform (transform_matrix 6 0 0 (- 0 (/ 1 2))) (transform_matrix 1 0 0 (/ 1 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform_matrix 6 0 0 (- 0 (/ 1 2))) (transform_matrix 1 0 0 (/ 1 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) (transform_matrix 1 0 (+ 1 0.5) 0)) (transform_matrix 1 0 0 (+ 1 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2)))))) (transform_mat", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform square (transform_matrix 1 0 (* 1 (/ 1 2)) (* 1 1))) (transform_matrix 1 0 0 (* 1 (/ 1 2))))) (transform (transform square (transform_matrix 1 0 (* 0 (/ 1 2)) (* 1 1))) (transform_matrix 1 0 0 (* 0 (/ 1 2))))) (transform (transform (transform rectangle (transform_matrix 0 0 (+ 1 (/ 1 2)) (* 0.5 1))) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 (* 1 (/ 1 2))))) (transform (transform (transform rectangle (transform_mat", "(transform (transform (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 2 0 0 0)) (transform_matrix 0 0 2 0)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0))", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform rectangle 2 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 0 (+ 2 0.5)))", "(connect_strokes (connect_strokes (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "(connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (connect_strokes (transform (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (*", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi", "(transform (repeat_transform (repeat_transform (transform (repeat_transform (repeat_transform square 1 (transform_matrix (+ 1 0.5) 0 0 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 0 (+ 2 0.5)))", "\"\"\"", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* 0.5 1) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* 0.5 1) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* 0.5 1) 0)))) (transform (transform (transform square (transform_matrix 5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (", "(transform (transform (connect_strokes (connect_strokes (transform square (transform_matrix 1 0 (- 0 (/ pi 2)) (* 0.5 1))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 1 (/ pi 2)) 0)) 1 (transform_matrix 1 0 0 (+ 1 (/ pi 2)))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 1 (/ pi 2))))) (- 0 (* 0.5 (* (- 1 1) (+ 1 (/ pi 2)))))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 1))) (transform (transform (transform square (transform_matrix 0.5 0 0 0.5)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.5))) (transform (transform (transform rectangle (transform_matrix 1 0 0.5 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.5))) (transform (transform (transform rectangle (transform_matrix 1 0 0.5 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.5))) (transform (transform (transform square (transform_matrix 1 0 0 1))) (transform (transform (transform square (transform_matrix 0.5 0 0 0.5)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.5))) (transform (transform dial"], "prompt_text": ["# <WHAT> short vertical line <WHERE> center\t<WHAT> perpendicular line <WHERE> on top of vertical line\t<WHAT> two small circles <WHERE> each end of horizontal line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a circle <WHERE> middle of area\t<WHAT> diagonal line <WHERE> from center of circle past the circle edge\n(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 2 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> draw a circle with diameter of 1/16 page width <WHERE> in the center of the page\t<WHAT> draw second circle <WHERE> just inside the first circle to make a ring\t<WHAT> a radius <WHERE> from circle center extending outside the ring in 2 o'clock position doubling the length of the radius\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> a square <WHERE> centered\t<WHAT> a circle, just smaller than the interior of the square <WHERE> inside the square\t<WHAT> a line <WHERE> starting at the center of the circle and extending just beyond the right corner of the square\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> a small circle <WHERE> in the middle\t<WHAT> a slightly bigger circle <WHERE> around the small one\t<WHAT> a line <WHERE> going up and through both circles\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> one inch square <WHERE> middle of the page\t<WHAT> one inch line <WHERE> perpendicular to the top line of the square and sitting centered on top of it\t<WHAT> 2, 1/2 inch horizontal lines, the top thinner than the bottom <WHERE> perpendicular to the previous line, 1/4 of an inch away from each other, the top one at the end of the vertical line\t<WHAT> 2, 1/4 inch circles <WHERE> one on each end of the top horizontal line\n", "# <WHAT> vertical line <WHERE> in the middle page\t<WHAT> smaller horizontal line <WHERE> middle of vertical line\t<WHAT> bigger horizontal line <WHERE> on top of vertical line\t<WHAT> small circle <WHERE> on each side of horizontal top line like ears\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a small square with an apple inside the square with stems but no leaves <WHERE> in the middle\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> Draw a vertical line <WHERE> in the middle of the page\t<WHAT> Draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw 2 horizontal lines crossing the vertical line about 1 inch long <WHERE> evenly spaced between each line\t<WHAT> Draw a square about 1/2 inch wide <WHERE> one on either side of the top horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> T shape <WHERE> middle of page\t<WHAT> horizontal linne <WHERE> below the top cross of the T\t<WHAT> square <WHERE> either side of the top cross of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> small rectangle <WHERE> cnter of page\t<WHAT> T with small line 1/3 under T top with the squares <WHERE> top center of rectangle\n", "# <WHAT> square <WHERE> middle of page\t<WHAT> circle <WHERE> inside of square\t<WHAT> line <WHERE> from centre of circle moving noth east until just out of square\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> short vertical line <WHERE> center\t<WHAT> perpendicular line <WHERE> on top of vertical line\t<WHAT> two small circles <WHERE> each end of horizontal line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> vertical line <WHERE> center of page\t<WHAT> small horizontal line <WHERE> crossing the vertical line like a lowercase t\t<WHAT> horizontal line <WHERE> on top of the previous line like a capital T\t<WHAT> small square <WHERE> on each side of previous line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> Draw a vertical line <WHERE> in the middle of the page\t<WHAT> Draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw 2 horizontal lines crossing the vertical line about 1 inch long <WHERE> evenly spaced between each line\t<WHAT> Draw a square about 1/2 inch wide <WHERE> one on either side of the top horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> rectangle <WHERE> middle\t<WHAT> mirrored letter f <WHERE> top of rectangle\n", "# <WHAT> One T shape with the vertical line being longer than the horizontal line <WHERE> Center of page\t<WHAT> Two horizontal lines of equal length to the horizontal line of the T shape <WHERE> one third of the way down from the top of the T and two thirds of the way down from the top of the T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> two rectangles <WHERE> on the ends of the top part of a T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> big T <WHERE> middle of the main big square\t<WHAT> 2 small circles <WHERE> both ends of the letter T\t<WHAT> small line <WHERE> crossing the letter T in the upper area\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T\n(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))\n# <WHAT> two small cricles <WHERE> middle of the screen, one on top of the other\t<WHAT> small line going north-east <WHERE> inside one of the small circles\t<WHAT> small line going north east <WHERE> inside the other small circle\n", "# <WHAT> One T shape with the vertical line being longer than the horizontal line <WHERE> Center of page\t<WHAT> Two horizontal lines of equal length to the horizontal line of the T shape <WHERE> one third of the way down from the top of the T and two thirds of the way down from the top of the T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> a very small circle <WHERE> in the center of the page\t<WHAT> a vertical line <WHERE> starting at the center point of the small circle and going out of the circle that same distance that it's inside the circle\n(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> A verticle line <WHERE> centered on the page\t<WHAT> A horizontal line 1/3 the length of the verticle line <WHERE> one third  of the way from the top of the verticle line\t<WHAT> a bold font line 2/3 the length of the verticle line <WHERE> across the top of the horizontal line.\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T\n(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))\n# <WHAT> T shape <WHERE> in the middle of the page\t<WHAT> two small circles <WHERE> on the ends of the top part of the t\t<WHAT> line <WHERE> perpendicular to the vertical line of the T, about 3/5 the length of the line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> 2 inch square <WHERE> in center of page\t<WHAT> 1 1/2 inch vertical line <WHERE> on top of square\t<WHAT> 2 1 inch horizontal lines <WHERE> 12 inch apart on top of vertical line\n", "# <WHAT> a vertical line <WHERE> in the center of the page at about a 2 inch length\t<WHAT> 3 horizontal lines <WHERE> placed at the top of the vertical line and spaced evenly done it horizontally. the lowest one not being the same level as the bottom of the vertical line\t<WHAT> two small circles <WHERE> placed on the ends of the top horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> Draw a T line <WHERE> on the left and right side of the T line\t<WHAT> draw two small squares <WHERE> part way down the T line draw am Horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> One medium sized circle <WHERE> Center of page\t<WHAT> One small sized circle <WHERE> Centered inside the medium sized circle\t<WHAT> One vertical line <WHERE> Starting from the center of the small sized circle and ending just outside the medium sized circle\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> a cross with thin line, but a religious looking cross <WHERE> centered within the page\t<WHAT> a thick horizontal line, which is the same length as the horizontal line of the cross <WHERE> placed at the top of the vertical line, centered\t<WHAT> a small circle <WHERE> on the left end of the thick horizontal line\t<WHAT> a small circle <WHERE> on the right end of the thick horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a very small circle <WHERE> in the center of the page\t<WHAT> a vertical line <WHERE> starting at the center point of the small circle and going out of the circle that same distance that it's inside the circle\n(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> long skinny rectangle <WHERE> center\t<WHAT> short perpendicular line <WHERE> middle of top of rectangle\t<WHAT> short perpendicular line <WHERE> middle of vertical line\t<WHAT> short perpendicular line <WHERE> top of vertical line\n", "# <WHAT> small circle <WHERE> centered\t<WHAT> a line <WHERE> from center of circle to 12 o'clock position continuing outside of circle until double radius is reached\n(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T\n(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))\n# <WHAT> t shape <WHERE> middle of paper\t<WHAT> 2 horizontal lines <WHERE> perpindicular equally apart in vertical line of t\t<WHAT> 2 squares <WHERE> on each end of the top of the t\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> square <WHERE> middle of page\t<WHAT> circle <WHERE> inside of square\t<WHAT> line <WHERE> from centre of circle moving noth east until just out of square\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> a capital letter 'T' <WHERE> in the centre of the page\t<WHAT> 2 small squares <WHERE> either side of the edges of the horizontal line on the capital T but make sure the squares don't advance down below the line drawn below\t<WHAT> a horizontal line <WHERE> 1/3 of the way down the letter T but not to make the line as long as the top horizontal line of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> square <WHERE> center of page\t<WHAT> square 1/2 the size <WHERE> on top of the large square\t<WHAT> 2 rectangles <WHERE> on each side of the large square\t<WHAT> dial <WHERE> center of large square\t<WHAT> 1 1/2 inch horizontal line <WHERE> attached to the rectangle on the right\t<WHAT> 3 vertical lines <WHERE> crossing the horizontal line in even spaces\t<WHAT> 1 1/2 inch vertical line <WHERE> on top of the small square\t<WHAT> 1 inch horizontal line <WHERE> on top of vertical line\t<WHAT> 2 1/2 inch squares <WHERE> on each side of horizontal line\n", "# <WHAT> small thick double ring <WHERE> center\t<WHAT> diagonal thick line <WHERE> center of ring to a lil bit outside of ring\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> vertical line <WHERE> in the middle page\t<WHAT> smaller horizontal line <WHERE> middle of vertical line\t<WHAT> bigger horizontal line <WHERE> on top of vertical line\t<WHAT> small circle <WHERE> on each side of horizontal top line like ears\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> A verticle line <WHERE> centered on the page\t<WHAT> a horizontal T line <WHERE> as a capital T horizontally centered on the top of the verticle line.\n(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))\n# <WHAT> circle with a slightly smaller circle inside <WHERE> center of the page\t<WHAT> line running from the center of the circle to outside with the length being about the same inside as out <WHERE> about the 2:00 mark on the circle\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> draw a small square <WHERE> in the square draw a circle\t<WHAT> in the circle draw a line from the centre <WHERE> AT 12oclock outwards\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> a large rectangle <WHERE> mid paper\t<WHAT> vertical line, 1/2 inch <WHERE> from the top of the rectangle in the center\t<WHAT> 1/4 inch horizontal line, centered <WHERE> a little more than halfway up the vertical line\t<WHAT> 1/2 inch horizontal line, centered <WHERE> at the top of the vertical line\t<WHAT> one small square <WHERE> on both sides of the larger horizontal line\n", "# <WHAT> A capital T <WHERE> In the center of the field.\t<WHAT> Two very small squares <WHERE> Attached to the ends of the line that makes up the top of the T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a capital letter 'T' <WHERE> in the centre of the page\t<WHAT> 2 small squares <WHERE> either side of the edges of the horizontal line on the capital T but make sure the squares don't advance down below the line drawn below\t<WHAT> a horizontal line <WHERE> 1/3 of the way down the letter T but not to make the line as long as the top horizontal line of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a very small circle <WHERE> in the center of the page\t<WHAT> a vertical line <WHERE> starting at the center point of the small circle and going out of the circle that same distance that it's inside the circle\n(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> small circle <WHERE> center\t<WHAT> forward slash <WHERE> from center of the circle, slanting up and to the right outside of it\n(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> rectangle <WHERE> middle of area\t<WHAT> a double lined circle <WHERE> middle of rectangle\t<WHAT> diagonal line <WHERE> starting from center of circle extending past both lines of circle\n", "# <WHAT> a T shape <WHERE> the top of the T in the middle with the bottom extending down\n(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))\n# <WHAT> small vertical line <WHERE> center\t<WHAT> small horizontal line <WHERE> centered on top of vertical line\t<WHAT> two small circles <WHERE> either side of horizontal line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> draw a small square <WHERE> in the square draw a circle\t<WHAT> in the circle draw a line from the centre <WHERE> AT 12oclock outwards\n(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> small circle <WHERE> center\t<WHAT> forward slash <WHERE> from center of the circle, slanting up and to the right outside of it\n(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))\n# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> large rectangle <WHERE> center of page\t<WHAT> circle <WHERE> center of rectangle\n"], "prompt_example_types": ["language", "programs"], "prompt_programs": [[["# <WHAT> short vertical line <WHERE> center\t<WHAT> perpendicular line <WHERE> on top of vertical line\t<WHAT> two small circles <WHERE> each end of horizontal line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a circle <WHERE> middle of area\t<WHAT> diagonal line <WHERE> from center of circle past the circle edge", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 2 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> draw a circle with diameter of 1/16 page width <WHERE> in the center of the page\t<WHAT> draw second circle <WHERE> just inside the first circle to make a ring\t<WHAT> a radius <WHERE> from circle center extending outside the ring in 2 o'clock position doubling the length of the radius", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> a square <WHERE> centered\t<WHAT> a circle, just smaller than the interior of the square <WHERE> inside the square\t<WHAT> a line <WHERE> starting at the center of the circle and extending just beyond the right corner of the square", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> a small circle <WHERE> in the middle\t<WHAT> a slightly bigger circle <WHERE> around the small one\t<WHAT> a line <WHERE> going up and through both circles", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> one inch square <WHERE> middle of the page\t<WHAT> one inch line <WHERE> perpendicular to the top line of the square and sitting centered on top of it\t<WHAT> 2, 1/2 inch horizontal lines, the top thinner than the bottom <WHERE> perpendicular to the previous line, 1/4 of an inch away from each other, the top one at the end of the vertical line\t<WHAT> 2, 1/4 inch circles <WHERE> one on each end of the top horizontal line"]], [["# <WHAT> vertical line <WHERE> in the middle page\t<WHAT> smaller horizontal line <WHERE> middle of vertical line\t<WHAT> bigger horizontal line <WHERE> on top of vertical line\t<WHAT> small circle <WHERE> on each side of horizontal top line like ears", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a small square with an apple inside the square with stems but no leaves <WHERE> in the middle", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> Draw a vertical line <WHERE> in the middle of the page\t<WHAT> Draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw 2 horizontal lines crossing the vertical line about 1 inch long <WHERE> evenly spaced between each line\t<WHAT> Draw a square about 1/2 inch wide <WHERE> one on either side of the top horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> T shape <WHERE> middle of page\t<WHAT> horizontal linne <WHERE> below the top cross of the T\t<WHAT> square <WHERE> either side of the top cross of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> small rectangle <WHERE> cnter of page\t<WHAT> T with small line 1/3 under T top with the squares <WHERE> top center of rectangle"]], [["# <WHAT> square <WHERE> middle of page\t<WHAT> circle <WHERE> inside of square\t<WHAT> line <WHERE> from centre of circle moving noth east until just out of square", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> short vertical line <WHERE> center\t<WHAT> perpendicular line <WHERE> on top of vertical line\t<WHAT> two small circles <WHERE> each end of horizontal line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> vertical line <WHERE> center of page\t<WHAT> small horizontal line <WHERE> crossing the vertical line like a lowercase t\t<WHAT> horizontal line <WHERE> on top of the previous line like a capital T\t<WHAT> small square <WHERE> on each side of previous line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> Draw a vertical line <WHERE> in the middle of the page\t<WHAT> Draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw 2 horizontal lines crossing the vertical line about 1 inch long <WHERE> evenly spaced between each line\t<WHAT> Draw a square about 1/2 inch wide <WHERE> one on either side of the top horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> rectangle <WHERE> middle\t<WHAT> mirrored letter f <WHERE> top of rectangle"]], [["# <WHAT> One T shape with the vertical line being longer than the horizontal line <WHERE> Center of page\t<WHAT> Two horizontal lines of equal length to the horizontal line of the T shape <WHERE> one third of the way down from the top of the T and two thirds of the way down from the top of the T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> two rectangles <WHERE> on the ends of the top part of a T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> big T <WHERE> middle of the main big square\t<WHAT> 2 small circles <WHERE> both ends of the letter T\t<WHAT> small line <WHERE> crossing the letter T in the upper area", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))"], ["# <WHAT> two small cricles <WHERE> middle of the screen, one on top of the other\t<WHAT> small line going north-east <WHERE> inside one of the small circles\t<WHAT> small line going north east <WHERE> inside the other small circle"]], [["# <WHAT> One T shape with the vertical line being longer than the horizontal line <WHERE> Center of page\t<WHAT> Two horizontal lines of equal length to the horizontal line of the T shape <WHERE> one third of the way down from the top of the T and two thirds of the way down from the top of the T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> a very small circle <WHERE> in the center of the page\t<WHAT> a vertical line <WHERE> starting at the center point of the small circle and going out of the circle that same distance that it's inside the circle", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> A verticle line <WHERE> centered on the page\t<WHAT> A horizontal line 1/3 the length of the verticle line <WHERE> one third  of the way from the top of the verticle line\t<WHAT> a bold font line 2/3 the length of the verticle line <WHERE> across the top of the horizontal line.", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))"], ["# <WHAT> T shape <WHERE> in the middle of the page\t<WHAT> two small circles <WHERE> on the ends of the top part of the t\t<WHAT> line <WHERE> perpendicular to the vertical line of the T, about 3/5 the length of the line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> 2 inch square <WHERE> in center of page\t<WHAT> 1 1/2 inch vertical line <WHERE> on top of square\t<WHAT> 2 1 inch horizontal lines <WHERE> 12 inch apart on top of vertical line"]], [["# <WHAT> a vertical line <WHERE> in the center of the page at about a 2 inch length\t<WHAT> 3 horizontal lines <WHERE> placed at the top of the vertical line and spaced evenly done it horizontally. the lowest one not being the same level as the bottom of the vertical line\t<WHAT> two small circles <WHERE> placed on the ends of the top horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> Draw a T line <WHERE> on the left and right side of the T line\t<WHAT> draw two small squares <WHERE> part way down the T line draw am Horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> One medium sized circle <WHERE> Center of page\t<WHAT> One small sized circle <WHERE> Centered inside the medium sized circle\t<WHAT> One vertical line <WHERE> Starting from the center of the small sized circle and ending just outside the medium sized circle", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> a cross with thin line, but a religious looking cross <WHERE> centered within the page\t<WHAT> a thick horizontal line, which is the same length as the horizontal line of the cross <WHERE> placed at the top of the vertical line, centered\t<WHAT> a small circle <WHERE> on the left end of the thick horizontal line\t<WHAT> a small circle <WHERE> on the right end of the thick horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a very small circle <WHERE> in the center of the page\t<WHAT> a vertical line <WHERE> starting at the center point of the small circle and going out of the circle that same distance that it's inside the circle", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> long skinny rectangle <WHERE> center\t<WHAT> short perpendicular line <WHERE> middle of top of rectangle\t<WHAT> short perpendicular line <WHERE> middle of vertical line\t<WHAT> short perpendicular line <WHERE> top of vertical line"]], [["# <WHAT> small circle <WHERE> centered\t<WHAT> a line <WHERE> from center of circle to 12 o'clock position continuing outside of circle until double radius is reached", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))"], ["# <WHAT> t shape <WHERE> middle of paper\t<WHAT> 2 horizontal lines <WHERE> perpindicular equally apart in vertical line of t\t<WHAT> 2 squares <WHERE> on each end of the top of the t", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> square <WHERE> middle of page\t<WHAT> circle <WHERE> inside of square\t<WHAT> line <WHERE> from centre of circle moving noth east until just out of square", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> a capital letter 'T' <WHERE> in the centre of the page\t<WHAT> 2 small squares <WHERE> either side of the edges of the horizontal line on the capital T but make sure the squares don't advance down below the line drawn below\t<WHAT> a horizontal line <WHERE> 1/3 of the way down the letter T but not to make the line as long as the top horizontal line of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> square <WHERE> center of page\t<WHAT> square 1/2 the size <WHERE> on top of the large square\t<WHAT> 2 rectangles <WHERE> on each side of the large square\t<WHAT> dial <WHERE> center of large square\t<WHAT> 1 1/2 inch horizontal line <WHERE> attached to the rectangle on the right\t<WHAT> 3 vertical lines <WHERE> crossing the horizontal line in even spaces\t<WHAT> 1 1/2 inch vertical line <WHERE> on top of the small square\t<WHAT> 1 inch horizontal line <WHERE> on top of vertical line\t<WHAT> 2 1/2 inch squares <WHERE> on each side of horizontal line"]], [["# <WHAT> small thick double ring <WHERE> center\t<WHAT> diagonal thick line <WHERE> center of ring to a lil bit outside of ring", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> vertical line <WHERE> in the middle page\t<WHAT> smaller horizontal line <WHERE> middle of vertical line\t<WHAT> bigger horizontal line <WHERE> on top of vertical line\t<WHAT> small circle <WHERE> on each side of horizontal top line like ears", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> A verticle line <WHERE> centered on the page\t<WHAT> a horizontal T line <WHERE> as a capital T horizontally centered on the top of the verticle line.", "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))"], ["# <WHAT> circle with a slightly smaller circle inside <WHERE> center of the page\t<WHAT> line running from the center of the circle to outside with the length being about the same inside as out <WHERE> about the 2:00 mark on the circle", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> draw a small square <WHERE> in the square draw a circle\t<WHAT> in the circle draw a line from the centre <WHERE> AT 12oclock outwards", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> a large rectangle <WHERE> mid paper\t<WHAT> vertical line, 1/2 inch <WHERE> from the top of the rectangle in the center\t<WHAT> 1/4 inch horizontal line, centered <WHERE> a little more than halfway up the vertical line\t<WHAT> 1/2 inch horizontal line, centered <WHERE> at the top of the vertical line\t<WHAT> one small square <WHERE> on both sides of the larger horizontal line"]], [["# <WHAT> A capital T <WHERE> In the center of the field.\t<WHAT> Two very small squares <WHERE> Attached to the ends of the line that makes up the top of the T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a capital letter 'T' <WHERE> in the centre of the page\t<WHAT> 2 small squares <WHERE> either side of the edges of the horizontal line on the capital T but make sure the squares don't advance down below the line drawn below\t<WHAT> a horizontal line <WHERE> 1/3 of the way down the letter T but not to make the line as long as the top horizontal line of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a very small circle <WHERE> in the center of the page\t<WHAT> a vertical line <WHERE> starting at the center point of the small circle and going out of the circle that same distance that it's inside the circle", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> small circle <WHERE> center\t<WHAT> forward slash <WHERE> from center of the circle, slanting up and to the right outside of it", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> rectangle <WHERE> middle of area\t<WHAT> a double lined circle <WHERE> middle of rectangle\t<WHAT> diagonal line <WHERE> starting from center of circle extending past both lines of circle"]], [["# <WHAT> a T shape <WHERE> the top of the T in the middle with the bottom extending down", "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))"], ["# <WHAT> small vertical line <WHERE> center\t<WHAT> small horizontal line <WHERE> centered on top of vertical line\t<WHAT> two small circles <WHERE> either side of horizontal line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> draw a small square <WHERE> in the square draw a circle\t<WHAT> in the circle draw a line from the centre <WHERE> AT 12oclock outwards", "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> small circle <WHERE> center\t<WHAT> forward slash <WHERE> from center of the circle, slanting up and to the right outside of it", "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))"], ["# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> large rectangle <WHERE> center of page\t<WHAT> circle <WHERE> center of rectangle"]]], "engine": "davinci-codex", "separator": "\n", "completion": [{"id": "cmpl-4zqOglNr6VhO8nsOQHput3izh20qk", "object": "text_completion", "created": 1650644770, "model": "code-davinci:001", "choices": [{"text": "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform square 1 (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (/ pi 2) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 2)))) (* 2 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 1 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 1 0.5))) (transform_matrix 1 0 (- 0 (* 0.25 (* (- 1 1) (+ 2 0.5)))) (+ 0 (* 0.25 (* (- 1 1) (+ 2 0.5))))))", "index": 0, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform square 1 (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 (- 0 (/ 1 1)) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 1) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 0 1) 0)) (transform_matrix 1 0 (- 0 (/ 1 1)) 0))", "index": 1, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform square (transform_matrix 1 0 0 0)) (transform circle (transform_matrix 1 0 (- 0 0.5) 0))) (transform (transform (transform line (transform_matrix 1 0 (+ 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (*", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform square 1 (transform_matrix (+ 1 1) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 4)))) (* 1 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- 0 1))) (transform_matrix 1 0 0 (- 0 0.5))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 2 1 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* 0.5 2) 0))) (transform (transform circle (transform_matrix 1 0 (- 0 0.25) 0)) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.25 0) 0)) (transform_matrix 1 0 0 (* 0.5 1))))))", "index": 4, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 120 0 0 0)) (transform_matrix 1 0 0 (* 1 1))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 2 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (+ 0 0.25) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 2 0 0 (- 0.25 0)))) (connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 (* 1 0.25))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.25) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 2 0 0 0))) (transform (transform (transform circle (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 (* 1 0.25)))", "index": 5, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform square (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) (transform_matrix 1 0 (+ 1 0.5) 0)) (transform_matrix 1 0 0 (+ 1 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2)))))) (transform_mat", "index": 6, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (repeat_transform (repeat_transform (connect_strokes (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (transform (transform (transform (transform (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4)))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 0.5 (* 0.5 (cos (/ pi 4)))) (* 0.5 (* 0.5 (sin (/ pi 4)))))) (transform (transform (transform circle (transform_matrix 1 0 (+ 2 0.5) (* 0.5 1))) (transform_matrix 1 0", "index": 8, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (transform square (transform_matrix 2 0 1 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqOqF35t4rA2tAzxyCfbbt4eLSZ9", "object": "text_completion", "created": 1650644780, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform (transform_matrix (transform_matrix (* (* -1 1) 0.5) 0 0 1) 0 0 0) (transform_matrix (transform_matrix (* (* -1 1) 0.5) 0 1 0) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_", "index": 0, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (transform (transform (transform (transform (transform (connect_strokes (connect_strokes (transform square (transform_matrix 1 0 0 0)) (transform square (transform_matrix 1 0 0 0))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 1) 0)))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 1) 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 1) 2)))) (transform (transform square (transform_matrix 1 0 0 (- (* (+ 1 1) 0.5) 2))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform (transform (transform (transform", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 (- 0 1)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1)))", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (+ 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (+ 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform square (transform_matrix 1 0 (- 0 0.25) (* 0.", "index": 3, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix", "index": 4, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 (- (+ 0.5 1) 0))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 (- (+ 0.5 1) 0))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 (- (+ 0.5 1) 0))) (transform_matrix 1 0 0 0))", "index": 5, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.", "index": 6, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (transform (connect_strokes (connect_strokes (transform square (transform_matrix 1 0 (- 0 (/ pi 2)) (* 0.5 1))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 1 (/ pi 2)) 0)) 1 (transform_matrix 1 0 0 (+ 1 (/ pi 2)))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 1 (/ pi 2))))) (- 0 (* 0.5 (* (- 1 1) (+ 1 (/ pi 2)))))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 0.5) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1", "index": 9, "logprobs": null, "finish_reason": "length"}]}, {"id": "cmpl-4zqP4LebGB2Zcqf6YyrgKSrjxyaca", "object": "text_completion", "created": 1650644794, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 1 1)) 1)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform letter_f (transform_matrix 1 0 (- 0 (+ 1 1)) 1)) (transform", "index": 0, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 0 0 (- 0 1) 0)) (transform_matrix 0 0 0 (- (/ 1 2) 1))) (transform_matrix 0 0 0 0)) (transform (transform (transform line (transform_matrix 0 0 (- 0 1) 0)) (transform_matrix 0 0 0 (- (/ 1 2) 1))) (transform_matrix 0 0 0 0)) (transform (transform (transform line (transform_matrix 0 0 (- 0 1) 0)) (transform_matrix 0 0 0 (- (/ 1 2) 1))) (transform_matrix 0 0 0 0))) (transform (transform (transform_matrix 0 0 (- 0 1) 0) (transform_matrix (/ 1 2) 0 0 0)) (transform (transform (transform_matrix 0 0 (- 0 1) 0) (transform_matrix (/ 1 2) 0 0 0)) (transform_matrix (/ 1 2) 0 0 0)) (transform (transform (transform_matrix 0 0 (- 0 1) 0) (transform_matrix (/ 1 2) 0 0 0)) (transform_matrix (/ 1", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform rectangle (transform_matrix (transform_matrix 1 0 0 0) 1 (- 0 0.5) 0)) (transform_matrix (transform_matrix 1 0 0 0) 1 (- 0 0.5) 0)) (transform_matrix (transform_matrix 1 0 0 0) 1 (- 0 0.5) 0)) (transform (transform (transform (transform (transform (transform (transform (transform_matrix 1 0 0 0) 0 0 0) (transform_matrix (transform_matrix 0 0 1 0) 0 0 0)) (transform_matrix (transform_matrix 0 0 1 0) 1 0 0)) (transform_matrix (transform_matrix 0 0 1 0) 1 0 0)) (transform_matrix (transform_matrix 0 0 1 0) 1 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 0 (- (* (* 0.5 1)", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (transform (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 2 0 0 0)) (transform_matrix 0 0 2 0)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 0.5)) (transform_matrix 0 0 0.5 0)) (transform_matrix 0 0.5 0 0))) (transform (transform (transform square (transform_matrix 1 0 (+ 0 0.5) 0.5)) (transform_matrix 0 0 1 0)) (transform_matrix 0 1 0 0)))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform rectangle (transform_matrix (+ 1 1) 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform f (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 0 0 (+ 1 1) 0)) (transform_matrix 1 0 0 0))))", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 0 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform f (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 6, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 0.5))) (transform square (transform_matrix 1 0 0 (* 0.5 0.5)))) (transform (transform (transform_matrix 2 0 0 0) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0))) (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 0))) (transform (transform (transform_matrix 2 0 0 0) (transform_matrix 1 0 0 0)) (transform_matrix 2 0 0 0)))", "index": 7, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) (* 0.5 1))) (transform_matrix 0 0 1 0)) (transform_matrix 0 0 (- 1 1) 0)) (transform_matrix 0 0 (* 1 1) 0))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform_matrix 1 0 0 1)", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqPGXkh2lJnlHXxFQK3ci43C0co7", "object": "text_completion", "created": 1650644806, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 0, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 1 0)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform circle (transform_matrix 1 0 (+ 0 (+ 1 0)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 1, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform circle (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform circle (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 (- 1 1))))", "index": 2, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform circle (transform_matrix 1 0 0.5 (- 1 0))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0.5 (- 1 0))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 0 (- (* 1 0.5) 0)) (transform_matrix 1 0 0 0))) (transform_matrix 1 0 0 (- (* 0.5 1) 0))))", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (+ 0 0) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0 0) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5", "index": 6, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))))", "index": 7, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqPR3rLcJNUXFA07Z2pxqTwG0cvC", "object": "text_completion", "created": 1650644817, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rect (transform_matrix 2 0 0 (- 0 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform_mat", "index": 0, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "index": 1, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform (transform_matrix 6 0 0 (- 0 (/ 1 2))) (transform_matrix 1 0 0 (/ 1 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform_matrix 6 0 0 (- 0 (/ 1 2))) (transform_matrix 1 0 0 (/ 1 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform circle (transform_matrix", "index": 4, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0", "index": 5, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (*", "index": 6, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "index": 7, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "\"\"\"", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqPcFRwRSKnTCpKsmChr9sL1OtRX", "object": "text_completion", "created": 1650644828, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform rectangle (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))))", "index": 0, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform rectangle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform rectangle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 1, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform rectangle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform rectangle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 2, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform_matrix 0 0 (- 0 0) 0) (transform_matrix 0 0 (+ 0 1) 0)) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2)))))))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform (transform (transform_matrix 1 0 (- 0 (/ 5 2)) 1)) (transform_matrix 1 0 0 (- (/ 5 2) 1))) (transform_matrix (- (/ 5 2) 1) 0 0 1)) (transform_matrix 1 0 0 (- 1 2))) (transform_matrix 1 0 0 (- 1 2)))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform (transform_matrix 2 0 0 0) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0))", "index": 5, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform rectangle (transform_matrix (* 1 2) 1 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (/ 2 1)))) (transform_matrix 1 0 0 (- (/ 1 0.5) (/ 1 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (/ 1 0.5) 0))) (transform_matrix 1 0 0 (- (/ 1 0.5) 0))) (transform_matrix 1 0 0 (- (/ 1 0.5) 0))) (transform_matrix 1 0 0 (- (/ 1 0.5) (- (/ 0.5 1) 0))))", "index": 6, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2)))))))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqPphzsxxtibFfijrrO1Q7UFcfhV", "object": "text_completion", "created": 1650644841, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 1 0.5)) (* 0.5 2))) (transform_matrix 1 0 0 (* 0.5 2))) (transform_matrix 1 0 0 (* 0.5 2))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 0.5) 0))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (*", "index": 0, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (connect_strokes (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform square (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform (transform (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0)) (transform_matrix (* 0.5 1) 0 0 0))) (transform (transform (transform square (transform_matrix (+ 2 (* 2 0.5)) 0 0 0)) (transform_matrix (* 0.5 1) 0 0 0))) (transform (transform square (transform_matrix (+ 2 (* 3 0.5)) 0 0 0)) (transform_matrix (* 0.5 1) 0 0 0)))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (* 2 0.5))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 1))) (transform (transform (transform square (transform_matrix 0.5 0 0 0.5)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.5))) (transform (transform (transform rectangle (transform_matrix 1 0 0.5 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.5))) (transform (transform (transform rectangle (transform_matrix 1 0 0.5 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.5))) (transform (transform (transform square (transform_matrix 1 0 0 1))) (transform (transform (transform square (transform_matrix 0.5 0 0 0.5)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.5))) (transform (transform dial", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 0) 0.5))) (transform_matrix 1 0 (+ 0 1) 0.5))) (transform (transform (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 (+ 1 0))) (transform_matrix 1 0 0 (- (* 0.5 1) 2)))) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (-", "index": 3, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (/ 1 2)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform square (transform_matrix (- (/ 1 2)) 0 (- 0 (/ 1 2)) (* 0.5 1))) (transform (transform rectangle (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform rectangle (transform_matrix (/ 1 2) 0 0 (* 0.5 1))) (transform_matrix (/ 1 2) 0 0 (* 0.5 1)))) (transform (connect_strokes (connect_strokes (transform (transform (transform (transform (connect_strokes (connect_strokes (transform rectangle (transform_matrix 1 0 (* 0.5 1) (* 0.5 1))) (transform (transform dial (transform_matrix 3 (/ pi 2) 0 (- 0 (/ 1 2)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform rectangle (transform_matrix 1 0 (* 0.", "index": 4, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (transform rectangle (transform_matrix (* (* 0.5 (+ 1 1)) 1) 0 0 0)) 2) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix (* (* 0.5 (+ 1 1)) 1) 0 0 0)) (transform_matrix 1 0 (+ 1 0.5) 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (+ 1 0.5))) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (+ 1 0.5", "index": 5, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (connect_strokes (transform (transform (transform (connect_strokes (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0))) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1", "index": 6, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform square (transform_matrix 1 0 (* 1 (/ 1 2)) (* 1 1))) (transform_matrix 1 0 0 (* 1 (/ 1 2))))) (transform (transform square (transform_matrix 1 0 (* 0 (/ 1 2)) (* 1 1))) (transform_matrix 1 0 0 (* 0 (/ 1 2))))) (transform (transform (transform rectangle (transform_matrix 0 0 (+ 1 (/ 1 2)) (* 0.5 1))) (transform_matrix 2 0 0 0)) (transform_matrix 1 0 0 (* 1 (/ 1 2))))) (transform (transform (transform rectangle (transform_mat", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix (+ 2 (* 1 0.5)) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4) 0 0)) (transform_matrix 1 0 (* 2 (* 0.5 (cos (/ pi 4)))) (* 2 (* 0.5 (sin (/ pi 4))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 4", "index": 8, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix (/ 1 2) 0 0 0)) (transform_matrix 1 0 0 0))", "index": 9, "logprobs": null, "finish_reason": "length"}]}, {"id": "cmpl-4zqQ2X0V1IYSLNYgYHNUUG6gUeD0j", "object": "text_completion", "created": 1650644854, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_mat", "index": 0, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform rectangle (transform_matrix (+ 2 (* 0 0.5)) 0 0 0)) (transform line (transform_matrix (+ 2 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))))) (transform (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 (- (* 0.5 1) 0))) (transform_matrix (* (* 2 1) 0.5)", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* 0.5 1) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* 0.5 1) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 2 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* 0.5 1) 0)))) (transform (transform (transform square (transform_matrix 5 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 0 0))) (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 0 0))) (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform", "index": 3, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform (transform square (transform_matrix 2 0 0 0)) (transform_matrix 0 0 1 0)) (transform_matrix 0 0 1 (* 0.25 0.5))) (transform_matrix 1 0 0 (* 0.5 0))) (transform (transform (transform square (transform_matrix 3 0 0 0)) (transform_matrix 0 0 1 0)) (transform_matrix 0 0 1 (* 0.5 0))))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform rectangle (transform_matrix (+ 1 (* 2 0.5)) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 1))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 5 (/ 12 1) (/ 6 1) 0 0)) (transform_matrix 1 0 0 (- (* (* (/ 12 2) 6) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 (/ 12 3)) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* (/ 12 2) 1 (* 0.5 (cos (/ pi 2)))) (* (/ 12 2) 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform circle (transform_matrix 1 0 0 (/ (/ 12 1) 6) 0)) (transform_matrix 1 0 0 (- (* (/ 12 2) 1) (* 1 (* 0.5 (/ (/ 12 2) 6))))))) (transform (transform (transform line (transform_matrix 1 0 0 (/ (/ 12 1) 2) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* (/ 12 2) 1 (*", "index": 6, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform circle (transform_matrix 1 0 (- 0 3) 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 0 (- (* (- 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 0 (- (* (- 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 0 (- (* (- 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 4) 0 0)) (transform_matrix 1 0 0 (- (* (- 0.5 1) 2) 0", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform rectangle (transform_matrix (+ 1 1) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.25) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (- 0 0.5) 0)) 1 (transform_matrix 1 0 0 (- 0 0.5))) 1 (transform_matrix 1 0 0 (/ 0.5 2))) (transform_matrix 1 0 (- 0 (/ 0.5 2)) (- 0 (/ 0.5 2))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 3 (+ 0 (/ 1 2)) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 3 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 3 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 3 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix", "index": 9, "logprobs": null, "finish_reason": "length"}]}, {"id": "cmpl-4zqQF6rstX589xbQT0ihZlZsWPcRF", "object": "text_completion", "created": 1650644867, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (-", "index": 0, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform square 1 (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) 1 (transform_matrix 1 0 (+ 0.5 1) 0)) 1 (transform_matrix 1 0 0 (+ 0.5 1))) (transform_matrix 1 0 (- 0 0.5) (- 0 0.5))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 2, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform (repeat_transform rectangle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 0.5)))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform rectangle 1 (transform_matrix 1 1 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 0 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 0 0.5))) (transform_matrix 1 0 (- 0 (* 1.5 (cos (/ pi 4)))) (- 0 (* 1.5 (sin (/ pi 4))))))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 1) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 (+ 0.5 1) 0)) (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 (+ 0.5 1) 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_", "index": 5, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (repeat_transform (repeat_transform (transform (repeat_transform (repeat_transform square 1 (transform_matrix (+ 1 0.5) 0 0 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 0 (+ 2 0.5)))", "index": 6, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 4 0.5)))) (* 0.5 (* (- 1 1) (+ 4 0.5))))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 4 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 4 0.5))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 4 0.5)))) (- 0 (* 0.5", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 2 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 0 (+ 2 0.5))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (connect_strokes (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (connect_strokes (repeat_transform circle 0.3 (transform_matrix 1 0 1 0)) (repeat_transform circle 0.3 (transform_matrix 1 0 (- 1 1) 0))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform_matrix 1 0 0 0))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqQQBYxytXQDiNgIBGQnAEr6bfPA", "object": "text_completion", "created": 1650644878, "model": "code-davinci:001", "choices": [{"text": "(transform (transform (transform rectangle (transform_matrix (* 2 1) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))", "index": 0, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform rectangle 1 (transform_matrix 1 0 0 0)) (transform circle (transform_matrix 1 0 0 (* 0.5 1)))) 1 (transform_matrix 1 0 0 2)) 1 (transform_matrix 1 0 0 2)) (transform_matrix 1 0 0 (- 0 2)))", "index": 2, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform (transform (transform (transform (repeat_transform (repeat_transform (repeat_transform (repeat_transform (transform rectangle (transform_matrix 0 0 0 0)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) 1 (/ -1 1)) (transform_matrix 0 0 0 0)) (transform_matrix 0 0 0 0))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform rectangle 2 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 0 (+ 2 0.5)))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform (transform rectangle (transform_matrix 2 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform_matrix 0 0.5 0 0)) (transform_matrix 0 0 0.5)) (transform_matrix 0 0 0.5) ", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform (transform (transform (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (repeat_transform square 1 (transform_matrix 0 0 0 0)) (transform_matrix 1 0 (+ 1 1) 0))) (transform_matrix 1 0 0 (+ 1 1))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))", "index": 6, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (connect_strokes (connect_strokes (connect_strokes rectangle (transform_matrix 0 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (+ 0.5 0.5))) (transform_matrix 1 0 0 (- 0.5 0.5)))) (transform_matrix 1 0 0 (+ 0.5 0.5))) (transform_matrix 1 0 0 0))", "index": 7, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 0 0 (+ 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (repeat_transform (repeat_transform (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) 1 (transform_matrix 1 0 0 0)) 1 (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* 0.5 2) 0)))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}]}