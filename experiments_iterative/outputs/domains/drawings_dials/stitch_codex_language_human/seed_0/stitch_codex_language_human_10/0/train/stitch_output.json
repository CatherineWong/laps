{
  "cmd": "target/release/compress /Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_10/0/train/stitch_frontiers.json --out=/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_10/0/train/stitch_output.json --max-arity=2 --iterations=10 --fmt=dreamcoder",
  "args": {
    "file": "/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_10/0/train/stitch_frontiers.json",
    "out": "/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_10/0/train/stitch_output.json",
    "iterations": 10,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "step": {
      "max_arity": 2,
      "threads": 1,
      "inv_candidates": 1,
      "hole_choice": "MinCost",
      "no_top_lambda": false,
      "track": null,
      "verbose_worklist": false,
      "verbose_best": false,
      "break_early_assignment": false,
      "fifo_worklist": false,
      "ascending_worklist": false,
      "lossy_candidates": false,
      "no_cache": false,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_stats": false,
      "no_other_util": false,
      "no_ctx_thread": false,
      "eta_long": false
    }
  },
  "original_cost": 184809,
  "original": [
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
    "(T (T (T r (M 1 0 0.5 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
    "(C (C (C (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1)) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (T (T c (M 1 0 0 1)) (M 1 0 0 (* 0.5 1))))",
    "(C (C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 0 (* 0.5 0.5))) (M (* 1 2) 0 0 0)) (M 1 0 0 0))))",
    "(C (C (C (T (T (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5))) (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
  ],
  "invs": [
    {
      "body": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M #1 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) #0)))",
      "dreamcoder": "#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1)))))",
      "arity": 2,
      "name": "fn_0",
      "rewritten": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(T (T (T r (M 1 0 0.5 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
        "(C (C (C (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1)) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (fn_0 0 (* 1 2)))",
        "(C (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T c (M 1 0 0 1)) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 0 (* 0.5 0.5))) (M (* 1 2) 0 0 0)) (M 1 0 0 0))))",
        "(C (C (C (T (T (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5))) (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5)))) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (- (* 1 2) 0))) (fn_0 2 (- (* 1 2) 1)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 1 (* 1 2))) (fn_0 0 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(T (T (T r (M 1 0 0.5 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
        "(C (C (C (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1)) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T c (M 1 0 0 1)) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 0 (* 0.5 0.5))) (M (* 1 2) 0 0 0)) (M 1 0 0 0))))",
        "(C (C (C (T (T (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5))) (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 1)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
      ],
      "utility": 68931,
      "expected_cost": 112089,
      "final_cost": 112089,
      "multiplier": 1.6487701737012552,
      "multiplier_wrt_orig": 1.6487701737012552,
      "num_uses": 30,
      "uses": [
        {
          "fn_0 0 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_0 1 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))"
        },
        {
          "fn_0 0 (- (* 1 2) 0)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_0 1 (- (* 1 2) 0)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))"
        },
        {
          "fn_0 1 (- (* 1 2) 1)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))"
        },
        {
          "fn_0 2 (- (* 1 2) 1)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))"
        },
        {
          "fn_0 2 (- (* 1 2) 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))"
        }
      ]
    },
    {
      "body": "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 #1 #0))",
      "dreamcoder": "#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1))))",
      "arity": 2,
      "name": "fn_1",
      "rewritten": [
        "(C (C (fn_1 (- (* 1 2) 0) 0) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (fn_1 (- (* 1 2) 0) 0) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(fn_1 (* 1 2) 0)",
        "(C (C (fn_1 (* 1 2) 0) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (fn_1 (* 1 2) 0) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (fn_1 (- (* 1 2) 0) 0) (fn_0 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2)))",
        "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (fn_1 (- (* 1 2) 0) 0) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(T (T (T r (M 1 0 0.5 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
        "(C (C (C (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1)) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (fn_0 0 (* 1 2)))",
        "(C (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T c (M 1 0 0 1)) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 0 (* 0.5 0.5))) (M (* 1 2) 0 0 0)) (M 1 0 0 0))))",
        "(C (C (C (T (T (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5))) (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5)))) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (fn_1 (* 1 2) 0) (fn_0 1 (- (* 1 2) 0))) (fn_0 2 (- (* 1 2) 1)))",
        "(C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2)))",
        "(C (fn_1 (* 1 2) 1) (fn_0 0 (* 1 2)))",
        "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
      ],
      "rewritten_dreamcoder": [
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0)",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(T (T (T r (M 1 0 0.5 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
        "(C (C (C (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1)) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T c (M 1 0 0 1)) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 0 (* 0.5 0.5))) (M (* 1 2) 0 0 0)) (M 1 0 0 0))))",
        "(C (C (C (T (T (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5))) (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 1)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 1) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
      ],
      "utility": 30147,
      "expected_cost": 78153,
      "final_cost": 78153,
      "multiplier": 1.4342251736977467,
      "multiplier_wrt_orig": 2.364707688764347,
      "num_uses": 14,
      "uses": [
        {
          "fn_1 (* 1 2) 0": "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))"
        },
        {
          "fn_1 (- (* 1 2) 0) 0": "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0)))"
        },
        {
          "fn_1 (* 1 2) 1": "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 1 (* 1 2)))"
        }
      ]
    },
    {
      "body": "(T (T #0 (M 1 0 #1 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
      "dreamcoder": "#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))",
      "arity": 2,
      "name": "fn_2",
      "rewritten": [
        "(C (C (fn_1 (- (* 1 2) 0) 0) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (fn_1 (- (* 1 2) 0) 0) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(fn_1 (* 1 2) 0)",
        "(C (C (fn_1 (* 1 2) 0) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (fn_1 (* 1 2) 0) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (C (fn_1 (- (* 1 2) 0) 0) (fn_0 1 (- (* 1 2) 1))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2)))",
        "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (fn_1 (- (* 1 2) 0) 0) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(fn_2 (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (C (C (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1)) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (fn_0 0 (* 1 2)))",
        "(C (fn_2 c 0))",
        "(C (T (T c (M 1 0 0 1)) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 0 (* 0.5 0.5))) (M (* 1 2) 0 0 0)) (M 1 0 0 0))))",
        "(C (C (C (T (T (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5))) (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5)))) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (fn_2 (T r (M 1 0 0 (* 0.5 1))) 0) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (fn_1 (* 1 2) 0) (fn_0 1 (- (* 1 2) 0))) (fn_0 2 (- (* 1 2) 1)))",
        "(C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2)))",
        "(C (fn_1 (* 1 2) 1) (fn_0 0 (* 1 2)))",
        "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
      ],
      "rewritten_dreamcoder": [
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0)",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (C (C (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1)) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c 0))",
        "(C (T (T c (M 1 0 0 1)) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 0 (* 0.5 0.5))) (M (* 1 2) 0 0 0)) (M 1 0 0 0))))",
        "(C (C (C (T (T (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5))) (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 0 (* 0.5 1))) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 1)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 1) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))"
      ],
      "utility": 27420,
      "expected_cost": 48459,
      "final_cost": 51287,
      "multiplier": 1.523836449782596,
      "multiplier_wrt_orig": 3.60342776922027,
      "num_uses": 21,
      "uses": [
        {
          "fn_2 (T r (M 1 0 0 (* 0.5 1))) 0": "(T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 (T r (M 1 0 0.5 (* 0.5 1))) 0": "(T (T (T r (M 1 0 0.5 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 c (+ 0.5 1)": "(T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 c (- 0 (+ 0.5 1))": "(T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 c 0": "(T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 r (+ 0.5 1)": "(T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 r (- 0 (+ 0.5 1))": "(T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 r 0": "(T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 r 0.5": "(T (T r (M 1 0 0.5 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        }
      ]
    },
    {
      "body": "(T #1 (M 1 0 0 #0))",
      "dreamcoder": "#(lambda (lambda (T $0 (M 1 0 0 $1))))",
      "arity": 2,
      "name": "fn_3",
      "rewritten": [
        "(C (C (fn_1 (- (* 1 2) 0) 0) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (fn_1 (- (* 1 2) 0) 0) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(fn_1 (* 1 2) 0)",
        "(C (C (fn_1 (* 1 2) 0) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (fn_1 (* 1 2) 0) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (C (fn_1 (- (* 1 2) 0) 0) (fn_0 1 (- (* 1 2) 1))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2)))",
        "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (fn_1 (- (* 1 2) 0) 0) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(fn_2 (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (C (C (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r)))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r)))) (fn_0 0 (* 1 2)))",
        "(C (fn_2 c 0))",
        "(C (fn_3 (* 0.5 1) (fn_3 1 c)))",
        "(C (C (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) c))) (fn_3 0 (T (fn_3 (* 0.5 0.5) l) (M (* 1 2) 0 0 0)))))",
        "(C (C (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r)))) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (fn_2 (fn_3 (* 0.5 1) r) 0) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (fn_1 (* 1 2) 0) (fn_0 1 (- (* 1 2) 0))) (fn_0 2 (- (* 1 2) 1)))",
        "(C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2)))",
        "(C (fn_1 (* 1 2) 1) (fn_0 0 (* 1 2)))",
        "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
      ],
      "rewritten_dreamcoder": [
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0)",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c 0))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c)))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 0.5) l) (M (* 1 2) 0 0 0)))))",
        "(C (C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 1)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 1) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))"
      ],
      "utility": 8937,
      "expected_cost": 41591,
      "final_cost": 41591,
      "multiplier": 1.2331273592844605,
      "multiplier_wrt_orig": 4.443485369430887,
      "num_uses": 24,
      "uses": [
        {
          "fn_3 0 (T (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5))) (M 3 (/ pi 2) 0 (- 0 2)))": "(T (T (T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5))) (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0))"
        },
        {
          "fn_3 0 (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 0))": "(T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_3 0 (T (T l (M 1 0 0 (* 0.5 0.5))) (M (* 1 2) 0 0 0))": "(T (T (T l (M 1 0 0 (* 0.5 0.5))) (M (* 1 2) 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_3 (- 0 0.5) (T (T r (M 1 0 0 0.5)) (M 1 0 0 0))": "(T (T (T r (M 1 0 0 0.5)) (M 1 0 0 0)) (M 1 0 0 (- 0 0.5)))"
        },
        {
          "fn_3 1 (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1)))": "(T (T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1))) (M 1 0 0 1))"
        },
        {
          "fn_3 0 (T c (M 1 0 0 (* 0.5 1)))": "(T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 0))"
        },
        {
          "fn_3 (* 0.5 1) (T c (M 1 0 0 1))": "(T (T c (M 1 0 0 1)) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_3 0 (T r (M 1 0 0 0.5))": "(T (T r (M 1 0 0 0.5)) (M 1 0 0 0))"
        },
        {
          "fn_3 (- 0.5 1) (T r (M 1 0 0 1))": "(T (T r (M 1 0 0 1)) (M 1 0 0 (- 0.5 1)))"
        },
        {
          "fn_3 (* 0.5 1) c": "(T c (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_3 1 c": "(T c (M 1 0 0 1))"
        },
        {
          "fn_3 (* 0.5 0.5) l": "(T l (M 1 0 0 (* 0.5 0.5)))"
        },
        {
          "fn_3 (* 0.5 1) r": "(T r (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_3 0.5 r": "(T r (M 1 0 0 0.5))"
        },
        {
          "fn_3 1 r": "(T r (M 1 0 0 1))"
        }
      ]
    },
    {
      "body": "(C (C #1 (fn_2 #0 (- 0 (+ 0.5 1)))) (fn_2 #0 (+ 0.5 1)))",
      "dreamcoder": "#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1)))))",
      "arity": 2,
      "name": "fn_4",
      "rewritten": [
        "(fn_4 c (fn_1 (- (* 1 2) 0) 0))",
        "(fn_4 r (fn_1 (- (* 1 2) 0) 0))",
        "(fn_1 (* 1 2) 0)",
        "(fn_4 c (fn_1 (* 1 2) 0))",
        "(fn_4 r (fn_1 (* 1 2) 0))",
        "(fn_4 c (C (fn_1 (- (* 1 2) 0) 0) (fn_0 1 (- (* 1 2) 1))))",
        "(C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2)))",
        "(fn_4 c (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))))",
        "(fn_4 r (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))))",
        "(C (C (fn_1 (- (* 1 2) 0) 0) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(fn_2 (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (C (C (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r)))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r)))) (fn_0 0 (* 1 2)))",
        "(C (fn_2 c 0))",
        "(C (fn_3 (* 0.5 1) (fn_3 1 c)))",
        "(C (C (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) c))) (fn_3 0 (T (fn_3 (* 0.5 0.5) l) (M (* 1 2) 0 0 0)))))",
        "(C (C (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r)))) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (fn_2 (fn_3 (* 0.5 1) r) 0) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (fn_1 (* 1 2) 0) (fn_0 1 (- (* 1 2) 0))) (fn_0 2 (- (* 1 2) 1)))",
        "(C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2)))",
        "(C (fn_1 (* 1 2) 1) (fn_0 0 (* 1 2)))",
        "(fn_4 c (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0))",
        "(#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0)",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- (* 1 2) 0) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c 0))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c)))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 0.5) l) (M (* 1 2) 0 0 0)))))",
        "(C (C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 1)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 1) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))"
      ],
      "utility": 7875,
      "expected_cost": 31895,
      "final_cost": 31895,
      "multiplier": 1.3039974917698698,
      "multiplier_wrt_orig": 5.79429377645399,
      "num_uses": 8,
      "uses": [
        {
          "fn_4 c (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2)))": "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
        },
        {
          "fn_4 r (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2)))": "(C (C (C (fn_1 (* 1 2) 0) (fn_0 1 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))"
        },
        {
          "fn_4 c (C (fn_1 (- (* 1 2) 0) 0) (fn_0 1 (- (* 1 2) 1)))": "(C (C (C (fn_1 (- (* 1 2) 0) 0) (fn_0 1 (- (* 1 2) 1))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
        },
        {
          "fn_4 c (fn_1 (* 1 2) 0)": "(C (C (fn_1 (* 1 2) 0) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
        },
        {
          "fn_4 r (fn_1 (* 1 2) 0)": "(C (C (fn_1 (* 1 2) 0) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))"
        },
        {
          "fn_4 c (fn_1 (- (* 1 2) 0) 0)": "(C (C (fn_1 (- (* 1 2) 0) 0) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
        },
        {
          "fn_4 r (fn_1 (- (* 1 2) 0) 0)": "(C (C (fn_1 (- (* 1 2) 0) 0) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))"
        }
      ]
    },
    {
      "body": "(* 1 2)",
      "dreamcoder": "#(* 1 2)",
      "arity": 0,
      "name": "fn_5",
      "rewritten": [
        "(fn_4 c (fn_1 (- fn_5 0) 0))",
        "(fn_4 r (fn_1 (- fn_5 0) 0))",
        "(fn_1 fn_5 0)",
        "(fn_4 c (fn_1 fn_5 0))",
        "(fn_4 r (fn_1 fn_5 0))",
        "(fn_4 c (C (fn_1 (- fn_5 0) 0) (fn_0 1 (- fn_5 1))))",
        "(C (fn_1 fn_5 0) (fn_0 1 fn_5))",
        "(fn_4 c (C (fn_1 fn_5 0) (fn_0 1 fn_5)))",
        "(fn_4 r (C (fn_1 fn_5 0) (fn_0 1 fn_5)))",
        "(C (C (fn_1 (- fn_5 0) 0) (fn_0 1 (- fn_5 1))) (fn_0 2 (- fn_5 2)))",
        "(fn_2 (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (C (C (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r)))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r)))) (fn_0 0 fn_5))",
        "(C (fn_2 c 0))",
        "(C (fn_3 (* 0.5 1) (fn_3 1 c)))",
        "(C (C (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) c))) (fn_3 0 (T (fn_3 (* 0.5 0.5) l) (M fn_5 0 0 0)))))",
        "(C (C (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r)))) (fn_0 0 fn_5)) (fn_0 1 fn_5))",
        "(C (C (fn_2 (fn_3 (* 0.5 1) r) 0) (fn_0 0 fn_5)) (fn_0 1 fn_5))",
        "(C (C (fn_1 fn_5 0) (fn_0 1 (- fn_5 0))) (fn_0 2 (- fn_5 1)))",
        "(C (fn_1 fn_5 0) (fn_0 1 fn_5))",
        "(C (fn_1 fn_5 1) (fn_0 0 fn_5))",
        "(fn_4 c (C (fn_1 fn_5 0) (fn_0 1 fn_5)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- #(* 1 2) 0) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- #(* 1 2) 0) 0))",
        "(#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0)",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- #(* 1 2) 0) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- #(* 1 2) 0) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2)))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c 0))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c)))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 0.5) l) (M #(* 1 2) 0 0 0)))))",
        "(C (C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(C (C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(C (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- #(* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 1)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 1) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2))))"
      ],
      "utility": 5809,
      "expected_cost": 25633,
      "final_cost": 25633,
      "multiplier": 1.2442944641672844,
      "multiplier_wrt_orig": 7.2098076698006475,
      "num_uses": 31,
      "uses": [
        {
          "fn_5 ": "(* 1 2)"
        }
      ]
    },
    {
      "body": "(C (fn_1 #1 0) (fn_0 1 #0))",
      "dreamcoder": "#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1))))",
      "arity": 2,
      "name": "fn_6",
      "rewritten": [
        "(fn_4 c (fn_1 (- fn_5 0) 0))",
        "(fn_4 r (fn_1 (- fn_5 0) 0))",
        "(fn_1 fn_5 0)",
        "(fn_4 c (fn_1 fn_5 0))",
        "(fn_4 r (fn_1 fn_5 0))",
        "(fn_4 c (fn_6 (- fn_5 1) (- fn_5 0)))",
        "(fn_6 fn_5 fn_5)",
        "(fn_4 c (fn_6 fn_5 fn_5))",
        "(fn_4 r (fn_6 fn_5 fn_5))",
        "(C (fn_6 (- fn_5 1) (- fn_5 0)) (fn_0 2 (- fn_5 2)))",
        "(fn_2 (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (C (C (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r)))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r)))) (fn_0 0 fn_5))",
        "(C (fn_2 c 0))",
        "(C (fn_3 (* 0.5 1) (fn_3 1 c)))",
        "(C (C (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) c))) (fn_3 0 (T (fn_3 (* 0.5 0.5) l) (M fn_5 0 0 0)))))",
        "(C (C (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r)))) (fn_0 0 fn_5)) (fn_0 1 fn_5))",
        "(C (C (fn_2 (fn_3 (* 0.5 1) r) 0) (fn_0 0 fn_5)) (fn_0 1 fn_5))",
        "(C (fn_6 (- fn_5 0) fn_5) (fn_0 2 (- fn_5 1)))",
        "(fn_6 fn_5 fn_5)",
        "(C (fn_1 fn_5 1) (fn_0 0 fn_5))",
        "(fn_4 c (fn_6 fn_5 fn_5))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- #(* 1 2) 0) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- #(* 1 2) 0) 0))",
        "(#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0)",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0)))",
        "(#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(C (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2)))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c 0))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c)))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 0.5) l) (M #(* 1 2) 0 0 0)))))",
        "(C (C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(C (C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(C (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 0) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 1)))",
        "(#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 1) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))"
      ],
      "utility": 2473,
      "expected_cost": 22401,
      "final_cost": 22401,
      "multiplier": 1.14427927324673,
      "multiplier_wrt_orig": 8.250033480648185,
      "num_uses": 8,
      "uses": [
        {
          "fn_6 (- fn_5 1) (- fn_5 0)": "(C (fn_1 (- fn_5 0) 0) (fn_0 1 (- fn_5 1)))"
        },
        {
          "fn_6 (- fn_5 0) fn_5": "(C (fn_1 fn_5 0) (fn_0 1 (- fn_5 0)))"
        },
        {
          "fn_6 fn_5 fn_5": "(C (fn_1 fn_5 0) (fn_0 1 fn_5))"
        }
      ]
    },
    {
      "body": "(#0 (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))))",
      "dreamcoder": "#(lambda ($0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r)))))",
      "arity": 1,
      "name": "fn_7",
      "rewritten": [
        "(fn_4 c (fn_1 (- fn_5 0) 0))",
        "(fn_4 r (fn_1 (- fn_5 0) 0))",
        "(fn_1 fn_5 0)",
        "(fn_4 c (fn_1 fn_5 0))",
        "(fn_4 r (fn_1 fn_5 0))",
        "(fn_4 c (fn_6 (- fn_5 1) (- fn_5 0)))",
        "(fn_6 fn_5 fn_5)",
        "(fn_4 c (fn_6 fn_5 fn_5))",
        "(fn_4 r (fn_6 fn_5 fn_5))",
        "(C (fn_6 (- fn_5 1) (- fn_5 0)) (fn_0 2 (- fn_5 2)))",
        "(fn_2 (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (fn_7 (C (fn_7 (fn_7 C)))) (fn_0 0 fn_5))",
        "(C (fn_2 c 0))",
        "(C (fn_3 (* 0.5 1) (fn_3 1 c)))",
        "(C (C (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) c))) (fn_3 0 (T (fn_3 (* 0.5 0.5) l) (M fn_5 0 0 0)))))",
        "(C (C (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r)))) (fn_0 0 fn_5)) (fn_0 1 fn_5))",
        "(C (C (fn_2 (fn_3 (* 0.5 1) r) 0) (fn_0 0 fn_5)) (fn_0 1 fn_5))",
        "(C (fn_6 (- fn_5 0) fn_5) (fn_0 2 (- fn_5 1)))",
        "(fn_6 fn_5 fn_5)",
        "(C (fn_1 fn_5 1) (fn_0 0 fn_5))",
        "(fn_4 c (fn_6 fn_5 fn_5))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- #(* 1 2) 0) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- #(* 1 2) 0) 0))",
        "(#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0)",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0)))",
        "(#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(C (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2)))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(C (#(lambda ($0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))))) (C (#(lambda ($0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))))) (#(lambda ($0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))))) C)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c 0))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c)))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 0.5) l) (M #(* 1 2) 0 0 0)))))",
        "(C (C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(C (C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r) 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 #(* 1 2)))",
        "(C (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 0) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 1)))",
        "(#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2))",
        "(C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 1) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))"
      ],
      "utility": 1061,
      "expected_cost": 19977,
      "final_cost": 19977,
      "multiplier": 1.1213395404715423,
      "multiplier_wrt_orig": 9.251088752064875,
      "num_uses": 3,
      "uses": [
        {
          "fn_7 (C (C (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r)))))": "(C (C (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r)))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))))"
        },
        {
          "fn_7 (C (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))))": "(C (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))) (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))))"
        },
        {
          "fn_7 C": "(C (fn_3 1 (fn_3 (- 0.5 1) (fn_3 1 r))))"
        }
      ]
    },
    {
      "body": "(C #1 (fn_0 #0 fn_5))",
      "dreamcoder": "#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2)))))",
      "arity": 2,
      "name": "fn_8",
      "rewritten": [
        "(fn_4 c (fn_1 (- fn_5 0) 0))",
        "(fn_4 r (fn_1 (- fn_5 0) 0))",
        "(fn_1 fn_5 0)",
        "(fn_4 c (fn_1 fn_5 0))",
        "(fn_4 r (fn_1 fn_5 0))",
        "(fn_4 c (fn_6 (- fn_5 1) (- fn_5 0)))",
        "(fn_6 fn_5 fn_5)",
        "(fn_4 c (fn_6 fn_5 fn_5))",
        "(fn_4 r (fn_6 fn_5 fn_5))",
        "(C (fn_6 (- fn_5 1) (- fn_5 0)) (fn_0 2 (- fn_5 2)))",
        "(fn_2 (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(fn_8 0 (fn_7 (C (fn_7 (fn_7 C)))))",
        "(C (fn_2 c 0))",
        "(C (fn_3 (* 0.5 1) (fn_3 1 c)))",
        "(C (C (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) c))) (fn_3 0 (T (fn_3 (* 0.5 0.5) l) (M fn_5 0 0 0)))))",
        "(fn_8 1 (fn_8 0 (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))))))",
        "(fn_8 1 (fn_8 0 (fn_2 (fn_3 (* 0.5 1) r) 0)))",
        "(C (fn_6 (- fn_5 0) fn_5) (fn_0 2 (- fn_5 1)))",
        "(fn_6 fn_5 fn_5)",
        "(fn_8 0 (fn_1 fn_5 1))",
        "(fn_4 c (fn_6 fn_5 fn_5))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- #(* 1 2) 0) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (- #(* 1 2) 0) 0))",
        "(#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0)",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0)))",
        "(#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(C (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 1) (- #(* 1 2) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 2)))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 0 (#(lambda ($0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))))) (C (#(lambda ($0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))))) (#(lambda ($0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))))) C)))))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c 0))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c)))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 0.5) l) (M #(* 1 2) 0 0 0)))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 0 (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r))))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r) 0)))",
        "(C (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (- #(* 1 2) 0) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- #(* 1 2) 1)))",
        "(#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 0 (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 1))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))"
      ],
      "utility": 756,
      "expected_cost": 18765,
      "final_cost": 18765,
      "multiplier": 1.0645883293365308,
      "multiplier_wrt_orig": 9.848601119104716,
      "num_uses": 6,
      "uses": [
        {
          "fn_8 1 (C (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r)))) (fn_0 0 fn_5))": "(C (C (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r)))) (fn_0 0 fn_5)) (fn_0 1 fn_5))"
        },
        {
          "fn_8 1 (C (fn_2 (fn_3 (* 0.5 1) r) 0) (fn_0 0 fn_5))": "(C (C (fn_2 (fn_3 (* 0.5 1) r) 0) (fn_0 0 fn_5)) (fn_0 1 fn_5))"
        },
        {
          "fn_8 0 (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))))": "(C (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r)))) (fn_0 0 fn_5))"
        },
        {
          "fn_8 0 (fn_1 fn_5 1)": "(C (fn_1 fn_5 1) (fn_0 0 fn_5))"
        },
        {
          "fn_8 0 (fn_2 (fn_3 (* 0.5 1) r) 0)": "(C (fn_2 (fn_3 (* 0.5 1) r) 0) (fn_0 0 fn_5))"
        },
        {
          "fn_8 0 (fn_7 (C (fn_7 (fn_7 C))))": "(C (fn_7 (C (fn_7 (fn_7 C)))) (fn_0 0 fn_5))"
        }
      ]
    },
    {
      "body": "(- fn_5)",
      "dreamcoder": "#(- #(* 1 2))",
      "arity": 0,
      "name": "fn_9",
      "rewritten": [
        "(fn_4 c (fn_1 (fn_9 0) 0))",
        "(fn_4 r (fn_1 (fn_9 0) 0))",
        "(fn_1 fn_5 0)",
        "(fn_4 c (fn_1 fn_5 0))",
        "(fn_4 r (fn_1 fn_5 0))",
        "(fn_4 c (fn_6 (fn_9 1) (fn_9 0)))",
        "(fn_6 fn_5 fn_5)",
        "(fn_4 c (fn_6 fn_5 fn_5))",
        "(fn_4 r (fn_6 fn_5 fn_5))",
        "(C (fn_6 (fn_9 1) (fn_9 0)) (fn_0 2 (fn_9 2)))",
        "(fn_2 (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(fn_8 0 (fn_7 (C (fn_7 (fn_7 C)))))",
        "(C (fn_2 c 0))",
        "(C (fn_3 (* 0.5 1) (fn_3 1 c)))",
        "(C (C (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) c))) (fn_3 0 (T (fn_3 (* 0.5 0.5) l) (M fn_5 0 0 0)))))",
        "(fn_8 1 (fn_8 0 (C (fn_3 0 (T (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (fn_3 (- 0 0.5) (fn_3 0 (fn_3 0.5 r))))))",
        "(fn_8 1 (fn_8 0 (fn_2 (fn_3 (* 0.5 1) r) 0)))",
        "(C (fn_6 (fn_9 0) fn_5) (fn_0 2 (fn_9 1)))",
        "(fn_6 fn_5 fn_5)",
        "(fn_8 0 (fn_1 fn_5 1))",
        "(fn_4 c (fn_6 fn_5 fn_5))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (#(- #(* 1 2)) 0) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) (#(- #(* 1 2)) 0) 0))",
        "(#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0)",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (#(- #(* 1 2)) 1) (#(- #(* 1 2)) 0)))",
        "(#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))",
        "(C (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (#(- #(* 1 2)) 1) (#(- #(* 1 2)) 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (#(- #(* 1 2)) 2)))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 0.5 (* 0.5 1))) 0)",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 0 (#(lambda ($0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))))) (C (#(lambda ($0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))))) (#(lambda ($0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 r))))) C)))))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c 0))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c)))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 0.5) l) (M #(* 1 2) 0 0 0)))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 0 (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r))) (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 r))))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r) 0)))",
        "(C (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) (#(- #(* 1 2)) 0) #(* 1 2)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (#(- #(* 1 2)) 1)))",
        "(#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 #(* 1 2))))) 0 (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) #(* 1 2) 1))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C (#(lambda (lambda (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 $1)))) $0 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 $1)))) #(* 1 2) #(* 1 2)))"
      ],
      "utility": 608,
      "expected_cost": 17856,
      "final_cost": 17856,
      "multiplier": 1.0509072580645162,
      "multiplier_wrt_orig": 10.349966397849462,
      "num_uses": 9,
      "uses": [
        {
          "fn_9 ": "(- fn_5)"
        }
      ]
    }
  ]
}