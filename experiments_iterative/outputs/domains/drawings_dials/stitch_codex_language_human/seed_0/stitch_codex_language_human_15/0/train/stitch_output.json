{
  "cmd": "target/release/compress /Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_15/0/train/stitch_frontiers.json --out=/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_15/0/train/stitch_output.json --max-arity=2 --iterations=10 --fmt=dreamcoder",
  "args": {
    "file": "/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_15/0/train/stitch_frontiers.json",
    "out": "/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_15/0/train/stitch_output.json",
    "iterations": 10,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "step": {
      "max_arity": 2,
      "threads": 1,
      "inv_candidates": 1,
      "hole_choice": "MinCost",
      "no_top_lambda": false,
      "track": null,
      "verbose_worklist": false,
      "verbose_best": false,
      "break_early_assignment": false,
      "fifo_worklist": false,
      "ascending_worklist": false,
      "lossy_candidates": false,
      "no_cache": false,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_stats": false,
      "no_other_util": false,
      "no_ctx_thread": false,
      "eta_long": false
    }
  },
  "original_cost": 293576,
  "original": [
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T l (M 1 0 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
    "(C (C (T (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 1)) (M 1 0 0 (* (* 2 1) 0.5))) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 (* (* 2 1) 0.5)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (C (C (T (T (T c (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 1)))) (T (T (T c (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
    "(C (C (T (T (T c (M 1 0 0 1)) (M 1 0 0 1)) (M 1 0 0 1)) (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))))",
    "(C (T (T (T c (M 1 0 0 1)) (M (* 1 6) 0 0 0)) (M 1 0 0 1)) (T (T l (M 1 0 (- 0.25 1) 0)) (M 1 0 0 1)))",
    "(C (C (T (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0))))",
    "(T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
    "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))",
    "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 0.5)))",
    "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (C (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))) (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))",
    "(C (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))"
  ],
  "invs": [
    {
      "body": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M #1 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) #0)))",
      "dreamcoder": "#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1)))))",
      "arity": 2,
      "name": "fn_0",
      "rewritten": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T l (M 1 0 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
        "(C (C (T (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 1)) (M 1 0 0 (* (* 2 1) 0.5))) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 (* (* 2 1) 0.5)))) (fn_0 0 1))",
        "(C (C (C (T (T (T c (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 1)))) (T (T (T c (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
        "(C (C (T (T (T c (M 1 0 0 1)) (M 1 0 0 1)) (M 1 0 0 1)) (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (T (T (T c (M 1 0 0 1)) (M (* 1 6) 0 0 0)) (M 1 0 0 1)) (T (T l (M 1 0 (- 0.25 1) 0)) (M 1 0 0 1)))",
        "(C (C (T (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0))))",
        "(T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (T (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (- (* 1 2) 0))) (T (T (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 0.5)))",
        "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (C (fn_0 1 (* 1 2)) (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))",
        "(C (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (fn_0 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T l (M 1 0 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
        "(C (C (T (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 1)) (M 1 0 0 (* (* 2 1) 0.5))) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 (* (* 2 1) 0.5)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 1))",
        "(C (C (C (T (T (T c (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 1)))) (T (T (T c (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
        "(C (C (T (T (T c (M 1 0 0 1)) (M 1 0 0 1)) (M 1 0 0 1)) (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))))",
        "(C (T (T (T c (M 1 0 0 1)) (M (* 1 6) 0 0 0)) (M 1 0 0 1)) (T (T l (M 1 0 (- 0.25 1) 0)) (M 1 0 0 1)))",
        "(C (C (T (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0))))",
        "(T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
        "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 0.5)))",
        "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (C (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)) (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))",
        "(C (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))"
      ],
      "utility": 110139,
      "expected_cost": 179648,
      "final_cost": 179648,
      "multiplier": 1.6341734948343427,
      "multiplier_wrt_orig": 1.6341734948343427,
      "num_uses": 47,
      "uses": [
        {
          "fn_0 0 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_0 1 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))"
        },
        {
          "fn_0 2 (* 1 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))"
        },
        {
          "fn_0 0 (- (* 1 2) 0)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_0 1 (- (* 1 2) 1)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 1) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))"
        },
        {
          "fn_0 2 (- (* 1 2) 2)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))"
        },
        {
          "fn_0 0 1": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        }
      ]
    },
    {
      "body": "(T (T (T #0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))",
      "dreamcoder": "#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
      "arity": 1,
      "name": "fn_1",
      "rewritten": [
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (fn_1 l) (fn_0 0 (* 1 2)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T l (M 1 0 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
        "(C (C (T (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 1)) (M 1 0 0 (* (* 2 1) 0.5))) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 (* (* 2 1) 0.5)))) (fn_0 0 1))",
        "(C (C (C (fn_1 c) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 1)))) (fn_1 c))",
        "(C (C (T (T (T c (M 1 0 0 1)) (M 1 0 0 1)) (M 1 0 0 1)) (fn_1 l)))",
        "(C (T (T (T c (M 1 0 0 1)) (M (* 1 6) 0 0 0)) (M 1 0 0 1)) (T (T l (M 1 0 (- 0.25 1) 0)) (M 1 0 0 1)))",
        "(C (C (T (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0))))",
        "(T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
        "(C (fn_1 l) (fn_0 0 (* 1 2)))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (T (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))",
        "(C (C (fn_1 l) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (T (T (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 0.5)))",
        "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (C (fn_0 1 (* 1 2)) (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))",
        "(C (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (fn_0 0 (* 1 2)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T l (M 1 0 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
        "(C (C (T (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 1)) (M 1 0 0 (* (* 2 1) 0.5))) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 (* (* 2 1) 0.5)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 1))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 1)))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c))",
        "(C (C (T (T (T c (M 1 0 0 1)) (M 1 0 0 1)) (M 1 0 0 1)) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (T (T (T c (M 1 0 0 1)) (M (* 1 6) 0 0 0)) (M 1 0 0 1)) (T (T l (M 1 0 (- 0.25 1) 0)) (M 1 0 0 1)))",
        "(C (C (T (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0))))",
        "(T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
        "(C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (T (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 0.5)))",
        "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (C (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)) (T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))",
        "(C (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))"
      ],
      "utility": 49692,
      "expected_cost": 126623,
      "final_cost": 126623,
      "multiplier": 1.4187627840123833,
      "multiplier_wrt_orig": 2.318504537090418,
      "num_uses": 25,
      "uses": [
        {
          "fn_1 c": "(T (T (T c (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_1 l": "(T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))"
        }
      ]
    },
    {
      "body": "(T (T #0 (M 1 0 #1 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
      "dreamcoder": "#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))",
      "arity": 2,
      "name": "fn_2",
      "rewritten": [
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (fn_1 l) (fn_0 0 (* 1 2)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (fn_2 (T c (M 1 0 0 (* 0.5 1))) 0) (T (T (T l (M 1 0 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
        "(C (C (T (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 1)) (M 1 0 0 (* (* 2 1) 0.5))) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 (* (* 2 1) 0.5)))) (fn_0 0 1))",
        "(C (C (C (fn_1 c) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 1)))) (fn_1 c))",
        "(C (C (T (T (T c (M 1 0 0 1)) (M 1 0 0 1)) (M 1 0 0 1)) (fn_1 l)))",
        "(C (T (T (T c (M 1 0 0 1)) (M (* 1 6) 0 0 0)) (M 1 0 0 1)) (T (T l (M 1 0 (- 0.25 1) 0)) (M 1 0 0 1)))",
        "(C (C (T (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0))))",
        "(fn_2 r (+ 0.5 1))",
        "(C (fn_1 l) (fn_0 0 (* 1 2)))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_2 (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))",
        "(C (C (fn_1 l) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (T (T (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 0.5)))",
        "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (fn_0 0 (* 1 2))) (C (fn_0 1 (* 1 2)) (fn_2 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(C (fn_2 r 0) (fn_0 0 (* 1 2)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 0 (* 0.5 1))) 0) (T (T (T l (M 1 0 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)))",
        "(C (C (T (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 1)) (M 1 0 0 (* (* 2 1) 0.5))) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 (* (* 2 1) 0.5)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 1))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 1)))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c))",
        "(C (C (T (T (T c (M 1 0 0 1)) (M 1 0 0 1)) (M 1 0 0 1)) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (T (T (T c (M 1 0 0 1)) (M (* 1 6) 0 0 0)) (M 1 0 0 1)) (T (T l (M 1 0 (- 0.25 1) 0)) (M 1 0 0 1)))",
        "(C (C (T (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0))))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1))",
        "(C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (T (T (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 0.5)))",
        "(C (C (T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0)) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (C (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))"
      ],
      "utility": 40146,
      "expected_cost": 84203,
      "final_cost": 88445,
      "multiplier": 1.431658092599921,
      "multiplier_wrt_orig": 3.3193057832551305,
      "num_uses": 30,
      "uses": [
        {
          "fn_2 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0": "(T (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 (T c (M 1 0 0 (* 0.5 1))) 0": "(T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0": "(T (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 c (+ 0.5 1)": "(T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 c (- 0 (+ 0.5 1))": "(T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 c 0": "(T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 r (+ 0.5 1)": "(T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 r (- 0 (+ 0.5 1))": "(T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 r 0": "(T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        }
      ]
    },
    {
      "body": "(T #1 (M 1 0 0 #0))",
      "dreamcoder": "#(lambda (lambda (T $0 (M 1 0 0 $1))))",
      "arity": 2,
      "name": "fn_3",
      "rewritten": [
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (fn_1 l) (fn_0 0 (* 1 2)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))",
        "(C (C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (fn_2 (fn_3 (* 0.5 1) c) 0) (fn_3 0 (fn_3 0 (fn_3 (- 0 2) l))))",
        "(C (C (fn_3 (* (* 2 1) 0.5) (fn_3 1 (fn_3 0 (fn_3 0 c)))) (fn_3 (* (* 2 1) 0.5) (fn_3 0 (fn_3 0 c)))) (fn_0 0 1))",
        "(C (C (C (fn_1 c) (fn_3 (- 0 2) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_3 (- 0 1) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_1 c))",
        "(C (C (fn_3 1 (fn_3 1 (fn_3 1 c))) (fn_1 l)))",
        "(C (fn_3 1 (T (fn_3 1 c) (M (* 1 6) 0 0 0))) (fn_3 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (fn_3 0 (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))) (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(fn_2 r (+ 0.5 1))",
        "(C (fn_1 l) (fn_0 0 (* 1 2)))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_2 (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))",
        "(C (C (fn_1 l) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_3 0.5 (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))))",
        "(C (C (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) r))) (fn_0 0 (* 1 2))) (C (fn_0 1 (* 1 2)) (fn_2 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(C (fn_2 r 0) (fn_0 0 (* 1 2)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) c (+ 0.5 1)))",
        "(C (C (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) l))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 c)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 c)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 1))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c) (M (* 1 6) 0 0 0))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1))",
        "(C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (C (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))"
      ],
      "utility": 11765,
      "expected_cost": 75921,
      "final_cost": 75921,
      "multiplier": 1.1649609462467565,
      "multiplier_wrt_orig": 3.8668616061432277,
      "num_uses": 31,
      "uses": [
        {
          "fn_3 0.5 (T (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))": "(T (T (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 0.5))"
        },
        {
          "fn_3 (- (* (* 0.5 1) 2) 0) (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))": "(T (T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_3 (* (* 2 1) 0.5) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 1))": "(T (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 1)) (M 1 0 0 (* (* 2 1) 0.5)))"
        },
        {
          "fn_3 (- (* (* 0.5 1) 2) 0) (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))": "(T (T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_3 0 (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0))": "(T (T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_3 (* (* 2 1) 0.5) (T (T c (M 1 0 0 0)) (M 1 0 0 0))": "(T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 (* (* 2 1) 0.5)))"
        },
        {
          "fn_3 1 (T (T c (M 1 0 0 0)) (M 1 0 0 0))": "(T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 1))"
        },
        {
          "fn_3 1 (T (T c (M 1 0 0 1)) (M (* 1 6) 0 0 0))": "(T (T (T c (M 1 0 0 1)) (M (* 1 6) 0 0 0)) (M 1 0 0 1))"
        },
        {
          "fn_3 1 (T (T c (M 1 0 0 1)) (M 1 0 0 1))": "(T (T (T c (M 1 0 0 1)) (M 1 0 0 1)) (M 1 0 0 1))"
        },
        {
          "fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0))": "(T (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_3 (- 0 1) (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0))": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 1)))"
        },
        {
          "fn_3 (- 0 2) (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0))": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 (- 0 2)))"
        },
        {
          "fn_3 0 (T (T l (M 1 0 0 (- 0 2))) (M 1 0 0 0))": "(T (T (T l (M 1 0 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_3 0 (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 0))": "(T (T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1)))": "(T (T c (M 1 0 (- 0 0) (* 0.5 1))) (M 1 0 0 0))"
        },
        {
          "fn_3 0 (T c (M 1 0 0 0))": "(T (T c (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_3 1 (T c (M 1 0 0 1))": "(T (T c (M 1 0 0 1)) (M 1 0 0 1))"
        },
        {
          "fn_3 0 (T l (M 1 0 (- 0 0.5) 0))": "(T (T l (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0))"
        },
        {
          "fn_3 1 (T l (M 1 0 (- 0.25 1) 0))": "(T (T l (M 1 0 (- 0.25 1) 0)) (M 1 0 0 1))"
        },
        {
          "fn_3 0 (T l (M 1 0 0 (- 0 2)))": "(T (T l (M 1 0 0 (- 0 2))) (M 1 0 0 0))"
        },
        {
          "fn_3 0 (T r (M 1 0 0 (* 0.5 1)))": "(T (T r (M 1 0 0 (* 0.5 1))) (M 1 0 0 0))"
        },
        {
          "fn_3 (* 0.5 1) c": "(T c (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_3 0 c": "(T c (M 1 0 0 0))"
        },
        {
          "fn_3 1 c": "(T c (M 1 0 0 1))"
        },
        {
          "fn_3 (- 0 2) l": "(T l (M 1 0 0 (- 0 2)))"
        },
        {
          "fn_3 (* 0.5 1) r": "(T r (M 1 0 0 (* 0.5 1)))"
        }
      ]
    },
    {
      "body": "(C (C #1 (fn_2 #0 (- 0 (+ 0.5 1)))) (fn_2 #0 (+ 0.5 1)))",
      "dreamcoder": "#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1)))))",
      "arity": 2,
      "name": "fn_4",
      "rewritten": [
        "(fn_4 c (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))))",
        "(fn_4 r (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))))",
        "(C (fn_1 l) (fn_0 0 (* 1 2)))",
        "(fn_4 c (C (fn_1 l) (fn_0 0 (* 1 2))))",
        "(fn_4 r (C (fn_1 l) (fn_0 0 (* 1 2))))",
        "(fn_4 c (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(fn_4 c (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))))",
        "(fn_4 r (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))))",
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(fn_4 c (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(fn_4 r (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))",
        "(fn_4 c (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(fn_4 r (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))",
        "(C (fn_2 (fn_3 (* 0.5 1) c) 0) (fn_3 0 (fn_3 0 (fn_3 (- 0 2) l))))",
        "(C (C (fn_3 (* (* 2 1) 0.5) (fn_3 1 (fn_3 0 (fn_3 0 c)))) (fn_3 (* (* 2 1) 0.5) (fn_3 0 (fn_3 0 c)))) (fn_0 0 1))",
        "(C (C (C (fn_1 c) (fn_3 (- 0 2) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_3 (- 0 1) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_1 c))",
        "(C (C (fn_3 1 (fn_3 1 (fn_3 1 c))) (fn_1 l)))",
        "(C (fn_3 1 (T (fn_3 1 c) (M (* 1 6) 0 0 0))) (fn_3 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (fn_3 0 (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))) (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(fn_2 r (+ 0.5 1))",
        "(C (fn_1 l) (fn_0 0 (* 1 2)))",
        "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_2 (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))",
        "(C (C (fn_1 l) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_3 0.5 (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))))",
        "(C (C (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) r))) (fn_0 0 (* 1 2))) (C (fn_0 1 (* 1 2)) (fn_2 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(C (fn_2 r 0) (fn_0 0 (* 1 2)))",
        "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))))",
        "(C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2))))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) l))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 c)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 c)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 1))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c) (M (* 1 6) 0 0 0))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1))",
        "(C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (C (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r 0) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2)))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (* 1 2)))"
      ],
      "utility": 11511,
      "expected_cost": 62589,
      "final_cost": 62589,
      "multiplier": 1.2130086756458802,
      "multiplier_wrt_orig": 4.690536675773698,
      "num_uses": 11,
      "uses": [
        {
          "fn_4 c (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))": "(C (C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
        },
        {
          "fn_4 r (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))": "(C (C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))"
        },
        {
          "fn_4 c (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))": "(C (C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
        },
        {
          "fn_4 r (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))": "(C (C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))"
        },
        {
          "fn_4 c (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))": "(C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
        },
        {
          "fn_4 r (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))": "(C (C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))"
        },
        {
          "fn_4 c (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))": "(C (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
        },
        {
          "fn_4 c (C (fn_1 l) (fn_0 0 (* 1 2)))": "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
        },
        {
          "fn_4 r (C (fn_1 l) (fn_0 0 (* 1 2)))": "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))"
        },
        {
          "fn_4 c (C (fn_1 l) (fn_0 0 (- (* 1 2) 0)))": "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_2 c (- 0 (+ 0.5 1)))) (fn_2 c (+ 0.5 1)))"
        },
        {
          "fn_4 r (C (fn_1 l) (fn_0 0 (- (* 1 2) 0)))": "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_2 r (- 0 (+ 0.5 1)))) (fn_2 r (+ 0.5 1)))"
        }
      ]
    },
    {
      "body": "(C #1 (fn_0 #0 (* 1 2)))",
      "dreamcoder": "#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2)))))",
      "arity": 2,
      "name": "fn_5",
      "rewritten": [
        "(fn_4 c (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))))",
        "(fn_4 r (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))))",
        "(fn_5 0 (fn_1 l))",
        "(fn_4 c (fn_5 0 (fn_1 l)))",
        "(fn_4 r (fn_5 0 (fn_1 l)))",
        "(fn_4 c (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))))",
        "(fn_5 1 (fn_5 0 (fn_1 l)))",
        "(fn_4 c (fn_5 1 (fn_5 0 (fn_1 l))))",
        "(fn_4 r (fn_5 1 (fn_5 0 (fn_1 l))))",
        "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(fn_4 c (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(fn_4 r (C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2))))",
        "(fn_5 2 (fn_5 1 (fn_5 0 (fn_1 l))))",
        "(fn_4 c (fn_5 2 (fn_5 1 (fn_5 0 (fn_1 l)))))",
        "(fn_4 r (fn_5 2 (fn_5 1 (fn_5 0 (fn_1 l)))))",
        "(fn_5 1 (fn_5 0 (fn_1 l)))",
        "(C (fn_2 (fn_3 (* 0.5 1) c) 0) (fn_3 0 (fn_3 0 (fn_3 (- 0 2) l))))",
        "(C (C (fn_3 (* (* 2 1) 0.5) (fn_3 1 (fn_3 0 (fn_3 0 c)))) (fn_3 (* (* 2 1) 0.5) (fn_3 0 (fn_3 0 c)))) (fn_0 0 1))",
        "(C (C (C (fn_1 c) (fn_3 (- 0 2) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_3 (- 0 1) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_1 c))",
        "(C (C (fn_3 1 (fn_3 1 (fn_3 1 c))) (fn_1 l)))",
        "(C (fn_3 1 (T (fn_3 1 c) (M (* 1 6) 0 0 0))) (fn_3 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (fn_3 0 (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))) (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(fn_2 r (+ 0.5 1))",
        "(fn_5 0 (fn_1 l))",
        "(C (fn_5 0 (fn_1 l)) (fn_2 (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))",
        "(C (C (fn_1 l) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))",
        "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_3 0.5 (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))))",
        "(C (fn_5 0 (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) r)))) (C (fn_0 1 (* 1 2)) (fn_2 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(fn_5 0 (fn_2 r 0))",
        "(fn_5 2 (fn_5 1 (fn_5 0 (fn_1 l))))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) l))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 c)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 c)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 1))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c) (M (* 1 6) 0 0 0))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
        "(C (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (- (* 1 2) 1))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 2 (- (* 1 2) 2)))",
        "(C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 (- (* 1 2) 0))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))))",
        "(C (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r)))) (C (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r 0))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))"
      ],
      "utility": 10149,
      "expected_cost": 51681,
      "final_cost": 51681,
      "multiplier": 1.2110640273988507,
      "multiplier_wrt_orig": 5.680540237224512,
      "num_uses": 27,
      "uses": [
        {
          "fn_5 2 (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))": "(C (C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2))) (fn_0 2 (* 1 2)))"
        },
        {
          "fn_5 1 (C (fn_1 l) (fn_0 0 (* 1 2)))": "(C (C (fn_1 l) (fn_0 0 (* 1 2))) (fn_0 1 (* 1 2)))"
        },
        {
          "fn_5 0 (fn_1 l)": "(C (fn_1 l) (fn_0 0 (* 1 2)))"
        },
        {
          "fn_5 0 (fn_2 r 0)": "(C (fn_2 r 0) (fn_0 0 (* 1 2)))"
        },
        {
          "fn_5 0 (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) r)))": "(C (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) r))) (fn_0 0 (* 1 2)))"
        }
      ]
    },
    {
      "body": "(C #0 (fn_0 #1 (- (* 1 2) #1)))",
      "dreamcoder": "#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0)))))",
      "arity": 2,
      "name": "fn_6",
      "rewritten": [
        "(fn_4 c (fn_6 (fn_1 l) 0))",
        "(fn_4 r (fn_6 (fn_1 l) 0))",
        "(fn_5 0 (fn_1 l))",
        "(fn_4 c (fn_5 0 (fn_1 l)))",
        "(fn_4 r (fn_5 0 (fn_1 l)))",
        "(fn_4 c (fn_6 (fn_6 (fn_1 l) 0) 1))",
        "(fn_5 1 (fn_5 0 (fn_1 l)))",
        "(fn_4 c (fn_5 1 (fn_5 0 (fn_1 l))))",
        "(fn_4 r (fn_5 1 (fn_5 0 (fn_1 l))))",
        "(fn_6 (fn_6 (fn_6 (fn_1 l) 0) 1) 2)",
        "(fn_4 c (fn_6 (fn_6 (fn_6 (fn_1 l) 0) 1) 2))",
        "(fn_4 r (fn_6 (fn_6 (fn_6 (fn_1 l) 0) 1) 2))",
        "(fn_5 2 (fn_5 1 (fn_5 0 (fn_1 l))))",
        "(fn_4 c (fn_5 2 (fn_5 1 (fn_5 0 (fn_1 l)))))",
        "(fn_4 r (fn_5 2 (fn_5 1 (fn_5 0 (fn_1 l)))))",
        "(fn_5 1 (fn_5 0 (fn_1 l)))",
        "(C (fn_2 (fn_3 (* 0.5 1) c) 0) (fn_3 0 (fn_3 0 (fn_3 (- 0 2) l))))",
        "(C (C (fn_3 (* (* 2 1) 0.5) (fn_3 1 (fn_3 0 (fn_3 0 c)))) (fn_3 (* (* 2 1) 0.5) (fn_3 0 (fn_3 0 c)))) (fn_0 0 1))",
        "(C (C (C (fn_1 c) (fn_3 (- 0 2) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_3 (- 0 1) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_1 c))",
        "(C (C (fn_3 1 (fn_3 1 (fn_3 1 c))) (fn_1 l)))",
        "(C (fn_3 1 (T (fn_3 1 c) (M (* 1 6) 0 0 0))) (fn_3 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (fn_3 0 (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))) (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(fn_2 r (+ 0.5 1))",
        "(fn_5 0 (fn_1 l))",
        "(C (fn_5 0 (fn_1 l)) (fn_2 (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(fn_6 (fn_6 (fn_1 l) 0) 1)",
        "(fn_6 (fn_6 (fn_1 l) 1) 2)",
        "(C (fn_6 (fn_1 l) 0) (fn_3 0.5 (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))))",
        "(C (fn_5 0 (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) r)))) (C (fn_0 1 (* 1 2)) (fn_2 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(fn_5 0 (fn_2 r 0))",
        "(fn_5 2 (fn_5 1 (fn_5 0 (fn_1 l))))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2)",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) l))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 c)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 c)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 1))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c) (M (* 1 6) 0 0 0))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
        "(C (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1)",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 1) 2)",
        "(C (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))))",
        "(C (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r)))) (C (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r 0))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))"
      ],
      "utility": 9996,
      "expected_cost": 40773,
      "final_cost": 40773,
      "multiplier": 1.2675299830770363,
      "multiplier_wrt_orig": 7.200255070757609,
      "num_uses": 18,
      "uses": [
        {
          "fn_6 (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) 2": "(C (C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))"
        },
        {
          "fn_6 (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) 1": "(C (C (fn_1 l) (fn_0 0 (- (* 1 2) 0))) (fn_0 1 (- (* 1 2) 1)))"
        },
        {
          "fn_6 (C (fn_1 l) (fn_0 1 (- (* 1 2) 1))) 2": "(C (C (fn_1 l) (fn_0 1 (- (* 1 2) 1))) (fn_0 2 (- (* 1 2) 2)))"
        },
        {
          "fn_6 (fn_1 l) 0": "(C (fn_1 l) (fn_0 0 (- (* 1 2) 0)))"
        },
        {
          "fn_6 (fn_1 l) 1": "(C (fn_1 l) (fn_0 1 (- (* 1 2) 1)))"
        }
      ]
    },
    {
      "body": "(fn_5 0 (fn_1 l))",
      "dreamcoder": "#(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
      "arity": 0,
      "name": "fn_7",
      "rewritten": [
        "(fn_4 c (fn_6 (fn_1 l) 0))",
        "(fn_4 r (fn_6 (fn_1 l) 0))",
        "fn_7",
        "(fn_4 c fn_7)",
        "(fn_4 r fn_7)",
        "(fn_4 c (fn_6 (fn_6 (fn_1 l) 0) 1))",
        "(fn_5 1 fn_7)",
        "(fn_4 c (fn_5 1 fn_7))",
        "(fn_4 r (fn_5 1 fn_7))",
        "(fn_6 (fn_6 (fn_6 (fn_1 l) 0) 1) 2)",
        "(fn_4 c (fn_6 (fn_6 (fn_6 (fn_1 l) 0) 1) 2))",
        "(fn_4 r (fn_6 (fn_6 (fn_6 (fn_1 l) 0) 1) 2))",
        "(fn_5 2 (fn_5 1 fn_7))",
        "(fn_4 c (fn_5 2 (fn_5 1 fn_7)))",
        "(fn_4 r (fn_5 2 (fn_5 1 fn_7)))",
        "(fn_5 1 fn_7)",
        "(C (fn_2 (fn_3 (* 0.5 1) c) 0) (fn_3 0 (fn_3 0 (fn_3 (- 0 2) l))))",
        "(C (C (fn_3 (* (* 2 1) 0.5) (fn_3 1 (fn_3 0 (fn_3 0 c)))) (fn_3 (* (* 2 1) 0.5) (fn_3 0 (fn_3 0 c)))) (fn_0 0 1))",
        "(C (C (C (fn_1 c) (fn_3 (- 0 2) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_3 (- 0 1) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_1 c))",
        "(C (C (fn_3 1 (fn_3 1 (fn_3 1 c))) (fn_1 l)))",
        "(C (fn_3 1 (T (fn_3 1 c) (M (* 1 6) 0 0 0))) (fn_3 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (fn_3 0 (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))) (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(fn_2 r (+ 0.5 1))",
        "fn_7",
        "(C fn_7 (fn_2 (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(fn_6 (fn_6 (fn_1 l) 0) 1)",
        "(fn_6 (fn_6 (fn_1 l) 1) 2)",
        "(C (fn_6 (fn_1 l) 0) (fn_3 0.5 (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))))",
        "(C (fn_5 0 (fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) r)))) (C (fn_0 1 (* 1 2)) (fn_2 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(fn_5 0 (fn_2 r 0))",
        "(fn_5 2 (fn_5 1 fn_7))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0))",
        "#(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2)",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) l))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 c)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 c)))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 1))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c) (M (* 1 6) 0 0 0))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1))",
        "#(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
        "(C #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1)",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 1) 2)",
        "(C (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))))",
        "(C (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r)))) (C (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r 0))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))"
      ],
      "utility": 3335,
      "expected_cost": 36834,
      "final_cost": 36834,
      "multiplier": 1.1069392409187164,
      "multiplier_wrt_orig": 7.9702448824455665,
      "num_uses": 13,
      "uses": [
        {
          "fn_7 ": "(fn_5 0 (fn_1 l))"
        }
      ]
    },
    {
      "body": "(fn_3 #0 (fn_3 #0 #1))",
      "dreamcoder": "#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0))))",
      "arity": 2,
      "name": "fn_8",
      "rewritten": [
        "(fn_4 c (fn_6 (fn_1 l) 0))",
        "(fn_4 r (fn_6 (fn_1 l) 0))",
        "fn_7",
        "(fn_4 c fn_7)",
        "(fn_4 r fn_7)",
        "(fn_4 c (fn_6 (fn_6 (fn_1 l) 0) 1))",
        "(fn_5 1 fn_7)",
        "(fn_4 c (fn_5 1 fn_7))",
        "(fn_4 r (fn_5 1 fn_7))",
        "(fn_6 (fn_6 (fn_6 (fn_1 l) 0) 1) 2)",
        "(fn_4 c (fn_6 (fn_6 (fn_6 (fn_1 l) 0) 1) 2))",
        "(fn_4 r (fn_6 (fn_6 (fn_6 (fn_1 l) 0) 1) 2))",
        "(fn_5 2 (fn_5 1 fn_7))",
        "(fn_4 c (fn_5 2 (fn_5 1 fn_7)))",
        "(fn_4 r (fn_5 2 (fn_5 1 fn_7)))",
        "(fn_5 1 fn_7)",
        "(C (fn_2 (fn_3 (* 0.5 1) c) 0) (fn_8 0 (fn_3 (- 0 2) l)))",
        "(C (C (fn_3 (* (* 2 1) 0.5) (fn_3 1 (fn_8 0 c))) (fn_3 (* (* 2 1) 0.5) (fn_8 0 c))) (fn_0 0 1))",
        "(C (C (C (fn_1 c) (fn_3 (- 0 2) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_3 (- 0 1) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_1 c))",
        "(C (C (fn_8 1 (fn_3 1 c)) (fn_1 l)))",
        "(C (fn_3 1 (T (fn_3 1 c) (M (* 1 6) 0 0 0))) (fn_3 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (fn_8 0 (T c (M 1 0 (- 0 0) (* 0.5 1)))) (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(fn_2 r (+ 0.5 1))",
        "fn_7",
        "(C fn_7 (fn_2 (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(fn_6 (fn_6 (fn_1 l) 0) 1)",
        "(fn_6 (fn_6 (fn_1 l) 1) 2)",
        "(C (fn_6 (fn_1 l) 0) (fn_3 0.5 (fn_8 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0))))))",
        "(C (fn_5 0 (fn_8 0 (fn_3 (* 0.5 1) r))) (C (fn_0 1 (* 1 2)) (fn_2 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(fn_5 0 (fn_2 r 0))",
        "(fn_5 2 (fn_5 1 fn_7))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0))",
        "#(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2)",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c) 0) (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) l)))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 0 c))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 0 c))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 1))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c))",
        "(C (C (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c)) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c) (M (* 1 6) 0 0 0))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1))",
        "#(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
        "(C #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1)",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 1) 2)",
        "(C (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0))))))",
        "(C (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r))) (C (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r 0))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))"
      ],
      "utility": 2724,
      "expected_cost": 33804,
      "final_cost": 34814,
      "multiplier": 1.0580226345722985,
      "multiplier_wrt_orig": 8.432699488711437,
      "num_uses": 9,
      "uses": [
        {
          "fn_8 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0))": "(fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0))))"
        },
        {
          "fn_8 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))": "(fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0)))))"
        },
        {
          "fn_8 0 (T c (M 1 0 (- 0 0) (* 0.5 1)))": "(fn_3 0 (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1)))))"
        },
        {
          "fn_8 0 (fn_3 (* 0.5 1) r)": "(fn_3 0 (fn_3 0 (fn_3 (* 0.5 1) r)))"
        },
        {
          "fn_8 0 (fn_3 (- 0 2) l)": "(fn_3 0 (fn_3 0 (fn_3 (- 0 2) l)))"
        },
        {
          "fn_8 0 c": "(fn_3 0 (fn_3 0 c))"
        },
        {
          "fn_8 1 (fn_3 1 c)": "(fn_3 1 (fn_3 1 (fn_3 1 c)))"
        },
        {
          "fn_8 1 c": "(fn_3 1 (fn_3 1 c))"
        }
      ]
    },
    {
      "body": "(fn_6 (fn_1 l) 0)",
      "dreamcoder": "#(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0)",
      "arity": 0,
      "name": "fn_9",
      "rewritten": [
        "(fn_4 c fn_9)",
        "(fn_4 r fn_9)",
        "fn_7",
        "(fn_4 c fn_7)",
        "(fn_4 r fn_7)",
        "(fn_4 c (fn_6 fn_9 1))",
        "(fn_5 1 fn_7)",
        "(fn_4 c (fn_5 1 fn_7))",
        "(fn_4 r (fn_5 1 fn_7))",
        "(fn_6 (fn_6 fn_9 1) 2)",
        "(fn_4 c (fn_6 (fn_6 fn_9 1) 2))",
        "(fn_4 r (fn_6 (fn_6 fn_9 1) 2))",
        "(fn_5 2 (fn_5 1 fn_7))",
        "(fn_4 c (fn_5 2 (fn_5 1 fn_7)))",
        "(fn_4 r (fn_5 2 (fn_5 1 fn_7)))",
        "(fn_5 1 fn_7)",
        "(C (fn_2 (fn_3 (* 0.5 1) c) 0) (fn_8 0 (fn_3 (- 0 2) l)))",
        "(C (C (fn_3 (* (* 2 1) 0.5) (fn_3 1 (fn_8 0 c))) (fn_3 (* (* 2 1) 0.5) (fn_8 0 c))) (fn_0 0 1))",
        "(C (C (C (fn_1 c) (fn_3 (- 0 2) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_3 (- 0 1) (fn_3 0 (T l (M 1 0 (- 0 0.5) 0))))) (fn_1 c))",
        "(C (C (fn_8 1 (fn_3 1 c)) (fn_1 l)))",
        "(C (fn_3 1 (T (fn_3 1 c) (M (* 1 6) 0 0 0))) (fn_3 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (fn_8 0 (T c (M 1 0 (- 0 0) (* 0.5 1)))) (fn_3 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(fn_2 r (+ 0.5 1))",
        "fn_7",
        "(C fn_7 (fn_2 (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(fn_6 fn_9 1)",
        "(fn_6 (fn_6 (fn_1 l) 1) 2)",
        "(C fn_9 (fn_3 0.5 (fn_8 (- (* (* 0.5 1) 2) 0) (fn_3 (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0))))))",
        "(C (fn_5 0 (fn_8 0 (fn_3 (* 0.5 1) r))) (C (fn_0 1 (* 1 2)) (fn_2 (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(fn_5 0 (fn_2 r 0))",
        "(fn_5 2 (fn_5 1 fn_7))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c #(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r #(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0))",
        "#(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) #(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) #(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2)",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) #(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) #(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1) 2))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) c (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))))",
        "(#(lambda (lambda (C (C $0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (- 0 (+ 0.5 1)))) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) $1 (+ 0.5 1))))) r (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) c) 0) (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) l)))",
        "(C (C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 0 c))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* (* 2 1) 0.5) (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 0 c))) (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 0 1))",
        "(C (C (C (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 2) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- 0 1) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T l (M 1 0 (- 0 0.5) 0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) c))",
        "(C (C (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c)) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)))",
        "(C (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 c) (M (* 1 6) 0 0 0))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 1 (T l (M 1 0 (- 0.25 1) 0))))",
        "(C (C (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1)))) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 0) (* 0.5 1))))))",
        "(#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r (+ 0.5 1))",
        "#(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))",
        "(C #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) 0))",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) #(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) 1)",
        "(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 1) 2)",
        "(C #(#(lambda (lambda (C $1 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $0 (- (* 1 2) $0))))) (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) 0.5 (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) (- (* (* 0.5 1) 2) 0) (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (- (* (* 0.5 1) 2) 0) (T (T l (M 1 0 (- 0 0.4) 0)) (M (- (* 1 2) 0) 0 0 0))))))",
        "(C (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (lambda (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) $1 $0)))) 0 (#(lambda (lambda (T $0 (M 1 0 0 $1)))) (* 0.5 1) r))) (C (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) 1 (* 1 2)) (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) 0)))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (lambda (T (T $1 (M 1 0 $0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))) r 0))",
        "(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 2 (#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 1 #(#(lambda (lambda (C $0 (#(lambda (lambda (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) $1))))) $1 (* 1 2))))) 0 (#(lambda (T (T (T $0 (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))) l))))"
      ],
      "utility": 1820,
      "expected_cost": 32390,
      "final_cost": 32390,
      "multiplier": 1.0748379129360914,
      "multiplier_wrt_orig": 9.063785118863846,
      "num_uses": 8,
      "uses": [
        {
          "fn_9 ": "(fn_6 (fn_1 l) 0)"
        }
      ]
    }
  ]
}