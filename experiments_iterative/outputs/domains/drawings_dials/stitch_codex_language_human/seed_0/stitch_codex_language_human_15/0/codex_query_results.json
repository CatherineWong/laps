{"curr_prompt_idx": 9, "max_num_prompts": 10, "programs_valid": ["(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))))", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.4) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform_matrix 1 0 0 0.5)))", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 0) (* 0.5 1))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform circle (transform_matrix 1 0 (- 0 0) (* 0.5 1))) (transform_matrix 1 0 0 0))))", "(connect_strokes (connect_strokes (transform (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 (* (* 2 1) 0.5))) (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (* (* 2 1) 0.5)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "(transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- 0 2)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- 0 1)))) (transform (transform (transform circle (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "(connect_strokes (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "(connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 1)) (transform_matrix (* 1 6) 0 0 0)) (transform_matrix 1 0 0 1)) (transform (transform line (transform_matrix 1 0 (- 0.25 1) 0)) (transform_matrix 1 0 0 1)))", "(connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform line (transform_matrix 1 0 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))"], "programs_invalid": ["", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)) (transform_matrix 1 0 0 (* (* 0.5 1) 2))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "(connect_strokes (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_mat", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform (transform (transform (transform (transform (transform (transform", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform (transform (transform (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1", "(connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2", "(connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)) (transform_matrix 0 1 0 0)) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5", "(connect_strokes (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (connect_strokes (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1)", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 0 (- 0 0.5))) (transform_matrix 1 0 0 (- 0 0.5)))) (transform (transform (transform line (transform_matrix 1 0 0 (- 0 0.5))) (transform_matrix 1 0 0 (- 0 0.5)))) (transform (transform (transform line (transform_matrix 1 0 0", "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (rectangle (transform_matrix 1 0 0 (* 0.5 1)) (* 1 1.5) 0) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform big_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform vertical_line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (connect_strokes (connect_strokes (transform (transform horizontal_line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform (transform horizontal_line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0))) (transform (transform horizontal_line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0))))", "(connect_strokes (transform (connect_strokes (transform_matrix 1 0 (- 0 1) 0) (transform_matrix 1 0 (+ 1 0) 0)) (connect_strokes (transform_matrix 1 0 (+ 1 1) 0) (transform_matrix 1 0 (+ 1 -1) 0))))", "(connect_strokes (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (+ 0 0.5) 0)) (transform_matrix 1 0 0 (sqrt 0.75))) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform circle (transform_matrix 1 0 (+ 0 0.5) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (transform circle (transform_matrix 1 0 (- 0 0.5) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (*", "(transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0))) (transform_matrix (* 1 2) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 (* 0 1) (* 0.5 0.5))) (transform_matrix 1 0 0 (* 0.5 0.5))) (transform_matrix 1 0 0 (* 0.5 0.5)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "(connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "(connect_strokes (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 3 pi 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "(connect_strokes (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform square (transform_matrix 1 0 0 0))) (transform_matrix 1 0 0 (- (/ 0.5 1) 2))) (transform_matrix 1 0 0 (- (/ 0.5 1) 2)))) (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 0))) (transform_matrix 1 0 0 (- (/ 0.5 1) 2))) (transform_matrix 1 0 0 (- (/ 0.5 1) 2)))) (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.25)) (transform_matrix 1 0 0 0.25)))) (transform (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 2))) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.25)) (transform_matrix 1 0 0 0.5)))) (transform (transform (transform circle (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.25)) (transform_matrix 1 0 0 0.75))))", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))) (connect_strokes (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 0 (- (* 0.5 1) 1))) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "(connect_strokes (transform (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "(connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- (/ 12 2) 1) 1)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform (transform (transform (transform square (transform_matrix 1 0 (- (/ 12 2) 1) 1)) (transform_matrix 1 0 0 1)) (transform_matrix (* 1 (/ 12 2)) 0 0 0)) (transform_matrix 1 0 0 1))) (transform (transform (transform (transform square (transform_matrix 1 0 (- (/ 12 2) 1) 1)) (transform_matrix 1 0 0 1)) (transform_matrix (* 1 (/ 12 2)) 0 0 0)) (transform_matrix 1 0 0 1))) (transform (transform (transform (transform square (transform_matrix 1 0 (- (/ 12 2) 1) 1)) (transform_matrix 1 0 0 1)) (transform_matrix (* 1 (/ 12 2)) 0 0 0)) (transform_matrix 1 0 0 1))) (transform (transform (transform (", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.", "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (* 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform power (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0)) (transform (transform (transform_matrix 1 0 0 0) (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0))) (transform (transform (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 1)) (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform circle (transform_matrix 1 1 0 0)) (transform_matrix (- 1 0) 0 0 0)) (transform_matrix 1 0 0 (- 0 3))) (transform_matrix 1 0 0 (- 0 0.4))) (transform (transform (transform (transform circle (transform_matrix 1 1 0 0)) (transform_matrix (- 1 0) 0 0 0)) (transform_matrix 1 0 0 (- 0 3))) (transform_matrix 1 0 0 (- 0 0.1))))) (transform (transform (transform (transform circle (transform_matrix 1 1 0 0)) (transform_matrix (- 1 0) 0 0 0)) (transform_matrix 1 0 0 (- 0 3))) (transform_matrix 1 0 0 (- 0 0.1))) (transform (transform (transform (transform circle (transform_matrix 1 1 0 0)) (transform_matrix (- 1 0) 0 0 0)) (transform_matrix 1", "(connect_strokes (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) 0)))) (transform_matrix 1 0 0 (- 0.5 1)))) (transform_matrix 1 0 0 (- (/ 1 2) (sqrt 1)))) (transform_matrix 1 0 0 (- (/ 1 2) (sqrt 1)))) (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) 0)))) (transform_matrix 1 0 0 (- 0.5 1)))) (transform_matrix 1 0 0 (- (/ 1 2) (sqrt 1)))) (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) 0)))) (transform_matrix 1 0 0 (- 0.5 1)))) (transform_matrix 1 0 0 (- (/ 1 2) (sqrt 1))))", "(transform_lines (transform (transform (transform (transform line (transform_matrix 3 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- 0.5 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "(connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 (rotate -90 (/ pi 2))))) (transform_matrix 1 0 0 0)) (transform (transform circle (transform_matrix 1 0 0 (rotate 90 (/ pi 2)))) (transform_matrix 1 0 0 0)) (transform (transform line (transform_matrix 1 0 0 (- (+ 0.5 1) 0))) (transform_matrix (- (* 1 pi) 0) 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (transform (transform rectangle (transform_matrix (* (* 2 1) 1) 0 (- 0 0) 1)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform", "(connect_strokes (connect_strokes (transform (transform (transform (transform_matrix 3 (/ pi 2) 0 (- 0 2)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.", "(connect_strokes (transform (transform (transform (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (*", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform circle (transform_matrix (* (* 0.25 0.5 1) 2) 0) 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix (* (* 0.25 0.5 1) 2) 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix", "(connect_strokes (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 (- 0 0.5))) (transform_matrix 1 0 0 0)) (transform (transform_matrix 1 0 0 (- 0 0.5)) (transform_matrix 1 0 0 0))) (transform (transform_matrix 1 0 0 (- 0 0.5)) (transform_matrix 1 0 0 0))) (transform (transform_matrix 1 0 0 (- 0 0.5)) (transform_matrix 1 0 0 0))) (transform (transform_matrix 1 0 0 (- 0 0.5)) (transform_matrix 1 0 0 0)))) (transform (transform_matrix 1 0 0 (- 0 0.5)) (transform_matrix 1 0 0 0))))", "(connect_strokes (transform (transform (transform rectangle (transform_matrix 0.5 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform line (transform_matrix 1 0 (+ (sqrt 0.5) 1) (* 0.5 1)) (transform_matrix 1 0 0 1))))", "(transform (transform (transform (transform (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform", "(connect_strokes (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.", "(connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))) (transform (transform (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform circle (transform_matrix 1 0 0.5 1)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))) (transform (transform (transform (transform circle (transform_matrix 1 0 0.5 1)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))) (transform (transform (transform (transform circle (transform_matrix 1 0 0.5 1)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "(transform (transform (transform (transform (transform (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix (- 1 1) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 0 0 1 0))) (transform (transform (transform (transform (transform (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix (- 1 1) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_mat", "(transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0))) (connect_strokes (transform (transform (transform (transform square (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform circle (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (connect_strokes (transform (transform (transform (transform square (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform circle (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (connect_strokes (transform", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform rectangle (transform_matrix 1 0 (- 0", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform_matrix 1 0 0 (- (* (*", "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 1) 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform", "(connect_strokes (transform (transform (transform rectangle (transform_matrix 0 1 (- 0.5 1) 1)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0.5 1) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0.5 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 1)) (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 1)) (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 1)) (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 1.5)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 1.5)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 1)) (transform (transform (transform"], "prompt_text": ["# <WHAT> two rectangles <WHERE> on the ends of the top part of a T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a vertical line <WHERE> center\t<WHAT> a horizontal line <WHERE> top of vertical line\t<WHAT> two squares <WHERE> on end of top horizontal line\t<WHAT> a horizontal line <WHERE> just under other horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T\n(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))\n# <WHAT> a cross with thin line, but a religious looking cross <WHERE> centered within the page\t<WHAT> a thick horizontal line, which is the same length as the horizontal line of the cross <WHERE> placed at the top of the vertical line, centered\t<WHAT> a small circle <WHERE> on the left end of the thick horizontal line\t<WHAT> a small circle <WHERE> on the right end of the thick horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> A capital T <WHERE> In the center of the field\t<WHAT> A lower case t <WHERE> Overlapping the capital T\t<WHAT> A plus sign <WHERE> So that it overlaps the capital T and the cross is just lower than the lower case t\u2019s cross\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> medium square <WHERE> center\t<WHAT> long vertical line <WHERE> top, center of square\t<WHAT> three parallel medium lines, horizontal <WHERE> the top of the vertical line above the square\t<WHAT> two small squares <WHERE> on either end of the furthst horizontal line\n", "# <WHAT> A capital T <WHERE> In the center of the field\t<WHAT> A lower case t <WHERE> Overlapping the capital T\t<WHAT> A plus sign <WHERE> So that it overlaps the capital T and the cross is just lower than the lower case t\u2019s cross\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> Draw a vertical line about 1 and 1/2 inches long <WHERE> in the middle of the page\t<WHAT> draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw a horizontal line about 1/2 and inch long <WHERE> 1/2 an inch under the top horizontal line  crossing the vertical line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> a tee shape <WHERE> halfway down the page\t<WHAT> two circles small <WHERE> on either end of the t shape top\t<WHAT> a small line <WHERE> 1/3 of the way down the t shape across\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> short vertical line <WHERE> center\t<WHAT> perpendicular line <WHERE> on top of vertical line\t<WHAT> two small circles <WHERE> each end of horizontal line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a skinny line <WHERE> cienter page going up\t<WHAT> think line <WHERE> going across the op of the skinny line\t<WHAT> two smal thick line squares <WHERE> one each at the end of side of the thick top line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a rectangle <WHERE> in the middle of the page\t<WHAT> draw a line upwards (vertically) <WHERE> from the middle of the top line of the rectangle\t<WHAT> a line horizontally approximately 1/3 of the length of the rectangle made <WHERE> at the top of the line just made\t<WHAT> two circles <WHERE> either side of the line made\n", "# <WHAT> vertical line <WHERE> center of page\t<WHAT> small horizontal line <WHERE> crossing the vertical line like a lowercase t\t<WHAT> horizontal line <WHERE> on top of the previous line like a capital T\t<WHAT> small square <WHERE> on each side of previous line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> T shape <WHERE> in the middle of the page\t<WHAT> two small circles <WHERE> on the ends of the top part of the t\t<WHAT> line <WHERE> perpendicular to the vertical line of the T, about 3/5 the length of the line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> small vertical line <WHERE> center\t<WHAT> small horizontal line <WHERE> centered on top of vertical line\t<WHAT> two small circles <WHERE> either side of horizontal line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> line <WHERE> that is parallel to the bottom of the page\t<WHAT> a line <WHERE> pointing straight down, creating a T\t<WHAT> two boxes <WHERE> one on each side of the parallel line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> Draw a T line <WHERE> on the left and right side of the T line\t<WHAT> draw two small squares <WHERE> part way down the T line draw am Horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> 1/4 of paper size square <WHERE> middle of the page\t<WHAT> six small squares <WHERE> across inside of larger square\t<WHAT> six small circles, almost the size of small square <WHERE> Inside six small squares\t<WHAT> A tilted line pointing to 1 oclock on a clock <WHERE> from middle of small circle to corner of small square, originating in the center of the circle.\t<WHAT> 2 vertical lines approx 1/4 size of large square <WHERE> 1/4 way across larger square and 3/4 way across larger square\t<WHAT> horizontal lines <WHERE> across vertical line at the half point and across the top\t<WHAT> small circle, same size as previous circles <WHERE> at the end of very top horizontal line\n", "# <WHAT> small vertical line <WHERE> center\t<WHAT> small horizontal line <WHERE> centered on top of vertical line\t<WHAT> two small circles <WHERE> either side of horizontal line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> Draw a vertical line <WHERE> in the middle of the page\t<WHAT> Draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw 2 horizontal lines crossing the vertical line about 1 inch long <WHERE> evenly spaced between each line\t<WHAT> Draw a square about 1/2 inch wide <WHERE> one on either side of the top horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> Draw a vertical line about 1 and 1/2 inches long <WHERE> in the middle of the page\t<WHAT> draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw a horizontal line about 1/2 and inch long <WHERE> 1/2 an inch under the top horizontal line  crossing the vertical line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T\n(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))\n# <WHAT> One T shape with the vertical line being longer than the horizontal line <WHERE> Center of page\t<WHAT> Two horizontal lines of equal length to the horizontal line of the T shape <WHERE> one third of the way down from the top of the T and two thirds of the way down from the top of the T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> double lined small circle <WHERE> center of page\t<WHAT> small vertical line <WHERE> orginating from center of circle to just past edge of circles\n", "# <WHAT> One T shape with the vertical line being longer than the horizontal line <WHERE> Center of page\t<WHAT> Two horizontal lines of equal length to the horizontal line of the T shape <WHERE> one third of the way down from the top of the T and two thirds of the way down from the top of the T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T\n(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))\n# <WHAT> Draw a T line <WHERE> on the left and right side of the T line\t<WHAT> draw two small squares <WHERE> part way down the T line draw am Horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> vertical line <WHERE> center of page\t<WHAT> small horizontal line <WHERE> crossing the vertical line like a lowercase t\t<WHAT> horizontal line <WHERE> on top of the previous line like a capital T\t<WHAT> small square <WHERE> on each side of previous line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> two rectangles <WHERE> on the ends of the top part of a T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> rextangle <WHERE> niddle\t<WHAT> draw square with power symbol in it <WHERE> middle\n", "# <WHAT> a vertical line (about the size of a thumbnail) <WHERE> the center of the page\t<WHAT> a horizontal line, slightly smaller than the vertical line <WHERE> on top of the vertical line\t<WHAT> a very small horizontal line <WHERE> in middle of the vertical line\t<WHAT> two small circles <WHERE> on either end of the first horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> 1 inch vertacle line <WHERE> center of page\t<WHAT> 1/2 inch horizontal line <WHERE> centrd on top of vert line\n(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))\n# <WHAT> a vertical line <WHERE> 2 inches in the center of the page\t<WHAT> a horizontal line <WHERE> on the top of the vertical line, like a T\t<WHAT> two small squares <WHERE> on the ends of the horizontal line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a t <WHERE> in the middle\t<WHAT> add another line <WHERE> under the top of the t\t<WHAT> add two circles <WHERE> on either end of the top of the t\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> 1 \"T\" <WHERE> center\t<WHAT> 2 small circles <WHERE> one on each end of the horizontal line if the \"T\"\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a thin rectangle at the <WHERE> middle\t<WHAT> a t <WHERE> at the top of the rectangle\t<WHAT> a smaller line that is smaller than the line of the t at the <WHERE> 2/3 of the line of the T\n", "# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T\n(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))\n# <WHAT> a capital letter 'T' <WHERE> in the centre of the page\t<WHAT> 2 small squares <WHERE> either side of the edges of the horizontal line on the capital T but make sure the squares don't advance down below the line drawn below\t<WHAT> a horizontal line <WHERE> 1/3 of the way down the letter T but not to make the line as long as the top horizontal line of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a t <WHERE> in the middle\t<WHAT> add another line <WHERE> under the top of the t\t<WHAT> add two circles <WHERE> on either end of the top of the t\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> two rectangles <WHERE> on the ends of the top part of a T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> 1 inch vertacle line <WHERE> center of page\t<WHAT> 1/2 inch horizontal line <WHERE> centrd on top of vert line\n(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))\n# <WHAT> square <WHERE> centre of page\t<WHAT> line <WHERE> coming off top of square\t<WHAT> 2 lines <WHERE> across line previously drawn, one at the end of the line and the other about 2/3 of the distance up it\t<WHAT> 2 circles <WHERE> at either end of the top most horizontal line\n", "# <WHAT> a T <WHERE> in the center of the page\t<WHAT> a horizontal line of equal length as the top of the T <WHERE> approximately one third of the length down the vertical line of the T\t<WHAT> two small squares <WHERE> on either tip of the original T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> A verticle line <WHERE> centered on the page\t<WHAT> a horizontal T line <WHERE> as a capital T horizontally centered on the top of the verticle line.\n(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))\n# <WHAT> a capital letter 'T' <WHERE> in the centre of the page\t<WHAT> 2 small squares <WHERE> either side of the edges of the horizontal line on the capital T but make sure the squares don't advance down below the line drawn below\t<WHAT> a horizontal line <WHERE> 1/3 of the way down the letter T but not to make the line as long as the top horizontal line of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> horizontal line <WHERE> in the middle od the square\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> two rectangles <WHERE> on the ends of the top part of a T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> long rectangle <WHERE> center\t<WHAT> vertical line <WHERE> top center of rectangle\t<WHAT> horizontal lines <WHERE> across vertical line like a lowercase t and capital T\t<WHAT> two small squares <WHERE> on either side of the previous horizontal line\n", "# <WHAT> big T <WHERE> middle of the main big square\t<WHAT> 2 small circles <WHERE> both ends of the letter T\t<WHAT> small line <WHERE> crossing the letter T in the upper area\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> 1 \"T\" <WHERE> center\t<WHAT> 2 small circles <WHERE> one on each end of the horizontal line if the \"T\"\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> A capital T <WHERE> In the center of the field.\t<WHAT> Two very small squares <WHERE> Attached to the ends of the line that makes up the top of the T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> 1 inch vertacle line <WHERE> center of page\t<WHAT> 1/2 inch horizontal line <WHERE> centrd on top of vert line\n(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))\n# <WHAT> big rectangle <WHERE> long side on the east/ west side\t<WHAT> vertical line <WHERE> on top of rectangle\t<WHAT> two small horizontal lines <WHERE> on at the top of vertical line, one in the middle of the same line\n", "# <WHAT> a cross with thin line, but a religious looking cross <WHERE> centered within the page\t<WHAT> a thick horizontal line, which is the same length as the horizontal line of the cross <WHERE> placed at the top of the vertical line, centered\t<WHAT> a small circle <WHERE> on the left end of the thick horizontal line\t<WHAT> a small circle <WHERE> on the right end of the thick horizontal line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> short vertical line <WHERE> center\t<WHAT> perpendicular line <WHERE> on top of vertical line\t<WHAT> two small circles <WHERE> each end of horizontal line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> One T shape with the vertical line being longer than the horizontal line <WHERE> Center of page\t<WHAT> Two horizontal lines of equal length to the horizontal line of the T shape <WHERE> one third of the way down from the top of the T and two thirds of the way down from the top of the T\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> Draw a vertical line about 1 and 1/2 inches long <WHERE> in the middle of the page\t<WHAT> draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw a horizontal line about 1/2 and inch long <WHERE> 1/2 an inch under the top horizontal line  crossing the vertical line\n(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))\n# <WHAT> T shape <WHERE> in the middle of the page\t<WHAT> two small circles <WHERE> on the ends of the top part of the t\t<WHAT> line <WHERE> perpendicular to the vertical line of the T, about 3/5 the length of the line\n(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))\n# <WHAT> A rectangle <WHERE> In the center of the field.\t<WHAT> A tiny circle <WHERE> In the middle of the rectangle\t<WHAT> A line from the radius of the circle <WHERE> Extending through the edge of the circle at the 12:00 o\u2019clock point, an equal distance beyond the edge of the circle as the distance from the radius to the edge.\n"], "prompt_example_types": ["language", "programs"], "prompt_programs": [[["# <WHAT> two rectangles <WHERE> on the ends of the top part of a T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a vertical line <WHERE> center\t<WHAT> a horizontal line <WHERE> top of vertical line\t<WHAT> two squares <WHERE> on end of top horizontal line\t<WHAT> a horizontal line <WHERE> just under other horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))"], ["# <WHAT> a cross with thin line, but a religious looking cross <WHERE> centered within the page\t<WHAT> a thick horizontal line, which is the same length as the horizontal line of the cross <WHERE> placed at the top of the vertical line, centered\t<WHAT> a small circle <WHERE> on the left end of the thick horizontal line\t<WHAT> a small circle <WHERE> on the right end of the thick horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> A capital T <WHERE> In the center of the field\t<WHAT> A lower case t <WHERE> Overlapping the capital T\t<WHAT> A plus sign <WHERE> So that it overlaps the capital T and the cross is just lower than the lower case t\u2019s cross", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> medium square <WHERE> center\t<WHAT> long vertical line <WHERE> top, center of square\t<WHAT> three parallel medium lines, horizontal <WHERE> the top of the vertical line above the square\t<WHAT> two small squares <WHERE> on either end of the furthst horizontal line"]], [["# <WHAT> A capital T <WHERE> In the center of the field\t<WHAT> A lower case t <WHERE> Overlapping the capital T\t<WHAT> A plus sign <WHERE> So that it overlaps the capital T and the cross is just lower than the lower case t\u2019s cross", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> Draw a vertical line about 1 and 1/2 inches long <WHERE> in the middle of the page\t<WHAT> draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw a horizontal line about 1/2 and inch long <WHERE> 1/2 an inch under the top horizontal line  crossing the vertical line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> a tee shape <WHERE> halfway down the page\t<WHAT> two circles small <WHERE> on either end of the t shape top\t<WHAT> a small line <WHERE> 1/3 of the way down the t shape across", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> short vertical line <WHERE> center\t<WHAT> perpendicular line <WHERE> on top of vertical line\t<WHAT> two small circles <WHERE> each end of horizontal line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a skinny line <WHERE> cienter page going up\t<WHAT> think line <WHERE> going across the op of the skinny line\t<WHAT> two smal thick line squares <WHERE> one each at the end of side of the thick top line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a rectangle <WHERE> in the middle of the page\t<WHAT> draw a line upwards (vertically) <WHERE> from the middle of the top line of the rectangle\t<WHAT> a line horizontally approximately 1/3 of the length of the rectangle made <WHERE> at the top of the line just made\t<WHAT> two circles <WHERE> either side of the line made"]], [["# <WHAT> vertical line <WHERE> center of page\t<WHAT> small horizontal line <WHERE> crossing the vertical line like a lowercase t\t<WHAT> horizontal line <WHERE> on top of the previous line like a capital T\t<WHAT> small square <WHERE> on each side of previous line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> T shape <WHERE> in the middle of the page\t<WHAT> two small circles <WHERE> on the ends of the top part of the t\t<WHAT> line <WHERE> perpendicular to the vertical line of the T, about 3/5 the length of the line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> small vertical line <WHERE> center\t<WHAT> small horizontal line <WHERE> centered on top of vertical line\t<WHAT> two small circles <WHERE> either side of horizontal line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> line <WHERE> that is parallel to the bottom of the page\t<WHAT> a line <WHERE> pointing straight down, creating a T\t<WHAT> two boxes <WHERE> one on each side of the parallel line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> Draw a T line <WHERE> on the left and right side of the T line\t<WHAT> draw two small squares <WHERE> part way down the T line draw am Horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> 1/4 of paper size square <WHERE> middle of the page\t<WHAT> six small squares <WHERE> across inside of larger square\t<WHAT> six small circles, almost the size of small square <WHERE> Inside six small squares\t<WHAT> A tilted line pointing to 1 oclock on a clock <WHERE> from middle of small circle to corner of small square, originating in the center of the circle.\t<WHAT> 2 vertical lines approx 1/4 size of large square <WHERE> 1/4 way across larger square and 3/4 way across larger square\t<WHAT> horizontal lines <WHERE> across vertical line at the half point and across the top\t<WHAT> small circle, same size as previous circles <WHERE> at the end of very top horizontal line"]], [["# <WHAT> small vertical line <WHERE> center\t<WHAT> small horizontal line <WHERE> centered on top of vertical line\t<WHAT> two small circles <WHERE> either side of horizontal line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> Draw a vertical line <WHERE> in the middle of the page\t<WHAT> Draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw 2 horizontal lines crossing the vertical line about 1 inch long <WHERE> evenly spaced between each line\t<WHAT> Draw a square about 1/2 inch wide <WHERE> one on either side of the top horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> Draw a vertical line about 1 and 1/2 inches long <WHERE> in the middle of the page\t<WHAT> draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw a horizontal line about 1/2 and inch long <WHERE> 1/2 an inch under the top horizontal line  crossing the vertical line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))"], ["# <WHAT> One T shape with the vertical line being longer than the horizontal line <WHERE> Center of page\t<WHAT> Two horizontal lines of equal length to the horizontal line of the T shape <WHERE> one third of the way down from the top of the T and two thirds of the way down from the top of the T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> double lined small circle <WHERE> center of page\t<WHAT> small vertical line <WHERE> orginating from center of circle to just past edge of circles"]], [["# <WHAT> One T shape with the vertical line being longer than the horizontal line <WHERE> Center of page\t<WHAT> Two horizontal lines of equal length to the horizontal line of the T shape <WHERE> one third of the way down from the top of the T and two thirds of the way down from the top of the T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))"], ["# <WHAT> Draw a T line <WHERE> on the left and right side of the T line\t<WHAT> draw two small squares <WHERE> part way down the T line draw am Horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> vertical line <WHERE> center of page\t<WHAT> small horizontal line <WHERE> crossing the vertical line like a lowercase t\t<WHAT> horizontal line <WHERE> on top of the previous line like a capital T\t<WHAT> small square <WHERE> on each side of previous line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> two rectangles <WHERE> on the ends of the top part of a T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> rextangle <WHERE> niddle\t<WHAT> draw square with power symbol in it <WHERE> middle"]], [["# <WHAT> a vertical line (about the size of a thumbnail) <WHERE> the center of the page\t<WHAT> a horizontal line, slightly smaller than the vertical line <WHERE> on top of the vertical line\t<WHAT> a very small horizontal line <WHERE> in middle of the vertical line\t<WHAT> two small circles <WHERE> on either end of the first horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> 1 inch vertacle line <WHERE> center of page\t<WHAT> 1/2 inch horizontal line <WHERE> centrd on top of vert line", "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))"], ["# <WHAT> a vertical line <WHERE> 2 inches in the center of the page\t<WHAT> a horizontal line <WHERE> on the top of the vertical line, like a T\t<WHAT> two small squares <WHERE> on the ends of the horizontal line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a t <WHERE> in the middle\t<WHAT> add another line <WHERE> under the top of the t\t<WHAT> add two circles <WHERE> on either end of the top of the t", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> 1 \"T\" <WHERE> center\t<WHAT> 2 small circles <WHERE> one on each end of the horizontal line if the \"T\"", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a thin rectangle at the <WHERE> middle\t<WHAT> a t <WHERE> at the top of the rectangle\t<WHAT> a smaller line that is smaller than the line of the t at the <WHERE> 2/3 of the line of the T"]], [["# <WHAT> T with thinner horizontal line <WHERE> under the top line of the T", "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))"], ["# <WHAT> a capital letter 'T' <WHERE> in the centre of the page\t<WHAT> 2 small squares <WHERE> either side of the edges of the horizontal line on the capital T but make sure the squares don't advance down below the line drawn below\t<WHAT> a horizontal line <WHERE> 1/3 of the way down the letter T but not to make the line as long as the top horizontal line of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a t <WHERE> in the middle\t<WHAT> add another line <WHERE> under the top of the t\t<WHAT> add two circles <WHERE> on either end of the top of the t", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> two rectangles <WHERE> on the ends of the top part of a T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> 1 inch vertacle line <WHERE> center of page\t<WHAT> 1/2 inch horizontal line <WHERE> centrd on top of vert line", "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))"], ["# <WHAT> square <WHERE> centre of page\t<WHAT> line <WHERE> coming off top of square\t<WHAT> 2 lines <WHERE> across line previously drawn, one at the end of the line and the other about 2/3 of the distance up it\t<WHAT> 2 circles <WHERE> at either end of the top most horizontal line"]], [["# <WHAT> a T <WHERE> in the center of the page\t<WHAT> a horizontal line of equal length as the top of the T <WHERE> approximately one third of the length down the vertical line of the T\t<WHAT> two small squares <WHERE> on either tip of the original T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> A verticle line <WHERE> centered on the page\t<WHAT> a horizontal T line <WHERE> as a capital T horizontally centered on the top of the verticle line.", "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))"], ["# <WHAT> a capital letter 'T' <WHERE> in the centre of the page\t<WHAT> 2 small squares <WHERE> either side of the edges of the horizontal line on the capital T but make sure the squares don't advance down below the line drawn below\t<WHAT> a horizontal line <WHERE> 1/3 of the way down the letter T but not to make the line as long as the top horizontal line of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> horizontal line <WHERE> in the middle od the square", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> two rectangles <WHERE> on the ends of the top part of a T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> long rectangle <WHERE> center\t<WHAT> vertical line <WHERE> top center of rectangle\t<WHAT> horizontal lines <WHERE> across vertical line like a lowercase t and capital T\t<WHAT> two small squares <WHERE> on either side of the previous horizontal line"]], [["# <WHAT> big T <WHERE> middle of the main big square\t<WHAT> 2 small circles <WHERE> both ends of the letter T\t<WHAT> small line <WHERE> crossing the letter T in the upper area", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> 1 \"T\" <WHERE> center\t<WHAT> 2 small circles <WHERE> one on each end of the horizontal line if the \"T\"", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> a capital T <WHERE> centered\t<WHAT> 2 horizontal lines the same length as the top of the capital T <WHERE> if the vertical line of the capital T was divided into thirds, the first line would be one third below the top of the T centered on the vertical line of the T, and the second line would be one third lower again centered on the vertical line of the T\t<WHAT> 2 circles <WHERE> just touching the ends of the top bar of the T", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> A capital T <WHERE> In the center of the field.\t<WHAT> Two very small squares <WHERE> Attached to the ends of the line that makes up the top of the T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> 1 inch vertacle line <WHERE> center of page\t<WHAT> 1/2 inch horizontal line <WHERE> centrd on top of vert line", "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))"], ["# <WHAT> big rectangle <WHERE> long side on the east/ west side\t<WHAT> vertical line <WHERE> on top of rectangle\t<WHAT> two small horizontal lines <WHERE> on at the top of vertical line, one in the middle of the same line"]], [["# <WHAT> a cross with thin line, but a religious looking cross <WHERE> centered within the page\t<WHAT> a thick horizontal line, which is the same length as the horizontal line of the cross <WHERE> placed at the top of the vertical line, centered\t<WHAT> a small circle <WHERE> on the left end of the thick horizontal line\t<WHAT> a small circle <WHERE> on the right end of the thick horizontal line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> short vertical line <WHERE> center\t<WHAT> perpendicular line <WHERE> on top of vertical line\t<WHAT> two small circles <WHERE> each end of horizontal line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> One T shape with the vertical line being longer than the horizontal line <WHERE> Center of page\t<WHAT> Two horizontal lines of equal length to the horizontal line of the T shape <WHERE> one third of the way down from the top of the T and two thirds of the way down from the top of the T", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> Draw a vertical line about 1 and 1/2 inches long <WHERE> in the middle of the page\t<WHAT> draw a horizontal line about 1 inch long <WHERE> on top of the vertical line\t<WHAT> draw a horizontal line about 1/2 and inch long <WHERE> 1/2 an inch under the top horizontal line  crossing the vertical line", "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))"], ["# <WHAT> T shape <WHERE> in the middle of the page\t<WHAT> two small circles <WHERE> on the ends of the top part of the t\t<WHAT> line <WHERE> perpendicular to the vertical line of the T, about 3/5 the length of the line", "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))"], ["# <WHAT> A rectangle <WHERE> In the center of the field.\t<WHAT> A tiny circle <WHERE> In the middle of the rectangle\t<WHAT> A line from the radius of the circle <WHERE> Extending through the edge of the circle at the 12:00 o\u2019clock point, an equal distance beyond the edge of the circle as the distance from the radius to the edge."]]], "engine": "davinci-codex", "separator": "\n", "completion": [{"id": "cmpl-4zqMpwV2g44vDJsuibOApmSaKLpPU", "object": "text_completion", "created": 1650644655, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.", "index": 0, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform (transform (transform (transform (transform (transform (transform", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "index": 2, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5", "index": 4, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.", "index": 6, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqN2I8gQugtkXXNE91T3iHm1vQ08", "object": "text_completion", "created": 1650644668, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 0, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform_matrix 3 (/ pi 2) 0 (- 0 2)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "index": 1, "logprobs": null, "finish_reason": "stop"}, {"text": "", "index": 2, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)) (transform_matrix 1 0 0 (* (* 0.5 1) 2))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix", "index": 3, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 6, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform rectangle (transform_matrix (* (* 2 1) 1) 0 (- 0 0) 1)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 7, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 0)) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 0 (- (* 0.5 1) 1))) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqNCyNPGRWHbiiipw9cNJ2ZqhUHo", "object": "text_completion", "created": 1650644678, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0))) (connect_strokes (transform (transform (transform (transform square (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform circle (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (connect_strokes (transform (transform (transform (transform square (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform circle (transform_matrix 1 1 (/ 0.5 2)))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (connect_strokes (transform", "index": 0, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (*", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 1)) (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 1)) (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 1)) (transform (transform (transform circle (transform_matrix 1 0 (- 0 0.5) 1.5)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 1.5)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 1)) (transform (transform (transform", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform circle (transform_matrix (* (* 0.25 0.5 1) 2) 0) 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix (* (* 0.25 0.5 1) 2) 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix", "index": 3, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform line (transform_matrix 1 0 0 (- 0 0.5))) (transform_matrix 1 0 0 (- 0 0.5)))) (transform (transform (transform line (transform_matrix 1 0 0 (- 0 0.5))) (transform_matrix 1 0 0 (- 0 0.5)))) (transform (transform (transform line (transform_matrix 1 0 0", "index": 4, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- (/ 12 2) 1) 1)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform (transform (transform (transform square (transform_matrix 1 0 (- (/ 12 2) 1) 1)) (transform_matrix 1 0 0 1)) (transform_matrix (* 1 (/ 12 2)) 0 0 0)) (transform_matrix 1 0 0 1))) (transform (transform (transform (transform square (transform_matrix 1 0 (- (/ 12 2) 1) 1)) (transform_matrix 1 0 0 1)) (transform_matrix (* 1 (/ 12 2)) 0 0 0)) (transform_matrix 1 0 0 1))) (transform (transform (transform (transform square (transform_matrix 1 0 (- (/ 12 2) 1) 1)) (transform_matrix 1 0 0 1)) (transform_matrix (* 1 (/ 12 2)) 0 0 0)) (transform_matrix 1 0 0 1))) (transform (transform (transform (", "index": 5, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform (transform (transform (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1", "index": 6, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (", "index": 8, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (transform (transform (transform (transform (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix (- 1 1) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 0 0 1 0))) (transform (transform (transform (transform (transform (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix (- 1 1) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_mat", "index": 9, "logprobs": null, "finish_reason": "length"}]}, {"id": "cmpl-4zqNOyE4ufMRUWeS79LoIxPUJjNe1", "object": "text_completion", "created": 1650644690, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform (transform (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "index": 0, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 (rotate -90 (/ pi 2))))) (transform_matrix 1 0 0 0)) (transform (transform circle (transform_matrix 1 0 0 (rotate 90 (/ pi 2)))) (transform_matrix 1 0 0 0)) (transform (transform line (transform_matrix 1 0 0 (- (+ 0.5 1) 0))) (transform_matrix (- (* 1 pi) 0) 0 0 0)))", "index": 1, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform line (transform_matrix 1 0 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 2, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 (* (* 2 1) 0.5))) (transform (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (* (* 2 1) 0.5)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 1) 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (transform (transform (transform (transform (transform (transform circle (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- 0 2)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- 0 1)))) (transform (transform (transform circle (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 6, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "index": 7, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform circle (transform_matrix 1 0 0 1)) (transform_matrix (* 1 6) 0 0 0)) (transform_matrix 1 0 0 1)) (transform (transform line (transform_matrix 1 0 (- 0.25 1) 0)) (transform_matrix 1 0 0 1)))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 0) (* 0.5 1))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform circle (transform_matrix 1 0 (- 0 0) (* 0.5 1))) (transform_matrix 1 0 0 0))))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqNZvrJ6OrBDTMsqVy4l4HTxuRe1", "object": "text_completion", "created": 1650644701, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (rectangle (transform_matrix 1 0 0 (* 0.5 1)) (* 1 1.5) 0) (transform_matrix 1 0 0 0)))", "index": 0, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform_lines (transform (transform (transform (transform line (transform_matrix 3 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- 0.5 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 1, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (*", "index": 5, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)) (transform_matrix 0 1 0 0)) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 6, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (* 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform power (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqNl0q3OSkMsoGCanr5KLRDfj9no", "object": "text_completion", "created": 1650644713, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0)) (transform (transform (transform_matrix 1 0 0 0) (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0))) (transform (transform (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 1)) (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 (- 0 0.5) 1)) (transform_matrix 1 0 0 0)))", "index": 0, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "index": 2, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform_matrix 1 0 0 (- (* (*", "index": 3, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform square (transform_matrix 1 0 0 0))) (transform_matrix 1 0 0 (- (/ 0.5 1) 2))) (transform_matrix 1 0 0 (- (/ 0.5 1) 2)))) (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 0))) (transform_matrix 1 0 0 (- (/ 0.5 1) 2))) (transform_matrix 1 0 0 (- (/ 0.5 1) 2)))) (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0", "index": 4, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.4) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform_matrix 1 0 0 0.5)))", "index": 6, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "index": 7, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5", "index": 8, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform", "index": 9, "logprobs": null, "finish_reason": "length"}]}, {"id": "cmpl-4zqNvn3C6ACBpGOq6ABPFCan5HHCw", "object": "text_completion", "created": 1650644723, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.", "index": 0, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (connect_strokes (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1)", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 1)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (connect_strokes (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0", "index": 3, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (+ 0 0.5) 0)) (transform_matrix 1 0 0 (sqrt 0.75))) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform circle (transform_matrix 1 0 (+ 0 0.5) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (transform circle (transform_matrix 1 0 (- 0 0.5) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))) (connect_strokes (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5", "index": 6, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform (", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(transform (transform (transform square (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))) (connect_strokes (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0))) (transform_matrix (* 1 2) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1))))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqO6e0dl9oq8KlbsIvOPBaEO8vpv", "object": "text_completion", "created": 1650644734, "model": "code-davinci:001", "choices": [{"text": "", "index": 0, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform circle (transform_matrix 1 1 0 0)) (transform_matrix (- 1 0) 0 0 0)) (transform_matrix 1 0 0 (- 0 3))) (transform_matrix 1 0 0 (- 0 0.4))) (transform (transform (transform (transform circle (transform_matrix 1 1 0 0)) (transform_matrix (- 1 0) 0 0 0)) (transform_matrix 1 0 0 (- 0 3))) (transform_matrix 1 0 0 (- 0 0.1))))) (transform (transform (transform (transform circle (transform_matrix 1 1 0 0)) (transform_matrix (- 1 0) 0 0 0)) (transform_matrix 1 0 0 (- 0 3))) (transform_matrix 1 0 0 (- 0 0.1))) (transform (transform (transform (transform circle (transform_matrix 1 1 0 0)) (transform_matrix (- 1 0) 0 0 0)) (transform_matrix 1", "index": 1, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (", "index": 3, "logprobs": null, "finish_reason": "length"}, {"text": "(transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform", "index": 6, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform (transform (transform (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))) (transform (transform (transform (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0", "index": 7, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (transform (transform_matrix 1 0 0 0) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0))))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqOGakWa6BtGwBe59qz2IVznMw4c", "object": "text_completion", "created": 1650644744, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "index": 0, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 3 pi 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "index": 1, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "index": 2, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform rectangle (transform_matrix 0 1 (- 0.5 1) 1)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0.5 1) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0.5 0.5) 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 3, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 (* 0 1) (* 0.5 0.5))) (transform_matrix 1 0 0 (* 0.5 0.5))) (transform_matrix 1 0 0 (* 0.5 0.5)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1))))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform big_square (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform vertical_line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (connect_strokes (connect_strokes (transform (transform horizontal_line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0)) (transform (transform horizontal_line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0))) (transform (transform horizontal_line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 0 0 0))))", "index": 5, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) 0)))) (transform_matrix 1 0 0 (- 0.5 1)))) (transform_matrix 1 0 0 (- (/ 1 2) (sqrt 1)))) (transform_matrix 1 0 0 (- (/ 1 2) (sqrt 1)))) (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) 0)))) (transform_matrix 1 0 0 (- 0.5 1)))) (transform_matrix 1 0 0 (- (/ 1 2) (sqrt 1)))) (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 (- 0 0.5) 0)))) (transform_matrix 1 0 0 (- 0.5 1)))) (transform_matrix 1 0 0 (- (/ 1 2) (sqrt 1))))", "index": 6, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform (transform (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 1)) (transform_matrix 1 0 0 (- 0 0.5))) (transform_matrix 1 0 0 0)) (transform (transform_matrix 1 0 0 (- 0 0.5)) (transform_matrix 1 0 0 0))) (transform (transform_matrix 1 0 0 (- 0 0.5)) (transform_matrix 1 0 0 0))) (transform (transform_matrix 1 0 0 (- 0 0.5)) (transform_matrix 1 0 0 0))) (transform (transform_matrix 1 0 0 (- 0 0.5)) (transform_matrix 1 0 0 0)))) (transform (transform_matrix 1 0 0 (- 0 0.5)) (transform_matrix 1 0 0 0))))", "index": 7, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2))))", "index": 9, "logprobs": null, "finish_reason": "stop"}]}, {"id": "cmpl-4zqOPiodAU1LuS42JeMQb0Wvk8jqy", "object": "text_completion", "created": 1650644753, "model": "code-davinci:001", "choices": [{"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform", "index": 0, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (transform (connect_strokes (transform_matrix 1 0 (- 0 1) 0) (transform_matrix 1 0 (+ 1 0) 0)) (connect_strokes (transform_matrix 1 0 (+ 1 1) 0) (transform_matrix 1 0 (+ 1 -1) 0))))", "index": 1, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_mat", "index": 2, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform", "index": 3, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform (transform circle (transform_matrix 1 0 0.5 1)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))) (transform (transform (transform (transform circle (transform_matrix 1 0 0.5 1)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))) (transform (transform (transform (transform circle (transform_matrix 1 0 0.5 1)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0))))", "index": 4, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform (transform line (transform", "index": 5, "logprobs": null, "finish_reason": "length"}, {"text": "(connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform line (transform_matrix 1 0 (+ (sqrt 0.5) 1) (* 0.5 1)) (transform_matrix 1 0 0 1))))", "index": 6, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (transform (transform (transform rectangle (transform_matrix 0.5 0 0 0)) (transform_matrix 0.5 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform circle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)))", "index": 7, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform rectangle (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.25)) (transform_matrix 1 0 0 0.25)))) (transform (transform (transform line (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 2))) (transform_matrix 1 0 0 0)) (transform (transform (transform circle (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.25)) (transform_matrix 1 0 0 0.5)))) (transform (transform (transform circle (transform_matrix 1 0 0 0.5)) (transform_matrix 1 0 0 0.25)) (transform_matrix 1 0 0 0.75))))", "index": 8, "logprobs": null, "finish_reason": "stop"}, {"text": "(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 0) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 1) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (- (* 1 2) 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform rectangle (transform_matrix 1 0 (- 0", "index": 9, "logprobs": null, "finish_reason": "length"}]}]}