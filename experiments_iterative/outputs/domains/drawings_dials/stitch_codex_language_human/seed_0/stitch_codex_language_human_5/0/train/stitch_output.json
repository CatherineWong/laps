{
  "cmd": "target/release/compress /Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_5/0/train/stitch_frontiers.json --out=/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_5/0/train/stitch_output.json --max-arity=2 --iterations=10 --fmt=dreamcoder",
  "args": {
    "file": "/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_5/0/train/stitch_frontiers.json",
    "out": "/Users/catwong/Desktop/zyzzyva/code/laps/experiments_iterative/outputs/domains/drawings_dials/stitch_codex_language_human/seed_0/stitch_codex_language_human_5/0/train/stitch_output.json",
    "iterations": 10,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "step": {
      "max_arity": 2,
      "threads": 1,
      "inv_candidates": 1,
      "hole_choice": "MinCost",
      "no_top_lambda": false,
      "track": null,
      "verbose_worklist": false,
      "verbose_best": false,
      "break_early_assignment": false,
      "fifo_worklist": false,
      "ascending_worklist": false,
      "lossy_candidates": false,
      "no_cache": false,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_stats": false,
      "no_other_util": false,
      "no_ctx_thread": false,
      "eta_long": false
    }
  },
  "original_cost": 121684,
  "original": [
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (T (T (T l (M 1 0 (- 0 (/ 0.5 2)) 0)) (M 1 0 0 (- (/ pi 2) (/ pi 4)))) (M 1 0 0 (- (/ pi 2) (/ pi 4)))) (T (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(T (T (T c (M 2 0 (- 0 2) 1)) (M 1 0 0 0)) (M 1 0 0 0))",
    "(T (T (T r (M 1 0 0 0)) (M 0.5 0 0 0)) (M 1 0 0 0))",
    "(C (T (T (T r (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T r (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0)))",
    "(T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
    "(T (T c (M 1 0 0 1)) (M 1 0 0 1))",
    "(T c (M 1 0 0 (* 0.5 1)))",
    "(T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))",
    "(T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 0))",
    "(C (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T l (M 1 0.707107 0.707107 0)) (M 1 0 0 0)))",
    "(C (C (C (T (T (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (T (T (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T (T c (M 1 0 (+ 0 (/ 1 2)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T (T l (M 1 0 (+ 0 (* (/ 1 2) 0.5)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T r (M 1 0 (- 0 1.5) 0.5)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T r (M 1 0 (+ 0 1.5) 0.5)) (M 1 0 0 0)) (M 1 0 0 0))) (T (T (T c (M 1 0 (- 0 1) 0.5)) (M 1 0 0 0)) (M 1 0 0 0))) (T (T (T l (M 1 0 (- 0 1) (* 0.25 1))) (M 1 0 0 (- (* 0.25 1) 0))) (M 1 0 0 0)))",
    "(T (T (T (T r (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 0 1)) (M 1 0 0 1))) (T (T (T c (M 1 0 0 1)) (M 1 0 0 1)) (M 1 0 0 1)))",
    "(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
    "(C (C (C (T (T (T r (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T r (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))) (T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0)))"
  ],
  "invs": [
    {
      "body": "(T (T #1 (M 1 0 0 #0)) (M 1 0 0 #0))",
      "dreamcoder": "#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1))))",
      "arity": 2,
      "name": "fn_0",
      "rewritten": [
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (fn_0 (- (/ pi 2) (/ pi 4)) (T l (M 1 0 (- 0 (/ 0.5 2)) 0))) (T (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(fn_0 0 (T c (M 2 0 (- 0 2) 1)))",
        "(T (T (T r (M 1 0 0 0)) (M 0.5 0 0 0)) (M 1 0 0 0))",
        "(C (fn_0 0 (T r (M 1 0 (- 0 0.5) 0))) (fn_0 0 (T r (M 1 0 (- 0 0.5) 0))))",
        "(fn_0 (* 0.5 1) c)",
        "(fn_0 1 c)",
        "(T c (M 1 0 0 (* 0.5 1)))",
        "(fn_0 (* 0.5 1) (T c (M 1 0 0 (* 0.5 1))))",
        "(T (fn_0 (* 0.5 1) c) (M 1 0 0 0))",
        "(C (fn_0 (* 0.5 1) c) (T (T l (M 1 0.707107 0.707107 0)) (M 1 0 0 0)))",
        "(C (C (C (fn_0 (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1)))) (fn_0 (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1))))) (fn_0 (* 0.5 1) (T c (M 1 0 (+ 0 (/ 1 2)) (* 0.5 1))))) (fn_0 (* 0.5 1) (T l (M 1 0 (+ 0 (* (/ 1 2) 0.5)) (* 0.5 1)))))",
        "(C (C (C (fn_0 0 (T r (M 1 0 (- 0 1.5) 0.5))) (fn_0 0 (T r (M 1 0 (+ 0 1.5) 0.5)))) (fn_0 0 (T c (M 1 0 (- 0 1) 0.5)))) (T (T (T l (M 1 0 (- 0 1) (* 0.25 1))) (M 1 0 0 (- (* 0.25 1) 0))) (M 1 0 0 0)))",
        "(fn_0 0 (T (T r (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)))",
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (fn_0 1 r)) (fn_0 1 (T c (M 1 0 0 1))))",
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (fn_0 0 (T r (M 1 0 0 0))) (fn_0 0 (T r (M 1 0 0 0)))) (fn_0 0 (T c (M 1 0 0 0)))) (fn_0 0 (T c (M 1 0 0 0))))"
      ],
      "rewritten_dreamcoder": [
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (- (/ pi 2) (/ pi 4)) (T l (M 1 0 (- 0 (/ 0.5 2)) 0))) (T (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 2 0 (- 0 2) 1)))",
        "(T (T (T r (M 1 0 0 0)) (M 0.5 0 0 0)) (M 1 0 0 0))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (- 0 0.5) 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (- 0 0.5) 0))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c)",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 c)",
        "(T c (M 1 0 0 (* 0.5 1)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T c (M 1 0 0 (* 0.5 1))))",
        "(T (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c) (M 1 0 0 0))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c) (T (T l (M 1 0.707107 0.707107 0)) (M 1 0 0 0)))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T c (M 1 0 (+ 0 (/ 1 2)) (* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T l (M 1 0 (+ 0 (* (/ 1 2) 0.5)) (* 0.5 1)))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (- 0 1.5) 0.5))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (+ 0 1.5) 0.5)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 1) 0.5)))) (T (T (T l (M 1 0 (- 0 1) (* 0.25 1))) (M 1 0 0 (- (* 0.25 1) 0))) (M 1 0 0 0)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T (T r (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 r)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 (T c (M 1 0 0 1))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 0 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 0 0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 1 0 0 0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 1 0 0 0))))"
      ],
      "utility": 38276,
      "expected_cost": 81890,
      "final_cost": 89162,
      "multiplier": 1.3647518000942105,
      "multiplier_wrt_orig": 1.3647518000942105,
      "num_uses": 37,
      "uses": [
        {
          "fn_0 0 (T (T r (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0))": "(T (T (T (T r (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 (* 0.5 1) (T c (M 1 0 (+ 0 (/ 1 2)) (* 0.5 1)))": "(T (T (T c (M 1 0 (+ 0 (/ 1 2)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_0 0 (T c (M 1 0 (- 0 1) 0.5))": "(T (T (T c (M 1 0 (- 0 1) 0.5)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 (* 0.5 1) (T c (M 1 0 0 (* 0.5 1)))": "(T (T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_0 0 (T c (M 1 0 0 0))": "(T (T (T c (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 1 (T c (M 1 0 0 1))": "(T (T (T c (M 1 0 0 1)) (M 1 0 0 1)) (M 1 0 0 1))"
        },
        {
          "fn_0 0 (T c (M 2 0 (- 0 2) 1))": "(T (T (T c (M 2 0 (- 0 2) 1)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 (* 0.5 1) (T l (M 1 0 (+ 0 (* (/ 1 2) 0.5)) (* 0.5 1)))": "(T (T (T l (M 1 0 (+ 0 (* (/ 1 2) 0.5)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_0 (- (/ pi 2) (/ pi 4)) (T l (M 1 0 (- 0 (/ 0.5 2)) 0))": "(T (T (T l (M 1 0 (- 0 (/ 0.5 2)) 0)) (M 1 0 0 (- (/ pi 2) (/ pi 4)))) (M 1 0 0 (- (/ pi 2) (/ pi 4))))"
        },
        {
          "fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))": "(T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 0 (T r (M 1 0 (+ 0 1.5) 0.5))": "(T (T (T r (M 1 0 (+ 0 1.5) 0.5)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1)))": "(T (T (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_0 0 (T r (M 1 0 (- 0 0.5) 0))": "(T (T (T r (M 1 0 (- 0 0.5) 0)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 0 (T r (M 1 0 (- 0 1.5) 0.5))": "(T (T (T r (M 1 0 (- 0 1.5) 0.5)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 0 (T r (M 1 0 0 0))": "(T (T (T r (M 1 0 0 0)) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 0 (T r (M 3 (/ pi 2) 0 (- 0 2)))": "(T (T (T r (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 (* 0.5 1) c": "(T (T c (M 1 0 0 (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_0 0 c": "(T (T c (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 1 c": "(T (T c (M 1 0 0 1)) (M 1 0 0 1))"
        },
        {
          "fn_0 0 r": "(T (T r (M 1 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_0 1 r": "(T (T r (M 1 0 0 1)) (M 1 0 0 1))"
        }
      ]
    },
    {
      "body": "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M #1 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T #0 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T #0 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
      "dreamcoder": "#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))))",
      "arity": 2,
      "name": "fn_1",
      "rewritten": [
        "(fn_1 c (- (* 1 2) 0))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
        "(fn_1 c (* 1 2))",
        "(fn_1 r (* 1 2))",
        "(C (fn_0 (- (/ pi 2) (/ pi 4)) (T l (M 1 0 (- 0 (/ 0.5 2)) 0))) (T (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(fn_0 0 (T c (M 2 0 (- 0 2) 1)))",
        "(T (T (T r (M 1 0 0 0)) (M 0.5 0 0 0)) (M 1 0 0 0))",
        "(C (fn_0 0 (T r (M 1 0 (- 0 0.5) 0))) (fn_0 0 (T r (M 1 0 (- 0 0.5) 0))))",
        "(fn_0 (* 0.5 1) c)",
        "(fn_0 1 c)",
        "(T c (M 1 0 0 (* 0.5 1)))",
        "(fn_0 (* 0.5 1) (T c (M 1 0 0 (* 0.5 1))))",
        "(T (fn_0 (* 0.5 1) c) (M 1 0 0 0))",
        "(C (fn_0 (* 0.5 1) c) (T (T l (M 1 0.707107 0.707107 0)) (M 1 0 0 0)))",
        "(C (C (C (fn_0 (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1)))) (fn_0 (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1))))) (fn_0 (* 0.5 1) (T c (M 1 0 (+ 0 (/ 1 2)) (* 0.5 1))))) (fn_0 (* 0.5 1) (T l (M 1 0 (+ 0 (* (/ 1 2) 0.5)) (* 0.5 1)))))",
        "(C (C (C (fn_0 0 (T r (M 1 0 (- 0 1.5) 0.5))) (fn_0 0 (T r (M 1 0 (+ 0 1.5) 0.5)))) (fn_0 0 (T c (M 1 0 (- 0 1) 0.5)))) (T (T (T l (M 1 0 (- 0 1) (* 0.25 1))) (M 1 0 0 (- (* 0.25 1) 0))) (M 1 0 0 0)))",
        "(fn_0 0 (T (T r (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)))",
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (fn_0 1 r)) (fn_0 1 (T c (M 1 0 0 1))))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (C (C (fn_0 0 (T r (M 1 0 0 0))) (fn_0 0 (T r (M 1 0 0 0)))) (fn_0 0 (T c (M 1 0 0 0)))) (fn_0 0 (T c (M 1 0 0 0))))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (- (* 1 2) 0))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (* 1 2))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (- (/ pi 2) (/ pi 4)) (T l (M 1 0 (- 0 (/ 0.5 2)) 0))) (T (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 2 0 (- 0 2) 1)))",
        "(T (T (T r (M 1 0 0 0)) (M 0.5 0 0 0)) (M 1 0 0 0))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (- 0 0.5) 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (- 0 0.5) 0))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c)",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 c)",
        "(T c (M 1 0 0 (* 0.5 1)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T c (M 1 0 0 (* 0.5 1))))",
        "(T (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c) (M 1 0 0 0))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c) (T (T l (M 1 0.707107 0.707107 0)) (M 1 0 0 0)))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T c (M 1 0 (+ 0 (/ 1 2)) (* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T l (M 1 0 (+ 0 (* (/ 1 2) 0.5)) (* 0.5 1)))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (- 0 1.5) 0.5))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (+ 0 1.5) 0.5)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 1) 0.5)))) (T (T (T l (M 1 0 (- 0 1) (* 0.25 1))) (M 1 0 0 (- (* 0.25 1) 0))) (M 1 0 0 0)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T (T r (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 r)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 (T c (M 1 0 0 1))))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 0 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 0 0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 1 0 0 0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 1 0 0 0))))"
      ],
      "utility": 28277,
      "expected_cost": 48762,
      "final_cost": 48762,
      "multiplier": 1.8285140068085806,
      "multiplier_wrt_orig": 2.4954677822894875,
      "num_uses": 5,
      "uses": [
        {
          "fn_1 c (* 1 2)": "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 r (* 1 2)": "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 c (- (* 1 2) 0)": "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        },
        {
          "fn_1 r (- (* 1 2) 0)": "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))"
        }
      ]
    },
    {
      "body": "(T #0 (M 1 0 0 #1))",
      "dreamcoder": "#(lambda (lambda (T $1 (M 1 0 0 $0))))",
      "arity": 2,
      "name": "fn_2",
      "rewritten": [
        "(fn_1 c (- (* 1 2) 0))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (- (* (* 0.5 1) 2) 0)))",
        "(fn_1 c (* 1 2))",
        "(fn_1 r (* 1 2))",
        "(C (fn_0 (- (/ pi 2) (/ pi 4)) (T l (M 1 0 (- 0 (/ 0.5 2)) 0))) (fn_2 (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (* 0.5 1)))",
        "(fn_0 0 (T c (M 2 0 (- 0 2) 1)))",
        "(fn_2 (T (fn_2 r 0) (M 0.5 0 0 0)) 0)",
        "(C (fn_0 0 (T r (M 1 0 (- 0 0.5) 0))) (fn_0 0 (T r (M 1 0 (- 0 0.5) 0))))",
        "(fn_0 (* 0.5 1) c)",
        "(fn_0 1 c)",
        "(fn_2 c (* 0.5 1))",
        "(fn_0 (* 0.5 1) (fn_2 c (* 0.5 1)))",
        "(fn_2 (fn_0 (* 0.5 1) c) 0)",
        "(C (fn_0 (* 0.5 1) c) (fn_2 (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (C (fn_0 (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1)))) (fn_0 (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1))))) (fn_0 (* 0.5 1) (T c (M 1 0 (+ 0 (/ 1 2)) (* 0.5 1))))) (fn_0 (* 0.5 1) (T l (M 1 0 (+ 0 (* (/ 1 2) 0.5)) (* 0.5 1)))))",
        "(C (C (C (fn_0 0 (T r (M 1 0 (- 0 1.5) 0.5))) (fn_0 0 (T r (M 1 0 (+ 0 1.5) 0.5)))) (fn_0 0 (T c (M 1 0 (- 0 1) 0.5)))) (fn_2 (fn_2 (T l (M 1 0 (- 0 1) (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(fn_0 0 (fn_2 (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (- (* (* 0.5 1) 2) 0))) (fn_0 1 r)) (fn_0 1 (fn_2 c 1)))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (C (C (fn_0 0 (fn_2 r 0)) (fn_0 0 (fn_2 r 0))) (fn_0 0 (fn_2 c 0))) (fn_0 0 (fn_2 c 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (- (* 1 2) 0))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (- (* (* 0.5 1) 2) 0)))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (* 1 2))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (- (/ pi 2) (/ pi 4)) (T l (M 1 0 (- 0 (/ 0.5 2)) 0))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (* 0.5 1)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 2 0 (- 0 2) 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0) (M 0.5 0 0 0)) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (- 0 0.5) 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (- 0 0.5) 0))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c)",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 c)",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) c (* 0.5 1))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c (* 0.5 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T r (M 1 0 (- 0 (/ 1 2)) (* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T c (M 1 0 (+ 0 (/ 1 2)) (* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T l (M 1 0 (+ 0 (* (/ 1 2) 0.5)) (* 0.5 1)))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (- 0 1.5) 0.5))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (M 1 0 (+ 0 1.5) 0.5)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 1 0 (- 0 1) 0.5)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (M 1 0 (- 0 1) (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (- (* (* 0.5 1) 2) 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 r)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 1)))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0)))"
      ],
      "utility": 6109,
      "expected_cost": 41894,
      "final_cost": 41894,
      "multiplier": 1.1639375566906955,
      "multiplier_wrt_orig": 2.904568673318375,
      "num_uses": 17,
      "uses": [
        {
          "fn_2 (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (- (* (* 0.5 1) 2) 0)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_2 (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (- (* (* 0.5 1) 2) 0)": "(T (T (T l (M 1 0 (- 0 0.5) 0)) (M (- (* 1 2) 0) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))"
        },
        {
          "fn_2 (T (T l (M 1 0 (- 0 1) (* 0.25 1))) (M 1 0 0 (- (* 0.25 1) 0))) 0": "(T (T (T l (M 1 0 (- 0 1) (* 0.25 1))) (M 1 0 0 (- (* 0.25 1) 0))) (M 1 0 0 0))"
        },
        {
          "fn_2 (T (T r (M 1 0 0 0)) (M 0.5 0 0 0)) 0": "(T (T (T r (M 1 0 0 0)) (M 0.5 0 0 0)) (M 1 0 0 0))"
        },
        {
          "fn_2 (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (* 0.5 1)": "(T (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 (T l (M 1 0 (- 0 1) (* 0.25 1))) (- (* 0.25 1) 0)": "(T (T l (M 1 0 (- 0 1) (* 0.25 1))) (M 1 0 0 (- (* 0.25 1) 0)))"
        },
        {
          "fn_2 (T l (M 1 0.707107 0.707107 0)) 0": "(T (T l (M 1 0.707107 0.707107 0)) (M 1 0 0 0))"
        },
        {
          "fn_2 (T r (M 3 (/ pi 2) 0 (- 0 2))) 0": "(T (T r (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0))"
        },
        {
          "fn_2 (fn_0 (* 0.5 1) c) 0": "(T (fn_0 (* 0.5 1) c) (M 1 0 0 0))"
        },
        {
          "fn_2 c (* 0.5 1)": "(T c (M 1 0 0 (* 0.5 1)))"
        },
        {
          "fn_2 c 0": "(T c (M 1 0 0 0))"
        },
        {
          "fn_2 c 1": "(T c (M 1 0 0 1))"
        },
        {
          "fn_2 r 0": "(T r (M 1 0 0 0))"
        }
      ]
    },
    {
      "body": "(M 1 0 (#0 0 #1))",
      "dreamcoder": "#(lambda (lambda (M 1 0 ($1 0 $0))))",
      "arity": 2,
      "name": "fn_3",
      "rewritten": [
        "(fn_1 c (- (* 1 2) 0))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (fn_3 - 0.5 0)) (M (* 1 2) 0 0 0)) (- (* (* 0.5 1) 2) 0)))",
        "(fn_1 c (* 1 2))",
        "(fn_1 r (* 1 2))",
        "(C (fn_0 (- (/ pi 2) (/ pi 4)) (T l (fn_3 - (/ 0.5 2) 0))) (fn_2 (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (* 0.5 1)))",
        "(fn_0 0 (T c (M 2 0 (- 0 2) 1)))",
        "(fn_2 (T (fn_2 r 0) (M 0.5 0 0 0)) 0)",
        "(C (fn_0 0 (T r (fn_3 - 0.5 0))) (fn_0 0 (T r (fn_3 - 0.5 0))))",
        "(fn_0 (* 0.5 1) c)",
        "(fn_0 1 c)",
        "(fn_2 c (* 0.5 1))",
        "(fn_0 (* 0.5 1) (fn_2 c (* 0.5 1)))",
        "(fn_2 (fn_0 (* 0.5 1) c) 0)",
        "(C (fn_0 (* 0.5 1) c) (fn_2 (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (C (fn_0 (* 0.5 1) (T r (fn_3 - (/ 1 2) (* 0.5 1)))) (fn_0 (* 0.5 1) (T r (fn_3 - (/ 1 2) (* 0.5 1))))) (fn_0 (* 0.5 1) (T c (fn_3 + (/ 1 2) (* 0.5 1))))) (fn_0 (* 0.5 1) (T l (fn_3 + (* (/ 1 2) 0.5) (* 0.5 1)))))",
        "(C (C (C (fn_0 0 (T r (fn_3 - 1.5 0.5))) (fn_0 0 (T r (fn_3 + 1.5 0.5)))) (fn_0 0 (T c (fn_3 - 1 0.5)))) (fn_2 (fn_2 (T l (fn_3 - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(fn_0 0 (fn_2 (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (fn_3 - 0.5 0)) (M (- (* 1 2) 0) 0 0 0)) (- (* (* 0.5 1) 2) 0))) (fn_0 1 r)) (fn_0 1 (fn_2 c 1)))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (C (C (fn_0 0 (fn_2 r 0)) (fn_0 0 (fn_2 r 0))) (fn_0 0 (fn_2 c 0))) (fn_0 0 (fn_2 c 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (- (* 1 2) 0))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M (* 1 2) 0 0 0)) (- (* (* 0.5 1) 2) 0)))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (* 1 2))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (- (/ pi 2) (/ pi 4)) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 0.5 2) 0))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) (* 0.5 1))) (* 0.5 1)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 2 0 (- 0 2) 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0) (M 0.5 0 0 0)) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c)",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 c)",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) c (* 0.5 1))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c (* 0.5 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) c) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 1 2) (* 0.5 1)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 1 2) (* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (/ 1 2) (* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (* 0.5 1) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (* (/ 1 2) 0.5) (* 0.5 1)))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1.5 0.5))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) + 1.5 0.5)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 0.5)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M (- (* 1 2) 0) 0 0 0)) (- (* (* 0.5 1) 2) 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 r)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 1)))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0)))"
      ],
      "utility": 3332,
      "expected_cost": 37955,
      "final_cost": 37955,
      "multiplier": 1.1037807930443946,
      "multiplier_wrt_orig": 3.2060071136872614,
      "num_uses": 13,
      "uses": [
        {
          "fn_3 + (* (/ 1 2) 0.5)": "(M 1 0 (+ 0 (* (/ 1 2) 0.5)))"
        },
        {
          "fn_3 + (/ 1 2)": "(M 1 0 (+ 0 (/ 1 2)))"
        },
        {
          "fn_3 + 1.5": "(M 1 0 (+ 0 1.5))"
        },
        {
          "fn_3 - (/ 0.5 2)": "(M 1 0 (- 0 (/ 0.5 2)))"
        },
        {
          "fn_3 - (/ 1 2)": "(M 1 0 (- 0 (/ 1 2)))"
        },
        {
          "fn_3 - 0.5": "(M 1 0 (- 0 0.5))"
        },
        {
          "fn_3 - 1": "(M 1 0 (- 0 1))"
        },
        {
          "fn_3 - 1.5": "(M 1 0 (- 0 1.5))"
        }
      ]
    },
    {
      "body": "(* 0.5 1)",
      "dreamcoder": "#(* 0.5 1)",
      "arity": 0,
      "name": "fn_4",
      "rewritten": [
        "(fn_1 c (- (* 1 2) 0))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (fn_3 - 0.5 0)) (M (* 1 2) 0 0 0)) (- (* fn_4 2) 0)))",
        "(fn_1 c (* 1 2))",
        "(fn_1 r (* 1 2))",
        "(C (fn_0 (- (/ pi 2) (/ pi 4)) (T l (fn_3 - (/ 0.5 2) 0))) (fn_2 (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) fn_4)) fn_4))",
        "(fn_0 0 (T c (M 2 0 (- 0 2) 1)))",
        "(fn_2 (T (fn_2 r 0) (M 0.5 0 0 0)) 0)",
        "(C (fn_0 0 (T r (fn_3 - 0.5 0))) (fn_0 0 (T r (fn_3 - 0.5 0))))",
        "(fn_0 fn_4 c)",
        "(fn_0 1 c)",
        "(fn_2 c fn_4)",
        "(fn_0 fn_4 (fn_2 c fn_4))",
        "(fn_2 (fn_0 fn_4 c) 0)",
        "(C (fn_0 fn_4 c) (fn_2 (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (C (fn_0 fn_4 (T r (fn_3 - (/ 1 2) fn_4))) (fn_0 fn_4 (T r (fn_3 - (/ 1 2) fn_4)))) (fn_0 fn_4 (T c (fn_3 + (/ 1 2) fn_4)))) (fn_0 fn_4 (T l (fn_3 + (* (/ 1 2) 0.5) fn_4))))",
        "(C (C (C (fn_0 0 (T r (fn_3 - 1.5 0.5))) (fn_0 0 (T r (fn_3 + 1.5 0.5)))) (fn_0 0 (T c (fn_3 - 1 0.5)))) (fn_2 (fn_2 (T l (fn_3 - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(fn_0 0 (fn_2 (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (fn_3 - 0.5 0)) (M (- (* 1 2) 0) 0 0 0)) (- (* fn_4 2) 0))) (fn_0 1 r)) (fn_0 1 (fn_2 c 1)))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (C (C (fn_0 0 (fn_2 r 0)) (fn_0 0 (fn_2 r 0))) (fn_0 0 (fn_2 c 0))) (fn_0 0 (fn_2 c 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (- (* 1 2) 0))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M (* 1 2) 0 0 0)) (- (* #(* 0.5 1) 2) 0)))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (* 1 2))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (- (/ pi 2) (/ pi 4)) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 0.5 2) 0))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) #(* 0.5 1))) #(* 0.5 1)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 2 0 (- 0 2) 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0) (M 0.5 0 0 0)) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c)",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 c)",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) c #(* 0.5 1))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c #(* 0.5 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 1 2) #(* 0.5 1)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (* (/ 1 2) 0.5) #(* 0.5 1)))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1.5 0.5))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) + 1.5 0.5)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 0.5)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M (- (* 1 2) 0) 0 0 0)) (- (* #(* 0.5 1) 2) 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 r)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 1)))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0)))"
      ],
      "utility": 3183,
      "expected_cost": 34319,
      "final_cost": 34319,
      "multiplier": 1.1059471429820216,
      "multiplier_wrt_orig": 3.545674407762464,
      "num_uses": 18,
      "uses": [
        {
          "fn_4 ": "(* 0.5 1)"
        }
      ]
    },
    {
      "body": "(C #0 #0)",
      "dreamcoder": "#(lambda (C $0 $0))",
      "arity": 1,
      "name": "fn_5",
      "rewritten": [
        "(fn_1 c (- (* 1 2) 0))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (fn_3 - 0.5 0)) (M (* 1 2) 0 0 0)) (- (* fn_4 2) 0)))",
        "(fn_1 c (* 1 2))",
        "(fn_1 r (* 1 2))",
        "(C (fn_0 (- (/ pi 2) (/ pi 4)) (T l (fn_3 - (/ 0.5 2) 0))) (fn_2 (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) fn_4)) fn_4))",
        "(fn_0 0 (T c (M 2 0 (- 0 2) 1)))",
        "(fn_2 (T (fn_2 r 0) (M 0.5 0 0 0)) 0)",
        "(fn_5 (fn_0 0 (T r (fn_3 - 0.5 0))))",
        "(fn_0 fn_4 c)",
        "(fn_0 1 c)",
        "(fn_2 c fn_4)",
        "(fn_0 fn_4 (fn_2 c fn_4))",
        "(fn_2 (fn_0 fn_4 c) 0)",
        "(C (fn_0 fn_4 c) (fn_2 (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (fn_5 (fn_0 fn_4 (T r (fn_3 - (/ 1 2) fn_4)))) (fn_0 fn_4 (T c (fn_3 + (/ 1 2) fn_4)))) (fn_0 fn_4 (T l (fn_3 + (* (/ 1 2) 0.5) fn_4))))",
        "(C (C (C (fn_0 0 (T r (fn_3 - 1.5 0.5))) (fn_0 0 (T r (fn_3 + 1.5 0.5)))) (fn_0 0 (T c (fn_3 - 1 0.5)))) (fn_2 (fn_2 (T l (fn_3 - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(fn_0 0 (fn_2 (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (fn_3 - 0.5 0)) (M (- (* 1 2) 0) 0 0 0)) (- (* fn_4 2) 0))) (fn_0 1 r)) (fn_0 1 (fn_2 c 1)))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (C (fn_5 (fn_0 0 (fn_2 r 0))) (fn_0 0 (fn_2 c 0))) (fn_0 0 (fn_2 c 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (- (* 1 2) 0))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M (* 1 2) 0 0 0)) (- (* #(* 0.5 1) 2) 0)))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (* 1 2))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (- (/ pi 2) (/ pi 4)) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 0.5 2) 0))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) #(* 0.5 1))) #(* 0.5 1)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 2 0 (- 0 2) 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0) (M 0.5 0 0 0)) 0)",
        "(#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c)",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 c)",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) c #(* 0.5 1))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c #(* 0.5 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (* (/ 1 2) 0.5) #(* 0.5 1)))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1.5 0.5))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) + 1.5 0.5)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 0.5)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M (- (* 1 2) 0) 0 0 0)) (- (* #(* 0.5 1) 2) 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 r)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 1)))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (C (#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0)))"
      ],
      "utility": 2170,
      "expected_cost": 31996,
      "final_cost": 31996,
      "multiplier": 1.0726028253531692,
      "multiplier_wrt_orig": 3.8031003875484437,
      "num_uses": 3,
      "uses": [
        {
          "fn_5 (fn_0 0 (T r (fn_3 - 0.5 0)))": "(C (fn_0 0 (T r (fn_3 - 0.5 0))) (fn_0 0 (T r (fn_3 - 0.5 0))))"
        },
        {
          "fn_5 (fn_0 0 (fn_2 r 0))": "(C (fn_0 0 (fn_2 r 0)) (fn_0 0 (fn_2 r 0)))"
        },
        {
          "fn_5 (fn_0 fn_4 (T r (fn_3 - (/ 1 2) fn_4)))": "(C (fn_0 fn_4 (T r (fn_3 - (/ 1 2) fn_4))) (fn_0 fn_4 (T r (fn_3 - (/ 1 2) fn_4))))"
        }
      ]
    },
    {
      "body": "(C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (fn_3 - 0.5 0)) (M #0 0 0 0)) (- (* fn_4 2) 0)))",
      "dreamcoder": "#(lambda (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M $0 0 0 0)) (- (* #(* 0.5 1) 2) 0))))",
      "arity": 1,
      "name": "fn_6",
      "rewritten": [
        "(fn_1 c (- (* 1 2) 0))",
        "(fn_1 r (- (* 1 2) 0))",
        "(fn_6 (* 1 2))",
        "(fn_1 c (* 1 2))",
        "(fn_1 r (* 1 2))",
        "(C (fn_0 (- (/ pi 2) (/ pi 4)) (T l (fn_3 - (/ 0.5 2) 0))) (fn_2 (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) fn_4)) fn_4))",
        "(fn_0 0 (T c (M 2 0 (- 0 2) 1)))",
        "(fn_2 (T (fn_2 r 0) (M 0.5 0 0 0)) 0)",
        "(fn_5 (fn_0 0 (T r (fn_3 - 0.5 0))))",
        "(fn_0 fn_4 c)",
        "(fn_0 1 c)",
        "(fn_2 c fn_4)",
        "(fn_0 fn_4 (fn_2 c fn_4))",
        "(fn_2 (fn_0 fn_4 c) 0)",
        "(C (fn_0 fn_4 c) (fn_2 (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (fn_5 (fn_0 fn_4 (T r (fn_3 - (/ 1 2) fn_4)))) (fn_0 fn_4 (T c (fn_3 + (/ 1 2) fn_4)))) (fn_0 fn_4 (T l (fn_3 + (* (/ 1 2) 0.5) fn_4))))",
        "(C (C (C (fn_0 0 (T r (fn_3 - 1.5 0.5))) (fn_0 0 (T r (fn_3 + 1.5 0.5)))) (fn_0 0 (T c (fn_3 - 1 0.5)))) (fn_2 (fn_2 (T l (fn_3 - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(fn_0 0 (fn_2 (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (fn_6 (- (* 1 2) 0)) (fn_0 1 r)) (fn_0 1 (fn_2 c 1)))",
        "(fn_1 r (- (* 1 2) 0))",
        "(C (C (fn_5 (fn_0 0 (fn_2 r 0))) (fn_0 0 (fn_2 c 0))) (fn_0 0 (fn_2 c 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (- (* 1 2) 0))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(#(lambda (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M $0 0 0 0)) (- (* #(* 0.5 1) 2) 0)))) (* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (* 1 2))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (- (/ pi 2) (/ pi 4)) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 0.5 2) 0))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) #(* 0.5 1))) #(* 0.5 1)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 2 0 (- 0 2) 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0) (M 0.5 0 0 0)) 0)",
        "(#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c)",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 c)",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) c #(* 0.5 1))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c #(* 0.5 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (* (/ 1 2) 0.5) #(* 0.5 1)))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1.5 0.5))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) + 1.5 0.5)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 0.5)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (#(lambda (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M $0 0 0 0)) (- (* #(* 0.5 1) 2) 0)))) (- (* 1 2) 0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 r)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 1)))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- (* 1 2) 0))",
        "(C (C (#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0)))"
      ],
      "utility": 1364,
      "expected_cost": 25936,
      "final_cost": 25936,
      "multiplier": 1.2336520666255397,
      "multiplier_wrt_orig": 4.691702652683529,
      "num_uses": 2,
      "uses": [
        {
          "fn_6 (* 1 2)": "(C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (fn_3 - 0.5 0)) (M (* 1 2) 0 0 0)) (- (* fn_4 2) 0)))"
        },
        {
          "fn_6 (- (* 1 2) 0)": "(C (fn_0 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (fn_2 (T (T l (fn_3 - 0.5 0)) (M (- (* 1 2) 0) 0 0 0)) (- (* fn_4 2) 0)))"
        }
      ]
    },
    {
      "body": "(* 1 2)",
      "dreamcoder": "#(* 1 2)",
      "arity": 0,
      "name": "fn_7",
      "rewritten": [
        "(fn_1 c (- fn_7 0))",
        "(fn_1 r (- fn_7 0))",
        "(fn_6 fn_7)",
        "(fn_1 c fn_7)",
        "(fn_1 r fn_7)",
        "(C (fn_0 (- (/ pi 2) (/ pi 4)) (T l (fn_3 - (/ 0.5 2) 0))) (fn_2 (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) fn_4)) fn_4))",
        "(fn_0 0 (T c (M 2 0 (- 0 2) 1)))",
        "(fn_2 (T (fn_2 r 0) (M 0.5 0 0 0)) 0)",
        "(fn_5 (fn_0 0 (T r (fn_3 - 0.5 0))))",
        "(fn_0 fn_4 c)",
        "(fn_0 1 c)",
        "(fn_2 c fn_4)",
        "(fn_0 fn_4 (fn_2 c fn_4))",
        "(fn_2 (fn_0 fn_4 c) 0)",
        "(C (fn_0 fn_4 c) (fn_2 (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (fn_5 (fn_0 fn_4 (T r (fn_3 - (/ 1 2) fn_4)))) (fn_0 fn_4 (T c (fn_3 + (/ 1 2) fn_4)))) (fn_0 fn_4 (T l (fn_3 + (* (/ 1 2) 0.5) fn_4))))",
        "(C (C (C (fn_0 0 (T r (fn_3 - 1.5 0.5))) (fn_0 0 (T r (fn_3 + 1.5 0.5)))) (fn_0 0 (T c (fn_3 - 1 0.5)))) (fn_2 (fn_2 (T l (fn_3 - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(fn_0 0 (fn_2 (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (fn_6 (- fn_7 0)) (fn_0 1 r)) (fn_0 1 (fn_2 c 1)))",
        "(fn_1 r (- fn_7 0))",
        "(C (C (fn_5 (fn_0 0 (fn_2 r 0))) (fn_0 0 (fn_2 c 0))) (fn_0 0 (fn_2 c 0)))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (- #(* 1 2) 0))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- #(* 1 2) 0))",
        "(#(lambda (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M $0 0 0 0)) (- (* #(* 0.5 1) 2) 0)))) #(* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c #(* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r #(* 1 2))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (- (/ pi 2) (/ pi 4)) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 0.5 2) 0))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) #(* 0.5 1))) #(* 0.5 1)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 2 0 (- 0 2) 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0) (M 0.5 0 0 0)) 0)",
        "(#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c)",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 c)",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) c #(* 0.5 1))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c #(* 0.5 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (* (/ 1 2) 0.5) #(* 0.5 1)))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1.5 0.5))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) + 1.5 0.5)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 0.5)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))",
        "(C (C (#(lambda (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M $0 0 0 0)) (- (* #(* 0.5 1) 2) 0)))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 r)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 1)))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- #(* 1 2) 0))",
        "(C (C (#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) c 0)))"
      ],
      "utility": 961,
      "expected_cost": 24522,
      "final_cost": 24522,
      "multiplier": 1.057662507136449,
      "multiplier_wrt_orig": 4.962237990375989,
      "num_uses": 7,
      "uses": [
        {
          "fn_7 ": "(* 1 2)"
        }
      ]
    },
    {
      "body": "(fn_0 #0 (fn_2 #1 #0))",
      "dreamcoder": "#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1))))",
      "arity": 2,
      "name": "fn_8",
      "rewritten": [
        "(fn_1 c (- fn_7 0))",
        "(fn_1 r (- fn_7 0))",
        "(fn_6 fn_7)",
        "(fn_1 c fn_7)",
        "(fn_1 r fn_7)",
        "(C (fn_0 (- (/ pi 2) (/ pi 4)) (T l (fn_3 - (/ 0.5 2) 0))) (fn_2 (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) fn_4)) fn_4))",
        "(fn_0 0 (T c (M 2 0 (- 0 2) 1)))",
        "(fn_2 (T (fn_2 r 0) (M 0.5 0 0 0)) 0)",
        "(fn_5 (fn_0 0 (T r (fn_3 - 0.5 0))))",
        "(fn_0 fn_4 c)",
        "(fn_0 1 c)",
        "(fn_2 c fn_4)",
        "(fn_8 fn_4 c)",
        "(fn_2 (fn_0 fn_4 c) 0)",
        "(C (fn_0 fn_4 c) (fn_2 (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (fn_5 (fn_0 fn_4 (T r (fn_3 - (/ 1 2) fn_4)))) (fn_0 fn_4 (T c (fn_3 + (/ 1 2) fn_4)))) (fn_0 fn_4 (T l (fn_3 + (* (/ 1 2) 0.5) fn_4))))",
        "(C (C (C (fn_0 0 (T r (fn_3 - 1.5 0.5))) (fn_0 0 (T r (fn_3 + 1.5 0.5)))) (fn_0 0 (T c (fn_3 - 1 0.5)))) (fn_2 (fn_2 (T l (fn_3 - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(fn_8 0 (T r (M 3 (/ pi 2) 0 (- 0 2))))",
        "(C (C (fn_6 (- fn_7 0)) (fn_0 1 r)) (fn_8 1 c))",
        "(fn_1 r (- fn_7 0))",
        "(C (C (fn_5 (fn_8 0 r)) (fn_8 0 c)) (fn_8 0 c))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (- #(* 1 2) 0))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- #(* 1 2) 0))",
        "(#(lambda (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M $0 0 0 0)) (- (* #(* 0.5 1) 2) 0)))) #(* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c #(* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r #(* 1 2))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (- (/ pi 2) (/ pi 4)) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 0.5 2) 0))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) #(* 0.5 1))) #(* 0.5 1)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (M 2 0 (- 0 2) 1)))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0) (M 0.5 0 0 0)) 0)",
        "(#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0))))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c)",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 c)",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) c #(* 0.5 1))",
        "(#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) #(* 0.5 1) c)",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (* (/ 1 2) 0.5) #(* 0.5 1)))))",
        "(C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1.5 0.5))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) + 1.5 0.5)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 0.5)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) 0 (T r (M 3 (/ pi 2) 0 (- 0 2))))",
        "(C (C (#(lambda (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M $0 0 0 0)) (- (* #(* 0.5 1) 2) 0)))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 r)) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) 1 c))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- #(* 1 2) 0))",
        "(C (C (#(lambda (C $0 $0)) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) 0 r)) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) 0 c)) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) 0 c))"
      ],
      "utility": 906,
      "expected_cost": 23310,
      "final_cost": 23310,
      "multiplier": 1.051994851994852,
      "multiplier_wrt_orig": 5.220248820248821,
      "num_uses": 6,
      "uses": [
        {
          "fn_8 0 (T r (M 3 (/ pi 2) 0 (- 0 2)))": "(fn_0 0 (fn_2 (T r (M 3 (/ pi 2) 0 (- 0 2))) 0))"
        },
        {
          "fn_8 0 c": "(fn_0 0 (fn_2 c 0))"
        },
        {
          "fn_8 0 r": "(fn_0 0 (fn_2 r 0))"
        },
        {
          "fn_8 1 c": "(fn_0 1 (fn_2 c 1))"
        },
        {
          "fn_8 fn_4 c": "(fn_0 fn_4 (fn_2 c fn_4))"
        }
      ]
    },
    {
      "body": "(fn_0 0 (T #0 #1))",
      "dreamcoder": "#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T $1 $0))))",
      "arity": 2,
      "name": "fn_9",
      "rewritten": [
        "(fn_1 c (- fn_7 0))",
        "(fn_1 r (- fn_7 0))",
        "(fn_6 fn_7)",
        "(fn_1 c fn_7)",
        "(fn_1 r fn_7)",
        "(C (fn_0 (- (/ pi 2) (/ pi 4)) (T l (fn_3 - (/ 0.5 2) 0))) (fn_2 (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) fn_4)) fn_4))",
        "(fn_9 c (M 2 0 (- 0 2) 1))",
        "(fn_2 (T (fn_2 r 0) (M 0.5 0 0 0)) 0)",
        "(fn_5 (fn_9 r (fn_3 - 0.5 0)))",
        "(fn_0 fn_4 c)",
        "(fn_0 1 c)",
        "(fn_2 c fn_4)",
        "(fn_8 fn_4 c)",
        "(fn_2 (fn_0 fn_4 c) 0)",
        "(C (fn_0 fn_4 c) (fn_2 (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (fn_5 (fn_0 fn_4 (T r (fn_3 - (/ 1 2) fn_4)))) (fn_0 fn_4 (T c (fn_3 + (/ 1 2) fn_4)))) (fn_0 fn_4 (T l (fn_3 + (* (/ 1 2) 0.5) fn_4))))",
        "(C (C (C (fn_9 r (fn_3 - 1.5 0.5)) (fn_9 r (fn_3 + 1.5 0.5))) (fn_9 c (fn_3 - 1 0.5))) (fn_2 (fn_2 (T l (fn_3 - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(fn_8 0 (T r (M 3 (/ pi 2) 0 (- 0 2))))",
        "(C (C (fn_6 (- fn_7 0)) (fn_0 1 r)) (fn_8 1 c))",
        "(fn_1 r (- fn_7 0))",
        "(C (C (fn_5 (fn_8 0 r)) (fn_8 0 c)) (fn_8 0 c))"
      ],
      "rewritten_dreamcoder": [
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c (- #(* 1 2) 0))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- #(* 1 2) 0))",
        "(#(lambda (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M $0 0 0 0)) (- (* #(* 0.5 1) 2) 0)))) #(* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) c #(* 1 2))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r #(* 1 2))",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) (- (/ pi 2) (/ pi 4)) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 0.5 2) 0))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T c (M 1 0 (+ (/ 3 2) (* 2 0.5)) #(* 0.5 1))) #(* 0.5 1)))",
        "(#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T $1 $0)))) c (M 2 0 (- 0 2) 1))",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (#(lambda (lambda (T $1 (M 1 0 0 $0)))) r 0) (M 0.5 0 0 0)) 0)",
        "(#(lambda (C $0 $0)) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T $1 $0)))) r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)))",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c)",
        "(#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 c)",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) c #(* 0.5 1))",
        "(#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) #(* 0.5 1) c)",
        "(#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) 0)",
        "(C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) c) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (M 1 0.707107 0.707107 0)) 0))",
        "(C (C (#(lambda (C $0 $0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T c (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (/ 1 2) #(* 0.5 1))))) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) #(* 0.5 1) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) + (* (/ 1 2) 0.5) #(* 0.5 1)))))",
        "(C (C (C (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T $1 $0)))) r (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1.5 0.5)) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T $1 $0)))) r (#(lambda (lambda (M 1 0 ($1 0 $0)))) + 1.5 0.5))) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T $1 $0)))) c (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 0.5))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 1 (* 0.25 1))) (- (* 0.25 1) 0)) 0))",
        "(#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) 0 (T r (M 3 (/ pi 2) 0 (- 0 2))))",
        "(C (C (#(lambda (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (#(lambda (lambda (T $1 (M 1 0 0 $0)))) (T (T l (#(lambda (lambda (M 1 0 ($1 0 $0)))) - 0.5 0)) (M $0 0 0 0)) (- (* #(* 0.5 1) 2) 0)))) (- #(* 1 2) 0)) (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 1 r)) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) 1 c))",
        "(#(lambda (lambda (C (C (C (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) 0 (T l (M 3 (/ pi 2) 0 (- 0 2)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M $0 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T $1 (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T $1 (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))))) r (- #(* 1 2) 0))",
        "(C (C (#(lambda (C $0 $0)) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) 0 r)) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) 0 c)) (#(lambda (lambda (#(lambda (lambda (T (T $0 (M 1 0 0 $1)) (M 1 0 0 $1)))) $1 (#(lambda (lambda (T $1 (M 1 0 0 $0)))) $0 $1)))) 0 c))"
      ],
      "utility": 554,
      "expected_cost": 22300,
      "final_cost": 22300,
      "multiplier": 1.0452914798206279,
      "multiplier_wrt_orig": 5.456681614349776,
      "num_uses": 5,
      "uses": [
        {
          "fn_9 c (M 2 0 (- 0 2) 1)": "(fn_0 0 (T c (M 2 0 (- 0 2) 1)))"
        },
        {
          "fn_9 c (fn_3 - 1 0.5)": "(fn_0 0 (T c (fn_3 - 1 0.5)))"
        },
        {
          "fn_9 r (fn_3 + 1.5 0.5)": "(fn_0 0 (T r (fn_3 + 1.5 0.5)))"
        },
        {
          "fn_9 r (fn_3 - 0.5 0)": "(fn_0 0 (T r (fn_3 - 0.5 0)))"
        },
        {
          "fn_9 r (fn_3 - 1.5 0.5)": "(fn_0 0 (T r (fn_3 - 1.5 0.5)))"
        }
      ]
    }
  ]
}